ARM GAS  /tmp/ccrQATq6.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"hagl.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.tjpgd_data_reader,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	tjpgd_data_reader:
  24              	.LFB32:
  25              		.file 1 "Drivers/hagl/src/hagl.c"
   1:Drivers/hagl/src/hagl.c **** /*
   2:Drivers/hagl/src/hagl.c **** 
   3:Drivers/hagl/src/hagl.c **** MIT License
   4:Drivers/hagl/src/hagl.c **** 
   5:Drivers/hagl/src/hagl.c **** Copyright (c) 2018-2020 Mika Tuupola
   6:Drivers/hagl/src/hagl.c **** 
   7:Drivers/hagl/src/hagl.c **** Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Drivers/hagl/src/hagl.c **** of this software and associated documentation files (the "Software"), to deal
   9:Drivers/hagl/src/hagl.c **** in the Software without restriction, including without limitation the rights
  10:Drivers/hagl/src/hagl.c **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Drivers/hagl/src/hagl.c **** copies of the Software, and to permit persons to whom the Software is
  12:Drivers/hagl/src/hagl.c **** furnished to do so, subject to the following conditions:
  13:Drivers/hagl/src/hagl.c **** 
  14:Drivers/hagl/src/hagl.c **** The above copyright notice and this permission notice shall be included in all
  15:Drivers/hagl/src/hagl.c **** copies or substantial portions of the Software.
  16:Drivers/hagl/src/hagl.c **** 
  17:Drivers/hagl/src/hagl.c **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Drivers/hagl/src/hagl.c **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Drivers/hagl/src/hagl.c **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Drivers/hagl/src/hagl.c **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Drivers/hagl/src/hagl.c **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Drivers/hagl/src/hagl.c **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:Drivers/hagl/src/hagl.c **** SOFTWARE.
  24:Drivers/hagl/src/hagl.c **** 
  25:Drivers/hagl/src/hagl.c **** -cut-
  26:Drivers/hagl/src/hagl.c **** 
  27:Drivers/hagl/src/hagl.c **** This file is part of the HAGL graphics library:
  28:Drivers/hagl/src/hagl.c **** https://github.com/tuupola/hagl
  29:Drivers/hagl/src/hagl.c **** 
  30:Drivers/hagl/src/hagl.c **** 
  31:Drivers/hagl/src/hagl.c **** SPDX-License-Identifier: MIT
  32:Drivers/hagl/src/hagl.c **** 
  33:Drivers/hagl/src/hagl.c **** */
ARM GAS  /tmp/ccrQATq6.s 			page 2


  34:Drivers/hagl/src/hagl.c **** 
  35:Drivers/hagl/src/hagl.c **** #include <string.h>
  36:Drivers/hagl/src/hagl.c **** #include <ctype.h>
  37:Drivers/hagl/src/hagl.c **** #include <stdlib.h>
  38:Drivers/hagl/src/hagl.c **** #include <stdbool.h>
  39:Drivers/hagl/src/hagl.c **** #include <stdio.h>
  40:Drivers/hagl/src/hagl.c **** #include <stddef.h>
  41:Drivers/hagl/src/hagl.c **** 
  42:Drivers/hagl/src/hagl.c **** #include "bitmap.h"
  43:Drivers/hagl/src/hagl.c **** #include "rgb332.h"
  44:Drivers/hagl/src/hagl.c **** #include "rgb565.h"
  45:Drivers/hagl/src/hagl.c **** #include "fontx.h"
  46:Drivers/hagl/src/hagl.c **** #include "clip.h"
  47:Drivers/hagl/src/hagl.c **** #include "tjpgd.h"
  48:Drivers/hagl/src/hagl.c **** #include "window.h"
  49:Drivers/hagl/src/hagl.c **** #include "hagl.h"
  50:Drivers/hagl/src/hagl.c **** #include "hagl_hal.h"
  51:Drivers/hagl/src/hagl.c **** 
  52:Drivers/hagl/src/hagl.c **** typedef struct {
  53:Drivers/hagl/src/hagl.c ****     FILE *fp;
  54:Drivers/hagl/src/hagl.c ****     int16_t x0;
  55:Drivers/hagl/src/hagl.c ****     int16_t y0;
  56:Drivers/hagl/src/hagl.c **** } tjpgd_iodev_t;
  57:Drivers/hagl/src/hagl.c **** 
  58:Drivers/hagl/src/hagl.c **** static window_t clip_window = {
  59:Drivers/hagl/src/hagl.c ****     .x0 = 0,
  60:Drivers/hagl/src/hagl.c ****     .y0 = 0,
  61:Drivers/hagl/src/hagl.c ****     .x1 = DISPLAY_WIDTH - 1,
  62:Drivers/hagl/src/hagl.c ****     .y1 = DISPLAY_HEIGHT - 1,
  63:Drivers/hagl/src/hagl.c **** };
  64:Drivers/hagl/src/hagl.c **** 
  65:Drivers/hagl/src/hagl.c **** void hagl_set_clip_window(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
  66:Drivers/hagl/src/hagl.c ****     clip_window.x0 = x0;
  67:Drivers/hagl/src/hagl.c ****     clip_window.y0 = y0;
  68:Drivers/hagl/src/hagl.c ****     clip_window.x1 = x1;
  69:Drivers/hagl/src/hagl.c ****     clip_window.y1 = y1;
  70:Drivers/hagl/src/hagl.c **** }
  71:Drivers/hagl/src/hagl.c **** 
  72:Drivers/hagl/src/hagl.c **** void hagl_put_pixel(int16_t x0, int16_t y0, color_t color)
  73:Drivers/hagl/src/hagl.c **** {
  74:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is before the edge, nothing to do. */
  75:Drivers/hagl/src/hagl.c ****     if ((x0 < clip_window.x0) || (y0 < clip_window.y0))  {
  76:Drivers/hagl/src/hagl.c ****         return;
  77:Drivers/hagl/src/hagl.c ****     }
  78:Drivers/hagl/src/hagl.c **** 
  79:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
  80:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
  81:Drivers/hagl/src/hagl.c ****         return;
  82:Drivers/hagl/src/hagl.c ****     }
  83:Drivers/hagl/src/hagl.c **** 
  84:Drivers/hagl/src/hagl.c ****     /* If still in bounds set the pixel. */
  85:Drivers/hagl/src/hagl.c ****     hagl_hal_put_pixel(x0, y0, color);
  86:Drivers/hagl/src/hagl.c **** }
  87:Drivers/hagl/src/hagl.c **** 
  88:Drivers/hagl/src/hagl.c **** color_t hagl_get_pixel(int16_t x0, int16_t y0)
  89:Drivers/hagl/src/hagl.c **** {
  90:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is before the edge, nothing to do. */
ARM GAS  /tmp/ccrQATq6.s 			page 3


  91:Drivers/hagl/src/hagl.c ****     if ((x0 < clip_window.x0) || (y0 < clip_window.y0))  {
  92:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
  93:Drivers/hagl/src/hagl.c ****     }
  94:Drivers/hagl/src/hagl.c **** 
  95:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
  96:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
  97:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
  98:Drivers/hagl/src/hagl.c ****     }
  99:Drivers/hagl/src/hagl.c **** 
 100:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_GET_PIXEL
 101:Drivers/hagl/src/hagl.c ****     return hagl_hal_get_pixel(x0, y0);
 102:Drivers/hagl/src/hagl.c **** #else
 103:Drivers/hagl/src/hagl.c ****     return hagl_color(0, 0, 0);
 104:Drivers/hagl/src/hagl.c **** #endif /* HAGL_HAS_HAL_GET_PIXEL */
 105:Drivers/hagl/src/hagl.c **** }
 106:Drivers/hagl/src/hagl.c **** 
 107:Drivers/hagl/src/hagl.c **** void hagl_draw_hline(int16_t x0, int16_t y0, uint16_t w, color_t color) {
 108:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_HLINE
 109:Drivers/hagl/src/hagl.c ****     int16_t width = w;
 110:Drivers/hagl/src/hagl.c **** 
 111:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is over the edge, nothing to do. */
 112:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1) || (y0 < clip_window.y0))  {
 113:Drivers/hagl/src/hagl.c ****         return;
 114:Drivers/hagl/src/hagl.c ****     }
 115:Drivers/hagl/src/hagl.c **** 
 116:Drivers/hagl/src/hagl.c ****     /* x0 is left of clip window, ignore start part. */
 117:Drivers/hagl/src/hagl.c ****     if (x0 < clip_window.x0) {
 118:Drivers/hagl/src/hagl.c ****         width = width + x0;
 119:Drivers/hagl/src/hagl.c ****         x0 = clip_window.x0;
 120:Drivers/hagl/src/hagl.c ****     }
 121:Drivers/hagl/src/hagl.c **** 
 122:Drivers/hagl/src/hagl.c ****     /* Everything outside clip window, nothing to do. */
 123:Drivers/hagl/src/hagl.c ****     if (width < 0)  {
 124:Drivers/hagl/src/hagl.c ****         return;
 125:Drivers/hagl/src/hagl.c ****     }
 126:Drivers/hagl/src/hagl.c **** 
 127:Drivers/hagl/src/hagl.c ****     /* Cut anything going over right edge of clip window. */
 128:Drivers/hagl/src/hagl.c ****     if (((x0 + width) > clip_window.x1)) {
 129:Drivers/hagl/src/hagl.c ****         width = width - (x0 + width - clip_window.x1);
 130:Drivers/hagl/src/hagl.c ****     }
 131:Drivers/hagl/src/hagl.c **** 
 132:Drivers/hagl/src/hagl.c ****     hagl_hal_hline(x0, y0, width, color);
 133:Drivers/hagl/src/hagl.c **** #else
 134:Drivers/hagl/src/hagl.c ****     hagl_draw_line(x0, y0, x0 + w, y0, color);
 135:Drivers/hagl/src/hagl.c **** #endif
 136:Drivers/hagl/src/hagl.c **** }
 137:Drivers/hagl/src/hagl.c **** 
 138:Drivers/hagl/src/hagl.c **** /*
 139:Drivers/hagl/src/hagl.c ****  * Draw a vertical line with given color. If HAL supports it uses
 140:Drivers/hagl/src/hagl.c ****  * hardware vline drawing. If not falls back to vanilla line drawing.
 141:Drivers/hagl/src/hagl.c ****  */
 142:Drivers/hagl/src/hagl.c **** void hagl_draw_vline(int16_t x0, int16_t y0, uint16_t h, color_t color) {
 143:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_VLINE
 144:Drivers/hagl/src/hagl.c ****     int16_t height = h;
 145:Drivers/hagl/src/hagl.c **** 
 146:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is over the edge, nothing to do. */
 147:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (x0 < clip_window.x0) || (y0 > clip_window.y1))  {
ARM GAS  /tmp/ccrQATq6.s 			page 4


 148:Drivers/hagl/src/hagl.c ****         return;
 149:Drivers/hagl/src/hagl.c ****     }
 150:Drivers/hagl/src/hagl.c **** 
 151:Drivers/hagl/src/hagl.c ****     /* y0 is top of clip window, ignore start part. */
 152:Drivers/hagl/src/hagl.c ****     if (y0 < clip_window.y0) {
 153:Drivers/hagl/src/hagl.c ****         height = height + y0;
 154:Drivers/hagl/src/hagl.c ****         y0 = clip_window.y0;
 155:Drivers/hagl/src/hagl.c ****     }
 156:Drivers/hagl/src/hagl.c **** 
 157:Drivers/hagl/src/hagl.c ****     /* Everything outside clip window, nothing to do. */
 158:Drivers/hagl/src/hagl.c ****     if (height < 0)  {
 159:Drivers/hagl/src/hagl.c ****         return;
 160:Drivers/hagl/src/hagl.c ****     }
 161:Drivers/hagl/src/hagl.c **** 
 162:Drivers/hagl/src/hagl.c ****     /* Cut anything going over right edge. */
 163:Drivers/hagl/src/hagl.c ****     if (((y0 + height) > clip_window.y1))  {
 164:Drivers/hagl/src/hagl.c ****         height = height - (y0 + height - clip_window.y1);
 165:Drivers/hagl/src/hagl.c ****     }
 166:Drivers/hagl/src/hagl.c **** 
 167:Drivers/hagl/src/hagl.c ****     hagl_hal_vline(x0, y0, height, color);
 168:Drivers/hagl/src/hagl.c **** #else
 169:Drivers/hagl/src/hagl.c ****     hagl_draw_line(x0, y0, x0, y0 + h, color);
 170:Drivers/hagl/src/hagl.c **** #endif
 171:Drivers/hagl/src/hagl.c **** }
 172:Drivers/hagl/src/hagl.c **** 
 173:Drivers/hagl/src/hagl.c **** /*
 174:Drivers/hagl/src/hagl.c ****  * Draw a line using Bresenham's algorithm with given color.
 175:Drivers/hagl/src/hagl.c ****  */
 176:Drivers/hagl/src/hagl.c **** void hagl_draw_line(int16_t x0, int16_t y0, int16_t x1, int16_t y1, color_t color)
 177:Drivers/hagl/src/hagl.c **** {
 178:Drivers/hagl/src/hagl.c ****     /* Clip coordinates to fit clip window. */
 179:Drivers/hagl/src/hagl.c ****     if (false == clip_line(&x0, &y0, &x1, &y1, clip_window)) {
 180:Drivers/hagl/src/hagl.c ****         return;
 181:Drivers/hagl/src/hagl.c ****     }
 182:Drivers/hagl/src/hagl.c **** 
 183:Drivers/hagl/src/hagl.c ****     int16_t dx;
 184:Drivers/hagl/src/hagl.c ****     int16_t sx;
 185:Drivers/hagl/src/hagl.c ****     int16_t dy;
 186:Drivers/hagl/src/hagl.c ****     int16_t sy;
 187:Drivers/hagl/src/hagl.c ****     int16_t err;
 188:Drivers/hagl/src/hagl.c ****     int16_t e2;
 189:Drivers/hagl/src/hagl.c **** 
 190:Drivers/hagl/src/hagl.c ****     dx = ABS(x1 - x0);
 191:Drivers/hagl/src/hagl.c ****     sx = x0 < x1 ? 1 : -1;
 192:Drivers/hagl/src/hagl.c ****     dy = ABS(y1 - y0);
 193:Drivers/hagl/src/hagl.c ****     sy = y0 < y1 ? 1 : -1;
 194:Drivers/hagl/src/hagl.c ****     err = (dx > dy ? dx : -dy) / 2;
 195:Drivers/hagl/src/hagl.c **** 
 196:Drivers/hagl/src/hagl.c ****     while (1) {
 197:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0, y0, color);
 198:Drivers/hagl/src/hagl.c **** 
 199:Drivers/hagl/src/hagl.c ****         if (x0 == x1 && y0 == y1) {
 200:Drivers/hagl/src/hagl.c ****             break;
 201:Drivers/hagl/src/hagl.c ****         };
 202:Drivers/hagl/src/hagl.c **** 
 203:Drivers/hagl/src/hagl.c ****         e2 = err + err;
 204:Drivers/hagl/src/hagl.c **** 
ARM GAS  /tmp/ccrQATq6.s 			page 5


 205:Drivers/hagl/src/hagl.c ****         if (e2 > -dx) {
 206:Drivers/hagl/src/hagl.c ****             err -= dy;
 207:Drivers/hagl/src/hagl.c ****             x0 += sx;
 208:Drivers/hagl/src/hagl.c ****         }
 209:Drivers/hagl/src/hagl.c **** 
 210:Drivers/hagl/src/hagl.c ****         if (e2 < dy) {
 211:Drivers/hagl/src/hagl.c ****             err += dx;
 212:Drivers/hagl/src/hagl.c ****             y0 += sy;
 213:Drivers/hagl/src/hagl.c ****         }
 214:Drivers/hagl/src/hagl.c ****     }
 215:Drivers/hagl/src/hagl.c **** }
 216:Drivers/hagl/src/hagl.c **** 
 217:Drivers/hagl/src/hagl.c **** /*
 218:Drivers/hagl/src/hagl.c ****  * Draw a rectangle with given color.
 219:Drivers/hagl/src/hagl.c ****  */
 220:Drivers/hagl/src/hagl.c **** void hagl_draw_rectangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, color_t color)
 221:Drivers/hagl/src/hagl.c **** {
 222:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 223:Drivers/hagl/src/hagl.c ****     if (x0 > x1) {
 224:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 225:Drivers/hagl/src/hagl.c ****         x1 = x0 - x1;
 226:Drivers/hagl/src/hagl.c ****         x0 = x0 - x1;
 227:Drivers/hagl/src/hagl.c ****     }
 228:Drivers/hagl/src/hagl.c **** 
 229:Drivers/hagl/src/hagl.c ****     /* Make sure y0 is smaller than y1. */
 230:Drivers/hagl/src/hagl.c ****     if (y0 > y1) {
 231:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 232:Drivers/hagl/src/hagl.c ****         y1 = y0 - y1;
 233:Drivers/hagl/src/hagl.c ****         y0 = y0 - y1;
 234:Drivers/hagl/src/hagl.c ****     }
 235:Drivers/hagl/src/hagl.c **** 
 236:Drivers/hagl/src/hagl.c ****     /* x1 or y1 is before the edge, nothing to do. */
 237:Drivers/hagl/src/hagl.c ****     if ((x1 < clip_window.x0) || (y1 < clip_window.y0))  {
 238:Drivers/hagl/src/hagl.c ****         return;
 239:Drivers/hagl/src/hagl.c ****     }
 240:Drivers/hagl/src/hagl.c **** 
 241:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
 242:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
 243:Drivers/hagl/src/hagl.c ****         return;
 244:Drivers/hagl/src/hagl.c ****     }
 245:Drivers/hagl/src/hagl.c **** 
 246:Drivers/hagl/src/hagl.c ****     uint16_t width = x1 - x0 + 1;
 247:Drivers/hagl/src/hagl.c ****     uint16_t height = y1 - y0 + 1;
 248:Drivers/hagl/src/hagl.c **** 
 249:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0, y0, width, color);
 250:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0, y1, width, color);
 251:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x0, y0, height, color);
 252:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x1, y0, height, color);
 253:Drivers/hagl/src/hagl.c **** }
 254:Drivers/hagl/src/hagl.c **** 
 255:Drivers/hagl/src/hagl.c **** /*
 256:Drivers/hagl/src/hagl.c ****  * Draw a filled rectangle with given color.
 257:Drivers/hagl/src/hagl.c ****  */
 258:Drivers/hagl/src/hagl.c **** void hagl_fill_rectangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, color_t color)
 259:Drivers/hagl/src/hagl.c **** {
 260:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 261:Drivers/hagl/src/hagl.c ****     if (x0 > x1) {
ARM GAS  /tmp/ccrQATq6.s 			page 6


 262:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 263:Drivers/hagl/src/hagl.c ****         x1 = x0 - x1;
 264:Drivers/hagl/src/hagl.c ****         x0 = x0 - x1;
 265:Drivers/hagl/src/hagl.c ****     }
 266:Drivers/hagl/src/hagl.c **** 
 267:Drivers/hagl/src/hagl.c ****     /* Make sure y0 is smaller than y1. */
 268:Drivers/hagl/src/hagl.c ****     if (y0 > y1) {
 269:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 270:Drivers/hagl/src/hagl.c ****         y1 = y0 - y1;
 271:Drivers/hagl/src/hagl.c ****         y0 = y0 - y1;
 272:Drivers/hagl/src/hagl.c ****     }
 273:Drivers/hagl/src/hagl.c **** 
 274:Drivers/hagl/src/hagl.c ****     /* x1 or y1 is before the edge, nothing to do. */
 275:Drivers/hagl/src/hagl.c ****     if ((x1 < clip_window.x0) || (y1 < clip_window.y0))  {
 276:Drivers/hagl/src/hagl.c ****         return;
 277:Drivers/hagl/src/hagl.c ****     }
 278:Drivers/hagl/src/hagl.c **** 
 279:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
 280:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
 281:Drivers/hagl/src/hagl.c ****         return;
 282:Drivers/hagl/src/hagl.c ****     }
 283:Drivers/hagl/src/hagl.c **** 
 284:Drivers/hagl/src/hagl.c ****     x0 = max(x0, clip_window.x0);
 285:Drivers/hagl/src/hagl.c ****     y0 = max(y0, clip_window.y0);
 286:Drivers/hagl/src/hagl.c ****     x1 = min(x1, clip_window.x1);
 287:Drivers/hagl/src/hagl.c ****     y1 = min(y1, clip_window.y1);
 288:Drivers/hagl/src/hagl.c **** 
 289:Drivers/hagl/src/hagl.c ****     #ifdef HAGL_HAS_HAL_FILL_RECTANGLE
 290:Drivers/hagl/src/hagl.c ****         hagl_hal_fill_rectangle(x0, y0, x1, y1, color);
 291:Drivers/hagl/src/hagl.c ****     #else
 292:Drivers/hagl/src/hagl.c **** 
 293:Drivers/hagl/src/hagl.c ****     uint16_t width = x1 - x0 + 1;
 294:Drivers/hagl/src/hagl.c ****     uint16_t height = y1 - y0 + 1;
 295:Drivers/hagl/src/hagl.c **** 
 296:Drivers/hagl/src/hagl.c ****     for (uint16_t i = 0; i < height; i++) {
 297:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_HLINE
 298:Drivers/hagl/src/hagl.c ****         /* Already clipped so can call HAL directly. */
 299:Drivers/hagl/src/hagl.c ****         hagl_hal_hline(x0, y0 + i, width, color);
 300:Drivers/hagl/src/hagl.c **** #else
 301:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0, y0 + i, width, color);
 302:Drivers/hagl/src/hagl.c **** #endif
 303:Drivers/hagl/src/hagl.c ****     }
 304:Drivers/hagl/src/hagl.c ****     #endif
 305:Drivers/hagl/src/hagl.c **** }
 306:Drivers/hagl/src/hagl.c **** 
 307:Drivers/hagl/src/hagl.c **** uint8_t hagl_get_glyph(wchar_t code, color_t color, bitmap_t *bitmap, const uint8_t *font)
 308:Drivers/hagl/src/hagl.c **** {
 309:Drivers/hagl/src/hagl.c ****     uint8_t status, set;
 310:Drivers/hagl/src/hagl.c ****     fontx_glyph_t glyph;
 311:Drivers/hagl/src/hagl.c **** 
 312:Drivers/hagl/src/hagl.c ****     status = fontx_glyph(&glyph, code, font);
 313:Drivers/hagl/src/hagl.c **** 
 314:Drivers/hagl/src/hagl.c ****     if (0 != status) {
 315:Drivers/hagl/src/hagl.c ****         return status;
 316:Drivers/hagl/src/hagl.c ****     }
 317:Drivers/hagl/src/hagl.c **** 
 318:Drivers/hagl/src/hagl.c ****     /* Initialise bitmap dimensions. */
ARM GAS  /tmp/ccrQATq6.s 			page 7


 319:Drivers/hagl/src/hagl.c ****     bitmap->depth = DISPLAY_DEPTH,
 320:Drivers/hagl/src/hagl.c ****     bitmap->width = glyph.width,
 321:Drivers/hagl/src/hagl.c ****     bitmap->height = glyph.height,
 322:Drivers/hagl/src/hagl.c ****     bitmap->pitch = bitmap->width * (bitmap->depth / 8);
 323:Drivers/hagl/src/hagl.c ****     bitmap->size = bitmap->pitch * bitmap->height;
 324:Drivers/hagl/src/hagl.c **** 
 325:Drivers/hagl/src/hagl.c ****     color_t *ptr = (color_t *) bitmap->buffer;
 326:Drivers/hagl/src/hagl.c **** 
 327:Drivers/hagl/src/hagl.c ****     for (uint8_t y = 0; y < glyph.height; y++) {
 328:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 329:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 330:Drivers/hagl/src/hagl.c ****             if (set) {
 331:Drivers/hagl/src/hagl.c ****                 *(ptr++) = color;
 332:Drivers/hagl/src/hagl.c ****             } else {
 333:Drivers/hagl/src/hagl.c ****                 *(ptr++) = 0x0000;
 334:Drivers/hagl/src/hagl.c ****             }
 335:Drivers/hagl/src/hagl.c ****         }
 336:Drivers/hagl/src/hagl.c ****         glyph.buffer += glyph.pitch;
 337:Drivers/hagl/src/hagl.c ****     }
 338:Drivers/hagl/src/hagl.c **** 
 339:Drivers/hagl/src/hagl.c ****     return 0;
 340:Drivers/hagl/src/hagl.c **** }
 341:Drivers/hagl/src/hagl.c **** 
 342:Drivers/hagl/src/hagl.c **** uint8_t hagl_put_char(wchar_t code, int16_t x0, int16_t y0, color_t color, const uint8_t *font)
 343:Drivers/hagl/src/hagl.c **** {
 344:Drivers/hagl/src/hagl.c ****     uint8_t set, status;
 345:Drivers/hagl/src/hagl.c ****     color_t buffer[HAGL_CHAR_BUFFER_SIZE];
 346:Drivers/hagl/src/hagl.c ****     bitmap_t bitmap;
 347:Drivers/hagl/src/hagl.c ****     fontx_glyph_t glyph;
 348:Drivers/hagl/src/hagl.c **** 
 349:Drivers/hagl/src/hagl.c ****     status = fontx_glyph(&glyph, code, font);
 350:Drivers/hagl/src/hagl.c **** 
 351:Drivers/hagl/src/hagl.c ****     if (0 != status) {
 352:Drivers/hagl/src/hagl.c ****         return 0;
 353:Drivers/hagl/src/hagl.c ****     }
 354:Drivers/hagl/src/hagl.c **** 
 355:Drivers/hagl/src/hagl.c ****     bitmap.width = glyph.width,
 356:Drivers/hagl/src/hagl.c ****     bitmap.height = glyph.height,
 357:Drivers/hagl/src/hagl.c ****     bitmap.depth = DISPLAY_DEPTH,
 358:Drivers/hagl/src/hagl.c **** 
 359:Drivers/hagl/src/hagl.c ****     bitmap_init(&bitmap, (uint8_t *)buffer);
 360:Drivers/hagl/src/hagl.c **** 
 361:Drivers/hagl/src/hagl.c ****     color_t *ptr = (color_t *) bitmap.buffer;
 362:Drivers/hagl/src/hagl.c **** 
 363:Drivers/hagl/src/hagl.c ****     for (uint8_t y = 0; y < glyph.height; y++) {
 364:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 365:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 366:Drivers/hagl/src/hagl.c ****             if (set) {
 367:Drivers/hagl/src/hagl.c ****                 *(ptr++) = color;
 368:Drivers/hagl/src/hagl.c ****             } else {
 369:Drivers/hagl/src/hagl.c ****                 *(ptr++) = 0x0000;
 370:Drivers/hagl/src/hagl.c ****             }
 371:Drivers/hagl/src/hagl.c ****         }
 372:Drivers/hagl/src/hagl.c ****         glyph.buffer += glyph.pitch;
 373:Drivers/hagl/src/hagl.c ****     }
 374:Drivers/hagl/src/hagl.c **** 
 375:Drivers/hagl/src/hagl.c ****     hagl_blit(x0, y0, &bitmap);
ARM GAS  /tmp/ccrQATq6.s 			page 8


 376:Drivers/hagl/src/hagl.c **** 
 377:Drivers/hagl/src/hagl.c ****     return bitmap.width;
 378:Drivers/hagl/src/hagl.c **** }
 379:Drivers/hagl/src/hagl.c **** 
 380:Drivers/hagl/src/hagl.c **** /*
 381:Drivers/hagl/src/hagl.c ****  * Write a string of text by calling hagl_put_char() repeadetly. CR and LF
 382:Drivers/hagl/src/hagl.c ****  * continue from the next line.
 383:Drivers/hagl/src/hagl.c ****  */
 384:Drivers/hagl/src/hagl.c **** 
 385:Drivers/hagl/src/hagl.c **** uint16_t hagl_put_text(const wchar_t *str, int16_t x0, int16_t y0, color_t color, const unsigned ch
 386:Drivers/hagl/src/hagl.c **** {
 387:Drivers/hagl/src/hagl.c ****     wchar_t temp;
 388:Drivers/hagl/src/hagl.c ****     uint8_t status;
 389:Drivers/hagl/src/hagl.c ****     uint16_t original = x0;
 390:Drivers/hagl/src/hagl.c ****     fontx_meta_t meta;
 391:Drivers/hagl/src/hagl.c **** 
 392:Drivers/hagl/src/hagl.c ****     status = fontx_meta(&meta, font);
 393:Drivers/hagl/src/hagl.c ****     if (0 != status) {
 394:Drivers/hagl/src/hagl.c ****         return 0;
 395:Drivers/hagl/src/hagl.c ****     }
 396:Drivers/hagl/src/hagl.c **** 
 397:Drivers/hagl/src/hagl.c ****     do {
 398:Drivers/hagl/src/hagl.c ****         temp = *str++;
 399:Drivers/hagl/src/hagl.c ****         if (13 == temp || 10 == temp) {
 400:Drivers/hagl/src/hagl.c ****             x0 = 0;
 401:Drivers/hagl/src/hagl.c ****             y0 += meta.height;
 402:Drivers/hagl/src/hagl.c ****         } else {
 403:Drivers/hagl/src/hagl.c ****             x0 += hagl_put_char(temp, x0, y0, color, font);
 404:Drivers/hagl/src/hagl.c ****         }
 405:Drivers/hagl/src/hagl.c ****     } while (*str != 0);
 406:Drivers/hagl/src/hagl.c **** 
 407:Drivers/hagl/src/hagl.c ****     return x0 - original;
 408:Drivers/hagl/src/hagl.c **** }
 409:Drivers/hagl/src/hagl.c **** 
 410:Drivers/hagl/src/hagl.c **** /*
 411:Drivers/hagl/src/hagl.c ****  * Blits a bitmap to a destination hardcoded in the HAL driver. Destination
 412:Drivers/hagl/src/hagl.c ****  * parameter is left out intentionally to keep the API simpler. If you need
 413:Drivers/hagl/src/hagl.c ****  * configurable source and destination see the file blit.c.
 414:Drivers/hagl/src/hagl.c ****  *
 415:Drivers/hagl/src/hagl.c ****  * TODO: Handle transparency.
 416:Drivers/hagl/src/hagl.c ****  */
 417:Drivers/hagl/src/hagl.c **** 
 418:Drivers/hagl/src/hagl.c **** void hagl_blit(int16_t x0, int16_t y0, bitmap_t *source) {
 419:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_BLIT
 420:Drivers/hagl/src/hagl.c ****     /* Check if bitmap is inside clip windows bounds */
 421:Drivers/hagl/src/hagl.c ****     if (
 422:Drivers/hagl/src/hagl.c ****         (x0 < clip_window.x0) ||
 423:Drivers/hagl/src/hagl.c ****         (y0 < clip_window.y0) ||
 424:Drivers/hagl/src/hagl.c ****         (x0 + source->width > clip_window.x1) ||
 425:Drivers/hagl/src/hagl.c ****         (y0 + source->height > clip_window.y1)
 426:Drivers/hagl/src/hagl.c ****     ) {
 427:Drivers/hagl/src/hagl.c ****         /* Out of bounds, use local pixel fallback. */
 428:Drivers/hagl/src/hagl.c ****         color_t color;
 429:Drivers/hagl/src/hagl.c ****         color_t *ptr = (color_t *) source->buffer;
 430:Drivers/hagl/src/hagl.c **** 
 431:Drivers/hagl/src/hagl.c ****         for (uint16_t y = 0; y < source->height; y++) {
 432:Drivers/hagl/src/hagl.c ****             for (uint16_t x = 0; x < source->width; x++) {
ARM GAS  /tmp/ccrQATq6.s 			page 9


 433:Drivers/hagl/src/hagl.c ****                 color = *(ptr++);
 434:Drivers/hagl/src/hagl.c ****                 hagl_put_pixel(x0 + x, y0 + y, color);
 435:Drivers/hagl/src/hagl.c ****             }
 436:Drivers/hagl/src/hagl.c ****         }
 437:Drivers/hagl/src/hagl.c ****     } else {
 438:Drivers/hagl/src/hagl.c ****         /* Inside of bounds, can use HAL provided blit. */
 439:Drivers/hagl/src/hagl.c ****         hagl_hal_blit(x0, y0, source);
 440:Drivers/hagl/src/hagl.c ****     }
 441:Drivers/hagl/src/hagl.c **** #else
 442:Drivers/hagl/src/hagl.c ****     color_t color;
 443:Drivers/hagl/src/hagl.c ****     color_t *ptr = (color_t *) source->buffer;
 444:Drivers/hagl/src/hagl.c **** 
 445:Drivers/hagl/src/hagl.c ****     for (uint16_t y = 0; y < source->height; y++) {
 446:Drivers/hagl/src/hagl.c ****         for (uint16_t x = 0; x < source->width; x++) {
 447:Drivers/hagl/src/hagl.c ****             color = *(ptr++);
 448:Drivers/hagl/src/hagl.c ****             hagl_put_pixel(x0 + x, y0 + y, color);
 449:Drivers/hagl/src/hagl.c ****         }
 450:Drivers/hagl/src/hagl.c ****     }
 451:Drivers/hagl/src/hagl.c **** #endif
 452:Drivers/hagl/src/hagl.c **** };
 453:Drivers/hagl/src/hagl.c **** 
 454:Drivers/hagl/src/hagl.c **** void hagl_scale_blit(uint16_t x0, uint16_t y0, uint16_t w, uint16_t h, bitmap_t *source) {
 455:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_SCALE_BLIT
 456:Drivers/hagl/src/hagl.c ****     hagl_hal_scale_blit(x0, y0, w, h, source);
 457:Drivers/hagl/src/hagl.c **** #else
 458:Drivers/hagl/src/hagl.c ****     color_t color;
 459:Drivers/hagl/src/hagl.c ****     color_t *ptr = (color_t *) source->buffer;
 460:Drivers/hagl/src/hagl.c ****     uint32_t x_ratio = (uint32_t)((source->width << 16) / w);
 461:Drivers/hagl/src/hagl.c ****     uint32_t y_ratio = (uint32_t)((source->height << 16) / h);
 462:Drivers/hagl/src/hagl.c **** 
 463:Drivers/hagl/src/hagl.c ****     for (uint16_t y = 0; y < h; y++) {
 464:Drivers/hagl/src/hagl.c ****         for (uint16_t x = 0; x < w; x++) {
 465:Drivers/hagl/src/hagl.c ****             uint16_t px = ((x * x_ratio) >> 16);
 466:Drivers/hagl/src/hagl.c ****             uint16_t py = ((y * y_ratio) >> 16);
 467:Drivers/hagl/src/hagl.c ****             color = ptr[(uint8_t)((py * source->width) + px)];
 468:Drivers/hagl/src/hagl.c ****             hagl_put_pixel(x0 + x, y0 + y, color);
 469:Drivers/hagl/src/hagl.c ****         }
 470:Drivers/hagl/src/hagl.c ****     }
 471:Drivers/hagl/src/hagl.c **** #endif
 472:Drivers/hagl/src/hagl.c **** };
 473:Drivers/hagl/src/hagl.c **** 
 474:Drivers/hagl/src/hagl.c **** void hagl_clear_screen() {
 475:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_CLEAR_SCREEN
 476:Drivers/hagl/src/hagl.c ****     hagl_hal_clear_screen();
 477:Drivers/hagl/src/hagl.c **** #else
 478:Drivers/hagl/src/hagl.c ****     uint16_t x0 = clip_window.x0;
 479:Drivers/hagl/src/hagl.c ****     uint16_t y0 = clip_window.y0;
 480:Drivers/hagl/src/hagl.c ****     uint16_t x1 = clip_window.x1;
 481:Drivers/hagl/src/hagl.c ****     uint16_t y1 = clip_window.y1;
 482:Drivers/hagl/src/hagl.c **** 
 483:Drivers/hagl/src/hagl.c ****     hagl_set_clip_window(0, 0, DISPLAY_WIDTH - 1, DISPLAY_HEIGHT -1);
 484:Drivers/hagl/src/hagl.c ****     hagl_fill_rectangle(0, 0, DISPLAY_WIDTH - 1, DISPLAY_HEIGHT -1, 0x00);
 485:Drivers/hagl/src/hagl.c ****     hagl_set_clip_window(x0, y0, x1, y1);
 486:Drivers/hagl/src/hagl.c **** #endif
 487:Drivers/hagl/src/hagl.c **** }
 488:Drivers/hagl/src/hagl.c **** 
 489:Drivers/hagl/src/hagl.c **** void hagl_clear_clip_window() {
ARM GAS  /tmp/ccrQATq6.s 			page 10


 490:Drivers/hagl/src/hagl.c ****     hagl_fill_rectangle(
 491:Drivers/hagl/src/hagl.c ****         clip_window.x0, clip_window.y0, clip_window.x1, clip_window.y1,
 492:Drivers/hagl/src/hagl.c ****         0x00
 493:Drivers/hagl/src/hagl.c ****     );
 494:Drivers/hagl/src/hagl.c **** }
 495:Drivers/hagl/src/hagl.c **** 
 496:Drivers/hagl/src/hagl.c **** void hagl_draw_circle(int16_t xc, int16_t yc, int16_t r, color_t color) {
 497:Drivers/hagl/src/hagl.c ****     int16_t x = 0;
 498:Drivers/hagl/src/hagl.c ****     int16_t y = r;
 499:Drivers/hagl/src/hagl.c ****     int16_t d = 3 - 2 * r;
 500:Drivers/hagl/src/hagl.c **** 
 501:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + x, yc + y, color);
 502:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - x, yc + y, color);
 503:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + x, yc - y, color);
 504:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - x, yc - y, color);
 505:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + y, yc + x, color);
 506:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - y, yc + x, color);
 507:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + y, yc - x, color);
 508:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - y, yc - x, color);
 509:Drivers/hagl/src/hagl.c **** 
 510:Drivers/hagl/src/hagl.c ****     while (y >= x) {
 511:Drivers/hagl/src/hagl.c ****         x++;
 512:Drivers/hagl/src/hagl.c **** 
 513:Drivers/hagl/src/hagl.c ****         if (d > 0) {
 514:Drivers/hagl/src/hagl.c ****             y--;
 515:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 516:Drivers/hagl/src/hagl.c ****         } else {
 517:Drivers/hagl/src/hagl.c ****             d = d + 4 * x + 6;
 518:Drivers/hagl/src/hagl.c ****         }
 519:Drivers/hagl/src/hagl.c **** 
 520:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + x, yc + y, color);
 521:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - x, yc + y, color);
 522:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + x, yc - y, color);
 523:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - x, yc - y, color);
 524:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + y, yc + x, color);
 525:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - y, yc + x, color);
 526:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + y, yc - x, color);
 527:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - y, yc - x, color);
 528:Drivers/hagl/src/hagl.c ****     }
 529:Drivers/hagl/src/hagl.c **** }
 530:Drivers/hagl/src/hagl.c **** 
 531:Drivers/hagl/src/hagl.c **** void hagl_fill_circle(int16_t x0, int16_t y0, int16_t r, color_t color) {
 532:Drivers/hagl/src/hagl.c ****     int16_t x = 0;
 533:Drivers/hagl/src/hagl.c ****     int16_t y = r;
 534:Drivers/hagl/src/hagl.c ****     int16_t d = 3 - 2 * r;
 535:Drivers/hagl/src/hagl.c **** 
 536:Drivers/hagl/src/hagl.c ****     while (y >= x) {
 537:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - x, y0 + y, x * 2, color);
 538:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - x, y0 - y, x * 2, color);
 539:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - y, y0 + x, y * 2, color);
 540:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - y, y0 - x, y * 2, color);
 541:Drivers/hagl/src/hagl.c ****         x++;
 542:Drivers/hagl/src/hagl.c **** 
 543:Drivers/hagl/src/hagl.c ****         if (d > 0) {
 544:Drivers/hagl/src/hagl.c ****             y--;
 545:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 546:Drivers/hagl/src/hagl.c ****         } else {
ARM GAS  /tmp/ccrQATq6.s 			page 11


 547:Drivers/hagl/src/hagl.c ****             d = d + 4 * x + 6;
 548:Drivers/hagl/src/hagl.c ****         }
 549:Drivers/hagl/src/hagl.c ****     }
 550:Drivers/hagl/src/hagl.c **** }
 551:Drivers/hagl/src/hagl.c **** 
 552:Drivers/hagl/src/hagl.c **** void hagl_draw_ellipse(int16_t x0, int16_t y0, int16_t a, int16_t b, color_t color) {
 553:Drivers/hagl/src/hagl.c ****     int16_t wx, wy;
 554:Drivers/hagl/src/hagl.c ****     int32_t xa, ya;
 555:Drivers/hagl/src/hagl.c ****     int32_t t;
 556:Drivers/hagl/src/hagl.c ****     int32_t asq = a * a;
 557:Drivers/hagl/src/hagl.c ****     int32_t bsq = b * b;
 558:Drivers/hagl/src/hagl.c **** 
 559:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 + b, color);
 560:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 - b, color);
 561:Drivers/hagl/src/hagl.c **** 
 562:Drivers/hagl/src/hagl.c ****     wx = 0;
 563:Drivers/hagl/src/hagl.c ****     wy = b;
 564:Drivers/hagl/src/hagl.c ****     xa = 0;
 565:Drivers/hagl/src/hagl.c ****     ya = asq * 2 * b;
 566:Drivers/hagl/src/hagl.c ****     t = asq / 4 - asq * b;
 567:Drivers/hagl/src/hagl.c **** 
 568:Drivers/hagl/src/hagl.c ****     while (1) {
 569:Drivers/hagl/src/hagl.c ****         t += xa + bsq;
 570:Drivers/hagl/src/hagl.c **** 
 571:Drivers/hagl/src/hagl.c ****         if (t >= 0) {
 572:Drivers/hagl/src/hagl.c ****             ya -= asq * 2;
 573:Drivers/hagl/src/hagl.c ****             t -= ya;
 574:Drivers/hagl/src/hagl.c ****             wy--;
 575:Drivers/hagl/src/hagl.c ****         }
 576:Drivers/hagl/src/hagl.c **** 
 577:Drivers/hagl/src/hagl.c ****         xa += bsq * 2;
 578:Drivers/hagl/src/hagl.c ****         wx++;
 579:Drivers/hagl/src/hagl.c **** 
 580:Drivers/hagl/src/hagl.c ****         if (xa >= ya) {
 581:Drivers/hagl/src/hagl.c ****             break;
 582:Drivers/hagl/src/hagl.c ****         }
 583:Drivers/hagl/src/hagl.c **** 
 584:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 - wy, color);
 585:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 - wy, color);
 586:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 + wy, color);
 587:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 + wy, color);
 588:Drivers/hagl/src/hagl.c ****     }
 589:Drivers/hagl/src/hagl.c **** 
 590:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0 + a, y0, color);
 591:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0 - a, y0, color);
 592:Drivers/hagl/src/hagl.c **** 
 593:Drivers/hagl/src/hagl.c ****     wx = a;
 594:Drivers/hagl/src/hagl.c ****     wy = 0;
 595:Drivers/hagl/src/hagl.c ****     xa = bsq * 2 * a;
 596:Drivers/hagl/src/hagl.c **** 
 597:Drivers/hagl/src/hagl.c ****     ya = 0;
 598:Drivers/hagl/src/hagl.c ****     t = bsq / 4 - bsq * a;
 599:Drivers/hagl/src/hagl.c **** 
 600:Drivers/hagl/src/hagl.c ****     while (1) {
 601:Drivers/hagl/src/hagl.c ****         t += ya + asq;
 602:Drivers/hagl/src/hagl.c **** 
 603:Drivers/hagl/src/hagl.c ****         if (t >= 0) {
ARM GAS  /tmp/ccrQATq6.s 			page 12


 604:Drivers/hagl/src/hagl.c ****             xa -= bsq * 2;
 605:Drivers/hagl/src/hagl.c ****             t = t - xa;
 606:Drivers/hagl/src/hagl.c ****             wx--;
 607:Drivers/hagl/src/hagl.c ****         }
 608:Drivers/hagl/src/hagl.c **** 
 609:Drivers/hagl/src/hagl.c ****         ya += asq * 2;
 610:Drivers/hagl/src/hagl.c ****         wy++;
 611:Drivers/hagl/src/hagl.c **** 
 612:Drivers/hagl/src/hagl.c ****         if (ya > xa) {
 613:Drivers/hagl/src/hagl.c ****             break;
 614:Drivers/hagl/src/hagl.c ****         }
 615:Drivers/hagl/src/hagl.c **** 
 616:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 - wy, color);
 617:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 - wy, color);
 618:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 + wy, color);
 619:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 + wy, color);
 620:Drivers/hagl/src/hagl.c ****     }
 621:Drivers/hagl/src/hagl.c **** }
 622:Drivers/hagl/src/hagl.c **** 
 623:Drivers/hagl/src/hagl.c **** void hagl_fill_ellipse(int16_t x0, int16_t y0, int16_t a, int16_t b, color_t color) {
 624:Drivers/hagl/src/hagl.c ****     int16_t wx, wy;
 625:Drivers/hagl/src/hagl.c ****     int32_t xa, ya;
 626:Drivers/hagl/src/hagl.c ****     int32_t t;
 627:Drivers/hagl/src/hagl.c ****     int32_t asq = a * a;
 628:Drivers/hagl/src/hagl.c ****     int32_t bsq = b * b;
 629:Drivers/hagl/src/hagl.c **** 
 630:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 + b, color);
 631:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 - b, color);
 632:Drivers/hagl/src/hagl.c **** 
 633:Drivers/hagl/src/hagl.c ****     wx = 0;
 634:Drivers/hagl/src/hagl.c ****     wy = b;
 635:Drivers/hagl/src/hagl.c ****     xa = 0;
 636:Drivers/hagl/src/hagl.c ****     ya = asq * 2 * b;
 637:Drivers/hagl/src/hagl.c ****     t = asq / 4 - asq * b;
 638:Drivers/hagl/src/hagl.c **** 
 639:Drivers/hagl/src/hagl.c ****     while (1) {
 640:Drivers/hagl/src/hagl.c ****         t += xa + bsq;
 641:Drivers/hagl/src/hagl.c **** 
 642:Drivers/hagl/src/hagl.c ****         if (t >= 0) {
 643:Drivers/hagl/src/hagl.c ****             ya -= asq * 2;
 644:Drivers/hagl/src/hagl.c ****             t -= ya;
 645:Drivers/hagl/src/hagl.c ****             wy--;
 646:Drivers/hagl/src/hagl.c ****         }
 647:Drivers/hagl/src/hagl.c **** 
 648:Drivers/hagl/src/hagl.c ****         xa += bsq * 2;
 649:Drivers/hagl/src/hagl.c ****         wx++;
 650:Drivers/hagl/src/hagl.c **** 
 651:Drivers/hagl/src/hagl.c ****         if (xa >= ya) {
 652:Drivers/hagl/src/hagl.c ****             break;
 653:Drivers/hagl/src/hagl.c ****         }
 654:Drivers/hagl/src/hagl.c **** 
 655:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 - wy, wx * 2, color);
 656:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 + wy, wx * 2, color);
 657:Drivers/hagl/src/hagl.c ****     }
 658:Drivers/hagl/src/hagl.c **** 
 659:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0 - a, y0, a * 2, color);
 660:Drivers/hagl/src/hagl.c **** 
ARM GAS  /tmp/ccrQATq6.s 			page 13


 661:Drivers/hagl/src/hagl.c ****     wx = a;
 662:Drivers/hagl/src/hagl.c ****     wy = 0;
 663:Drivers/hagl/src/hagl.c ****     xa = bsq * 2 * a;
 664:Drivers/hagl/src/hagl.c **** 
 665:Drivers/hagl/src/hagl.c ****     ya = 0;
 666:Drivers/hagl/src/hagl.c ****     t = bsq / 4 - bsq * a;
 667:Drivers/hagl/src/hagl.c **** 
 668:Drivers/hagl/src/hagl.c ****     while (1) {
 669:Drivers/hagl/src/hagl.c ****         t += ya + asq;
 670:Drivers/hagl/src/hagl.c **** 
 671:Drivers/hagl/src/hagl.c ****         if (t >= 0) {
 672:Drivers/hagl/src/hagl.c ****             xa -= bsq * 2;
 673:Drivers/hagl/src/hagl.c ****             t = t - xa;
 674:Drivers/hagl/src/hagl.c ****             wx--;
 675:Drivers/hagl/src/hagl.c ****         }
 676:Drivers/hagl/src/hagl.c **** 
 677:Drivers/hagl/src/hagl.c ****         ya += asq * 2;
 678:Drivers/hagl/src/hagl.c ****         wy++;
 679:Drivers/hagl/src/hagl.c **** 
 680:Drivers/hagl/src/hagl.c ****         if (ya > xa) {
 681:Drivers/hagl/src/hagl.c ****             break;
 682:Drivers/hagl/src/hagl.c ****         }
 683:Drivers/hagl/src/hagl.c **** 
 684:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 - wy, wx * 2, color);
 685:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 + wy, wx * 2, color);
 686:Drivers/hagl/src/hagl.c ****     }
 687:Drivers/hagl/src/hagl.c **** }
 688:Drivers/hagl/src/hagl.c **** 
 689:Drivers/hagl/src/hagl.c **** 
 690:Drivers/hagl/src/hagl.c **** void hagl_draw_polygon(int16_t amount, int16_t *vertices, color_t color) {
 691:Drivers/hagl/src/hagl.c **** 
 692:Drivers/hagl/src/hagl.c ****     for(int16_t i = 0; i < amount - 1; i++) {
 693:Drivers/hagl/src/hagl.c ****         hagl_draw_line(
 694:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 0],
 695:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 1],
 696:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 2],
 697:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 3],
 698:Drivers/hagl/src/hagl.c ****             color
 699:Drivers/hagl/src/hagl.c ****         );
 700:Drivers/hagl/src/hagl.c ****     }
 701:Drivers/hagl/src/hagl.c ****     hagl_draw_line(
 702:Drivers/hagl/src/hagl.c ****         vertices[0],
 703:Drivers/hagl/src/hagl.c ****         vertices[1],
 704:Drivers/hagl/src/hagl.c ****         vertices[(amount <<1 ) - 2],
 705:Drivers/hagl/src/hagl.c ****         vertices[(amount <<1 ) - 1],
 706:Drivers/hagl/src/hagl.c ****         color
 707:Drivers/hagl/src/hagl.c ****     );
 708:Drivers/hagl/src/hagl.c **** }
 709:Drivers/hagl/src/hagl.c **** 
 710:Drivers/hagl/src/hagl.c **** /* Adapted from  http://alienryderflex.com/polygon_fill/ */
 711:Drivers/hagl/src/hagl.c **** void hagl_fill_polygon(int16_t amount, int16_t *vertices, color_t color) {
 712:Drivers/hagl/src/hagl.c ****     uint16_t nodes[64];
 713:Drivers/hagl/src/hagl.c ****     int16_t y;
 714:Drivers/hagl/src/hagl.c **** 
 715:Drivers/hagl/src/hagl.c ****     float x0;
 716:Drivers/hagl/src/hagl.c ****     float y0;
 717:Drivers/hagl/src/hagl.c ****     float x1;
ARM GAS  /tmp/ccrQATq6.s 			page 14


 718:Drivers/hagl/src/hagl.c ****     float y1;
 719:Drivers/hagl/src/hagl.c **** 
 720:Drivers/hagl/src/hagl.c ****     int16_t miny = DISPLAY_HEIGHT;
 721:Drivers/hagl/src/hagl.c ****     int16_t maxy = 0;
 722:Drivers/hagl/src/hagl.c **** 
 723:Drivers/hagl/src/hagl.c ****     for (uint8_t i = 0; i < amount; i++) {
 724:Drivers/hagl/src/hagl.c ****         if (miny > vertices[(i << 1) + 1]) {
 725:Drivers/hagl/src/hagl.c ****             miny = vertices[(i << 1) + 1];
 726:Drivers/hagl/src/hagl.c ****         }
 727:Drivers/hagl/src/hagl.c ****         if (maxy < vertices[(i << 1) + 1]) {
 728:Drivers/hagl/src/hagl.c ****             maxy = vertices[(i << 1) + 1];
 729:Drivers/hagl/src/hagl.c ****         }
 730:Drivers/hagl/src/hagl.c ****     }
 731:Drivers/hagl/src/hagl.c **** 
 732:Drivers/hagl/src/hagl.c ****     /*  Loop through the rows of the image. */
 733:Drivers/hagl/src/hagl.c ****     for (y = miny; y < maxy; y++) {
 734:Drivers/hagl/src/hagl.c **** 
 735:Drivers/hagl/src/hagl.c ****         /*  Build a list of nodes. */
 736:Drivers/hagl/src/hagl.c ****         int16_t count = 0;
 737:Drivers/hagl/src/hagl.c ****         int16_t j = amount - 1;
 738:Drivers/hagl/src/hagl.c **** 
 739:Drivers/hagl/src/hagl.c ****         for (int16_t i = 0; i < amount; i++) {
 740:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 741:Drivers/hagl/src/hagl.c ****             y0 = vertices[(i << 1) + 1];
 742:Drivers/hagl/src/hagl.c ****             x1 = vertices[(j << 1) + 0];
 743:Drivers/hagl/src/hagl.c ****             y1 = vertices[(j << 1) + 1];
 744:Drivers/hagl/src/hagl.c **** 
 745:Drivers/hagl/src/hagl.c ****             if (
 746:Drivers/hagl/src/hagl.c ****                 (y0 < (float)y && y1 >= (float)y) ||
 747:Drivers/hagl/src/hagl.c ****                 (y1 < (float)y && y0 >= (float)y)
 748:Drivers/hagl/src/hagl.c ****             ) {
 749:Drivers/hagl/src/hagl.c ****                 nodes[count] = (int16_t)(x0 + (y - y0) / (y1 - y0) * (x1 - x0));
 750:Drivers/hagl/src/hagl.c ****                 count++;
 751:Drivers/hagl/src/hagl.c ****             }
 752:Drivers/hagl/src/hagl.c ****             j = i;
 753:Drivers/hagl/src/hagl.c ****         }
 754:Drivers/hagl/src/hagl.c **** 
 755:Drivers/hagl/src/hagl.c ****         /* Sort the nodes, via a simple “Bubble” sort. */
 756:Drivers/hagl/src/hagl.c ****         int16_t i = 0;
 757:Drivers/hagl/src/hagl.c ****         while (i < count - 1) {
 758:Drivers/hagl/src/hagl.c ****             if (nodes[i] > nodes[i + 1]) {
 759:Drivers/hagl/src/hagl.c ****                 int16_t swap = nodes[i];
 760:Drivers/hagl/src/hagl.c ****                 nodes[i] = nodes[i + 1];
 761:Drivers/hagl/src/hagl.c ****                 nodes[i + 1] = swap;
 762:Drivers/hagl/src/hagl.c ****                 if (i) {
 763:Drivers/hagl/src/hagl.c ****                     i--;
 764:Drivers/hagl/src/hagl.c ****                 }
 765:Drivers/hagl/src/hagl.c ****             } else {
 766:Drivers/hagl/src/hagl.c ****                 i++;
 767:Drivers/hagl/src/hagl.c ****             }
 768:Drivers/hagl/src/hagl.c ****         }
 769:Drivers/hagl/src/hagl.c **** 
 770:Drivers/hagl/src/hagl.c ****         /* Draw lines between nodes. */
 771:Drivers/hagl/src/hagl.c ****         for (int16_t i = 0; i < count; i += 2) {
 772:Drivers/hagl/src/hagl.c ****             int16_t width = nodes[i + 1] - nodes[i];
 773:Drivers/hagl/src/hagl.c ****             hagl_draw_hline(nodes[i], y, width, color);
 774:Drivers/hagl/src/hagl.c ****         }
ARM GAS  /tmp/ccrQATq6.s 			page 15


 775:Drivers/hagl/src/hagl.c ****     }
 776:Drivers/hagl/src/hagl.c **** }
 777:Drivers/hagl/src/hagl.c **** 
 778:Drivers/hagl/src/hagl.c **** void hagl_draw_triangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, col
 779:Drivers/hagl/src/hagl.c ****     int16_t vertices[6] = {x0, y0, x1, y1, x2, y2};
 780:Drivers/hagl/src/hagl.c ****     hagl_draw_polygon(3, vertices, color);
 781:Drivers/hagl/src/hagl.c **** };
 782:Drivers/hagl/src/hagl.c **** 
 783:Drivers/hagl/src/hagl.c **** void hagl_fill_triangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t x2, int16_t y2, col
 784:Drivers/hagl/src/hagl.c ****     int16_t vertices[6] = {x0, y0, x1, y1, x2, y2};
 785:Drivers/hagl/src/hagl.c ****     hagl_fill_polygon(3, vertices, color);
 786:Drivers/hagl/src/hagl.c **** }
 787:Drivers/hagl/src/hagl.c **** 
 788:Drivers/hagl/src/hagl.c **** void hagl_draw_rounded_rectangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t r, color_t
 789:Drivers/hagl/src/hagl.c **** 
 790:Drivers/hagl/src/hagl.c ****     uint16_t width, height;
 791:Drivers/hagl/src/hagl.c ****     int16_t x, y, d;
 792:Drivers/hagl/src/hagl.c **** 
 793:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 794:Drivers/hagl/src/hagl.c ****     if (x0 > x1) {
 795:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 796:Drivers/hagl/src/hagl.c ****         x1 = x0 - x1;
 797:Drivers/hagl/src/hagl.c ****         x0 = x0 - x1;
 798:Drivers/hagl/src/hagl.c ****     }
 799:Drivers/hagl/src/hagl.c **** 
 800:Drivers/hagl/src/hagl.c ****     /* Make sure y0 is smaller than y1. */
 801:Drivers/hagl/src/hagl.c ****     if (y0 > y1) {
 802:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 803:Drivers/hagl/src/hagl.c ****         y1 = y0 - y1;
 804:Drivers/hagl/src/hagl.c ****         y0 = y0 - y1;
 805:Drivers/hagl/src/hagl.c ****     }
 806:Drivers/hagl/src/hagl.c **** 
 807:Drivers/hagl/src/hagl.c ****     /* x1 or y1 is before the edge, nothing to do. */
 808:Drivers/hagl/src/hagl.c ****     if ((x1 < clip_window.x0) || (y1 < clip_window.y0))  {
 809:Drivers/hagl/src/hagl.c ****         return;
 810:Drivers/hagl/src/hagl.c ****     }
 811:Drivers/hagl/src/hagl.c **** 
 812:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
 813:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
 814:Drivers/hagl/src/hagl.c ****         return;
 815:Drivers/hagl/src/hagl.c ****     }
 816:Drivers/hagl/src/hagl.c **** 
 817:Drivers/hagl/src/hagl.c ****     /* Max radius is half of shortest edge. */
 818:Drivers/hagl/src/hagl.c ****     width = x1 - x0 + 1;
 819:Drivers/hagl/src/hagl.c ****     height = y1 - y0 + 1;
 820:Drivers/hagl/src/hagl.c ****     r = min(r, min(width / 2, height / 2));
 821:Drivers/hagl/src/hagl.c **** 
 822:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0 + r, y0, width - 2 * r, color);
 823:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0 + r, y1, width - 2 * r, color);
 824:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x0, y0 + r, height - 2 * r, color);
 825:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x1, y0 + r, height - 2 * r, color);
 826:Drivers/hagl/src/hagl.c **** 
 827:Drivers/hagl/src/hagl.c ****     x = 0;
 828:Drivers/hagl/src/hagl.c ****     y = r;
 829:Drivers/hagl/src/hagl.c ****     d = 3 - 2 * r;
 830:Drivers/hagl/src/hagl.c **** 
 831:Drivers/hagl/src/hagl.c ****     while (y >= x) {
ARM GAS  /tmp/ccrQATq6.s 			page 16


 832:Drivers/hagl/src/hagl.c ****         x++;
 833:Drivers/hagl/src/hagl.c **** 
 834:Drivers/hagl/src/hagl.c ****         if (d > 0) {
 835:Drivers/hagl/src/hagl.c ****             y--;
 836:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 837:Drivers/hagl/src/hagl.c ****         } else {
 838:Drivers/hagl/src/hagl.c ****             d = d + 4 * x + 6;
 839:Drivers/hagl/src/hagl.c ****         }
 840:Drivers/hagl/src/hagl.c **** 
 841:Drivers/hagl/src/hagl.c ****         /* Top right */
 842:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + x, y0 + r - y, color);
 843:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + y, y0 + r - x, color);
 844:Drivers/hagl/src/hagl.c **** 
 845:Drivers/hagl/src/hagl.c ****         /* Top left */
 846:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - x, y0 + r - y, color);
 847:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - y, y0 + r - x, color);
 848:Drivers/hagl/src/hagl.c **** 
 849:Drivers/hagl/src/hagl.c ****         /* Bottom right */
 850:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + x, y1 - r + y, color);
 851:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + y, y1 - r + x, color);
 852:Drivers/hagl/src/hagl.c **** 
 853:Drivers/hagl/src/hagl.c ****         /* Bottom left */
 854:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - x, y1 - r + y, color);
 855:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - y, y1 - r + x, color);
 856:Drivers/hagl/src/hagl.c ****     }
 857:Drivers/hagl/src/hagl.c **** };
 858:Drivers/hagl/src/hagl.c **** 
 859:Drivers/hagl/src/hagl.c **** void hagl_fill_rounded_rectangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, int16_t r, color_t
 860:Drivers/hagl/src/hagl.c **** 
 861:Drivers/hagl/src/hagl.c ****     uint16_t width, height;
 862:Drivers/hagl/src/hagl.c ****     int16_t rx0, ry0, rx1, ry1, x, y, d;
 863:Drivers/hagl/src/hagl.c **** 
 864:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 865:Drivers/hagl/src/hagl.c ****     if (x0 > x1) {
 866:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 867:Drivers/hagl/src/hagl.c ****         x1 = x0 - x1;
 868:Drivers/hagl/src/hagl.c ****         x0 = x0 - x1;
 869:Drivers/hagl/src/hagl.c ****     }
 870:Drivers/hagl/src/hagl.c **** 
 871:Drivers/hagl/src/hagl.c ****     /* Make sure y0 is smaller than y1. */
 872:Drivers/hagl/src/hagl.c ****     if (y0 > y1) {
 873:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 874:Drivers/hagl/src/hagl.c ****         y1 = y0 - y1;
 875:Drivers/hagl/src/hagl.c ****         y0 = y0 - y1;
 876:Drivers/hagl/src/hagl.c ****     }
 877:Drivers/hagl/src/hagl.c **** 
 878:Drivers/hagl/src/hagl.c ****     /* x1 or y1 is before the edge, nothing to do. */
 879:Drivers/hagl/src/hagl.c ****     if ((x1 < clip_window.x0) || (y1 < clip_window.y0))  {
 880:Drivers/hagl/src/hagl.c ****         return;
 881:Drivers/hagl/src/hagl.c ****     }
 882:Drivers/hagl/src/hagl.c **** 
 883:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is after the edge, nothing to do. */
 884:Drivers/hagl/src/hagl.c ****     if ((x0 > clip_window.x1) || (y0 > clip_window.y1)) {
 885:Drivers/hagl/src/hagl.c ****         return;
 886:Drivers/hagl/src/hagl.c ****     }
 887:Drivers/hagl/src/hagl.c **** 
 888:Drivers/hagl/src/hagl.c ****     /* Max radius is half of shortest edge. */
ARM GAS  /tmp/ccrQATq6.s 			page 17


 889:Drivers/hagl/src/hagl.c ****     width = x1 - x0 + 1;
 890:Drivers/hagl/src/hagl.c ****     height = y1 - y0 + 1;
 891:Drivers/hagl/src/hagl.c ****     r = min(r, min(width / 2, height / 2));
 892:Drivers/hagl/src/hagl.c **** 
 893:Drivers/hagl/src/hagl.c ****     x = 0;
 894:Drivers/hagl/src/hagl.c ****     y = r;
 895:Drivers/hagl/src/hagl.c ****     d = 3 - 2 * r;
 896:Drivers/hagl/src/hagl.c **** 
 897:Drivers/hagl/src/hagl.c ****     while (y >= x) {
 898:Drivers/hagl/src/hagl.c ****         x++;
 899:Drivers/hagl/src/hagl.c **** 
 900:Drivers/hagl/src/hagl.c ****         if (d > 0) {
 901:Drivers/hagl/src/hagl.c ****             y--;
 902:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 903:Drivers/hagl/src/hagl.c ****         } else {
 904:Drivers/hagl/src/hagl.c ****             d = d + 4 * x + 6;
 905:Drivers/hagl/src/hagl.c ****         }
 906:Drivers/hagl/src/hagl.c **** 
 907:Drivers/hagl/src/hagl.c ****         /* Top  */
 908:Drivers/hagl/src/hagl.c ****         ry0 = y0 + r - x;
 909:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - y;
 910:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + y;
 911:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 912:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 913:Drivers/hagl/src/hagl.c **** 
 914:Drivers/hagl/src/hagl.c ****         ry0 = y0 + r - y;
 915:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - x;
 916:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + x;
 917:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 918:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 919:Drivers/hagl/src/hagl.c **** 
 920:Drivers/hagl/src/hagl.c ****         /* Bottom */
 921:Drivers/hagl/src/hagl.c ****         ry0 = y1 - r + y;
 922:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - x;
 923:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + x;
 924:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 925:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 926:Drivers/hagl/src/hagl.c **** 
 927:Drivers/hagl/src/hagl.c ****         ry0 = y1 - r + x;
 928:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - y;
 929:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + y;
 930:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 931:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 932:Drivers/hagl/src/hagl.c ****     }
 933:Drivers/hagl/src/hagl.c **** 
 934:Drivers/hagl/src/hagl.c ****     /* Center */
 935:Drivers/hagl/src/hagl.c ****     hagl_fill_rectangle(x0, y0 + r, x1, y1 - r, color);
 936:Drivers/hagl/src/hagl.c **** };
 937:Drivers/hagl/src/hagl.c **** 
 938:Drivers/hagl/src/hagl.c **** 
 939:Drivers/hagl/src/hagl.c **** 
 940:Drivers/hagl/src/hagl.c **** static uint16_t tjpgd_data_reader(JDEC *decoder, uint8_t *buffer, uint16_t size)
 941:Drivers/hagl/src/hagl.c **** {
  26              		.loc 1 941 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccrQATq6.s 			page 18


  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 1446     		mov	r4, r2
 942:Drivers/hagl/src/hagl.c ****     tjpgd_iodev_t *device = (tjpgd_iodev_t *)decoder->device;
  37              		.loc 1 942 0
  38 0004 436F     		ldr	r3, [r0, #116]
  39              	.LVL1:
 943:Drivers/hagl/src/hagl.c **** 
 944:Drivers/hagl/src/hagl.c ****     if (buffer) {
  40              		.loc 1 944 0
  41 0006 31B1     		cbz	r1, .L2
  42 0008 0846     		mov	r0, r1
  43              	.LVL2:
 945:Drivers/hagl/src/hagl.c ****         /* Read bytes from input stream. */
 946:Drivers/hagl/src/hagl.c ****         return (uint16_t)fread(buffer, 1, size, device->fp);
  44              		.loc 1 946 0
  45 000a 1B68     		ldr	r3, [r3]
  46              	.LVL3:
  47 000c 0121     		movs	r1, #1
  48              	.LVL4:
  49 000e FFF7FEFF 		bl	fread
  50              	.LVL5:
  51 0012 80B2     		uxth	r0, r0
  52              	.L3:
 947:Drivers/hagl/src/hagl.c ****     } else {
 948:Drivers/hagl/src/hagl.c ****         /* Skip bytes from input stream. */
 949:Drivers/hagl/src/hagl.c ****         return fseek(device->fp, size, SEEK_CUR) ? 0 : size;
 950:Drivers/hagl/src/hagl.c ****     }
 951:Drivers/hagl/src/hagl.c **** }
  53              		.loc 1 951 0
  54 0014 10BD     		pop	{r4, pc}
  55              	.LVL6:
  56              	.L2:
 949:Drivers/hagl/src/hagl.c ****     }
  57              		.loc 1 949 0
  58 0016 0122     		movs	r2, #1
  59              	.LVL7:
  60 0018 2146     		mov	r1, r4
  61              	.LVL8:
  62 001a 1868     		ldr	r0, [r3]
  63              	.LVL9:
  64 001c FFF7FEFF 		bl	fseek
  65              	.LVL10:
  66 0020 08B1     		cbz	r0, .L6
  67 0022 0020     		movs	r0, #0
  68 0024 F6E7     		b	.L3
  69              	.L6:
  70 0026 2046     		mov	r0, r4
  71 0028 F4E7     		b	.L3
  72              		.cfi_endproc
  73              	.LFE32:
  75              		.section	.text.hagl_set_clip_window,"ax",%progbits
  76              		.align	1
ARM GAS  /tmp/ccrQATq6.s 			page 19


  77              		.global	hagl_set_clip_window
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-d16
  83              	hagl_set_clip_window:
  84              	.LFB7:
  65:Drivers/hagl/src/hagl.c ****     clip_window.x0 = x0;
  85              		.loc 1 65 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL11:
  91 0000 10B4     		push	{r4}
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 4, -4
  66:Drivers/hagl/src/hagl.c ****     clip_window.y0 = y0;
  95              		.loc 1 66 0
  96 0002 044C     		ldr	r4, .L9
  97 0004 2080     		strh	r0, [r4]	@ movhi
  67:Drivers/hagl/src/hagl.c ****     clip_window.x1 = x1;
  98              		.loc 1 67 0
  99 0006 6180     		strh	r1, [r4, #2]	@ movhi
  68:Drivers/hagl/src/hagl.c ****     clip_window.y1 = y1;
 100              		.loc 1 68 0
 101 0008 A280     		strh	r2, [r4, #4]	@ movhi
  69:Drivers/hagl/src/hagl.c **** }
 102              		.loc 1 69 0
 103 000a E380     		strh	r3, [r4, #6]	@ movhi
  70:Drivers/hagl/src/hagl.c **** 
 104              		.loc 1 70 0
 105 000c 5DF8044B 		ldr	r4, [sp], #4
 106              	.LCFI2:
 107              		.cfi_restore 4
 108              		.cfi_def_cfa_offset 0
 109 0010 7047     		bx	lr
 110              	.L10:
 111 0012 00BF     		.align	2
 112              	.L9:
 113 0014 00000000 		.word	.LANCHOR0
 114              		.cfi_endproc
 115              	.LFE7:
 117              		.section	.text.hagl_put_pixel,"ax",%progbits
 118              		.align	1
 119              		.global	hagl_put_pixel
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	hagl_put_pixel:
 126              	.LFB8:
  73:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is before the edge, nothing to do. */
 127              		.loc 1 73 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccrQATq6.s 			page 20


 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL12:
 132 0000 08B5     		push	{r3, lr}
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
  75:Drivers/hagl/src/hagl.c ****         return;
 137              		.loc 1 75 0
 138 0002 0A4B     		ldr	r3, .L15
 139 0004 1B88     		ldrh	r3, [r3]
 140 0006 9842     		cmp	r0, r3
 141 0008 0BDB     		blt	.L11
  75:Drivers/hagl/src/hagl.c ****         return;
 142              		.loc 1 75 0 is_stmt 0 discriminator 1
 143 000a 084B     		ldr	r3, .L15
 144 000c 5B88     		ldrh	r3, [r3, #2]
 145 000e 9942     		cmp	r1, r3
 146 0010 07DB     		blt	.L11
  80:Drivers/hagl/src/hagl.c ****         return;
 147              		.loc 1 80 0 is_stmt 1
 148 0012 064B     		ldr	r3, .L15
 149 0014 9B88     		ldrh	r3, [r3, #4]
 150 0016 9842     		cmp	r0, r3
 151 0018 03DC     		bgt	.L11
  80:Drivers/hagl/src/hagl.c ****         return;
 152              		.loc 1 80 0 is_stmt 0 discriminator 1
 153 001a 044B     		ldr	r3, .L15
 154 001c DB88     		ldrh	r3, [r3, #6]
 155 001e 9942     		cmp	r1, r3
 156 0020 00DD     		ble	.L14
 157              	.LVL13:
 158              	.L11:
  86:Drivers/hagl/src/hagl.c **** 
 159              		.loc 1 86 0 is_stmt 1
 160 0022 08BD     		pop	{r3, pc}
 161              	.LVL14:
 162              	.L14:
  85:Drivers/hagl/src/hagl.c **** }
 163              		.loc 1 85 0
 164 0024 FFF7FEFF 		bl	hagl_hal_put_pixel
 165              	.LVL15:
 166 0028 FBE7     		b	.L11
 167              	.L16:
 168 002a 00BF     		.align	2
 169              	.L15:
 170 002c 00000000 		.word	.LANCHOR0
 171              		.cfi_endproc
 172              	.LFE8:
 174              		.section	.text.hagl_draw_line,"ax",%progbits
 175              		.align	1
 176              		.global	hagl_draw_line
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv5-d16
 182              	hagl_draw_line:
ARM GAS  /tmp/ccrQATq6.s 			page 21


 183              	.LFB12:
 177:Drivers/hagl/src/hagl.c ****     /* Clip coordinates to fit clip window. */
 184              		.loc 1 177 0
 185              		.cfi_startproc
 186              		@ args = 4, pretend = 0, frame = 8
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL16:
 189 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 36
 192              		.cfi_offset 4, -36
 193              		.cfi_offset 5, -32
 194              		.cfi_offset 6, -28
 195              		.cfi_offset 7, -24
 196              		.cfi_offset 8, -20
 197              		.cfi_offset 9, -16
 198              		.cfi_offset 10, -12
 199              		.cfi_offset 11, -8
 200              		.cfi_offset 14, -4
 201 0004 85B0     		sub	sp, sp, #20
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 56
 204 0006 9DF83860 		ldrb	r6, [sp, #56]	@ zero_extendqisi2
 205 000a ADF80E00 		strh	r0, [sp, #14]	@ movhi
 206 000e ADF80C10 		strh	r1, [sp, #12]	@ movhi
 207 0012 ADF80A20 		strh	r2, [sp, #10]	@ movhi
 208 0016 04AA     		add	r2, sp, #16
 209              	.LVL17:
 210 0018 22F8083D 		strh	r3, [r2, #-8]!	@ movhi
 179:Drivers/hagl/src/hagl.c ****         return;
 211              		.loc 1 179 0
 212 001c 394B     		ldr	r3, .L36
 213              	.LVL18:
 214 001e 93E80300 		ldm	r3, {r0, r1}
 215              	.LVL19:
 216 0022 8DE80300 		stm	sp, {r0, r1}
 217 0026 1346     		mov	r3, r2
 218 0028 0DF10A02 		add	r2, sp, #10
 219              	.LVL20:
 220 002c 03A9     		add	r1, sp, #12
 221              	.LVL21:
 222 002e 0DF10E00 		add	r0, sp, #14
 223              	.LVL22:
 224 0032 FFF7FEFF 		bl	clip_line
 225              	.LVL23:
 226 0036 F0B3     		cbz	r0, .L17
 190:Drivers/hagl/src/hagl.c ****     sx = x0 < x1 ? 1 : -1;
 227              		.loc 1 190 0
 228 0038 BDF90A20 		ldrsh	r2, [sp, #10]
 229 003c BDF90E30 		ldrsh	r3, [sp, #14]
 230 0040 A2EB030A 		sub	r10, r2, r3
 231 0044 BAF1000F 		cmp	r10, #0
 232 0048 B8BF     		it	lt
 233 004a CAF1000A 		rsblt	r10, r10, #0
 234 004e 0FFA8AF5 		sxth	r5, r10
 235              	.LVL24:
 191:Drivers/hagl/src/hagl.c ****     dy = ABS(y1 - y0);
ARM GAS  /tmp/ccrQATq6.s 			page 22


 236              		.loc 1 191 0
 237 0052 9A42     		cmp	r2, r3
 238 0054 19DD     		ble	.L29
 239 0056 4FF00109 		mov	r9, #1
 240              	.L19:
 241              	.LVL25:
 192:Drivers/hagl/src/hagl.c ****     sy = y0 < y1 ? 1 : -1;
 242              		.loc 1 192 0 discriminator 4
 243 005a BDF90820 		ldrsh	r2, [sp, #8]
 244 005e BDF90C30 		ldrsh	r3, [sp, #12]
 245 0062 A2EB0308 		sub	r8, r2, r3
 246 0066 B8F1000F 		cmp	r8, #0
 247 006a B8BF     		it	lt
 248 006c C8F10008 		rsblt	r8, r8, #0
 249 0070 0FFA88F7 		sxth	r7, r8
 250              	.LVL26:
 193:Drivers/hagl/src/hagl.c ****     err = (dx > dy ? dx : -dy) / 2;
 251              		.loc 1 193 0 discriminator 4
 252 0074 9A42     		cmp	r2, r3
 253 0076 0BDD     		ble	.L30
 193:Drivers/hagl/src/hagl.c ****     err = (dx > dy ? dx : -dy) / 2;
 254              		.loc 1 193 0 is_stmt 0
 255 0078 4FF0010B 		mov	fp, #1
 256              	.L20:
 257              	.LVL27:
 194:Drivers/hagl/src/hagl.c **** 
 258              		.loc 1 194 0 is_stmt 1 discriminator 4
 259 007c BD42     		cmp	r5, r7
 260 007e 0CDD     		ble	.L21
 194:Drivers/hagl/src/hagl.c **** 
 261              		.loc 1 194 0 is_stmt 0 discriminator 1
 262 0080 2C46     		mov	r4, r5
 263 0082 002D     		cmp	r5, #0
 264 0084 07DB     		blt	.L32
 265              	.L22:
 266 0086 6410     		asrs	r4, r4, #1
 267 0088 1AE0     		b	.L27
 268              	.LVL28:
 269              	.L29:
 191:Drivers/hagl/src/hagl.c ****     dy = ABS(y1 - y0);
 270              		.loc 1 191 0 is_stmt 1
 271 008a 4FF0FF39 		mov	r9, #-1
 272 008e E4E7     		b	.L19
 273              	.LVL29:
 274              	.L30:
 193:Drivers/hagl/src/hagl.c ****     err = (dx > dy ? dx : -dy) / 2;
 275              		.loc 1 193 0
 276 0090 4FF0FF3B 		mov	fp, #-1
 277 0094 F2E7     		b	.L20
 278              	.LVL30:
 279              	.L32:
 194:Drivers/hagl/src/hagl.c **** 
 280              		.loc 1 194 0 discriminator 1
 281 0096 6C1C     		adds	r4, r5, #1
 282 0098 F5E7     		b	.L22
 283              	.L21:
 194:Drivers/hagl/src/hagl.c **** 
ARM GAS  /tmp/ccrQATq6.s 			page 23


 284              		.loc 1 194 0 is_stmt 0 discriminator 2
 285 009a 7C42     		negs	r4, r7
 286 009c 002C     		cmp	r4, #0
 287 009e 02DB     		blt	.L33
 288              	.L24:
 289 00a0 44F34F04 		sbfx	r4, r4, #1, #16
 290 00a4 0CE0     		b	.L27
 291              	.L33:
 292 00a6 0134     		adds	r4, r4, #1
 293 00a8 FAE7     		b	.L24
 294              	.LVL31:
 295              	.L35:
 199:Drivers/hagl/src/hagl.c ****             break;
 296              		.loc 1 199 0 is_stmt 1 discriminator 1
 297 00aa BDF90C10 		ldrsh	r1, [sp, #12]
 298 00ae BDF90830 		ldrsh	r3, [sp, #8]
 299 00b2 9942     		cmp	r1, r3
 300 00b4 11D1     		bne	.L25
 301              	.LVL32:
 302              	.L17:
 215:Drivers/hagl/src/hagl.c **** 
 303              		.loc 1 215 0
 304 00b6 05B0     		add	sp, sp, #20
 305              	.LCFI6:
 306              		.cfi_remember_state
 307              		.cfi_def_cfa_offset 36
 308              		@ sp needed
 309 00b8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 310              	.LVL33:
 311              	.L26:
 312              	.LCFI7:
 313              		.cfi_restore_state
 210:Drivers/hagl/src/hagl.c ****             err += dx;
 314              		.loc 1 210 0
 315 00bc 9F42     		cmp	r7, r3
 316 00be 19DC     		bgt	.L34
 317              	.LVL34:
 318              	.L27:
 197:Drivers/hagl/src/hagl.c **** 
 319              		.loc 1 197 0
 320 00c0 3246     		mov	r2, r6
 321 00c2 BDF90C10 		ldrsh	r1, [sp, #12]
 322 00c6 BDF90E00 		ldrsh	r0, [sp, #14]
 323 00ca FFF7FEFF 		bl	hagl_put_pixel
 324              	.LVL35:
 199:Drivers/hagl/src/hagl.c ****             break;
 325              		.loc 1 199 0
 326 00ce BDF90E20 		ldrsh	r2, [sp, #14]
 327 00d2 BDF90A30 		ldrsh	r3, [sp, #10]
 328 00d6 9A42     		cmp	r2, r3
 329 00d8 E7D0     		beq	.L35
 330              	.L25:
 203:Drivers/hagl/src/hagl.c **** 
 331              		.loc 1 203 0
 332 00da A1B2     		uxth	r1, r4
 333 00dc 4B00     		lsls	r3, r1, #1
 334 00de 1BB2     		sxth	r3, r3
ARM GAS  /tmp/ccrQATq6.s 			page 24


 335              	.LVL36:
 205:Drivers/hagl/src/hagl.c ****             err -= dy;
 336              		.loc 1 205 0
 337 00e0 6842     		negs	r0, r5
 338 00e2 8342     		cmp	r3, r0
 339 00e4 EADD     		ble	.L26
 206:Drivers/hagl/src/hagl.c ****             x0 += sx;
 340              		.loc 1 206 0
 341 00e6 A1EB0804 		sub	r4, r1, r8
 342              	.LVL37:
 343 00ea 24B2     		sxth	r4, r4
 344              	.LVL38:
 207:Drivers/hagl/src/hagl.c ****         }
 345              		.loc 1 207 0
 346 00ec 4A44     		add	r2, r2, r9
 347 00ee ADF80E20 		strh	r2, [sp, #14]	@ movhi
 348 00f2 E3E7     		b	.L26
 349              	.L34:
 211:Drivers/hagl/src/hagl.c ****             y0 += sy;
 350              		.loc 1 211 0
 351 00f4 5444     		add	r4, r4, r10
 352              	.LVL39:
 353 00f6 24B2     		sxth	r4, r4
 354              	.LVL40:
 212:Drivers/hagl/src/hagl.c ****         }
 355              		.loc 1 212 0
 356 00f8 BDF80C30 		ldrh	r3, [sp, #12]
 357              	.LVL41:
 358 00fc 5B44     		add	r3, r3, fp
 359 00fe ADF80C30 		strh	r3, [sp, #12]	@ movhi
 360 0102 DDE7     		b	.L27
 361              	.L37:
 362              		.align	2
 363              	.L36:
 364 0104 00000000 		.word	.LANCHOR0
 365              		.cfi_endproc
 366              	.LFE12:
 368              		.section	.text.hagl_draw_hline,"ax",%progbits
 369              		.align	1
 370              		.global	hagl_draw_hline
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv5-d16
 376              	hagl_draw_hline:
 377              	.LFB10:
 107:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_HLINE
 378              		.loc 1 107 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              	.LVL42:
 383 0000 00B5     		push	{lr}
 384              	.LCFI8:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccrQATq6.s 			page 25


 388              	.LCFI9:
 389              		.cfi_def_cfa_offset 16
 134:Drivers/hagl/src/hagl.c **** #endif
 390              		.loc 1 134 0
 391 0004 0244     		add	r2, r2, r0
 392              	.LVL43:
 393 0006 0093     		str	r3, [sp]
 394 0008 0B46     		mov	r3, r1
 395              	.LVL44:
 396 000a 12B2     		sxth	r2, r2
 397 000c FFF7FEFF 		bl	hagl_draw_line
 398              	.LVL45:
 136:Drivers/hagl/src/hagl.c **** 
 399              		.loc 1 136 0
 400 0010 03B0     		add	sp, sp, #12
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 4
 403              		@ sp needed
 404 0012 5DF804FB 		ldr	pc, [sp], #4
 405              		.cfi_endproc
 406              	.LFE10:
 408              		.section	.text.hagl_draw_vline,"ax",%progbits
 409              		.align	1
 410              		.global	hagl_draw_vline
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv5-d16
 416              	hagl_draw_vline:
 417              	.LFB11:
 142:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_VLINE
 418              		.loc 1 142 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              	.LVL46:
 423 0000 00B5     		push	{lr}
 424              	.LCFI11:
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 14, -4
 427 0002 83B0     		sub	sp, sp, #12
 428              	.LCFI12:
 429              		.cfi_def_cfa_offset 16
 169:Drivers/hagl/src/hagl.c **** #endif
 430              		.loc 1 169 0
 431 0004 0A44     		add	r2, r2, r1
 432              	.LVL47:
 433 0006 0093     		str	r3, [sp]
 434 0008 13B2     		sxth	r3, r2
 435              	.LVL48:
 436 000a 0246     		mov	r2, r0
 437 000c FFF7FEFF 		bl	hagl_draw_line
 438              	.LVL49:
 171:Drivers/hagl/src/hagl.c **** 
 439              		.loc 1 171 0
 440 0010 03B0     		add	sp, sp, #12
 441              	.LCFI13:
ARM GAS  /tmp/ccrQATq6.s 			page 26


 442              		.cfi_def_cfa_offset 4
 443              		@ sp needed
 444 0012 5DF804FB 		ldr	pc, [sp], #4
 445              		.cfi_endproc
 446              	.LFE11:
 448              		.section	.text.hagl_draw_rectangle,"ax",%progbits
 449              		.align	1
 450              		.global	hagl_draw_rectangle
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv5-d16
 456              	hagl_draw_rectangle:
 457              	.LFB13:
 221:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 458              		.loc 1 221 0
 459              		.cfi_startproc
 460              		@ args = 4, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL50:
 463 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 464              	.LCFI14:
 465              		.cfi_def_cfa_offset 32
 466              		.cfi_offset 4, -32
 467              		.cfi_offset 5, -28
 468              		.cfi_offset 6, -24
 469              		.cfi_offset 7, -20
 470              		.cfi_offset 8, -16
 471              		.cfi_offset 9, -12
 472              		.cfi_offset 10, -8
 473              		.cfi_offset 14, -4
 474 0004 0446     		mov	r4, r0
 475 0006 0D46     		mov	r5, r1
 476 0008 1646     		mov	r6, r2
 477 000a 1F46     		mov	r7, r3
 478 000c 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
 223:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 479              		.loc 1 223 0
 480 0010 9042     		cmp	r0, r2
 481 0012 01DC     		bgt	.L43
 482 0014 0646     		mov	r6, r0
 483 0016 1446     		mov	r4, r2
 484              	.L43:
 485              	.LVL51:
 230:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 486              		.loc 1 230 0
 487 0018 BD42     		cmp	r5, r7
 488 001a 02DC     		bgt	.L44
 489 001c 3B46     		mov	r3, r7
 490              	.LVL52:
 491 001e 2F46     		mov	r7, r5
 492 0020 1D46     		mov	r5, r3
 493              	.L44:
 494              	.LVL53:
 237:Drivers/hagl/src/hagl.c ****         return;
 495              		.loc 1 237 0
 496 0022 1D4B     		ldr	r3, .L48
ARM GAS  /tmp/ccrQATq6.s 			page 27


 497 0024 1B88     		ldrh	r3, [r3]
 498 0026 9C42     		cmp	r4, r3
 499 0028 0BDB     		blt	.L42
 237:Drivers/hagl/src/hagl.c ****         return;
 500              		.loc 1 237 0 is_stmt 0 discriminator 1
 501 002a 1B4B     		ldr	r3, .L48
 502 002c 5B88     		ldrh	r3, [r3, #2]
 503 002e 9D42     		cmp	r5, r3
 504 0030 07DB     		blt	.L42
 242:Drivers/hagl/src/hagl.c ****         return;
 505              		.loc 1 242 0 is_stmt 1
 506 0032 194B     		ldr	r3, .L48
 507 0034 9B88     		ldrh	r3, [r3, #4]
 508 0036 9E42     		cmp	r6, r3
 509 0038 03DC     		bgt	.L42
 242:Drivers/hagl/src/hagl.c ****         return;
 510              		.loc 1 242 0 is_stmt 0 discriminator 1
 511 003a 174B     		ldr	r3, .L48
 512 003c DB88     		ldrh	r3, [r3, #6]
 513 003e 9F42     		cmp	r7, r3
 514 0040 01DD     		ble	.L47
 515              	.L42:
 253:Drivers/hagl/src/hagl.c **** 
 516              		.loc 1 253 0 is_stmt 1
 517 0042 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 518              	.LVL54:
 519              	.L47:
 246:Drivers/hagl/src/hagl.c ****     uint16_t height = y1 - y0 + 1;
 520              		.loc 1 246 0
 521 0046 A4EB060A 		sub	r10, r4, r6
 522 004a 1FFA8AFA 		uxth	r10, r10
 523 004e 0AF1010A 		add	r10, r10, #1
 524 0052 1FFA8AFA 		uxth	r10, r10
 525              	.LVL55:
 247:Drivers/hagl/src/hagl.c **** 
 526              		.loc 1 247 0
 527 0056 A5EB0709 		sub	r9, r5, r7
 528 005a 1FFA89F9 		uxth	r9, r9
 529 005e 09F10109 		add	r9, r9, #1
 530 0062 1FFA89F9 		uxth	r9, r9
 531              	.LVL56:
 249:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0, y1, width, color);
 532              		.loc 1 249 0
 533 0066 4346     		mov	r3, r8
 534 0068 5246     		mov	r2, r10
 535 006a 3946     		mov	r1, r7
 536 006c 3046     		mov	r0, r6
 537 006e FFF7FEFF 		bl	hagl_draw_hline
 538              	.LVL57:
 250:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x0, y0, height, color);
 539              		.loc 1 250 0
 540 0072 4346     		mov	r3, r8
 541 0074 5246     		mov	r2, r10
 542 0076 2946     		mov	r1, r5
 543 0078 3046     		mov	r0, r6
 544 007a FFF7FEFF 		bl	hagl_draw_hline
 545              	.LVL58:
ARM GAS  /tmp/ccrQATq6.s 			page 28


 251:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x1, y0, height, color);
 546              		.loc 1 251 0
 547 007e 4346     		mov	r3, r8
 548 0080 4A46     		mov	r2, r9
 549 0082 3946     		mov	r1, r7
 550 0084 3046     		mov	r0, r6
 551 0086 FFF7FEFF 		bl	hagl_draw_vline
 552              	.LVL59:
 252:Drivers/hagl/src/hagl.c **** }
 553              		.loc 1 252 0
 554 008a 4346     		mov	r3, r8
 555 008c 4A46     		mov	r2, r9
 556 008e 3946     		mov	r1, r7
 557 0090 2046     		mov	r0, r4
 558 0092 FFF7FEFF 		bl	hagl_draw_vline
 559              	.LVL60:
 560 0096 D4E7     		b	.L42
 561              	.L49:
 562              		.align	2
 563              	.L48:
 564 0098 00000000 		.word	.LANCHOR0
 565              		.cfi_endproc
 566              	.LFE13:
 568              		.section	.text.hagl_fill_rectangle,"ax",%progbits
 569              		.align	1
 570              		.global	hagl_fill_rectangle
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-d16
 576              	hagl_fill_rectangle:
 577              	.LFB14:
 259:Drivers/hagl/src/hagl.c ****     /* Make sure x0 is smaller than x1. */
 578              		.loc 1 259 0
 579              		.cfi_startproc
 580              		@ args = 4, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL61:
 583 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 584              	.LCFI15:
 585              		.cfi_def_cfa_offset 20
 586              		.cfi_offset 4, -20
 587              		.cfi_offset 5, -16
 588              		.cfi_offset 6, -12
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              	.LCFI16:
 593              		.cfi_def_cfa_offset 32
 261:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 594              		.loc 1 261 0
 595 0004 9042     		cmp	r0, r2
 596 0006 02DC     		bgt	.L51
 597 0008 1446     		mov	r4, r2
 598 000a 0246     		mov	r2, r0
 599              	.LVL62:
 600 000c 2046     		mov	r0, r4
ARM GAS  /tmp/ccrQATq6.s 			page 29


 601              	.LVL63:
 602              	.L51:
 268:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 603              		.loc 1 268 0
 604 000e 9942     		cmp	r1, r3
 605 0010 02DC     		bgt	.L52
 606 0012 1C46     		mov	r4, r3
 607 0014 0B46     		mov	r3, r1
 608              	.LVL64:
 609 0016 2146     		mov	r1, r4
 610              	.LVL65:
 611              	.L52:
 275:Drivers/hagl/src/hagl.c ****         return;
 612              		.loc 1 275 0
 613 0018 0646     		mov	r6, r0
 614 001a 164C     		ldr	r4, .L59
 615 001c 2488     		ldrh	r4, [r4]
 616 001e A042     		cmp	r0, r4
 617 0020 25DB     		blt	.L50
 275:Drivers/hagl/src/hagl.c ****         return;
 618              		.loc 1 275 0 is_stmt 0 discriminator 1
 619 0022 0F46     		mov	r7, r1
 620 0024 1348     		ldr	r0, .L59
 621              	.LVL66:
 622 0026 4588     		ldrh	r5, [r0, #2]
 623 0028 A942     		cmp	r1, r5
 624 002a 20DB     		blt	.L50
 280:Drivers/hagl/src/hagl.c ****         return;
 625              		.loc 1 280 0 is_stmt 1
 626 002c 1046     		mov	r0, r2
 627 002e 1149     		ldr	r1, .L59
 628              	.LVL67:
 629 0030 B1F804C0 		ldrh	ip, [r1, #4]
 630 0034 6245     		cmp	r2, ip
 631 0036 1ADC     		bgt	.L50
 280:Drivers/hagl/src/hagl.c ****         return;
 632              		.loc 1 280 0 is_stmt 0 discriminator 1
 633 0038 1946     		mov	r1, r3
 634 003a 0E4A     		ldr	r2, .L59
 635              	.LVL68:
 636 003c B2F806E0 		ldrh	lr, [r2, #6]
 637 0040 7345     		cmp	r3, lr
 638 0042 14DC     		bgt	.L50
 639              	.LVL69:
 640              	.LBB20:
 641              	.LBB21:
 642              		.file 2 "Drivers/hagl/include/rgb888.h"
   1:Drivers/hagl/include/rgb888.h **** /*
   2:Drivers/hagl/include/rgb888.h **** 
   3:Drivers/hagl/include/rgb888.h **** MIT License
   4:Drivers/hagl/include/rgb888.h **** 
   5:Drivers/hagl/include/rgb888.h **** Copyright (c) 2018-2020 Mika Tuupola
   6:Drivers/hagl/include/rgb888.h **** 
   7:Drivers/hagl/include/rgb888.h **** Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Drivers/hagl/include/rgb888.h **** of this software and associated documentation files (the "Software"), to deal
   9:Drivers/hagl/include/rgb888.h **** in the Software without restriction, including without limitation the rights
  10:Drivers/hagl/include/rgb888.h **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /tmp/ccrQATq6.s 			page 30


  11:Drivers/hagl/include/rgb888.h **** copies of the Software, and to permit persons to whom the Software is
  12:Drivers/hagl/include/rgb888.h **** furnished to do so, subject to the following conditions:
  13:Drivers/hagl/include/rgb888.h **** 
  14:Drivers/hagl/include/rgb888.h **** The above copyright notice and this permission notice shall be included in all
  15:Drivers/hagl/include/rgb888.h **** copies or substantial portions of the Software.
  16:Drivers/hagl/include/rgb888.h **** 
  17:Drivers/hagl/include/rgb888.h **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Drivers/hagl/include/rgb888.h **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Drivers/hagl/include/rgb888.h **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Drivers/hagl/include/rgb888.h **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Drivers/hagl/include/rgb888.h **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Drivers/hagl/include/rgb888.h **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:Drivers/hagl/include/rgb888.h **** SOFTWARE.
  24:Drivers/hagl/include/rgb888.h **** 
  25:Drivers/hagl/include/rgb888.h **** -cut-
  26:Drivers/hagl/include/rgb888.h **** 
  27:Drivers/hagl/include/rgb888.h **** This file is part of the HAGL graphics library:
  28:Drivers/hagl/include/rgb888.h **** https://github.com/tuupola/hagl
  29:Drivers/hagl/include/rgb888.h **** 
  30:Drivers/hagl/include/rgb888.h **** 
  31:Drivers/hagl/include/rgb888.h **** SPDX-License-Identifier: MIT
  32:Drivers/hagl/include/rgb888.h **** 
  33:Drivers/hagl/include/rgb888.h **** */
  34:Drivers/hagl/include/rgb888.h **** 
  35:Drivers/hagl/include/rgb888.h **** #ifndef _RGB888_H
  36:Drivers/hagl/include/rgb888.h **** #define _RGB888_H
  37:Drivers/hagl/include/rgb888.h **** 
  38:Drivers/hagl/include/rgb888.h **** typedef struct {
  39:Drivers/hagl/include/rgb888.h ****     uint8_t r;
  40:Drivers/hagl/include/rgb888.h ****     uint8_t g;
  41:Drivers/hagl/include/rgb888.h ****     uint8_t b;
  42:Drivers/hagl/include/rgb888.h **** } rgb_t;
  43:Drivers/hagl/include/rgb888.h **** 
  44:Drivers/hagl/include/rgb888.h **** #include "hsl.h"
  45:Drivers/hagl/include/rgb888.h **** 
  46:Drivers/hagl/include/rgb888.h **** hsl_t rgb888_to_hsl(rgb_t *rgb);
  47:Drivers/hagl/include/rgb888.h **** uint16_t rgb888_to_rgb565(rgb_t *input);
  48:Drivers/hagl/include/rgb888.h **** 
  49:Drivers/hagl/include/rgb888.h **** static inline int min(int a, int b) {
  50:Drivers/hagl/include/rgb888.h ****     if (a > b) {
  51:Drivers/hagl/include/rgb888.h ****         return b;
  52:Drivers/hagl/include/rgb888.h ****     };
  53:Drivers/hagl/include/rgb888.h ****     return a;
  54:Drivers/hagl/include/rgb888.h **** }
  55:Drivers/hagl/include/rgb888.h **** 
  56:Drivers/hagl/include/rgb888.h **** static inline int max(int a, int b) {
  57:Drivers/hagl/include/rgb888.h ****     if (a > b) {
 643              		.loc 2 57 0 is_stmt 1
 644 0044 8442     		cmp	r4, r0
 645 0046 00DA     		bge	.L54
  58:Drivers/hagl/include/rgb888.h ****         return a;
 646              		.loc 2 58 0
 647 0048 0446     		mov	r4, r0
 648              	.LVL70:
 649              	.L54:
 650              	.LBE21:
 651              	.LBE20:
ARM GAS  /tmp/ccrQATq6.s 			page 31


 284:Drivers/hagl/src/hagl.c ****     y0 = max(y0, clip_window.y0);
 652              		.loc 1 284 0
 653 004a 20B2     		sxth	r0, r4
 654              	.LVL71:
 655              	.LBB22:
 656              	.LBB23:
  57:Drivers/hagl/include/rgb888.h ****         return a;
 657              		.loc 2 57 0
 658 004c 8D42     		cmp	r5, r1
 659 004e 00DA     		bge	.L55
 660              		.loc 2 58 0
 661 0050 0D46     		mov	r5, r1
 662              	.LVL72:
 663              	.L55:
 664              	.LBE23:
 665              	.LBE22:
 285:Drivers/hagl/src/hagl.c ****     x1 = min(x1, clip_window.x1);
 666              		.loc 1 285 0
 667 0052 29B2     		sxth	r1, r5
 668              	.LVL73:
 669              	.LBB24:
 670              	.LBB25:
  50:Drivers/hagl/include/rgb888.h ****         return b;
 671              		.loc 2 50 0
 672 0054 6645     		cmp	r6, ip
 673 0056 00DD     		ble	.L56
  51:Drivers/hagl/include/rgb888.h ****     };
 674              		.loc 2 51 0
 675 0058 6646     		mov	r6, ip
 676              	.LVL74:
 677              	.L56:
 678              	.LBE25:
 679              	.LBE24:
 286:Drivers/hagl/src/hagl.c ****     y1 = min(y1, clip_window.y1);
 680              		.loc 1 286 0
 681 005a 32B2     		sxth	r2, r6
 682              	.LVL75:
 683              	.LBB26:
 684              	.LBB27:
  50:Drivers/hagl/include/rgb888.h ****         return b;
 685              		.loc 2 50 0
 686 005c 7745     		cmp	r7, lr
 687 005e 00DD     		ble	.L57
  51:Drivers/hagl/include/rgb888.h ****     };
 688              		.loc 2 51 0
 689 0060 7746     		mov	r7, lr
 690              	.LVL76:
 691              	.L57:
 692              	.LBE27:
 693              	.LBE26:
 290:Drivers/hagl/src/hagl.c ****     #else
 694              		.loc 1 290 0
 695 0062 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 696 0066 0093     		str	r3, [sp]
 697 0068 3BB2     		sxth	r3, r7
 698 006a FFF7FEFF 		bl	hagl_hal_fill_rectangle
 699              	.LVL77:
ARM GAS  /tmp/ccrQATq6.s 			page 32


 700              	.L50:
 305:Drivers/hagl/src/hagl.c **** 
 701              		.loc 1 305 0
 702 006e 03B0     		add	sp, sp, #12
 703              	.LCFI17:
 704              		.cfi_def_cfa_offset 20
 705              		@ sp needed
 706 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 707              	.LVL78:
 708              	.L60:
 709 0072 00BF     		.align	2
 710              	.L59:
 711 0074 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE14:
 715              		.section	.text.hagl_get_glyph,"ax",%progbits
 716              		.align	1
 717              		.global	hagl_get_glyph
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv5-d16
 723              	hagl_get_glyph:
 724              	.LFB15:
 308:Drivers/hagl/src/hagl.c ****     uint8_t status, set;
 725              		.loc 1 308 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL79:
 730 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 731              	.LCFI18:
 732              		.cfi_def_cfa_offset 20
 733              		.cfi_offset 4, -20
 734              		.cfi_offset 5, -16
 735              		.cfi_offset 6, -12
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 83B0     		sub	sp, sp, #12
 739              	.LCFI19:
 740              		.cfi_def_cfa_offset 32
 741 0004 0C46     		mov	r4, r1
 742 0006 1546     		mov	r5, r2
 312:Drivers/hagl/src/hagl.c **** 
 743              		.loc 1 312 0
 744 0008 1A46     		mov	r2, r3
 745              	.LVL80:
 746 000a 0146     		mov	r1, r0
 747              	.LVL81:
 748 000c 6846     		mov	r0, sp
 749              	.LVL82:
 750 000e FFF7FEFF 		bl	fontx_glyph
 751              	.LVL83:
 314:Drivers/hagl/src/hagl.c ****         return status;
 752              		.loc 1 314 0
 753 0012 0646     		mov	r6, r0
 754 0014 90BB     		cbnz	r0, .L62
ARM GAS  /tmp/ccrQATq6.s 			page 33


 319:Drivers/hagl/src/hagl.c ****     bitmap->width = glyph.width,
 755              		.loc 1 319 0
 756 0016 0823     		movs	r3, #8
 757 0018 AB71     		strb	r3, [r5, #6]
 320:Drivers/hagl/src/hagl.c ****     bitmap->height = glyph.height,
 758              		.loc 1 320 0
 759 001a 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 760 001e 2A80     		strh	r2, [r5]	@ movhi
 321:Drivers/hagl/src/hagl.c ****     bitmap->pitch = bitmap->width * (bitmap->depth / 8);
 761              		.loc 1 321 0
 762 0020 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 763 0024 6B80     		strh	r3, [r5, #2]	@ movhi
 322:Drivers/hagl/src/hagl.c ****     bitmap->size = bitmap->pitch * bitmap->height;
 764              		.loc 1 322 0
 765 0026 AA80     		strh	r2, [r5, #4]	@ movhi
 323:Drivers/hagl/src/hagl.c **** 
 766              		.loc 1 323 0
 767 0028 03FB02F3 		mul	r3, r3, r2
 768 002c AB60     		str	r3, [r5, #8]
 325:Drivers/hagl/src/hagl.c **** 
 769              		.loc 1 325 0
 770 002e E868     		ldr	r0, [r5, #12]
 771              	.LVL84:
 772              	.LBB28:
 327:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 773              		.loc 1 327 0
 774 0030 3746     		mov	r7, r6
 775 0032 1DE0     		b	.L63
 776              	.LVL85:
 777              	.L64:
 778              	.LBB29:
 333:Drivers/hagl/src/hagl.c ****             }
 779              		.loc 1 333 0
 780 0034 0022     		movs	r2, #0
 781              	.LVL86:
 782 0036 0270     		strb	r2, [r0]
 783              	.LVL87:
 784 0038 0130     		adds	r0, r0, #1
 785              	.LVL88:
 786              	.L65:
 328:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 787              		.loc 1 328 0 discriminator 2
 788 003a 0133     		adds	r3, r3, #1
 789              	.LVL89:
 790 003c DBB2     		uxtb	r3, r3
 791              	.LVL90:
 792              	.L67:
 328:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 793              		.loc 1 328 0 is_stmt 0 discriminator 1
 794 003e 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 795 0042 9A42     		cmp	r2, r3
 796 0044 0DD9     		bls	.L70
 329:Drivers/hagl/src/hagl.c ****             if (set) {
 797              		.loc 1 329 0 is_stmt 1
 798 0046 019A     		ldr	r2, [sp, #4]
 799 0048 92F90020 		ldrsb	r2, [r2]
 800 004c 03F00705 		and	r5, r3, #7
ARM GAS  /tmp/ccrQATq6.s 			page 34


 801 0050 8021     		movs	r1, #128
 802 0052 2941     		asrs	r1, r1, r5
 803 0054 0A40     		ands	r2, r2, r1
 804 0056 52B2     		sxtb	r2, r2
 805              	.LVL91:
 330:Drivers/hagl/src/hagl.c ****                 *(ptr++) = color;
 806              		.loc 1 330 0
 807 0058 002A     		cmp	r2, #0
 808 005a EBD0     		beq	.L64
 809              	.LVL92:
 331:Drivers/hagl/src/hagl.c ****             } else {
 810              		.loc 1 331 0
 811 005c 0470     		strb	r4, [r0]
 812 005e 0130     		adds	r0, r0, #1
 813              	.LVL93:
 814 0060 EBE7     		b	.L65
 815              	.LVL94:
 816              	.L70:
 817              	.LBE29:
 336:Drivers/hagl/src/hagl.c ****     }
 818              		.loc 1 336 0 discriminator 2
 819 0062 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 820 0066 019B     		ldr	r3, [sp, #4]
 821              	.LVL95:
 822 0068 1344     		add	r3, r3, r2
 823 006a 0193     		str	r3, [sp, #4]
 327:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 824              		.loc 1 327 0 discriminator 2
 825 006c 0137     		adds	r7, r7, #1
 826              	.LVL96:
 827 006e FFB2     		uxtb	r7, r7
 828              	.LVL97:
 829              	.L63:
 327:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 830              		.loc 1 327 0 is_stmt 0 discriminator 1
 831 0070 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 832 0074 BB42     		cmp	r3, r7
 833 0076 01D9     		bls	.L62
 834              	.LBB30:
 328:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 835              		.loc 1 328 0 is_stmt 1
 836 0078 3346     		mov	r3, r6
 837 007a E0E7     		b	.L67
 838              	.LVL98:
 839              	.L62:
 840              	.LBE30:
 841              	.LBE28:
 340:Drivers/hagl/src/hagl.c **** 
 842              		.loc 1 340 0
 843 007c 3046     		mov	r0, r6
 844 007e 03B0     		add	sp, sp, #12
 845              	.LCFI20:
 846              		.cfi_def_cfa_offset 20
 847              		@ sp needed
 848 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 849              		.cfi_endproc
 850              	.LFE15:
ARM GAS  /tmp/ccrQATq6.s 			page 35


 852              		.section	.text.hagl_blit,"ax",%progbits
 853              		.align	1
 854              		.global	hagl_blit
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-d16
 860              	hagl_blit:
 861              	.LFB18:
 418:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_BLIT
 862              		.loc 1 418 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL99:
 867 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 868              	.LCFI21:
 869              		.cfi_def_cfa_offset 32
 870              		.cfi_offset 3, -32
 871              		.cfi_offset 4, -28
 872              		.cfi_offset 5, -24
 873              		.cfi_offset 6, -20
 874              		.cfi_offset 7, -16
 875              		.cfi_offset 8, -12
 876              		.cfi_offset 9, -8
 877              		.cfi_offset 14, -4
 878 0004 8046     		mov	r8, r0
 879 0006 8946     		mov	r9, r1
 880 0008 1746     		mov	r7, r2
 422:Drivers/hagl/src/hagl.c ****         (y0 < clip_window.y0) ||
 881              		.loc 1 422 0
 882 000a 194B     		ldr	r3, .L80
 883 000c 1B88     		ldrh	r3, [r3]
 421:Drivers/hagl/src/hagl.c ****         (x0 < clip_window.x0) ||
 884              		.loc 1 421 0
 885 000e 9842     		cmp	r0, r3
 886 0010 0FDB     		blt	.L72
 423:Drivers/hagl/src/hagl.c ****         (x0 + source->width > clip_window.x1) ||
 887              		.loc 1 423 0
 888 0012 174B     		ldr	r3, .L80
 889 0014 5B88     		ldrh	r3, [r3, #2]
 422:Drivers/hagl/src/hagl.c ****         (y0 < clip_window.y0) ||
 890              		.loc 1 422 0
 891 0016 9942     		cmp	r1, r3
 892 0018 0BDB     		blt	.L72
 424:Drivers/hagl/src/hagl.c ****         (y0 + source->height > clip_window.y1)
 893              		.loc 1 424 0
 894 001a 1388     		ldrh	r3, [r2]
 895 001c 0344     		add	r3, r3, r0
 896 001e 144A     		ldr	r2, .L80
 897              	.LVL100:
 898 0020 9288     		ldrh	r2, [r2, #4]
 423:Drivers/hagl/src/hagl.c ****         (x0 + source->width > clip_window.x1) ||
 899              		.loc 1 423 0
 900 0022 9342     		cmp	r3, r2
 901 0024 05DC     		bgt	.L72
 425:Drivers/hagl/src/hagl.c ****     ) {
ARM GAS  /tmp/ccrQATq6.s 			page 36


 902              		.loc 1 425 0
 903 0026 7B88     		ldrh	r3, [r7, #2]
 904 0028 0B44     		add	r3, r3, r1
 905 002a 114A     		ldr	r2, .L80
 906 002c D288     		ldrh	r2, [r2, #6]
 424:Drivers/hagl/src/hagl.c ****         (y0 + source->height > clip_window.y1)
 907              		.loc 1 424 0
 908 002e 9342     		cmp	r3, r2
 909 0030 19DD     		ble	.L73
 910              	.L72:
 911              	.LBB31:
 429:Drivers/hagl/src/hagl.c **** 
 912              		.loc 1 429 0
 913 0032 FB68     		ldr	r3, [r7, #12]
 914              	.LVL101:
 915              	.LBB32:
 431:Drivers/hagl/src/hagl.c ****             for (uint16_t x = 0; x < source->width; x++) {
 916              		.loc 1 431 0
 917 0034 0026     		movs	r6, #0
 918 0036 11E0     		b	.L74
 919              	.LVL102:
 920              	.L75:
 921              	.LBB33:
 433:Drivers/hagl/src/hagl.c ****                 hagl_put_pixel(x0 + x, y0 + y, color);
 922              		.loc 1 433 0 discriminator 3
 923 0038 5D1C     		adds	r5, r3, #1
 924              	.LVL103:
 434:Drivers/hagl/src/hagl.c ****             }
 925              		.loc 1 434 0 discriminator 3
 926 003a 04EB0800 		add	r0, r4, r8
 927 003e 06EB0901 		add	r1, r6, r9
 928 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 929 0044 09B2     		sxth	r1, r1
 930 0046 00B2     		sxth	r0, r0
 931 0048 FFF7FEFF 		bl	hagl_put_pixel
 932              	.LVL104:
 432:Drivers/hagl/src/hagl.c ****                 color = *(ptr++);
 933              		.loc 1 432 0 discriminator 3
 934 004c 0134     		adds	r4, r4, #1
 935              	.LVL105:
 936 004e A4B2     		uxth	r4, r4
 937              	.LVL106:
 433:Drivers/hagl/src/hagl.c ****                 hagl_put_pixel(x0 + x, y0 + y, color);
 938              		.loc 1 433 0 discriminator 3
 939 0050 2B46     		mov	r3, r5
 940              	.LVL107:
 941              	.L76:
 432:Drivers/hagl/src/hagl.c ****                 color = *(ptr++);
 942              		.loc 1 432 0 discriminator 1
 943 0052 3A88     		ldrh	r2, [r7]
 944 0054 A242     		cmp	r2, r4
 945 0056 EFD8     		bhi	.L75
 946              	.LBE33:
 431:Drivers/hagl/src/hagl.c ****             for (uint16_t x = 0; x < source->width; x++) {
 947              		.loc 1 431 0 discriminator 2
 948 0058 0136     		adds	r6, r6, #1
 949              	.LVL108:
ARM GAS  /tmp/ccrQATq6.s 			page 37


 950 005a B6B2     		uxth	r6, r6
 951              	.LVL109:
 952              	.L74:
 431:Drivers/hagl/src/hagl.c ****             for (uint16_t x = 0; x < source->width; x++) {
 953              		.loc 1 431 0 is_stmt 0 discriminator 1
 954 005c 7A88     		ldrh	r2, [r7, #2]
 955 005e B242     		cmp	r2, r6
 956 0060 04D9     		bls	.L71
 957              	.LBB34:
 432:Drivers/hagl/src/hagl.c ****                 color = *(ptr++);
 958              		.loc 1 432 0 is_stmt 1
 959 0062 0024     		movs	r4, #0
 960 0064 F5E7     		b	.L76
 961              	.LVL110:
 962              	.L73:
 963              	.LBE34:
 964              	.LBE32:
 965              	.LBE31:
 439:Drivers/hagl/src/hagl.c ****     }
 966              		.loc 1 439 0
 967 0066 3A46     		mov	r2, r7
 968 0068 FFF7FEFF 		bl	hagl_hal_blit
 969              	.LVL111:
 970              	.L71:
 452:Drivers/hagl/src/hagl.c **** 
 971              		.loc 1 452 0
 972 006c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 973              	.LVL112:
 974              	.L81:
 975              		.align	2
 976              	.L80:
 977 0070 00000000 		.word	.LANCHOR0
 978              		.cfi_endproc
 979              	.LFE18:
 981              		.section	.text.hagl_put_char,"ax",%progbits
 982              		.align	1
 983              		.global	hagl_put_char
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv5-d16
 989              	hagl_put_char:
 990              	.LFB16:
 343:Drivers/hagl/src/hagl.c ****     uint8_t set, status;
 991              		.loc 1 343 0
 992              		.cfi_startproc
 993              		@ args = 4, pretend = 0, frame = 280
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL113:
 996 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 997              	.LCFI22:
 998              		.cfi_def_cfa_offset 20
 999              		.cfi_offset 4, -20
 1000              		.cfi_offset 5, -16
 1001              		.cfi_offset 6, -12
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
ARM GAS  /tmp/ccrQATq6.s 			page 38


 1004 0002 C7B0     		sub	sp, sp, #284
 1005              	.LCFI23:
 1006              		.cfi_def_cfa_offset 304
 1007 0004 0E46     		mov	r6, r1
 1008 0006 1746     		mov	r7, r2
 1009 0008 1C46     		mov	r4, r3
 349:Drivers/hagl/src/hagl.c **** 
 1010              		.loc 1 349 0
 1011 000a 4C9A     		ldr	r2, [sp, #304]
 1012              	.LVL114:
 1013 000c 0146     		mov	r1, r0
 1014              	.LVL115:
 1015 000e 6846     		mov	r0, sp
 1016              	.LVL116:
 1017 0010 FFF7FEFF 		bl	fontx_glyph
 1018              	.LVL117:
 351:Drivers/hagl/src/hagl.c ****         return 0;
 1019              		.loc 1 351 0
 1020 0014 10B1     		cbz	r0, .L92
 352:Drivers/hagl/src/hagl.c ****     }
 1021              		.loc 1 352 0
 1022 0016 0020     		movs	r0, #0
 1023              	.LVL118:
 1024              	.L83:
 378:Drivers/hagl/src/hagl.c **** 
 1025              		.loc 1 378 0
 1026 0018 47B0     		add	sp, sp, #284
 1027              	.LCFI24:
 1028              		.cfi_remember_state
 1029              		.cfi_def_cfa_offset 20
 1030              		@ sp needed
 1031 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 1032              	.LVL119:
 1033              	.L92:
 1034              	.LCFI25:
 1035              		.cfi_restore_state
 1036 001c 0546     		mov	r5, r0
 355:Drivers/hagl/src/hagl.c ****     bitmap.height = glyph.height,
 1037              		.loc 1 355 0
 1038 001e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 1039 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 356:Drivers/hagl/src/hagl.c ****     bitmap.depth = DISPLAY_DEPTH,
 1040              		.loc 1 356 0
 1041 0026 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1042 002a ADF80A30 		strh	r3, [sp, #10]	@ movhi
 357:Drivers/hagl/src/hagl.c **** 
 1043              		.loc 1 357 0
 1044 002e 0823     		movs	r3, #8
 1045 0030 8DF80E30 		strb	r3, [sp, #14]
 359:Drivers/hagl/src/hagl.c **** 
 1046              		.loc 1 359 0
 1047 0034 06A9     		add	r1, sp, #24
 1048 0036 0DEB0300 		add	r0, sp, r3
 1049              	.LVL120:
 1050 003a FFF7FEFF 		bl	bitmap_init
 1051              	.LVL121:
 361:Drivers/hagl/src/hagl.c **** 
ARM GAS  /tmp/ccrQATq6.s 			page 39


 1052              		.loc 1 361 0
 1053 003e 0598     		ldr	r0, [sp, #20]
 1054              	.LVL122:
 1055              	.LBB35:
 363:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 1056              		.loc 1 363 0
 1057 0040 AC46     		mov	ip, r5
 1058 0042 20E0     		b	.L84
 1059              	.LVL123:
 1060              	.L85:
 1061              	.LBB36:
 369:Drivers/hagl/src/hagl.c ****             }
 1062              		.loc 1 369 0
 1063 0044 0022     		movs	r2, #0
 1064              	.LVL124:
 1065 0046 0270     		strb	r2, [r0]
 1066              	.LVL125:
 1067 0048 0130     		adds	r0, r0, #1
 1068              	.LVL126:
 1069              	.L86:
 364:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 1070              		.loc 1 364 0 discriminator 2
 1071 004a 0133     		adds	r3, r3, #1
 1072              	.LVL127:
 1073 004c DBB2     		uxtb	r3, r3
 1074              	.LVL128:
 1075              	.L88:
 364:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 1076              		.loc 1 364 0 is_stmt 0 discriminator 1
 1077 004e 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 1078 0052 9A42     		cmp	r2, r3
 1079 0054 0ED9     		bls	.L93
 365:Drivers/hagl/src/hagl.c ****             if (set) {
 1080              		.loc 1 365 0 is_stmt 1
 1081 0056 019A     		ldr	r2, [sp, #4]
 1082 0058 92F90020 		ldrsb	r2, [r2]
 1083 005c 03F0070E 		and	lr, r3, #7
 1084 0060 8021     		movs	r1, #128
 1085 0062 41FA0EF1 		asr	r1, r1, lr
 1086 0066 0A40     		ands	r2, r2, r1
 1087 0068 52B2     		sxtb	r2, r2
 1088              	.LVL129:
 366:Drivers/hagl/src/hagl.c ****                 *(ptr++) = color;
 1089              		.loc 1 366 0
 1090 006a 002A     		cmp	r2, #0
 1091 006c EAD0     		beq	.L85
 1092              	.LVL130:
 367:Drivers/hagl/src/hagl.c ****             } else {
 1093              		.loc 1 367 0
 1094 006e 0470     		strb	r4, [r0]
 1095 0070 0130     		adds	r0, r0, #1
 1096              	.LVL131:
 1097 0072 EAE7     		b	.L86
 1098              	.LVL132:
 1099              	.L93:
 1100              	.LBE36:
 372:Drivers/hagl/src/hagl.c ****     }
ARM GAS  /tmp/ccrQATq6.s 			page 40


 1101              		.loc 1 372 0 discriminator 2
 1102 0074 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 1103 0078 019B     		ldr	r3, [sp, #4]
 1104              	.LVL133:
 1105 007a 1344     		add	r3, r3, r2
 1106 007c 0193     		str	r3, [sp, #4]
 363:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 1107              		.loc 1 363 0 discriminator 2
 1108 007e 0CF1010C 		add	ip, ip, #1
 1109              	.LVL134:
 1110 0082 5FFA8CFC 		uxtb	ip, ip
 1111              	.LVL135:
 1112              	.L84:
 363:Drivers/hagl/src/hagl.c ****         for (uint8_t x = 0; x < glyph.width; x++) {
 1113              		.loc 1 363 0 is_stmt 0 discriminator 1
 1114 0086 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1115 008a 6345     		cmp	r3, ip
 1116 008c 01D9     		bls	.L94
 1117              	.LBB37:
 364:Drivers/hagl/src/hagl.c ****             set = *(glyph.buffer) & (0x80 >> (x % 8));
 1118              		.loc 1 364 0 is_stmt 1
 1119 008e 2B46     		mov	r3, r5
 1120 0090 DDE7     		b	.L88
 1121              	.L94:
 1122              	.LBE37:
 1123              	.LBE35:
 375:Drivers/hagl/src/hagl.c **** 
 1124              		.loc 1 375 0
 1125 0092 02AA     		add	r2, sp, #8
 1126 0094 3946     		mov	r1, r7
 1127 0096 3046     		mov	r0, r6
 1128              	.LVL136:
 1129 0098 FFF7FEFF 		bl	hagl_blit
 1130              	.LVL137:
 377:Drivers/hagl/src/hagl.c **** }
 1131              		.loc 1 377 0
 1132 009c 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 1133 00a0 BAE7     		b	.L83
 1134              		.cfi_endproc
 1135              	.LFE16:
 1137              		.section	.text.hagl_put_text,"ax",%progbits
 1138              		.align	1
 1139              		.global	hagl_put_text
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv5-d16
 1145              	hagl_put_text:
 1146              	.LFB17:
 386:Drivers/hagl/src/hagl.c ****     wchar_t temp;
 1147              		.loc 1 386 0
 1148              		.cfi_startproc
 1149              		@ args = 4, pretend = 0, frame = 16
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              	.LVL138:
 1152 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1153              	.LCFI26:
ARM GAS  /tmp/ccrQATq6.s 			page 41


 1154              		.cfi_def_cfa_offset 32
 1155              		.cfi_offset 4, -32
 1156              		.cfi_offset 5, -28
 1157              		.cfi_offset 6, -24
 1158              		.cfi_offset 7, -20
 1159              		.cfi_offset 8, -16
 1160              		.cfi_offset 9, -12
 1161              		.cfi_offset 10, -8
 1162              		.cfi_offset 14, -4
 1163 0004 86B0     		sub	sp, sp, #24
 1164              	.LCFI27:
 1165              		.cfi_def_cfa_offset 56
 1166 0006 0446     		mov	r4, r0
 1167 0008 0D46     		mov	r5, r1
 1168 000a 9246     		mov	r10, r2
 1169 000c 9846     		mov	r8, r3
 1170 000e 0E9E     		ldr	r6, [sp, #56]
 389:Drivers/hagl/src/hagl.c ****     fontx_meta_t meta;
 1171              		.loc 1 389 0
 1172 0010 1FFA81F9 		uxth	r9, r1
 1173              	.LVL139:
 392:Drivers/hagl/src/hagl.c ****     if (0 != status) {
 1174              		.loc 1 392 0
 1175 0014 3146     		mov	r1, r6
 1176              	.LVL140:
 1177 0016 03A8     		add	r0, sp, #12
 1178              	.LVL141:
 1179 0018 FFF7FEFF 		bl	fontx_meta
 1180              	.LVL142:
 393:Drivers/hagl/src/hagl.c ****         return 0;
 1181              		.loc 1 393 0
 1182 001c 68B1     		cbz	r0, .L99
 394:Drivers/hagl/src/hagl.c ****     }
 1183              		.loc 1 394 0
 1184 001e 0020     		movs	r0, #0
 1185              	.LVL143:
 1186 0020 1BE0     		b	.L96
 1187              	.LVL144:
 1188              	.L97:
 403:Drivers/hagl/src/hagl.c ****         }
 1189              		.loc 1 403 0
 1190 0022 0096     		str	r6, [sp]
 1191 0024 4346     		mov	r3, r8
 1192 0026 5246     		mov	r2, r10
 1193 0028 2946     		mov	r1, r5
 1194 002a FFF7FEFF 		bl	hagl_put_char
 1195              	.LVL145:
 1196 002e 15FA80F5 		uxtah	r5, r5, r0
 1197              	.LVL146:
 1198 0032 2DB2     		sxth	r5, r5
 1199              	.LVL147:
 1200              	.L98:
 405:Drivers/hagl/src/hagl.c **** 
 1201              		.loc 1 405 0
 1202 0034 6368     		ldr	r3, [r4, #4]
 398:Drivers/hagl/src/hagl.c ****         if (13 == temp || 10 == temp) {
 1203              		.loc 1 398 0
ARM GAS  /tmp/ccrQATq6.s 			page 42


 1204 0036 3C46     		mov	r4, r7
 405:Drivers/hagl/src/hagl.c **** 
 1205              		.loc 1 405 0
 1206 0038 63B1     		cbz	r3, .L102
 1207              	.LVL148:
 1208              	.L99:
 398:Drivers/hagl/src/hagl.c ****         if (13 == temp || 10 == temp) {
 1209              		.loc 1 398 0
 1210 003a 271D     		adds	r7, r4, #4
 1211              	.LVL149:
 1212 003c 2068     		ldr	r0, [r4]
 1213              	.LVL150:
 399:Drivers/hagl/src/hagl.c ****             x0 = 0;
 1214              		.loc 1 399 0
 1215 003e 0A28     		cmp	r0, #10
 1216 0040 18BF     		it	ne
 1217 0042 0D28     		cmpne	r0, #13
 1218 0044 EDD1     		bne	.L97
 1219              	.LVL151:
 401:Drivers/hagl/src/hagl.c ****         } else {
 1220              		.loc 1 401 0
 1221 0046 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
 1222 004a 5244     		add	r2, r2, r10
 1223 004c 0FFA82FA 		sxth	r10, r2
 1224              	.LVL152:
 400:Drivers/hagl/src/hagl.c ****             y0 += meta.height;
 1225              		.loc 1 400 0
 1226 0050 0025     		movs	r5, #0
 1227 0052 EFE7     		b	.L98
 1228              	.LVL153:
 1229              	.L102:
 407:Drivers/hagl/src/hagl.c **** }
 1230              		.loc 1 407 0
 1231 0054 A5EB0900 		sub	r0, r5, r9
 1232 0058 80B2     		uxth	r0, r0
 1233              	.LVL154:
 1234              	.L96:
 408:Drivers/hagl/src/hagl.c **** 
 1235              		.loc 1 408 0
 1236 005a 06B0     		add	sp, sp, #24
 1237              	.LCFI28:
 1238              		.cfi_def_cfa_offset 32
 1239              		@ sp needed
 1240 005c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1241              		.cfi_endproc
 1242              	.LFE17:
 1244              		.section	.text.tjpgd_data_writer,"ax",%progbits
 1245              		.align	1
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv5-d16
 1251              	tjpgd_data_writer:
 1252              	.LFB33:
 952:Drivers/hagl/src/hagl.c **** 
 953:Drivers/hagl/src/hagl.c **** static uint16_t tjpgd_data_writer(JDEC* decoder, void* bitmap, JRECT* rectangle)
 954:Drivers/hagl/src/hagl.c **** {
ARM GAS  /tmp/ccrQATq6.s 			page 43


 1253              		.loc 1 954 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 16
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              	.LVL155:
 1258 0000 70B5     		push	{r4, r5, r6, lr}
 1259              	.LCFI29:
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 4, -16
 1262              		.cfi_offset 5, -12
 1263              		.cfi_offset 6, -8
 1264              		.cfi_offset 14, -4
 1265 0002 84B0     		sub	sp, sp, #16
 1266              	.LCFI30:
 1267              		.cfi_def_cfa_offset 32
 955:Drivers/hagl/src/hagl.c ****     tjpgd_iodev_t *device = (tjpgd_iodev_t *)decoder->device;
 1268              		.loc 1 955 0
 1269 0004 456F     		ldr	r5, [r0, #116]
 1270              	.LVL156:
 956:Drivers/hagl/src/hagl.c ****     uint8_t width = (rectangle->right - rectangle->left) + 1;
 1271              		.loc 1 956 0
 1272 0006 5388     		ldrh	r3, [r2, #2]
 1273 0008 1088     		ldrh	r0, [r2]
 1274              	.LVL157:
 1275 000a 1B1A     		subs	r3, r3, r0
 1276 000c DBB2     		uxtb	r3, r3
 1277 000e 0133     		adds	r3, r3, #1
 1278 0010 DBB2     		uxtb	r3, r3
 1279              	.LVL158:
 957:Drivers/hagl/src/hagl.c ****     uint8_t height = (rectangle->bottom - rectangle->top) + 1;
 1280              		.loc 1 957 0
 1281 0012 D488     		ldrh	r4, [r2, #6]
 1282 0014 9688     		ldrh	r6, [r2, #4]
 1283 0016 A21B     		subs	r2, r4, r6
 1284              	.LVL159:
 1285 0018 D2B2     		uxtb	r2, r2
 1286 001a 0132     		adds	r2, r2, #1
 1287 001c D2B2     		uxtb	r2, r2
 1288              	.LVL160:
 958:Drivers/hagl/src/hagl.c **** 
 959:Drivers/hagl/src/hagl.c ****     bitmap_t block = {
 1289              		.loc 1 959 0
 1290 001e 9CB2     		uxth	r4, r3
 1291 0020 ADF80040 		strh	r4, [sp]	@ movhi
 1292 0024 ADF80220 		strh	r2, [sp, #2]	@ movhi
 1293 0028 ADF80440 		strh	r4, [sp, #4]	@ movhi
 1294 002c 0824     		movs	r4, #8
 1295 002e 8DF80640 		strb	r4, [sp, #6]
 960:Drivers/hagl/src/hagl.c ****         .width = width,
 961:Drivers/hagl/src/hagl.c ****         .height = height,
 962:Drivers/hagl/src/hagl.c ****         .depth = DISPLAY_DEPTH,
 963:Drivers/hagl/src/hagl.c ****         .pitch = width * (DISPLAY_DEPTH / 8),
 964:Drivers/hagl/src/hagl.c ****         .size =  width * (DISPLAY_DEPTH / 8) * height,
 1296              		.loc 1 964 0
 1297 0032 03FB02F3 		mul	r3, r3, r2
 1298              	.LVL161:
 959:Drivers/hagl/src/hagl.c ****         .width = width,
ARM GAS  /tmp/ccrQATq6.s 			page 44


 1299              		.loc 1 959 0
 1300 0036 0293     		str	r3, [sp, #8]
 1301 0038 0391     		str	r1, [sp, #12]
 965:Drivers/hagl/src/hagl.c ****         .buffer = (uint8_t *)bitmap
 966:Drivers/hagl/src/hagl.c ****     };
 967:Drivers/hagl/src/hagl.c **** 
 968:Drivers/hagl/src/hagl.c ****     hagl_blit(rectangle->left + device->x0, rectangle->top + device->y0, &block);
 1302              		.loc 1 968 0
 1303 003a AB88     		ldrh	r3, [r5, #4]
 1304 003c 1844     		add	r0, r0, r3
 1305 003e E988     		ldrh	r1, [r5, #6]
 1306              	.LVL162:
 1307 0040 3144     		add	r1, r1, r6
 1308 0042 6A46     		mov	r2, sp
 1309              	.LVL163:
 1310 0044 09B2     		sxth	r1, r1
 1311 0046 00B2     		sxth	r0, r0
 1312 0048 FFF7FEFF 		bl	hagl_blit
 1313              	.LVL164:
 969:Drivers/hagl/src/hagl.c **** 
 970:Drivers/hagl/src/hagl.c ****     return 1;
 971:Drivers/hagl/src/hagl.c **** }
 1314              		.loc 1 971 0
 1315 004c 0120     		movs	r0, #1
 1316 004e 04B0     		add	sp, sp, #16
 1317              	.LCFI31:
 1318              		.cfi_def_cfa_offset 16
 1319              		@ sp needed
 1320 0050 70BD     		pop	{r4, r5, r6, pc}
 1321              		.cfi_endproc
 1322              	.LFE33:
 1324              		.section	.text.hagl_scale_blit,"ax",%progbits
 1325              		.align	1
 1326              		.global	hagl_scale_blit
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv5-d16
 1332              	hagl_scale_blit:
 1333              	.LFB19:
 454:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_SCALE_BLIT
 1334              		.loc 1 454 0
 1335              		.cfi_startproc
 1336              		@ args = 4, pretend = 0, frame = 8
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              	.LVL165:
 1339 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1340              	.LCFI32:
 1341              		.cfi_def_cfa_offset 36
 1342              		.cfi_offset 4, -36
 1343              		.cfi_offset 5, -32
 1344              		.cfi_offset 6, -28
 1345              		.cfi_offset 7, -24
 1346              		.cfi_offset 8, -20
 1347              		.cfi_offset 9, -16
 1348              		.cfi_offset 10, -12
 1349              		.cfi_offset 11, -8
ARM GAS  /tmp/ccrQATq6.s 			page 45


 1350              		.cfi_offset 14, -4
 1351 0004 83B0     		sub	sp, sp, #12
 1352              	.LCFI33:
 1353              		.cfi_def_cfa_offset 48
 1354 0006 8346     		mov	fp, r0
 1355 0008 0091     		str	r1, [sp]
 1356 000a 1646     		mov	r6, r2
 1357 000c 0193     		str	r3, [sp, #4]
 1358 000e DDF83090 		ldr	r9, [sp, #48]
 459:Drivers/hagl/src/hagl.c ****     uint32_t x_ratio = (uint32_t)((source->width << 16) / w);
 1359              		.loc 1 459 0
 1360 0012 D9F80CA0 		ldr	r10, [r9, #12]
 1361              	.LVL166:
 460:Drivers/hagl/src/hagl.c ****     uint32_t y_ratio = (uint32_t)((source->height << 16) / h);
 1362              		.loc 1 460 0
 1363 0016 B9F80080 		ldrh	r8, [r9]
 1364 001a 4FEA0848 		lsl	r8, r8, #16
 1365 001e 98FBF2F8 		sdiv	r8, r8, r2
 1366              	.LVL167:
 461:Drivers/hagl/src/hagl.c **** 
 1367              		.loc 1 461 0
 1368 0022 B9F80270 		ldrh	r7, [r9, #2]
 1369 0026 3F04     		lsls	r7, r7, #16
 1370 0028 97FBF3F7 		sdiv	r7, r7, r3
 1371              	.LVL168:
 1372              	.LBB38:
 463:Drivers/hagl/src/hagl.c ****         for (uint16_t x = 0; x < w; x++) {
 1373              		.loc 1 463 0
 1374 002c 0025     		movs	r5, #0
 1375 002e 1AE0     		b	.L106
 1376              	.LVL169:
 1377              	.L107:
 1378              	.LBB39:
 1379              	.LBB40:
 465:Drivers/hagl/src/hagl.c ****             uint16_t py = ((y * y_ratio) >> 16);
 1380              		.loc 1 465 0 discriminator 3
 1381 0030 08FB04F2 		mul	r2, r8, r4
 1382              	.LVL170:
 466:Drivers/hagl/src/hagl.c ****             color = ptr[(uint8_t)((py * source->width) + px)];
 1383              		.loc 1 466 0 discriminator 3
 1384 0034 07FB05F3 		mul	r3, r7, r5
 467:Drivers/hagl/src/hagl.c ****             hagl_put_pixel(x0 + x, y0 + y, color);
 1385              		.loc 1 467 0 discriminator 3
 1386 0038 B9F80010 		ldrh	r1, [r9]
 1387 003c 13FB21F3 		smultb	r3, r3, r1
 1388 0040 03EB1243 		add	r3, r3, r2, lsr #16
 1389 0044 DBB2     		uxtb	r3, r3
 1390              	.LVL171:
 468:Drivers/hagl/src/hagl.c ****         }
 1391              		.loc 1 468 0 discriminator 3
 1392 0046 04EB0B00 		add	r0, r4, fp
 1393 004a 009A     		ldr	r2, [sp]
 1394              	.LVL172:
 1395 004c A918     		adds	r1, r5, r2
 1396 004e 1AF80320 		ldrb	r2, [r10, r3]	@ zero_extendqisi2
 1397              	.LVL173:
 1398 0052 09B2     		sxth	r1, r1
ARM GAS  /tmp/ccrQATq6.s 			page 46


 1399 0054 00B2     		sxth	r0, r0
 1400 0056 FFF7FEFF 		bl	hagl_put_pixel
 1401              	.LVL174:
 1402              	.LBE40:
 464:Drivers/hagl/src/hagl.c ****             uint16_t px = ((x * x_ratio) >> 16);
 1403              		.loc 1 464 0 discriminator 3
 1404 005a 0134     		adds	r4, r4, #1
 1405              	.LVL175:
 1406 005c A4B2     		uxth	r4, r4
 1407              	.LVL176:
 1408              	.L108:
 464:Drivers/hagl/src/hagl.c ****             uint16_t px = ((x * x_ratio) >> 16);
 1409              		.loc 1 464 0 is_stmt 0 discriminator 1
 1410 005e B442     		cmp	r4, r6
 1411 0060 E6D3     		bcc	.L107
 1412              	.LBE39:
 463:Drivers/hagl/src/hagl.c ****         for (uint16_t x = 0; x < w; x++) {
 1413              		.loc 1 463 0 is_stmt 1 discriminator 2
 1414 0062 0135     		adds	r5, r5, #1
 1415              	.LVL177:
 1416 0064 ADB2     		uxth	r5, r5
 1417              	.LVL178:
 1418              	.L106:
 463:Drivers/hagl/src/hagl.c ****         for (uint16_t x = 0; x < w; x++) {
 1419              		.loc 1 463 0 is_stmt 0 discriminator 1
 1420 0066 019B     		ldr	r3, [sp, #4]
 1421 0068 9D42     		cmp	r5, r3
 1422 006a 01D2     		bcs	.L111
 1423              	.LBB41:
 464:Drivers/hagl/src/hagl.c ****             uint16_t px = ((x * x_ratio) >> 16);
 1424              		.loc 1 464 0 is_stmt 1
 1425 006c 0024     		movs	r4, #0
 1426 006e F6E7     		b	.L108
 1427              	.L111:
 1428              	.LBE41:
 1429              	.LBE38:
 472:Drivers/hagl/src/hagl.c **** 
 1430              		.loc 1 472 0
 1431 0070 03B0     		add	sp, sp, #12
 1432              	.LCFI34:
 1433              		.cfi_def_cfa_offset 36
 1434              		@ sp needed
 1435 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1436              		.cfi_endproc
 1437              	.LFE19:
 1439              		.section	.text.hagl_clear_screen,"ax",%progbits
 1440              		.align	1
 1441              		.global	hagl_clear_screen
 1442              		.syntax unified
 1443              		.thumb
 1444              		.thumb_func
 1445              		.fpu fpv5-d16
 1447              	hagl_clear_screen:
 1448              	.LFB20:
 474:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_CLEAR_SCREEN
 1449              		.loc 1 474 0
 1450              		.cfi_startproc
ARM GAS  /tmp/ccrQATq6.s 			page 47


 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1454              	.LCFI35:
 1455              		.cfi_def_cfa_offset 20
 1456              		.cfi_offset 4, -20
 1457              		.cfi_offset 5, -16
 1458              		.cfi_offset 6, -12
 1459              		.cfi_offset 7, -8
 1460              		.cfi_offset 14, -4
 1461 0002 83B0     		sub	sp, sp, #12
 1462              	.LCFI36:
 1463              		.cfi_def_cfa_offset 32
 478:Drivers/hagl/src/hagl.c ****     uint16_t y0 = clip_window.y0;
 1464              		.loc 1 478 0
 1465 0004 0E4B     		ldr	r3, .L114
 1466 0006 1C88     		ldrh	r4, [r3]
 1467              	.LVL179:
 479:Drivers/hagl/src/hagl.c ****     uint16_t x1 = clip_window.x1;
 1468              		.loc 1 479 0
 1469 0008 5D88     		ldrh	r5, [r3, #2]
 1470              	.LVL180:
 480:Drivers/hagl/src/hagl.c ****     uint16_t y1 = clip_window.y1;
 1471              		.loc 1 480 0
 1472 000a 9E88     		ldrh	r6, [r3, #4]
 1473              	.LVL181:
 481:Drivers/hagl/src/hagl.c **** 
 1474              		.loc 1 481 0
 1475 000c DF88     		ldrh	r7, [r3, #6]
 1476              	.LVL182:
 483:Drivers/hagl/src/hagl.c ****     hagl_fill_rectangle(0, 0, DISPLAY_WIDTH - 1, DISPLAY_HEIGHT -1, 0x00);
 1477              		.loc 1 483 0
 1478 000e 40F20F13 		movw	r3, #271
 1479 0012 40F2DF12 		movw	r2, #479
 1480 0016 0021     		movs	r1, #0
 1481 0018 0846     		mov	r0, r1
 1482 001a FFF7FEFF 		bl	hagl_set_clip_window
 1483              	.LVL183:
 484:Drivers/hagl/src/hagl.c ****     hagl_set_clip_window(x0, y0, x1, y1);
 1484              		.loc 1 484 0
 1485 001e 0020     		movs	r0, #0
 1486 0020 0090     		str	r0, [sp]
 1487 0022 40F20F13 		movw	r3, #271
 1488 0026 40F2DF12 		movw	r2, #479
 1489 002a 0146     		mov	r1, r0
 1490 002c FFF7FEFF 		bl	hagl_fill_rectangle
 1491              	.LVL184:
 485:Drivers/hagl/src/hagl.c **** #endif
 1492              		.loc 1 485 0
 1493 0030 3B46     		mov	r3, r7
 1494 0032 3246     		mov	r2, r6
 1495 0034 2946     		mov	r1, r5
 1496 0036 2046     		mov	r0, r4
 1497 0038 FFF7FEFF 		bl	hagl_set_clip_window
 1498              	.LVL185:
 487:Drivers/hagl/src/hagl.c **** 
 1499              		.loc 1 487 0
ARM GAS  /tmp/ccrQATq6.s 			page 48


 1500 003c 03B0     		add	sp, sp, #12
 1501              	.LCFI37:
 1502              		.cfi_def_cfa_offset 20
 1503              		@ sp needed
 1504 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 1505              	.LVL186:
 1506              	.L115:
 1507              		.align	2
 1508              	.L114:
 1509 0040 00000000 		.word	.LANCHOR0
 1510              		.cfi_endproc
 1511              	.LFE20:
 1513              		.section	.text.hagl_clear_clip_window,"ax",%progbits
 1514              		.align	1
 1515              		.global	hagl_clear_clip_window
 1516              		.syntax unified
 1517              		.thumb
 1518              		.thumb_func
 1519              		.fpu fpv5-d16
 1521              	hagl_clear_clip_window:
 1522              	.LFB21:
 489:Drivers/hagl/src/hagl.c ****     hagl_fill_rectangle(
 1523              		.loc 1 489 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527 0000 10B5     		push	{r4, lr}
 1528              	.LCFI38:
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 4, -8
 1531              		.cfi_offset 14, -4
 1532 0002 82B0     		sub	sp, sp, #8
 1533              	.LCFI39:
 1534              		.cfi_def_cfa_offset 16
 491:Drivers/hagl/src/hagl.c ****         0x00
 1535              		.loc 1 491 0
 1536 0004 0748     		ldr	r0, .L118
 490:Drivers/hagl/src/hagl.c ****         clip_window.x0, clip_window.y0, clip_window.x1, clip_window.y1,
 1537              		.loc 1 490 0
 1538 0006 B0F90630 		ldrsh	r3, [r0, #6]
 1539 000a B0F90420 		ldrsh	r2, [r0, #4]
 1540 000e B0F90210 		ldrsh	r1, [r0, #2]
 1541 0012 B0F90000 		ldrsh	r0, [r0]
 1542 0016 0024     		movs	r4, #0
 1543 0018 0094     		str	r4, [sp]
 1544 001a FFF7FEFF 		bl	hagl_fill_rectangle
 1545              	.LVL187:
 494:Drivers/hagl/src/hagl.c **** 
 1546              		.loc 1 494 0
 1547 001e 02B0     		add	sp, sp, #8
 1548              	.LCFI40:
 1549              		.cfi_def_cfa_offset 8
 1550              		@ sp needed
 1551 0020 10BD     		pop	{r4, pc}
 1552              	.L119:
 1553 0022 00BF     		.align	2
 1554              	.L118:
ARM GAS  /tmp/ccrQATq6.s 			page 49


 1555 0024 00000000 		.word	.LANCHOR0
 1556              		.cfi_endproc
 1557              	.LFE21:
 1559              		.section	.text.hagl_draw_circle,"ax",%progbits
 1560              		.align	1
 1561              		.global	hagl_draw_circle
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu fpv5-d16
 1567              	hagl_draw_circle:
 1568              	.LFB22:
 496:Drivers/hagl/src/hagl.c ****     int16_t x = 0;
 1569              		.loc 1 496 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 16
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              	.LVL188:
 1574 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1575              	.LCFI41:
 1576              		.cfi_def_cfa_offset 36
 1577              		.cfi_offset 4, -36
 1578              		.cfi_offset 5, -32
 1579              		.cfi_offset 6, -28
 1580              		.cfi_offset 7, -24
 1581              		.cfi_offset 8, -20
 1582              		.cfi_offset 9, -16
 1583              		.cfi_offset 10, -12
 1584              		.cfi_offset 11, -8
 1585              		.cfi_offset 14, -4
 1586 0004 85B0     		sub	sp, sp, #20
 1587              	.LCFI42:
 1588              		.cfi_def_cfa_offset 56
 1589 0006 0646     		mov	r6, r0
 1590 0008 0D46     		mov	r5, r1
 1591 000a 9146     		mov	r9, r2
 1592 000c 9846     		mov	r8, r3
 1593 000e 0193     		str	r3, [sp, #4]
 1594              	.LVL189:
 499:Drivers/hagl/src/hagl.c **** 
 1595              		.loc 1 499 0
 1596 0010 94B2     		uxth	r4, r2
 1597 0012 6300     		lsls	r3, r4, #1
 1598              	.LVL190:
 1599 0014 9BB2     		uxth	r3, r3
 1600 0016 C3F10303 		rsb	r3, r3, #3
 1601 001a 1AB2     		sxth	r2, r3
 1602              	.LVL191:
 1603 001c 0292     		str	r2, [sp, #8]
 1604              	.LVL192:
 501:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - x, yc + y, color);
 1605              		.loc 1 501 0
 1606 001e 1FFA80FA 		uxth	r10, r0
 1607 0022 1FFA81FB 		uxth	fp, r1
 1608 0026 04EB0B07 		add	r7, r4, fp
 1609 002a 3FB2     		sxth	r7, r7
 1610 002c 4246     		mov	r2, r8
ARM GAS  /tmp/ccrQATq6.s 			page 50


 1611 002e 3946     		mov	r1, r7
 1612              	.LVL193:
 1613 0030 FFF7FEFF 		bl	hagl_put_pixel
 1614              	.LVL194:
 502:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + x, yc - y, color);
 1615              		.loc 1 502 0
 1616 0034 4246     		mov	r2, r8
 1617 0036 3946     		mov	r1, r7
 1618 0038 3046     		mov	r0, r6
 1619 003a FFF7FEFF 		bl	hagl_put_pixel
 1620              	.LVL195:
 503:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - x, yc - y, color);
 1621              		.loc 1 503 0
 1622 003e ABEB0407 		sub	r7, fp, r4
 1623 0042 3FB2     		sxth	r7, r7
 1624 0044 4246     		mov	r2, r8
 1625 0046 3946     		mov	r1, r7
 1626 0048 3046     		mov	r0, r6
 1627 004a FFF7FEFF 		bl	hagl_put_pixel
 1628              	.LVL196:
 504:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + y, yc + x, color);
 1629              		.loc 1 504 0
 1630 004e 4246     		mov	r2, r8
 1631 0050 3946     		mov	r1, r7
 1632 0052 3046     		mov	r0, r6
 1633 0054 FFF7FEFF 		bl	hagl_put_pixel
 1634              	.LVL197:
 505:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - y, yc + x, color);
 1635              		.loc 1 505 0
 1636 0058 04EB0A06 		add	r6, r4, r10
 1637 005c 36B2     		sxth	r6, r6
 1638 005e 4246     		mov	r2, r8
 1639 0060 2946     		mov	r1, r5
 1640 0062 3046     		mov	r0, r6
 1641 0064 FFF7FEFF 		bl	hagl_put_pixel
 1642              	.LVL198:
 506:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc + y, yc - x, color);
 1643              		.loc 1 506 0
 1644 0068 AAEB0404 		sub	r4, r10, r4
 1645              	.LVL199:
 1646 006c 24B2     		sxth	r4, r4
 1647 006e 4246     		mov	r2, r8
 1648 0070 2946     		mov	r1, r5
 1649 0072 2046     		mov	r0, r4
 1650 0074 FFF7FEFF 		bl	hagl_put_pixel
 1651              	.LVL200:
 507:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(xc - y, yc - x, color);
 1652              		.loc 1 507 0
 1653 0078 4246     		mov	r2, r8
 1654 007a 2946     		mov	r1, r5
 1655 007c 3046     		mov	r0, r6
 1656 007e FFF7FEFF 		bl	hagl_put_pixel
 1657              	.LVL201:
 508:Drivers/hagl/src/hagl.c **** 
 1658              		.loc 1 508 0
 1659 0082 4246     		mov	r2, r8
 1660 0084 2946     		mov	r1, r5
ARM GAS  /tmp/ccrQATq6.s 			page 51


 1661 0086 2046     		mov	r0, r4
 1662 0088 FFF7FEFF 		bl	hagl_put_pixel
 1663              	.LVL202:
 497:Drivers/hagl/src/hagl.c ****     int16_t y = r;
 1664              		.loc 1 497 0
 1665 008c 0025     		movs	r5, #0
 510:Drivers/hagl/src/hagl.c ****         x++;
 1666              		.loc 1 510 0
 1667 008e 4EE0     		b	.L121
 1668              	.LVL203:
 1669              	.L122:
 517:Drivers/hagl/src/hagl.c ****         }
 1670              		.loc 1 517 0
 1671 0090 A300     		lsls	r3, r4, #2
 1672 0092 9BB2     		uxth	r3, r3
 1673 0094 029A     		ldr	r2, [sp, #8]
 1674 0096 1344     		add	r3, r3, r2
 1675 0098 9BB2     		uxth	r3, r3
 1676 009a 0633     		adds	r3, r3, #6
 1677 009c 1BB2     		sxth	r3, r3
 1678 009e 0293     		str	r3, [sp, #8]
 1679              	.LVL204:
 1680              	.L123:
 520:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - x, yc + y, color);
 1681              		.loc 1 520 0
 1682 00a0 0AEB0408 		add	r8, r10, r4
 1683 00a4 0FFA88F8 		sxth	r8, r8
 1684 00a8 1FFA89F6 		uxth	r6, r9
 1685 00ac 0BEB0607 		add	r7, fp, r6
 1686 00b0 3FB2     		sxth	r7, r7
 1687 00b2 019A     		ldr	r2, [sp, #4]
 1688 00b4 3946     		mov	r1, r7
 1689 00b6 4046     		mov	r0, r8
 1690 00b8 FFF7FEFF 		bl	hagl_put_pixel
 1691              	.LVL205:
 521:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + x, yc - y, color);
 1692              		.loc 1 521 0
 1693 00bc AAEB0403 		sub	r3, r10, r4
 1694 00c0 1BB2     		sxth	r3, r3
 1695 00c2 019A     		ldr	r2, [sp, #4]
 1696 00c4 3946     		mov	r1, r7
 1697 00c6 0393     		str	r3, [sp, #12]
 1698 00c8 1846     		mov	r0, r3
 1699 00ca FFF7FEFF 		bl	hagl_put_pixel
 1700              	.LVL206:
 522:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - x, yc - y, color);
 1701              		.loc 1 522 0
 1702 00ce ABEB0607 		sub	r7, fp, r6
 1703 00d2 3FB2     		sxth	r7, r7
 1704 00d4 019A     		ldr	r2, [sp, #4]
 1705 00d6 3946     		mov	r1, r7
 1706 00d8 4046     		mov	r0, r8
 1707 00da FFF7FEFF 		bl	hagl_put_pixel
 1708              	.LVL207:
 523:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + y, yc + x, color);
 1709              		.loc 1 523 0
 1710 00de 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccrQATq6.s 			page 52


 1711 00e0 3946     		mov	r1, r7
 1712 00e2 0398     		ldr	r0, [sp, #12]
 1713 00e4 FFF7FEFF 		bl	hagl_put_pixel
 1714              	.LVL208:
 524:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - y, yc + x, color);
 1715              		.loc 1 524 0
 1716 00e8 0AEB0607 		add	r7, r10, r6
 1717 00ec 3FB2     		sxth	r7, r7
 1718 00ee 0BEB0408 		add	r8, fp, r4
 1719 00f2 0FFA88F8 		sxth	r8, r8
 1720 00f6 019A     		ldr	r2, [sp, #4]
 1721 00f8 4146     		mov	r1, r8
 1722 00fa 3846     		mov	r0, r7
 1723 00fc FFF7FEFF 		bl	hagl_put_pixel
 1724              	.LVL209:
 525:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc + y, yc - x, color);
 1725              		.loc 1 525 0
 1726 0100 AAEB0606 		sub	r6, r10, r6
 1727 0104 36B2     		sxth	r6, r6
 1728 0106 019A     		ldr	r2, [sp, #4]
 1729 0108 4146     		mov	r1, r8
 1730 010a 3046     		mov	r0, r6
 1731 010c FFF7FEFF 		bl	hagl_put_pixel
 1732              	.LVL210:
 526:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(xc - y, yc - x, color);
 1733              		.loc 1 526 0
 1734 0110 ABEB0404 		sub	r4, fp, r4
 1735 0114 24B2     		sxth	r4, r4
 1736 0116 DDF80480 		ldr	r8, [sp, #4]
 1737 011a 4246     		mov	r2, r8
 1738 011c 2146     		mov	r1, r4
 1739 011e 3846     		mov	r0, r7
 1740 0120 FFF7FEFF 		bl	hagl_put_pixel
 1741              	.LVL211:
 527:Drivers/hagl/src/hagl.c ****     }
 1742              		.loc 1 527 0
 1743 0124 4246     		mov	r2, r8
 1744 0126 2146     		mov	r1, r4
 1745 0128 3046     		mov	r0, r6
 1746 012a FFF7FEFF 		bl	hagl_put_pixel
 1747              	.LVL212:
 1748              	.L121:
 510:Drivers/hagl/src/hagl.c ****         x++;
 1749              		.loc 1 510 0
 1750 012e 4D45     		cmp	r5, r9
 1751 0130 12DC     		bgt	.L126
 511:Drivers/hagl/src/hagl.c **** 
 1752              		.loc 1 511 0
 1753 0132 6C1C     		adds	r4, r5, #1
 1754 0134 A4B2     		uxth	r4, r4
 1755 0136 25B2     		sxth	r5, r4
 1756              	.LVL213:
 513:Drivers/hagl/src/hagl.c ****             y--;
 1757              		.loc 1 513 0
 1758 0138 029A     		ldr	r2, [sp, #8]
 1759 013a 002A     		cmp	r2, #0
 1760 013c A8DD     		ble	.L122
ARM GAS  /tmp/ccrQATq6.s 			page 53


 514:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 1761              		.loc 1 514 0
 1762 013e 09F1FF39 		add	r9, r9, #-1
 1763              	.LVL214:
 1764 0142 0FFA89F9 		sxth	r9, r9
 1765              	.LVL215:
 515:Drivers/hagl/src/hagl.c ****         } else {
 1766              		.loc 1 515 0
 1767 0146 A5EB0903 		sub	r3, r5, r9
 1768 014a 02EB8303 		add	r3, r2, r3, lsl #2
 1769 014e 9BB2     		uxth	r3, r3
 1770 0150 0A33     		adds	r3, r3, #10
 1771 0152 1BB2     		sxth	r3, r3
 1772 0154 0293     		str	r3, [sp, #8]
 1773              	.LVL216:
 1774 0156 A3E7     		b	.L123
 1775              	.L126:
 529:Drivers/hagl/src/hagl.c **** 
 1776              		.loc 1 529 0
 1777 0158 05B0     		add	sp, sp, #20
 1778              	.LCFI43:
 1779              		.cfi_def_cfa_offset 36
 1780              		@ sp needed
 1781 015a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1782              		.cfi_endproc
 1783              	.LFE22:
 1785              		.section	.text.hagl_fill_circle,"ax",%progbits
 1786              		.align	1
 1787              		.global	hagl_fill_circle
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu fpv5-d16
 1793              	hagl_fill_circle:
 1794              	.LFB23:
 531:Drivers/hagl/src/hagl.c ****     int16_t x = 0;
 1795              		.loc 1 531 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 16
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              	.LVL217:
 1800 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1801              	.LCFI44:
 1802              		.cfi_def_cfa_offset 36
 1803              		.cfi_offset 4, -36
 1804              		.cfi_offset 5, -32
 1805              		.cfi_offset 6, -28
 1806              		.cfi_offset 7, -24
 1807              		.cfi_offset 8, -20
 1808              		.cfi_offset 9, -16
 1809              		.cfi_offset 10, -12
 1810              		.cfi_offset 11, -8
 1811              		.cfi_offset 14, -4
 1812 0004 85B0     		sub	sp, sp, #20
 1813              	.LCFI45:
 1814              		.cfi_def_cfa_offset 56
 1815 0006 0290     		str	r0, [sp, #8]
ARM GAS  /tmp/ccrQATq6.s 			page 54


 1816 0008 0391     		str	r1, [sp, #12]
 1817 000a 1746     		mov	r7, r2
 1818 000c 0193     		str	r3, [sp, #4]
 1819              	.LVL218:
 534:Drivers/hagl/src/hagl.c **** 
 1820              		.loc 1 534 0
 1821 000e 5500     		lsls	r5, r2, #1
 1822 0010 ADB2     		uxth	r5, r5
 1823 0012 C5F10305 		rsb	r5, r5, #3
 1824 0016 2DB2     		sxth	r5, r5
 1825              	.LVL219:
 532:Drivers/hagl/src/hagl.c ****     int16_t y = r;
 1826              		.loc 1 532 0
 1827 0018 0022     		movs	r2, #0
 1828              	.LVL220:
 536:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - x, y0 + y, x * 2, color);
 1829              		.loc 1 536 0
 1830 001a 05E0     		b	.L128
 1831              	.LVL221:
 1832              	.L129:
 547:Drivers/hagl/src/hagl.c ****         }
 1833              		.loc 1 547 0
 1834 001c A300     		lsls	r3, r4, #2
 1835 001e 9BB2     		uxth	r3, r3
 1836 0020 1D44     		add	r5, r5, r3
 1837              	.LVL222:
 1838 0022 ADB2     		uxth	r5, r5
 1839 0024 0635     		adds	r5, r5, #6
 1840 0026 2DB2     		sxth	r5, r5
 1841              	.LVL223:
 1842              	.L128:
 536:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - x, y0 + y, x * 2, color);
 1843              		.loc 1 536 0
 1844 0028 BA42     		cmp	r2, r7
 1845 002a 46DC     		bgt	.L133
 537:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - x, y0 - y, x * 2, color);
 1846              		.loc 1 537 0
 1847 002c BDF80860 		ldrh	r6, [sp, #8]
 1848 0030 94B2     		uxth	r4, r2
 1849 0032 A6EB040A 		sub	r10, r6, r4
 1850 0036 0FFA8AFA 		sxth	r10, r10
 1851 003a BDF80C10 		ldrh	r1, [sp, #12]
 1852 003e 1FFA87F8 		uxth	r8, r7
 1853 0042 8946     		mov	r9, r1
 1854 0044 4144     		add	r1, r1, r8
 1855 0046 4FEA440B 		lsl	fp, r4, #1
 1856 004a 1FFA8BFB 		uxth	fp, fp
 1857 004e 019B     		ldr	r3, [sp, #4]
 1858 0050 5A46     		mov	r2, fp
 1859              	.LVL224:
 1860 0052 09B2     		sxth	r1, r1
 1861 0054 5046     		mov	r0, r10
 1862 0056 FFF7FEFF 		bl	hagl_draw_hline
 1863              	.LVL225:
 538:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - y, y0 + x, y * 2, color);
 1864              		.loc 1 538 0
 1865 005a A9EB0801 		sub	r1, r9, r8
ARM GAS  /tmp/ccrQATq6.s 			page 55


 1866 005e 019B     		ldr	r3, [sp, #4]
 1867 0060 5A46     		mov	r2, fp
 1868 0062 09B2     		sxth	r1, r1
 1869 0064 5046     		mov	r0, r10
 1870 0066 FFF7FEFF 		bl	hagl_draw_hline
 1871              	.LVL226:
 539:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - y, y0 - x, y * 2, color);
 1872              		.loc 1 539 0
 1873 006a A6EB0806 		sub	r6, r6, r8
 1874 006e 36B2     		sxth	r6, r6
 1875 0070 04EB0901 		add	r1, r4, r9
 1876 0074 4FEA480A 		lsl	r10, r8, #1
 1877 0078 1FFA8AFA 		uxth	r10, r10
 1878 007c DDF804B0 		ldr	fp, [sp, #4]
 1879 0080 5B46     		mov	r3, fp
 1880 0082 5246     		mov	r2, r10
 1881 0084 09B2     		sxth	r1, r1
 1882 0086 3046     		mov	r0, r6
 1883 0088 FFF7FEFF 		bl	hagl_draw_hline
 1884              	.LVL227:
 540:Drivers/hagl/src/hagl.c ****         x++;
 1885              		.loc 1 540 0
 1886 008c A9EB0401 		sub	r1, r9, r4
 1887 0090 5B46     		mov	r3, fp
 1888 0092 5246     		mov	r2, r10
 1889 0094 09B2     		sxth	r1, r1
 1890 0096 3046     		mov	r0, r6
 1891 0098 FFF7FEFF 		bl	hagl_draw_hline
 1892              	.LVL228:
 541:Drivers/hagl/src/hagl.c **** 
 1893              		.loc 1 541 0
 1894 009c 0134     		adds	r4, r4, #1
 1895              	.LVL229:
 1896 009e A4B2     		uxth	r4, r4
 1897              	.LVL230:
 1898 00a0 22B2     		sxth	r2, r4
 1899              	.LVL231:
 543:Drivers/hagl/src/hagl.c ****             y--;
 1900              		.loc 1 543 0
 1901 00a2 002D     		cmp	r5, #0
 1902 00a4 BADD     		ble	.L129
 544:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 1903              		.loc 1 544 0
 1904 00a6 08F1FF37 		add	r7, r8, #-1
 1905              	.LVL232:
 1906 00aa 3FB2     		sxth	r7, r7
 1907              	.LVL233:
 545:Drivers/hagl/src/hagl.c ****         } else {
 1908              		.loc 1 545 0
 1909 00ac D31B     		subs	r3, r2, r7
 1910 00ae 05EB8305 		add	r5, r5, r3, lsl #2
 1911              	.LVL234:
 1912 00b2 ADB2     		uxth	r5, r5
 1913 00b4 0A35     		adds	r5, r5, #10
 1914 00b6 2DB2     		sxth	r5, r5
 1915              	.LVL235:
 1916 00b8 B6E7     		b	.L128
ARM GAS  /tmp/ccrQATq6.s 			page 56


 1917              	.L133:
 550:Drivers/hagl/src/hagl.c **** 
 1918              		.loc 1 550 0
 1919 00ba 05B0     		add	sp, sp, #20
 1920              	.LCFI46:
 1921              		.cfi_def_cfa_offset 36
 1922              		@ sp needed
 1923 00bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1924              		.cfi_endproc
 1925              	.LFE23:
 1927              		.section	.text.hagl_draw_ellipse,"ax",%progbits
 1928              		.align	1
 1929              		.global	hagl_draw_ellipse
 1930              		.syntax unified
 1931              		.thumb
 1932              		.thumb_func
 1933              		.fpu fpv5-d16
 1935              	hagl_draw_ellipse:
 1936              	.LFB24:
 552:Drivers/hagl/src/hagl.c ****     int16_t wx, wy;
 1937              		.loc 1 552 0
 1938              		.cfi_startproc
 1939              		@ args = 4, pretend = 0, frame = 48
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941              	.LVL236:
 1942 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1943              	.LCFI47:
 1944              		.cfi_def_cfa_offset 36
 1945              		.cfi_offset 4, -36
 1946              		.cfi_offset 5, -32
 1947              		.cfi_offset 6, -28
 1948              		.cfi_offset 7, -24
 1949              		.cfi_offset 8, -20
 1950              		.cfi_offset 9, -16
 1951              		.cfi_offset 10, -12
 1952              		.cfi_offset 11, -8
 1953              		.cfi_offset 14, -4
 1954 0004 8DB0     		sub	sp, sp, #52
 1955              	.LCFI48:
 1956              		.cfi_def_cfa_offset 88
 1957 0006 8346     		mov	fp, r0
 1958 0008 0990     		str	r0, [sp, #36]
 1959 000a 0B91     		str	r1, [sp, #44]
 1960 000c 0392     		str	r2, [sp, #12]
 1961 000e 1C46     		mov	r4, r3
 1962 0010 0493     		str	r3, [sp, #16]
 1963 0012 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 1964              	.LVL237:
 1965 0016 0193     		str	r3, [sp, #4]
 556:Drivers/hagl/src/hagl.c ****     int32_t bsq = b * b;
 1966              		.loc 1 556 0
 1967 0018 0A92     		str	r2, [sp, #40]
 1968 001a 02FB02F6 		mul	r6, r2, r2
 1969 001e 0896     		str	r6, [sp, #32]
 1970              	.LVL238:
 557:Drivers/hagl/src/hagl.c **** 
 1971              		.loc 1 557 0
ARM GAS  /tmp/ccrQATq6.s 			page 57


 1972 0020 04FB04F9 		mul	r9, r4, r4
 1973              	.LVL239:
 559:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 - b, color);
 1974              		.loc 1 559 0
 1975 0024 8FB2     		uxth	r7, r1
 1976 0026 0297     		str	r7, [sp, #8]
 1977 0028 A5B2     		uxth	r5, r4
 1978 002a 7919     		adds	r1, r7, r5
 1979              	.LVL240:
 1980 002c 9846     		mov	r8, r3
 1981 002e 1A46     		mov	r2, r3
 1982              	.LVL241:
 1983 0030 09B2     		sxth	r1, r1
 1984 0032 FFF7FEFF 		bl	hagl_put_pixel
 1985              	.LVL242:
 560:Drivers/hagl/src/hagl.c **** 
 1986              		.loc 1 560 0
 1987 0036 791B     		subs	r1, r7, r5
 1988 0038 4246     		mov	r2, r8
 1989 003a 09B2     		sxth	r1, r1
 1990 003c 5846     		mov	r0, fp
 1991 003e FFF7FEFF 		bl	hagl_put_pixel
 1992              	.LVL243:
 565:Drivers/hagl/src/hagl.c ****     t = asq / 4 - asq * b;
 1993              		.loc 1 565 0
 1994 0042 7300     		lsls	r3, r6, #1
 1995 0044 0693     		str	r3, [sp, #24]
 1996 0046 03FB04FA 		mul	r10, r3, r4
 1997              	.LVL244:
 566:Drivers/hagl/src/hagl.c **** 
 1998              		.loc 1 566 0
 1999 004a 3746     		mov	r7, r6
 2000              	.LVL245:
 2001 004c 002E     		cmp	r6, #0
 2002 004e 09DB     		blt	.L144
 2003              	.L135:
 2004 0050 089B     		ldr	r3, [sp, #32]
 2005 0052 03FB04F4 		mul	r4, r3, r4
 2006              	.LVL246:
 2007 0056 C4EBA707 		rsb	r7, r4, r7, asr #2
 2008              	.LVL247:
 564:Drivers/hagl/src/hagl.c ****     ya = asq * 2 * b;
 2009              		.loc 1 564 0
 2010 005a 4FF00008 		mov	r8, #0
 562:Drivers/hagl/src/hagl.c ****     wy = b;
 2011              		.loc 1 562 0
 2012 005e CDF81480 		str	r8, [sp, #20]
 2013 0062 31E0     		b	.L138
 2014              	.LVL248:
 2015              	.L144:
 566:Drivers/hagl/src/hagl.c **** 
 2016              		.loc 1 566 0
 2017 0064 089B     		ldr	r3, [sp, #32]
 2018 0066 DF1C     		adds	r7, r3, #3
 2019 0068 F2E7     		b	.L135
 2020              	.LVL249:
 2021              	.L136:
ARM GAS  /tmp/ccrQATq6.s 			page 58


 577:Drivers/hagl/src/hagl.c ****         wx++;
 2022              		.loc 1 577 0
 2023 006a 4FEA490B 		lsl	fp, r9, #1
 2024 006e D844     		add	r8, r8, fp
 2025              	.LVL250:
 578:Drivers/hagl/src/hagl.c **** 
 2026              		.loc 1 578 0
 2027 0070 059E     		ldr	r6, [sp, #20]
 2028 0072 0136     		adds	r6, r6, #1
 2029 0074 B6B2     		uxth	r6, r6
 2030 0076 33B2     		sxth	r3, r6
 2031 0078 0593     		str	r3, [sp, #20]
 2032              	.LVL251:
 580:Drivers/hagl/src/hagl.c ****             break;
 2033              		.loc 1 580 0
 2034 007a C245     		cmp	r10, r8
 2035 007c 32DD     		ble	.L137
 584:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 - wy, color);
 2036              		.loc 1 584 0
 2037 007e BDF82440 		ldrh	r4, [sp, #36]
 2038 0082 3319     		adds	r3, r6, r4
 2039 0084 18B2     		sxth	r0, r3
 2040 0086 BDF81050 		ldrh	r5, [sp, #16]
 2041 008a 029B     		ldr	r3, [sp, #8]
 2042 008c A3EB050B 		sub	fp, r3, r5
 2043 0090 0FFA8BFB 		sxth	fp, fp
 2044 0094 019A     		ldr	r2, [sp, #4]
 2045 0096 5946     		mov	r1, fp
 2046 0098 0790     		str	r0, [sp, #28]
 2047 009a FFF7FEFF 		bl	hagl_put_pixel
 2048              	.LVL252:
 585:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 + wy, color);
 2049              		.loc 1 585 0
 2050 009e A41B     		subs	r4, r4, r6
 2051 00a0 24B2     		sxth	r4, r4
 2052 00a2 019E     		ldr	r6, [sp, #4]
 2053 00a4 3246     		mov	r2, r6
 2054 00a6 5946     		mov	r1, fp
 2055 00a8 2046     		mov	r0, r4
 2056 00aa FFF7FEFF 		bl	hagl_put_pixel
 2057              	.LVL253:
 586:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 + wy, color);
 2058              		.loc 1 586 0
 2059 00ae 029B     		ldr	r3, [sp, #8]
 2060 00b0 1D44     		add	r5, r5, r3
 2061 00b2 2DB2     		sxth	r5, r5
 2062 00b4 3246     		mov	r2, r6
 2063 00b6 2946     		mov	r1, r5
 2064 00b8 0798     		ldr	r0, [sp, #28]
 2065 00ba FFF7FEFF 		bl	hagl_put_pixel
 2066              	.LVL254:
 587:Drivers/hagl/src/hagl.c ****     }
 2067              		.loc 1 587 0
 2068 00be 3246     		mov	r2, r6
 2069 00c0 2946     		mov	r1, r5
 2070 00c2 2046     		mov	r0, r4
 2071 00c4 FFF7FEFF 		bl	hagl_put_pixel
ARM GAS  /tmp/ccrQATq6.s 			page 59


 2072              	.LVL255:
 2073              	.L138:
 569:Drivers/hagl/src/hagl.c **** 
 2074              		.loc 1 569 0
 2075 00c8 08EB0903 		add	r3, r8, r9
 2076              	.LVL256:
 571:Drivers/hagl/src/hagl.c ****             ya -= asq * 2;
 2077              		.loc 1 571 0
 2078 00cc FF18     		adds	r7, r7, r3
 2079              	.LVL257:
 2080 00ce CCD4     		bmi	.L136
 572:Drivers/hagl/src/hagl.c ****             t -= ya;
 2081              		.loc 1 572 0
 2082 00d0 069B     		ldr	r3, [sp, #24]
 2083 00d2 AAEB030A 		sub	r10, r10, r3
 2084              	.LVL258:
 573:Drivers/hagl/src/hagl.c ****             wy--;
 2085              		.loc 1 573 0
 2086 00d6 A7EB0A07 		sub	r7, r7, r10
 2087              	.LVL259:
 574:Drivers/hagl/src/hagl.c ****         }
 2088              		.loc 1 574 0
 2089 00da 049B     		ldr	r3, [sp, #16]
 2090 00dc 013B     		subs	r3, r3, #1
 2091 00de 1BB2     		sxth	r3, r3
 2092 00e0 0493     		str	r3, [sp, #16]
 2093              	.LVL260:
 2094 00e2 C2E7     		b	.L136
 2095              	.L137:
 590:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0 - a, y0, color);
 2096              		.loc 1 590 0
 2097 00e4 BDF82480 		ldrh	r8, [sp, #36]
 2098              	.LVL261:
 2099 00e8 BDF80C40 		ldrh	r4, [sp, #12]
 2100 00ec 08EB0400 		add	r0, r8, r4
 2101 00f0 019E     		ldr	r6, [sp, #4]
 2102 00f2 3246     		mov	r2, r6
 2103 00f4 0B9D     		ldr	r5, [sp, #44]
 2104 00f6 2946     		mov	r1, r5
 2105 00f8 00B2     		sxth	r0, r0
 2106 00fa FFF7FEFF 		bl	hagl_put_pixel
 2107              	.LVL262:
 591:Drivers/hagl/src/hagl.c **** 
 2108              		.loc 1 591 0
 2109 00fe A8EB0400 		sub	r0, r8, r4
 2110 0102 3246     		mov	r2, r6
 2111 0104 2946     		mov	r1, r5
 2112 0106 00B2     		sxth	r0, r0
 2113 0108 FFF7FEFF 		bl	hagl_put_pixel
 2114              	.LVL263:
 595:Drivers/hagl/src/hagl.c **** 
 2115              		.loc 1 595 0
 2116 010c 0A9B     		ldr	r3, [sp, #40]
 2117 010e 0BFB03FA 		mul	r10, fp, r3
 2118              	.LVL264:
 598:Drivers/hagl/src/hagl.c **** 
 2119              		.loc 1 598 0
ARM GAS  /tmp/ccrQATq6.s 			page 60


 2120 0112 4B46     		mov	r3, r9
 2121 0114 B9F1000F 		cmp	r9, #0
 2122 0118 09DB     		blt	.L145
 2123              	.L139:
 2124 011a 0A9A     		ldr	r2, [sp, #40]
 2125 011c 09FB02F5 		mul	r5, r9, r2
 2126 0120 C5EBA305 		rsb	r5, r5, r3, asr #2
 2127              	.LVL265:
 597:Drivers/hagl/src/hagl.c ****     t = bsq / 4 - bsq * a;
 2128              		.loc 1 597 0
 2129 0124 0027     		movs	r7, #0
 594:Drivers/hagl/src/hagl.c ****     xa = bsq * 2 * a;
 2130              		.loc 1 594 0
 2131 0126 0497     		str	r7, [sp, #16]
 2132 0128 CDF814B0 		str	fp, [sp, #20]
 2133 012c 32E0     		b	.L142
 2134              	.LVL266:
 2135              	.L145:
 598:Drivers/hagl/src/hagl.c **** 
 2136              		.loc 1 598 0
 2137 012e 09F10303 		add	r3, r9, #3
 2138              	.LVL267:
 2139 0132 F2E7     		b	.L139
 2140              	.LVL268:
 2141              	.L140:
 609:Drivers/hagl/src/hagl.c ****         wy++;
 2142              		.loc 1 609 0
 2143 0134 069B     		ldr	r3, [sp, #24]
 2144 0136 1F44     		add	r7, r7, r3
 2145              	.LVL269:
 610:Drivers/hagl/src/hagl.c **** 
 2146              		.loc 1 610 0
 2147 0138 049C     		ldr	r4, [sp, #16]
 2148 013a 0134     		adds	r4, r4, #1
 2149 013c A4B2     		uxth	r4, r4
 2150 013e 23B2     		sxth	r3, r4
 2151 0140 0493     		str	r3, [sp, #16]
 2152              	.LVL270:
 612:Drivers/hagl/src/hagl.c ****             break;
 2153              		.loc 1 612 0
 2154 0142 BA45     		cmp	r10, r7
 2155 0144 34DB     		blt	.L134
 616:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 - wy, color);
 2156              		.loc 1 616 0
 2157 0146 BDF80C60 		ldrh	r6, [sp, #12]
 2158 014a 08EB0609 		add	r9, r8, r6
 2159 014e 0FFA89F9 		sxth	r9, r9
 2160 0152 029B     		ldr	r3, [sp, #8]
 2161 0154 A3EB040B 		sub	fp, r3, r4
 2162 0158 0FFA8BFB 		sxth	fp, fp
 2163 015c 019A     		ldr	r2, [sp, #4]
 2164 015e 5946     		mov	r1, fp
 2165 0160 4846     		mov	r0, r9
 2166 0162 FFF7FEFF 		bl	hagl_put_pixel
 2167              	.LVL271:
 617:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + wx, y0 + wy, color);
 2168              		.loc 1 617 0
ARM GAS  /tmp/ccrQATq6.s 			page 61


 2169 0166 A8EB0606 		sub	r6, r8, r6
 2170 016a 36B2     		sxth	r6, r6
 2171 016c 019A     		ldr	r2, [sp, #4]
 2172 016e 5946     		mov	r1, fp
 2173 0170 3046     		mov	r0, r6
 2174 0172 FFF7FEFF 		bl	hagl_put_pixel
 2175              	.LVL272:
 618:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 - wx, y0 + wy, color);
 2176              		.loc 1 618 0
 2177 0176 029B     		ldr	r3, [sp, #8]
 2178 0178 1C44     		add	r4, r4, r3
 2179 017a 24B2     		sxth	r4, r4
 2180 017c DDF804B0 		ldr	fp, [sp, #4]
 2181 0180 5A46     		mov	r2, fp
 2182 0182 2146     		mov	r1, r4
 2183 0184 4846     		mov	r0, r9
 2184 0186 FFF7FEFF 		bl	hagl_put_pixel
 2185              	.LVL273:
 619:Drivers/hagl/src/hagl.c ****     }
 2186              		.loc 1 619 0
 2187 018a 5A46     		mov	r2, fp
 2188 018c 2146     		mov	r1, r4
 2189 018e 3046     		mov	r0, r6
 2190 0190 FFF7FEFF 		bl	hagl_put_pixel
 2191              	.LVL274:
 2192              	.L142:
 601:Drivers/hagl/src/hagl.c **** 
 2193              		.loc 1 601 0
 2194 0194 089B     		ldr	r3, [sp, #32]
 2195 0196 FB18     		adds	r3, r7, r3
 2196              	.LVL275:
 603:Drivers/hagl/src/hagl.c ****             xa -= bsq * 2;
 2197              		.loc 1 603 0
 2198 0198 ED18     		adds	r5, r5, r3
 2199              	.LVL276:
 2200 019a CBD4     		bmi	.L140
 604:Drivers/hagl/src/hagl.c ****             t = t - xa;
 2201              		.loc 1 604 0
 2202 019c 059B     		ldr	r3, [sp, #20]
 2203 019e AAEB030A 		sub	r10, r10, r3
 2204              	.LVL277:
 605:Drivers/hagl/src/hagl.c ****             wx--;
 2205              		.loc 1 605 0
 2206 01a2 A5EB0A05 		sub	r5, r5, r10
 2207              	.LVL278:
 606:Drivers/hagl/src/hagl.c ****         }
 2208              		.loc 1 606 0
 2209 01a6 039B     		ldr	r3, [sp, #12]
 2210 01a8 013B     		subs	r3, r3, #1
 2211 01aa 1BB2     		sxth	r3, r3
 2212 01ac 0393     		str	r3, [sp, #12]
 2213              	.LVL279:
 2214 01ae C1E7     		b	.L140
 2215              	.L134:
 621:Drivers/hagl/src/hagl.c **** 
 2216              		.loc 1 621 0
 2217 01b0 0DB0     		add	sp, sp, #52
ARM GAS  /tmp/ccrQATq6.s 			page 62


 2218              	.LCFI49:
 2219              		.cfi_def_cfa_offset 36
 2220              		@ sp needed
 2221 01b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2222              		.cfi_endproc
 2223              	.LFE24:
 2225              		.section	.text.hagl_fill_ellipse,"ax",%progbits
 2226              		.align	1
 2227              		.global	hagl_fill_ellipse
 2228              		.syntax unified
 2229              		.thumb
 2230              		.thumb_func
 2231              		.fpu fpv5-d16
 2233              	hagl_fill_ellipse:
 2234              	.LFB25:
 623:Drivers/hagl/src/hagl.c ****     int16_t wx, wy;
 2235              		.loc 1 623 0
 2236              		.cfi_startproc
 2237              		@ args = 4, pretend = 0, frame = 40
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              	.LVL280:
 2240 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2241              	.LCFI50:
 2242              		.cfi_def_cfa_offset 36
 2243              		.cfi_offset 4, -36
 2244              		.cfi_offset 5, -32
 2245              		.cfi_offset 6, -28
 2246              		.cfi_offset 7, -24
 2247              		.cfi_offset 8, -20
 2248              		.cfi_offset 9, -16
 2249              		.cfi_offset 10, -12
 2250              		.cfi_offset 11, -8
 2251              		.cfi_offset 14, -4
 2252 0004 8BB0     		sub	sp, sp, #44
 2253              	.LCFI51:
 2254              		.cfi_def_cfa_offset 80
 2255 0006 8246     		mov	r10, r0
 2256 0008 0790     		str	r0, [sp, #28]
 2257 000a 0991     		str	r1, [sp, #36]
 2258 000c 0292     		str	r2, [sp, #8]
 2259 000e 1C46     		mov	r4, r3
 2260 0010 0393     		str	r3, [sp, #12]
 2261 0012 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 2262              	.LVL281:
 2263 0016 0193     		str	r3, [sp, #4]
 627:Drivers/hagl/src/hagl.c ****     int32_t bsq = b * b;
 2264              		.loc 1 627 0
 2265 0018 0892     		str	r2, [sp, #32]
 2266 001a 02FB02F7 		mul	r7, r2, r2
 2267 001e 0697     		str	r7, [sp, #24]
 2268              	.LVL282:
 628:Drivers/hagl/src/hagl.c **** 
 2269              		.loc 1 628 0
 2270 0020 04FB04F6 		mul	r6, r4, r4
 2271              	.LVL283:
 630:Drivers/hagl/src/hagl.c ****     hagl_put_pixel(x0, y0 - b, color);
 2272              		.loc 1 630 0
ARM GAS  /tmp/ccrQATq6.s 			page 63


 2273 0024 1FFA81FB 		uxth	fp, r1
 2274 0028 A5B2     		uxth	r5, r4
 2275 002a 0BEB0501 		add	r1, fp, r5
 2276              	.LVL284:
 2277 002e 9846     		mov	r8, r3
 2278 0030 1A46     		mov	r2, r3
 2279              	.LVL285:
 2280 0032 09B2     		sxth	r1, r1
 2281 0034 FFF7FEFF 		bl	hagl_put_pixel
 2282              	.LVL286:
 631:Drivers/hagl/src/hagl.c **** 
 2283              		.loc 1 631 0
 2284 0038 ABEB0501 		sub	r1, fp, r5
 2285 003c 4246     		mov	r2, r8
 2286 003e 09B2     		sxth	r1, r1
 2287 0040 5046     		mov	r0, r10
 2288 0042 FFF7FEFF 		bl	hagl_put_pixel
 2289              	.LVL287:
 636:Drivers/hagl/src/hagl.c ****     t = asq / 4 - asq * b;
 2290              		.loc 1 636 0
 2291 0046 7B00     		lsls	r3, r7, #1
 2292 0048 0493     		str	r3, [sp, #16]
 2293 004a 03FB04F9 		mul	r9, r3, r4
 2294              	.LVL288:
 637:Drivers/hagl/src/hagl.c **** 
 2295              		.loc 1 637 0
 2296 004e 3D46     		mov	r5, r7
 2297 0050 002F     		cmp	r7, #0
 2298 0052 08DB     		blt	.L156
 2299              	.L147:
 2300 0054 069B     		ldr	r3, [sp, #24]
 2301 0056 03FB04F4 		mul	r4, r3, r4
 2302              	.LVL289:
 2303 005a C4EBA505 		rsb	r5, r4, r5, asr #2
 2304              	.LVL290:
 635:Drivers/hagl/src/hagl.c ****     ya = asq * 2 * b;
 2305              		.loc 1 635 0
 2306 005e 0027     		movs	r7, #0
 2307              	.LVL291:
 633:Drivers/hagl/src/hagl.c ****     wy = b;
 2308              		.loc 1 633 0
 2309 0060 B846     		mov	r8, r7
 2310 0062 DA46     		mov	r10, fp
 2311 0064 22E0     		b	.L150
 2312              	.LVL292:
 2313              	.L156:
 637:Drivers/hagl/src/hagl.c **** 
 2314              		.loc 1 637 0
 2315 0066 069B     		ldr	r3, [sp, #24]
 2316 0068 DD1C     		adds	r5, r3, #3
 2317              	.LVL293:
 2318 006a F3E7     		b	.L147
 2319              	.LVL294:
 2320              	.L148:
 648:Drivers/hagl/src/hagl.c ****         wx++;
 2321              		.loc 1 648 0
 2322 006c 7300     		lsls	r3, r6, #1
ARM GAS  /tmp/ccrQATq6.s 			page 64


 2323 006e 1F44     		add	r7, r7, r3
 2324              	.LVL295:
 649:Drivers/hagl/src/hagl.c **** 
 2325              		.loc 1 649 0
 2326 0070 08F10104 		add	r4, r8, #1
 2327 0074 A4B2     		uxth	r4, r4
 2328 0076 0FFA84F8 		sxth	r8, r4
 2329              	.LVL296:
 651:Drivers/hagl/src/hagl.c ****             break;
 2330              		.loc 1 651 0
 2331 007a B945     		cmp	r9, r7
 2332 007c 23DD     		ble	.L149
 655:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 + wy, wx * 2, color);
 2333              		.loc 1 655 0
 2334 007e 079B     		ldr	r3, [sp, #28]
 2335 0080 1B1B     		subs	r3, r3, r4
 2336 0082 18B2     		sxth	r0, r3
 2337 0084 BDF80CB0 		ldrh	fp, [sp, #12]
 2338 0088 AAEB0B01 		sub	r1, r10, fp
 2339 008c 6400     		lsls	r4, r4, #1
 2340 008e A4B2     		uxth	r4, r4
 2341 0090 019B     		ldr	r3, [sp, #4]
 2342 0092 2246     		mov	r2, r4
 2343 0094 09B2     		sxth	r1, r1
 2344 0096 0590     		str	r0, [sp, #20]
 2345 0098 FFF7FEFF 		bl	hagl_draw_hline
 2346              	.LVL297:
 656:Drivers/hagl/src/hagl.c ****     }
 2347              		.loc 1 656 0
 2348 009c 0AEB0B01 		add	r1, r10, fp
 2349 00a0 019B     		ldr	r3, [sp, #4]
 2350 00a2 2246     		mov	r2, r4
 2351 00a4 09B2     		sxth	r1, r1
 2352 00a6 0598     		ldr	r0, [sp, #20]
 2353 00a8 FFF7FEFF 		bl	hagl_draw_hline
 2354              	.LVL298:
 2355              	.L150:
 640:Drivers/hagl/src/hagl.c **** 
 2356              		.loc 1 640 0
 2357 00ac BB19     		adds	r3, r7, r6
 2358              	.LVL299:
 642:Drivers/hagl/src/hagl.c ****             ya -= asq * 2;
 2359              		.loc 1 642 0
 2360 00ae ED18     		adds	r5, r5, r3
 2361              	.LVL300:
 2362 00b0 DCD4     		bmi	.L148
 643:Drivers/hagl/src/hagl.c ****             t -= ya;
 2363              		.loc 1 643 0
 2364 00b2 049B     		ldr	r3, [sp, #16]
 2365 00b4 A9EB0309 		sub	r9, r9, r3
 2366              	.LVL301:
 644:Drivers/hagl/src/hagl.c ****             wy--;
 2367              		.loc 1 644 0
 2368 00b8 A5EB0905 		sub	r5, r5, r9
 2369              	.LVL302:
 645:Drivers/hagl/src/hagl.c ****         }
 2370              		.loc 1 645 0
ARM GAS  /tmp/ccrQATq6.s 			page 65


 2371 00bc 039B     		ldr	r3, [sp, #12]
 2372 00be 013B     		subs	r3, r3, #1
 2373 00c0 1BB2     		sxth	r3, r3
 2374 00c2 0393     		str	r3, [sp, #12]
 2375              	.LVL303:
 2376 00c4 D2E7     		b	.L148
 2377              	.L149:
 2378 00c6 D346     		mov	fp, r10
 2379 00c8 1C46     		mov	r4, r3
 2380 00ca 0593     		str	r3, [sp, #20]
 659:Drivers/hagl/src/hagl.c **** 
 2381              		.loc 1 659 0
 2382 00cc BDF81C20 		ldrh	r2, [sp, #28]
 2383 00d0 1146     		mov	r1, r2
 2384 00d2 0392     		str	r2, [sp, #12]
 2385              	.LVL304:
 2386 00d4 BDF80820 		ldrh	r2, [sp, #8]
 2387 00d8 881A     		subs	r0, r1, r2
 2388 00da 5200     		lsls	r2, r2, #1
 2389 00dc 92B2     		uxth	r2, r2
 2390 00de 019B     		ldr	r3, [sp, #4]
 2391 00e0 0999     		ldr	r1, [sp, #36]
 2392 00e2 00B2     		sxth	r0, r0
 2393 00e4 FFF7FEFF 		bl	hagl_draw_hline
 2394              	.LVL305:
 663:Drivers/hagl/src/hagl.c **** 
 2395              		.loc 1 663 0
 2396 00e8 089A     		ldr	r2, [sp, #32]
 2397 00ea 04FB02FA 		mul	r10, r4, r2
 2398              	.LVL306:
 666:Drivers/hagl/src/hagl.c **** 
 2399              		.loc 1 666 0
 2400 00ee 3346     		mov	r3, r6
 2401 00f0 002E     		cmp	r6, #0
 2402 00f2 08DB     		blt	.L157
 2403              	.L151:
 2404 00f4 089A     		ldr	r2, [sp, #32]
 2405 00f6 06FB02F6 		mul	r6, r6, r2
 2406              	.LVL307:
 2407 00fa C6EBA306 		rsb	r6, r6, r3, asr #2
 2408              	.LVL308:
 665:Drivers/hagl/src/hagl.c ****     t = bsq / 4 - bsq * a;
 2409              		.loc 1 665 0
 2410 00fe 4FF00008 		mov	r8, #0
 662:Drivers/hagl/src/hagl.c ****     xa = bsq * 2 * a;
 2411              		.loc 1 662 0
 2412 0102 4546     		mov	r5, r8
 2413 0104 21E0     		b	.L154
 2414              	.LVL309:
 2415              	.L157:
 666:Drivers/hagl/src/hagl.c **** 
 2416              		.loc 1 666 0
 2417 0106 F31C     		adds	r3, r6, #3
 2418              	.LVL310:
 2419 0108 F4E7     		b	.L151
 2420              	.LVL311:
 2421              	.L152:
ARM GAS  /tmp/ccrQATq6.s 			page 66


 677:Drivers/hagl/src/hagl.c ****         wy++;
 2422              		.loc 1 677 0
 2423 010a 049B     		ldr	r3, [sp, #16]
 2424 010c 9844     		add	r8, r8, r3
 2425              	.LVL312:
 678:Drivers/hagl/src/hagl.c **** 
 2426              		.loc 1 678 0
 2427 010e 6F1C     		adds	r7, r5, #1
 2428 0110 BFB2     		uxth	r7, r7
 2429 0112 3DB2     		sxth	r5, r7
 2430              	.LVL313:
 680:Drivers/hagl/src/hagl.c ****             break;
 2431              		.loc 1 680 0
 2432 0114 C245     		cmp	r10, r8
 2433 0116 26DB     		blt	.L146
 684:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(x0 - wx, y0 + wy, wx * 2, color);
 2434              		.loc 1 684 0
 2435 0118 BDF80840 		ldrh	r4, [sp, #8]
 2436 011c 039B     		ldr	r3, [sp, #12]
 2437 011e A3EB0409 		sub	r9, r3, r4
 2438 0122 0FFA89F9 		sxth	r9, r9
 2439 0126 ABEB0701 		sub	r1, fp, r7
 2440 012a 6400     		lsls	r4, r4, #1
 2441 012c A4B2     		uxth	r4, r4
 2442 012e 019B     		ldr	r3, [sp, #4]
 2443 0130 2246     		mov	r2, r4
 2444 0132 09B2     		sxth	r1, r1
 2445 0134 4846     		mov	r0, r9
 2446 0136 FFF7FEFF 		bl	hagl_draw_hline
 2447              	.LVL314:
 685:Drivers/hagl/src/hagl.c ****     }
 2448              		.loc 1 685 0
 2449 013a 0BEB0701 		add	r1, fp, r7
 2450 013e 019B     		ldr	r3, [sp, #4]
 2451 0140 2246     		mov	r2, r4
 2452 0142 09B2     		sxth	r1, r1
 2453 0144 4846     		mov	r0, r9
 2454 0146 FFF7FEFF 		bl	hagl_draw_hline
 2455              	.LVL315:
 2456              	.L154:
 669:Drivers/hagl/src/hagl.c **** 
 2457              		.loc 1 669 0
 2458 014a 069B     		ldr	r3, [sp, #24]
 2459 014c 4344     		add	r3, r8, r3
 2460              	.LVL316:
 671:Drivers/hagl/src/hagl.c ****             xa -= bsq * 2;
 2461              		.loc 1 671 0
 2462 014e F618     		adds	r6, r6, r3
 2463              	.LVL317:
 2464 0150 DBD4     		bmi	.L152
 672:Drivers/hagl/src/hagl.c ****             t = t - xa;
 2465              		.loc 1 672 0
 2466 0152 059B     		ldr	r3, [sp, #20]
 2467 0154 AAEB030A 		sub	r10, r10, r3
 2468              	.LVL318:
 673:Drivers/hagl/src/hagl.c ****             wx--;
 2469              		.loc 1 673 0
ARM GAS  /tmp/ccrQATq6.s 			page 67


 2470 0158 A6EB0A06 		sub	r6, r6, r10
 2471              	.LVL319:
 674:Drivers/hagl/src/hagl.c ****         }
 2472              		.loc 1 674 0
 2473 015c 029B     		ldr	r3, [sp, #8]
 2474 015e 013B     		subs	r3, r3, #1
 2475 0160 1BB2     		sxth	r3, r3
 2476 0162 0293     		str	r3, [sp, #8]
 2477              	.LVL320:
 2478 0164 D1E7     		b	.L152
 2479              	.L146:
 687:Drivers/hagl/src/hagl.c **** 
 2480              		.loc 1 687 0
 2481 0166 0BB0     		add	sp, sp, #44
 2482              	.LCFI52:
 2483              		.cfi_def_cfa_offset 36
 2484              		@ sp needed
 2485 0168 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2486              		.cfi_endproc
 2487              	.LFE25:
 2489              		.section	.text.hagl_draw_polygon,"ax",%progbits
 2490              		.align	1
 2491              		.global	hagl_draw_polygon
 2492              		.syntax unified
 2493              		.thumb
 2494              		.thumb_func
 2495              		.fpu fpv5-d16
 2497              	hagl_draw_polygon:
 2498              	.LFB26:
 690:Drivers/hagl/src/hagl.c **** 
 2499              		.loc 1 690 0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 0
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
 2503              	.LVL321:
 2504 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2505              	.LCFI53:
 2506              		.cfi_def_cfa_offset 20
 2507              		.cfi_offset 4, -20
 2508              		.cfi_offset 5, -16
 2509              		.cfi_offset 6, -12
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 83B0     		sub	sp, sp, #12
 2513              	.LCFI54:
 2514              		.cfi_def_cfa_offset 32
 2515 0004 0646     		mov	r6, r0
 2516 0006 0D46     		mov	r5, r1
 2517 0008 1746     		mov	r7, r2
 2518              	.LVL322:
 2519              	.LBB42:
 692:Drivers/hagl/src/hagl.c ****         hagl_draw_line(
 2520              		.loc 1 692 0
 2521 000a 0024     		movs	r4, #0
 2522 000c 10E0     		b	.L159
 2523              	.LVL323:
 2524              	.L160:
ARM GAS  /tmp/ccrQATq6.s 			page 68


 694:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 1],
 2525              		.loc 1 694 0 discriminator 3
 2526 000e 6300     		lsls	r3, r4, #1
 695:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 2],
 2527              		.loc 1 695 0 discriminator 3
 2528 0010 591C     		adds	r1, r3, #1
 696:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 3],
 2529              		.loc 1 696 0 discriminator 3
 2530 0012 9A1C     		adds	r2, r3, #2
 697:Drivers/hagl/src/hagl.c ****             color
 2531              		.loc 1 697 0 discriminator 3
 2532 0014 0333     		adds	r3, r3, #3
 693:Drivers/hagl/src/hagl.c ****             vertices[(i << 1 ) + 0],
 2533              		.loc 1 693 0 discriminator 3
 2534 0016 35F91330 		ldrsh	r3, [r5, r3, lsl #1]
 2535 001a 35F91220 		ldrsh	r2, [r5, r2, lsl #1]
 2536 001e 35F91110 		ldrsh	r1, [r5, r1, lsl #1]
 2537 0022 35F92400 		ldrsh	r0, [r5, r4, lsl #2]
 2538 0026 0097     		str	r7, [sp]
 2539 0028 FFF7FEFF 		bl	hagl_draw_line
 2540              	.LVL324:
 692:Drivers/hagl/src/hagl.c ****         hagl_draw_line(
 2541              		.loc 1 692 0 discriminator 3
 2542 002c 0134     		adds	r4, r4, #1
 2543              	.LVL325:
 2544 002e 24B2     		sxth	r4, r4
 2545              	.LVL326:
 2546              	.L159:
 692:Drivers/hagl/src/hagl.c ****         hagl_draw_line(
 2547              		.loc 1 692 0 is_stmt 0 discriminator 1
 2548 0030 731E     		subs	r3, r6, #1
 2549 0032 9C42     		cmp	r4, r3
 2550 0034 EBDB     		blt	.L160
 2551              	.LBE42:
 704:Drivers/hagl/src/hagl.c ****         vertices[(amount <<1 ) - 1],
 2552              		.loc 1 704 0 is_stmt 1
 2553 0036 7200     		lsls	r2, r6, #1
 2554 0038 0849     		ldr	r1, .L162
 2555 003a 1144     		add	r1, r1, r2
 705:Drivers/hagl/src/hagl.c ****         color
 2556              		.loc 1 705 0
 2557 003c 6FF00043 		mvn	r3, #-2147483648
 2558 0040 1344     		add	r3, r3, r2
 701:Drivers/hagl/src/hagl.c ****         vertices[0],
 2559              		.loc 1 701 0
 2560 0042 35F91330 		ldrsh	r3, [r5, r3, lsl #1]
 2561 0046 35F91120 		ldrsh	r2, [r5, r1, lsl #1]
 2562 004a B5F90210 		ldrsh	r1, [r5, #2]
 2563 004e B5F90000 		ldrsh	r0, [r5]
 2564 0052 0097     		str	r7, [sp]
 2565 0054 FFF7FEFF 		bl	hagl_draw_line
 2566              	.LVL327:
 708:Drivers/hagl/src/hagl.c **** 
 2567              		.loc 1 708 0
 2568 0058 03B0     		add	sp, sp, #12
 2569              	.LCFI55:
 2570              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccrQATq6.s 			page 69


 2571              		@ sp needed
 2572 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 2573              	.LVL328:
 2574              	.L163:
 2575              		.align	2
 2576              	.L162:
 2577 005c FEFFFF7F 		.word	2147483646
 2578              		.cfi_endproc
 2579              	.LFE26:
 2581              		.section	.text.hagl_fill_polygon,"ax",%progbits
 2582              		.align	1
 2583              		.global	hagl_fill_polygon
 2584              		.syntax unified
 2585              		.thumb
 2586              		.thumb_func
 2587              		.fpu fpv5-d16
 2589              	hagl_fill_polygon:
 2590              	.LFB27:
 711:Drivers/hagl/src/hagl.c ****     uint16_t nodes[64];
 2591              		.loc 1 711 0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 128
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595              	.LVL329:
 2596 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2597              	.LCFI56:
 2598              		.cfi_def_cfa_offset 32
 2599              		.cfi_offset 4, -32
 2600              		.cfi_offset 5, -28
 2601              		.cfi_offset 6, -24
 2602              		.cfi_offset 7, -20
 2603              		.cfi_offset 8, -16
 2604              		.cfi_offset 9, -12
 2605              		.cfi_offset 10, -8
 2606              		.cfi_offset 14, -4
 2607 0004 A0B0     		sub	sp, sp, #128
 2608              	.LCFI57:
 2609              		.cfi_def_cfa_offset 160
 2610 0006 0746     		mov	r7, r0
 2611 0008 0D46     		mov	r5, r1
 2612 000a 9046     		mov	r8, r2
 2613              	.LVL330:
 2614              	.LBB43:
 723:Drivers/hagl/src/hagl.c ****         if (miny > vertices[(i << 1) + 1]) {
 2615              		.loc 1 723 0
 2616 000c 0023     		movs	r3, #0
 2617              	.LBE43:
 721:Drivers/hagl/src/hagl.c **** 
 2618              		.loc 1 721 0
 2619 000e 9946     		mov	r9, r3
 720:Drivers/hagl/src/hagl.c ****     int16_t maxy = 0;
 2620              		.loc 1 720 0
 2621 0010 4FF48876 		mov	r6, #272
 2622              	.LBB44:
 723:Drivers/hagl/src/hagl.c ****         if (miny > vertices[(i << 1) + 1]) {
 2623              		.loc 1 723 0
 2624 0014 01E0     		b	.L165
ARM GAS  /tmp/ccrQATq6.s 			page 70


 2625              	.LVL331:
 2626              	.L167:
 723:Drivers/hagl/src/hagl.c ****         if (miny > vertices[(i << 1) + 1]) {
 2627              		.loc 1 723 0 is_stmt 0 discriminator 2
 2628 0016 0133     		adds	r3, r3, #1
 2629              	.LVL332:
 2630 0018 DBB2     		uxtb	r3, r3
 2631              	.LVL333:
 2632              	.L165:
 723:Drivers/hagl/src/hagl.c ****         if (miny > vertices[(i << 1) + 1]) {
 2633              		.loc 1 723 0 discriminator 1
 2634 001a BB42     		cmp	r3, r7
 2635 001c 80F29F80 		bge	.L169
 724:Drivers/hagl/src/hagl.c ****             miny = vertices[(i << 1) + 1];
 2636              		.loc 1 724 0 is_stmt 1
 2637 0020 5A00     		lsls	r2, r3, #1
 2638 0022 0132     		adds	r2, r2, #1
 2639 0024 35F91220 		ldrsh	r2, [r5, r2, lsl #1]
 2640 0028 B242     		cmp	r2, r6
 2641 002a 00DA     		bge	.L166
 725:Drivers/hagl/src/hagl.c ****         }
 2642              		.loc 1 725 0
 2643 002c 1646     		mov	r6, r2
 2644              	.LVL334:
 2645              	.L166:
 727:Drivers/hagl/src/hagl.c ****             maxy = vertices[(i << 1) + 1];
 2646              		.loc 1 727 0
 2647 002e 4A45     		cmp	r2, r9
 2648 0030 F1DD     		ble	.L167
 728:Drivers/hagl/src/hagl.c ****         }
 2649              		.loc 1 728 0
 2650 0032 9146     		mov	r9, r2
 2651              	.LVL335:
 2652 0034 EFE7     		b	.L167
 2653              	.LVL336:
 2654              	.L173:
 2655              	.LBE44:
 2656              	.LBB45:
 2657              	.LBB46:
 749:Drivers/hagl/src/hagl.c ****                 count++;
 2658              		.loc 1 749 0
 2659 0036 76EEC76A 		vsub.f32	s13, s13, s14
 2660 003a 77EEC77A 		vsub.f32	s15, s15, s14
 2661              	.LVL337:
 2662 003e 86EEA77A 		vdiv.f32	s14, s13, s15
 2663              	.LVL338:
 2664 0042 36EE656A 		vsub.f32	s12, s12, s11
 2665              	.LVL339:
 2666 0046 27EE066A 		vmul.f32	s12, s14, s12
 2667 004a 36EE256A 		vadd.f32	s12, s12, s11
 2668 004e BDEEC66A 		vcvt.s32.f32	s12, s12
 2669 0052 20AB     		add	r3, sp, #128
 2670              	.LVL340:
 2671 0054 03EB4403 		add	r3, r3, r4, lsl #1
 2672 0058 16EE101A 		vmov	r1, s12	@ int
 2673              	.LVL341:
 2674 005c 23F8801C 		strh	r1, [r3, #-128]	@ movhi
ARM GAS  /tmp/ccrQATq6.s 			page 71


 750:Drivers/hagl/src/hagl.c ****             }
 2675              		.loc 1 750 0
 2676 0060 0134     		adds	r4, r4, #1
 2677              	.LVL342:
 2678 0062 24B2     		sxth	r4, r4
 2679              	.LVL343:
 2680              	.L174:
 739:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 2681              		.loc 1 739 0 discriminator 2
 2682 0064 511C     		adds	r1, r2, #1
 2683              	.LVL344:
 752:Drivers/hagl/src/hagl.c ****         }
 2684              		.loc 1 752 0 discriminator 2
 2685 0066 1346     		mov	r3, r2
 739:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 2686              		.loc 1 739 0 discriminator 2
 2687 0068 0AB2     		sxth	r2, r1
 2688              	.LVL345:
 2689              	.L170:
 739:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 2690              		.loc 1 739 0 is_stmt 0 discriminator 1
 2691 006a BA42     		cmp	r2, r7
 2692 006c 34DA     		bge	.L190
 740:Drivers/hagl/src/hagl.c ****             y0 = vertices[(i << 1) + 1];
 2693              		.loc 1 740 0 is_stmt 1
 2694 006e 5100     		lsls	r1, r2, #1
 2695 0070 35F91100 		ldrsh	r0, [r5, r1, lsl #1]
 2696 0074 06EE100A 		vmov	s12, r0	@ int
 2697 0078 F8EEC65A 		vcvt.f32.s32	s11, s12
 2698              	.LVL346:
 741:Drivers/hagl/src/hagl.c ****             x1 = vertices[(j << 1) + 0];
 2699              		.loc 1 741 0
 2700 007c 0131     		adds	r1, r1, #1
 2701 007e 35F91110 		ldrsh	r1, [r5, r1, lsl #1]
 2702 0082 07EE901A 		vmov	s15, r1	@ int
 2703 0086 B8EEE77A 		vcvt.f32.s32	s14, s15
 2704              	.LVL347:
 742:Drivers/hagl/src/hagl.c ****             y1 = vertices[(j << 1) + 1];
 2705              		.loc 1 742 0
 2706 008a 5B00     		lsls	r3, r3, #1
 2707              	.LVL348:
 2708 008c 35F91310 		ldrsh	r1, [r5, r3, lsl #1]
 2709 0090 07EE901A 		vmov	s15, r1	@ int
 2710 0094 B8EEE76A 		vcvt.f32.s32	s12, s15
 2711              	.LVL349:
 743:Drivers/hagl/src/hagl.c **** 
 2712              		.loc 1 743 0
 2713 0098 0133     		adds	r3, r3, #1
 2714 009a 35F91330 		ldrsh	r3, [r5, r3, lsl #1]
 2715 009e 07EE903A 		vmov	s15, r3	@ int
 2716 00a2 F8EEE77A 		vcvt.f32.s32	s15, s15
 2717              	.LVL350:
 746:Drivers/hagl/src/hagl.c ****                 (y1 < (float)y && y0 >= (float)y)
 2718              		.loc 1 746 0
 2719 00a6 06EE906A 		vmov	s13, r6	@ int
 2720 00aa F8EEE66A 		vcvt.f32.s32	s13, s13
 745:Drivers/hagl/src/hagl.c ****                 (y0 < (float)y && y1 >= (float)y) ||
ARM GAS  /tmp/ccrQATq6.s 			page 72


 2721              		.loc 1 745 0
 2722 00ae F4EEC76A 		vcmpe.f32	s13, s14
 2723 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2724 00b6 04DD     		ble	.L171
 746:Drivers/hagl/src/hagl.c ****                 (y1 < (float)y && y0 >= (float)y)
 2725              		.loc 1 746 0
 2726 00b8 F4EEE76A 		vcmpe.f32	s13, s15
 2727 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2728 00c0 B9D9     		bls	.L173
 2729              	.L171:
 746:Drivers/hagl/src/hagl.c ****                 (y1 < (float)y && y0 >= (float)y)
 2730              		.loc 1 746 0 is_stmt 0 discriminator 1
 2731 00c2 F4EEE76A 		vcmpe.f32	s13, s15
 2732 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2733 00ca CBDD     		ble	.L174
 747:Drivers/hagl/src/hagl.c ****             ) {
 2734              		.loc 1 747 0 is_stmt 1
 2735 00cc F4EEC76A 		vcmpe.f32	s13, s14
 2736 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2737 00d4 C6D8     		bhi	.L174
 2738 00d6 AEE7     		b	.L173
 2739              	.LVL351:
 2740              	.L190:
 2741              	.LBE46:
 756:Drivers/hagl/src/hagl.c ****         while (i < count - 1) {
 2742              		.loc 1 756 0
 2743 00d8 0023     		movs	r3, #0
 2744              	.LVL352:
 2745 00da 01E0     		b	.L178
 2746              	.LVL353:
 2747              	.L179:
 766:Drivers/hagl/src/hagl.c ****             }
 2748              		.loc 1 766 0
 2749 00dc 0133     		adds	r3, r3, #1
 2750              	.LVL354:
 2751 00de 1BB2     		sxth	r3, r3
 2752              	.LVL355:
 2753              	.L178:
 757:Drivers/hagl/src/hagl.c ****             if (nodes[i] > nodes[i + 1]) {
 2754              		.loc 1 757 0
 2755 00e0 1946     		mov	r1, r3
 2756 00e2 621E     		subs	r2, r4, #1
 2757 00e4 9342     		cmp	r3, r2
 2758 00e6 1CDA     		bge	.L191
 758:Drivers/hagl/src/hagl.c ****                 int16_t swap = nodes[i];
 2759              		.loc 1 758 0
 2760 00e8 20AA     		add	r2, sp, #128
 2761 00ea 02EB4302 		add	r2, r2, r3, lsl #1
 2762 00ee 32F8800C 		ldrh	r0, [r2, #-128]
 2763 00f2 5A1C     		adds	r2, r3, #1
 2764 00f4 0DF1800C 		add	ip, sp, #128
 2765 00f8 0CEB420C 		add	ip, ip, r2, lsl #1
 2766 00fc 3CF880CC 		ldrh	ip, [ip, #-128]
 2767 0100 6045     		cmp	r0, ip
 2768 0102 EBD9     		bls	.L179
 2769              	.LVL356:
 2770              	.LBB47:
ARM GAS  /tmp/ccrQATq6.s 			page 73


 760:Drivers/hagl/src/hagl.c ****                 nodes[i + 1] = swap;
 2771              		.loc 1 760 0
 2772 0104 0DF1800E 		add	lr, sp, #128
 2773 0108 0EEB4101 		add	r1, lr, r1, lsl #1
 2774 010c 21F880CC 		strh	ip, [r1, #-128]	@ movhi
 761:Drivers/hagl/src/hagl.c ****                 if (i) {
 2775              		.loc 1 761 0
 2776 0110 0EEB4202 		add	r2, lr, r2, lsl #1
 2777 0114 22F8800C 		strh	r0, [r2, #-128]	@ movhi
 762:Drivers/hagl/src/hagl.c ****                     i--;
 2778              		.loc 1 762 0
 2779 0118 002B     		cmp	r3, #0
 2780 011a E1D0     		beq	.L178
 763:Drivers/hagl/src/hagl.c ****                 }
 2781              		.loc 1 763 0
 2782 011c 013B     		subs	r3, r3, #1
 2783              	.LVL357:
 2784 011e 1BB2     		sxth	r3, r3
 2785              	.LVL358:
 2786 0120 DEE7     		b	.L178
 2787              	.LVL359:
 2788              	.L191:
 2789              	.LBE47:
 2790              	.LBB48:
 771:Drivers/hagl/src/hagl.c ****             int16_t width = nodes[i + 1] - nodes[i];
 2791              		.loc 1 771 0
 2792 0122 4FF0000A 		mov	r10, #0
 2793 0126 16E0     		b	.L182
 2794              	.LVL360:
 2795              	.L183:
 2796              	.LBB49:
 772:Drivers/hagl/src/hagl.c ****             hagl_draw_hline(nodes[i], y, width, color);
 2797              		.loc 1 772 0 discriminator 3
 2798 0128 0AF10103 		add	r3, r10, #1
 2799 012c 20AA     		add	r2, sp, #128
 2800 012e 02EB4303 		add	r3, r2, r3, lsl #1
 2801 0132 33F8802C 		ldrh	r2, [r3, #-128]
 2802 0136 20AB     		add	r3, sp, #128
 2803 0138 03EB4A03 		add	r3, r3, r10, lsl #1
 2804 013c 33F8800C 		ldrh	r0, [r3, #-128]
 2805 0140 121A     		subs	r2, r2, r0
 2806              	.LVL361:
 773:Drivers/hagl/src/hagl.c ****         }
 2807              		.loc 1 773 0 discriminator 3
 2808 0142 4346     		mov	r3, r8
 2809 0144 92B2     		uxth	r2, r2
 2810 0146 3146     		mov	r1, r6
 2811 0148 00B2     		sxth	r0, r0
 2812 014a FFF7FEFF 		bl	hagl_draw_hline
 2813              	.LVL362:
 2814              	.LBE49:
 771:Drivers/hagl/src/hagl.c ****             int16_t width = nodes[i + 1] - nodes[i];
 2815              		.loc 1 771 0 discriminator 3
 2816 014e 0AF1020A 		add	r10, r10, #2
 2817              	.LVL363:
 2818 0152 0FFA8AFA 		sxth	r10, r10
 2819              	.LVL364:
ARM GAS  /tmp/ccrQATq6.s 			page 74


 2820              	.L182:
 771:Drivers/hagl/src/hagl.c ****             int16_t width = nodes[i + 1] - nodes[i];
 2821              		.loc 1 771 0 is_stmt 0 discriminator 1
 2822 0156 5445     		cmp	r4, r10
 2823 0158 E6DC     		bgt	.L183
 2824              	.LBE48:
 2825              	.LBE45:
 733:Drivers/hagl/src/hagl.c **** 
 2826              		.loc 1 733 0 is_stmt 1 discriminator 2
 2827 015a 0136     		adds	r6, r6, #1
 2828              	.LVL365:
 2829 015c 36B2     		sxth	r6, r6
 2830              	.LVL366:
 2831              	.L169:
 733:Drivers/hagl/src/hagl.c **** 
 2832              		.loc 1 733 0 is_stmt 0 discriminator 1
 2833 015e 4E45     		cmp	r6, r9
 2834 0160 04DA     		bge	.L192
 2835              	.LVL367:
 2836              	.LBB52:
 737:Drivers/hagl/src/hagl.c **** 
 2837              		.loc 1 737 0 is_stmt 1
 2838 0162 7B1E     		subs	r3, r7, #1
 2839 0164 1BB2     		sxth	r3, r3
 2840              	.LVL368:
 2841              	.LBB50:
 739:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 2842              		.loc 1 739 0
 2843 0166 0022     		movs	r2, #0
 2844              	.LBE50:
 736:Drivers/hagl/src/hagl.c ****         int16_t j = amount - 1;
 2845              		.loc 1 736 0
 2846 0168 1446     		mov	r4, r2
 2847              	.LBB51:
 739:Drivers/hagl/src/hagl.c ****             x0 = vertices[(i << 1) + 0];
 2848              		.loc 1 739 0
 2849 016a 7EE7     		b	.L170
 2850              	.LVL369:
 2851              	.L192:
 2852              	.LBE51:
 2853              	.LBE52:
 776:Drivers/hagl/src/hagl.c **** 
 2854              		.loc 1 776 0
 2855 016c 20B0     		add	sp, sp, #128
 2856              	.LCFI58:
 2857              		.cfi_def_cfa_offset 32
 2858              		@ sp needed
 2859 016e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2860              		.cfi_endproc
 2861              	.LFE27:
 2863              		.section	.text.hagl_draw_triangle,"ax",%progbits
 2864              		.align	1
 2865              		.global	hagl_draw_triangle
 2866              		.syntax unified
 2867              		.thumb
 2868              		.thumb_func
 2869              		.fpu fpv5-d16
ARM GAS  /tmp/ccrQATq6.s 			page 75


 2871              	hagl_draw_triangle:
 2872              	.LFB28:
 778:Drivers/hagl/src/hagl.c ****     int16_t vertices[6] = {x0, y0, x1, y1, x2, y2};
 2873              		.loc 1 778 0
 2874              		.cfi_startproc
 2875              		@ args = 12, pretend = 0, frame = 16
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              	.LVL370:
 2878 0000 00B5     		push	{lr}
 2879              	.LCFI59:
 2880              		.cfi_def_cfa_offset 4
 2881              		.cfi_offset 14, -4
 2882 0002 85B0     		sub	sp, sp, #20
 2883              	.LCFI60:
 2884              		.cfi_def_cfa_offset 24
 779:Drivers/hagl/src/hagl.c ****     hagl_draw_polygon(3, vertices, color);
 2885              		.loc 1 779 0
 2886 0004 ADF80400 		strh	r0, [sp, #4]	@ movhi
 2887 0008 ADF80610 		strh	r1, [sp, #6]	@ movhi
 2888 000c ADF80820 		strh	r2, [sp, #8]	@ movhi
 2889 0010 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 2890 0014 BDF91830 		ldrsh	r3, [sp, #24]
 2891              	.LVL371:
 2892 0018 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 2893 001c BDF91C30 		ldrsh	r3, [sp, #28]
 2894 0020 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 780:Drivers/hagl/src/hagl.c **** };
 2895              		.loc 1 780 0
 2896 0024 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 2897              	.LVL372:
 2898 0028 01A9     		add	r1, sp, #4
 2899              	.LVL373:
 2900 002a 0320     		movs	r0, #3
 2901              	.LVL374:
 2902 002c FFF7FEFF 		bl	hagl_draw_polygon
 2903              	.LVL375:
 781:Drivers/hagl/src/hagl.c **** 
 2904              		.loc 1 781 0
 2905 0030 05B0     		add	sp, sp, #20
 2906              	.LCFI61:
 2907              		.cfi_def_cfa_offset 4
 2908              		@ sp needed
 2909 0032 5DF804FB 		ldr	pc, [sp], #4
 2910              		.cfi_endproc
 2911              	.LFE28:
 2913              		.section	.text.hagl_fill_triangle,"ax",%progbits
 2914              		.align	1
 2915              		.global	hagl_fill_triangle
 2916              		.syntax unified
 2917              		.thumb
 2918              		.thumb_func
 2919              		.fpu fpv5-d16
 2921              	hagl_fill_triangle:
 2922              	.LFB29:
 783:Drivers/hagl/src/hagl.c ****     int16_t vertices[6] = {x0, y0, x1, y1, x2, y2};
 2923              		.loc 1 783 0
 2924              		.cfi_startproc
ARM GAS  /tmp/ccrQATq6.s 			page 76


 2925              		@ args = 12, pretend = 0, frame = 16
 2926              		@ frame_needed = 0, uses_anonymous_args = 0
 2927              	.LVL376:
 2928 0000 00B5     		push	{lr}
 2929              	.LCFI62:
 2930              		.cfi_def_cfa_offset 4
 2931              		.cfi_offset 14, -4
 2932 0002 85B0     		sub	sp, sp, #20
 2933              	.LCFI63:
 2934              		.cfi_def_cfa_offset 24
 784:Drivers/hagl/src/hagl.c ****     hagl_fill_polygon(3, vertices, color);
 2935              		.loc 1 784 0
 2936 0004 ADF80400 		strh	r0, [sp, #4]	@ movhi
 2937 0008 ADF80610 		strh	r1, [sp, #6]	@ movhi
 2938 000c ADF80820 		strh	r2, [sp, #8]	@ movhi
 2939 0010 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 2940 0014 BDF91830 		ldrsh	r3, [sp, #24]
 2941              	.LVL377:
 2942 0018 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 2943 001c BDF91C30 		ldrsh	r3, [sp, #28]
 2944 0020 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 785:Drivers/hagl/src/hagl.c **** }
 2945              		.loc 1 785 0
 2946 0024 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 2947              	.LVL378:
 2948 0028 01A9     		add	r1, sp, #4
 2949              	.LVL379:
 2950 002a 0320     		movs	r0, #3
 2951              	.LVL380:
 2952 002c FFF7FEFF 		bl	hagl_fill_polygon
 2953              	.LVL381:
 786:Drivers/hagl/src/hagl.c **** 
 2954              		.loc 1 786 0
 2955 0030 05B0     		add	sp, sp, #20
 2956              	.LCFI64:
 2957              		.cfi_def_cfa_offset 4
 2958              		@ sp needed
 2959 0032 5DF804FB 		ldr	pc, [sp], #4
 2960              		.cfi_endproc
 2961              	.LFE29:
 2963              		.section	.text.hagl_draw_rounded_rectangle,"ax",%progbits
 2964              		.align	1
 2965              		.global	hagl_draw_rounded_rectangle
 2966              		.syntax unified
 2967              		.thumb
 2968              		.thumb_func
 2969              		.fpu fpv5-d16
 2971              	hagl_draw_rounded_rectangle:
 2972              	.LFB30:
 788:Drivers/hagl/src/hagl.c **** 
 2973              		.loc 1 788 0
 2974              		.cfi_startproc
 2975              		@ args = 8, pretend = 0, frame = 32
 2976              		@ frame_needed = 0, uses_anonymous_args = 0
 2977              	.LVL382:
 2978 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2979              	.LCFI65:
ARM GAS  /tmp/ccrQATq6.s 			page 77


 2980              		.cfi_def_cfa_offset 36
 2981              		.cfi_offset 4, -36
 2982              		.cfi_offset 5, -32
 2983              		.cfi_offset 6, -28
 2984              		.cfi_offset 7, -24
 2985              		.cfi_offset 8, -20
 2986              		.cfi_offset 9, -16
 2987              		.cfi_offset 10, -12
 2988              		.cfi_offset 11, -8
 2989              		.cfi_offset 14, -4
 2990 0004 89B0     		sub	sp, sp, #36
 2991              	.LCFI66:
 2992              		.cfi_def_cfa_offset 72
 2993 0006 0446     		mov	r4, r0
 2994 0008 0E46     		mov	r6, r1
 2995 000a 1546     		mov	r5, r2
 2996 000c 1946     		mov	r1, r3
 2997              	.LVL383:
 2998 000e BDF94830 		ldrsh	r3, [sp, #72]
 2999              	.LVL384:
 3000 0012 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
 3001              	.LVL385:
 3002 0016 0092     		str	r2, [sp]
 794:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 3003              		.loc 1 794 0
 3004 0018 A842     		cmp	r0, r5
 3005 001a 02DC     		bgt	.L198
 3006 001c 2A46     		mov	r2, r5
 3007 001e 0546     		mov	r5, r0
 3008 0020 1446     		mov	r4, r2
 3009              	.L198:
 3010              	.LVL386:
 801:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 3011              		.loc 1 801 0
 3012 0022 8E42     		cmp	r6, r1
 3013 0024 02DC     		bgt	.L199
 3014 0026 0A46     		mov	r2, r1
 3015 0028 3146     		mov	r1, r6
 3016 002a 1646     		mov	r6, r2
 3017              	.L199:
 3018              	.LVL387:
 808:Drivers/hagl/src/hagl.c ****         return;
 3019              		.loc 1 808 0
 3020 002c 704A     		ldr	r2, .L208
 3021 002e 1288     		ldrh	r2, [r2]
 3022 0030 9442     		cmp	r4, r2
 3023 0032 C0F2DA80 		blt	.L197
 808:Drivers/hagl/src/hagl.c ****         return;
 3024              		.loc 1 808 0 is_stmt 0 discriminator 1
 3025 0036 6E4A     		ldr	r2, .L208
 3026 0038 5288     		ldrh	r2, [r2, #2]
 3027 003a 9642     		cmp	r6, r2
 3028 003c C0F2D580 		blt	.L197
 813:Drivers/hagl/src/hagl.c ****         return;
 3029              		.loc 1 813 0 is_stmt 1
 3030 0040 6B4A     		ldr	r2, .L208
 3031 0042 9288     		ldrh	r2, [r2, #4]
ARM GAS  /tmp/ccrQATq6.s 			page 78


 3032 0044 9542     		cmp	r5, r2
 3033 0046 00F3D080 		bgt	.L197
 813:Drivers/hagl/src/hagl.c ****         return;
 3034              		.loc 1 813 0 is_stmt 0 discriminator 1
 3035 004a 694A     		ldr	r2, .L208
 3036 004c D288     		ldrh	r2, [r2, #6]
 3037 004e 9142     		cmp	r1, r2
 3038 0050 00F3CB80 		bgt	.L197
 818:Drivers/hagl/src/hagl.c ****     height = y1 - y0 + 1;
 3039              		.loc 1 818 0 is_stmt 1
 3040 0054 A2B2     		uxth	r2, r4
 3041 0056 1046     		mov	r0, r2
 3042 0058 0692     		str	r2, [sp, #24]
 3043 005a AAB2     		uxth	r2, r5
 3044 005c 871A     		subs	r7, r0, r2
 3045 005e BFB2     		uxth	r7, r7
 3046 0060 0137     		adds	r7, r7, #1
 3047 0062 BFB2     		uxth	r7, r7
 3048              	.LVL388:
 819:Drivers/hagl/src/hagl.c ****     r = min(r, min(width / 2, height / 2));
 3049              		.loc 1 819 0
 3050 0064 B0B2     		uxth	r0, r6
 3051 0066 0790     		str	r0, [sp, #28]
 3052 0068 1FFA81F9 		uxth	r9, r1
 3053 006c A0EB090A 		sub	r10, r0, r9
 3054 0070 1FFA8AFA 		uxth	r10, r10
 3055 0074 0AF1010A 		add	r10, r10, #1
 3056 0078 1FFA8AFA 		uxth	r10, r10
 3057              	.LVL389:
 820:Drivers/hagl/src/hagl.c **** 
 3058              		.loc 1 820 0
 3059 007c 9E46     		mov	lr, r3
 3060 007e 7808     		lsrs	r0, r7, #1
 3061 0080 4FEA5A0C 		lsr	ip, r10, #1
 3062              	.LVL390:
 3063              	.LBB53:
 3064              	.LBB54:
  50:Drivers/hagl/include/rgb888.h ****         return b;
 3065              		.loc 2 50 0
 3066 0084 6045     		cmp	r0, ip
 3067 0086 00DD     		ble	.L201
  51:Drivers/hagl/include/rgb888.h ****     };
 3068              		.loc 2 51 0
 3069 0088 6046     		mov	r0, ip
 3070              	.LVL391:
 3071              	.L201:
 3072              	.LBE54:
 3073              	.LBE53:
 3074              	.LBB55:
 3075              	.LBB56:
  50:Drivers/hagl/include/rgb888.h ****         return b;
 3076              		.loc 2 50 0
 3077 008a 8342     		cmp	r3, r0
 3078 008c 00DD     		ble	.L202
  51:Drivers/hagl/include/rgb888.h ****     };
 3079              		.loc 2 51 0
 3080 008e 8646     		mov	lr, r0
ARM GAS  /tmp/ccrQATq6.s 			page 79


 3081              	.L202:
 3082              	.LVL392:
 3083              	.LBE56:
 3084              	.LBE55:
 820:Drivers/hagl/src/hagl.c **** 
 3085              		.loc 1 820 0
 3086 0090 0FFA8EFB 		sxth	fp, lr
 3087              	.LVL393:
 822:Drivers/hagl/src/hagl.c ****     hagl_draw_hline(x0 + r, y1, width - 2 * r, color);
 3088              		.loc 1 822 0
 3089 0094 1FFA8EF3 		uxth	r3, lr
 3090 0098 1A44     		add	r2, r2, r3
 3091 009a 92B2     		uxth	r2, r2
 3092 009c 0292     		str	r2, [sp, #8]
 3093 009e 10B2     		sxth	r0, r2
 3094 00a0 0193     		str	r3, [sp, #4]
 3095 00a2 4FEA4308 		lsl	r8, r3, #1
 3096 00a6 1FFA88F8 		uxth	r8, r8
 3097 00aa A7EB0807 		sub	r7, r7, r8
 3098              	.LVL394:
 3099 00ae BFB2     		uxth	r7, r7
 3100 00b0 009B     		ldr	r3, [sp]
 3101 00b2 3A46     		mov	r2, r7
 3102 00b4 0390     		str	r0, [sp, #12]
 3103 00b6 FFF7FEFF 		bl	hagl_draw_hline
 3104              	.LVL395:
 823:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x0, y0 + r, height - 2 * r, color);
 3105              		.loc 1 823 0
 3106 00ba 009B     		ldr	r3, [sp]
 3107 00bc 3A46     		mov	r2, r7
 3108 00be 3146     		mov	r1, r6
 3109 00c0 0398     		ldr	r0, [sp, #12]
 3110 00c2 FFF7FEFF 		bl	hagl_draw_hline
 3111              	.LVL396:
 824:Drivers/hagl/src/hagl.c ****     hagl_draw_vline(x1, y0 + r, height - 2 * r, color);
 3112              		.loc 1 824 0
 3113 00c6 019B     		ldr	r3, [sp, #4]
 3114 00c8 9944     		add	r9, r9, r3
 3115              	.LVL397:
 3116 00ca 1FFA89F3 		uxth	r3, r9
 3117 00ce 0393     		str	r3, [sp, #12]
 3118 00d0 1FB2     		sxth	r7, r3
 3119 00d2 AAEB0806 		sub	r6, r10, r8
 3120              	.LVL398:
 3121 00d6 B6B2     		uxth	r6, r6
 3122 00d8 DDF80090 		ldr	r9, [sp]
 3123 00dc 4B46     		mov	r3, r9
 3124 00de 3246     		mov	r2, r6
 3125 00e0 3946     		mov	r1, r7
 3126 00e2 2846     		mov	r0, r5
 3127 00e4 FFF7FEFF 		bl	hagl_draw_vline
 3128              	.LVL399:
 825:Drivers/hagl/src/hagl.c **** 
 3129              		.loc 1 825 0
 3130 00e8 4B46     		mov	r3, r9
 3131 00ea 3246     		mov	r2, r6
 3132 00ec 3946     		mov	r1, r7
ARM GAS  /tmp/ccrQATq6.s 			page 80


 3133 00ee 2046     		mov	r0, r4
 3134 00f0 FFF7FEFF 		bl	hagl_draw_vline
 3135              	.LVL400:
 829:Drivers/hagl/src/hagl.c **** 
 3136              		.loc 1 829 0
 3137 00f4 C8F10308 		rsb	r8, r8, #3
 3138 00f8 0FFA88FA 		sxth	r10, r8
 3139              	.LVL401:
 827:Drivers/hagl/src/hagl.c ****     y = r;
 3140              		.loc 1 827 0
 3141 00fc 0026     		movs	r6, #0
 831:Drivers/hagl/src/hagl.c ****         x++;
 3142              		.loc 1 831 0
 3143 00fe 5DE0     		b	.L203
 3144              	.LVL402:
 3145              	.L204:
 838:Drivers/hagl/src/hagl.c ****         }
 3146              		.loc 1 838 0
 3147 0100 A300     		lsls	r3, r4, #2
 3148 0102 9BB2     		uxth	r3, r3
 3149 0104 9A44     		add	r10, r10, r3
 3150              	.LVL403:
 3151 0106 1FFA8AFA 		uxth	r10, r10
 3152 010a 0AF1060A 		add	r10, r10, #6
 3153 010e 0FFA8AFA 		sxth	r10, r10
 3154              	.LVL404:
 3155              	.L205:
 842:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + y, y0 + r - x, color);
 3156              		.loc 1 842 0
 3157 0112 069B     		ldr	r3, [sp, #24]
 3158 0114 1A46     		mov	r2, r3
 3159 0116 019B     		ldr	r3, [sp, #4]
 3160 0118 A2EB0308 		sub	r8, r2, r3
 3161 011c 1FFA88F8 		uxth	r8, r8
 3162 0120 04EB0803 		add	r3, r4, r8
 3163 0124 18B2     		sxth	r0, r3
 3164 0126 1FFA8BF5 		uxth	r5, fp
 3165 012a 039A     		ldr	r2, [sp, #12]
 3166 012c 571B     		subs	r7, r2, r5
 3167 012e 3FB2     		sxth	r7, r7
 3168 0130 009A     		ldr	r2, [sp]
 3169 0132 3946     		mov	r1, r7
 3170 0134 0490     		str	r0, [sp, #16]
 3171 0136 FFF7FEFF 		bl	hagl_put_pixel
 3172              	.LVL405:
 843:Drivers/hagl/src/hagl.c **** 
 3173              		.loc 1 843 0
 3174 013a A844     		add	r8, r8, r5
 3175 013c 0FFA88F1 		sxth	r1, r8
 3176 0140 0B46     		mov	r3, r1
 3177 0142 039A     		ldr	r2, [sp, #12]
 3178 0144 A2EB0409 		sub	r9, r2, r4
 3179 0148 0FFA89F9 		sxth	r9, r9
 3180 014c 009A     		ldr	r2, [sp]
 3181 014e 4946     		mov	r1, r9
 3182 0150 0593     		str	r3, [sp, #20]
 3183 0152 1846     		mov	r0, r3
ARM GAS  /tmp/ccrQATq6.s 			page 81


 3184 0154 FFF7FEFF 		bl	hagl_put_pixel
 3185              	.LVL406:
 846:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - y, y0 + r - x, color);
 3186              		.loc 1 846 0
 3187 0158 029A     		ldr	r2, [sp, #8]
 3188 015a A2EB0408 		sub	r8, r2, r4
 3189 015e 0FFA88F8 		sxth	r8, r8
 3190 0162 009A     		ldr	r2, [sp]
 3191 0164 3946     		mov	r1, r7
 3192 0166 4046     		mov	r0, r8
 3193 0168 FFF7FEFF 		bl	hagl_put_pixel
 3194              	.LVL407:
 847:Drivers/hagl/src/hagl.c **** 
 3195              		.loc 1 847 0
 3196 016c 029A     		ldr	r2, [sp, #8]
 3197 016e 571B     		subs	r7, r2, r5
 3198 0170 3FB2     		sxth	r7, r7
 3199 0172 009A     		ldr	r2, [sp]
 3200 0174 4946     		mov	r1, r9
 3201 0176 3846     		mov	r0, r7
 3202 0178 FFF7FEFF 		bl	hagl_put_pixel
 3203              	.LVL408:
 850:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x1 - r + y, y1 - r + x, color);
 3204              		.loc 1 850 0
 3205 017c 079A     		ldr	r2, [sp, #28]
 3206 017e 019B     		ldr	r3, [sp, #4]
 3207 0180 A2EB0309 		sub	r9, r2, r3
 3208 0184 1FFA89F9 		uxth	r9, r9
 3209 0188 4D44     		add	r5, r5, r9
 3210 018a 2DB2     		sxth	r5, r5
 3211 018c 009A     		ldr	r2, [sp]
 3212 018e 2946     		mov	r1, r5
 3213 0190 0498     		ldr	r0, [sp, #16]
 3214 0192 FFF7FEFF 		bl	hagl_put_pixel
 3215              	.LVL409:
 851:Drivers/hagl/src/hagl.c **** 
 3216              		.loc 1 851 0
 3217 0196 4C44     		add	r4, r4, r9
 3218 0198 24B2     		sxth	r4, r4
 3219 019a DDF80090 		ldr	r9, [sp]
 3220 019e 4A46     		mov	r2, r9
 3221 01a0 2146     		mov	r1, r4
 3222 01a2 0598     		ldr	r0, [sp, #20]
 3223 01a4 FFF7FEFF 		bl	hagl_put_pixel
 3224              	.LVL410:
 854:Drivers/hagl/src/hagl.c ****         hagl_put_pixel(x0 + r - y, y1 - r + x, color);
 3225              		.loc 1 854 0
 3226 01a8 4A46     		mov	r2, r9
 3227 01aa 2946     		mov	r1, r5
 3228 01ac 4046     		mov	r0, r8
 3229 01ae FFF7FEFF 		bl	hagl_put_pixel
 3230              	.LVL411:
 855:Drivers/hagl/src/hagl.c ****     }
 3231              		.loc 1 855 0
 3232 01b2 4A46     		mov	r2, r9
 3233 01b4 2146     		mov	r1, r4
 3234 01b6 3846     		mov	r0, r7
ARM GAS  /tmp/ccrQATq6.s 			page 82


 3235 01b8 FFF7FEFF 		bl	hagl_put_pixel
 3236              	.LVL412:
 3237              	.L203:
 831:Drivers/hagl/src/hagl.c ****         x++;
 3238              		.loc 1 831 0
 3239 01bc 5E45     		cmp	r6, fp
 3240 01be 14DC     		bgt	.L197
 832:Drivers/hagl/src/hagl.c **** 
 3241              		.loc 1 832 0
 3242 01c0 741C     		adds	r4, r6, #1
 3243 01c2 A4B2     		uxth	r4, r4
 3244 01c4 26B2     		sxth	r6, r4
 3245              	.LVL413:
 834:Drivers/hagl/src/hagl.c ****             y--;
 3246              		.loc 1 834 0
 3247 01c6 BAF1000F 		cmp	r10, #0
 3248 01ca 99DD     		ble	.L204
 835:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 3249              		.loc 1 835 0
 3250 01cc 0BF1FF3B 		add	fp, fp, #-1
 3251              	.LVL414:
 3252 01d0 0FFA8BFB 		sxth	fp, fp
 3253              	.LVL415:
 836:Drivers/hagl/src/hagl.c ****         } else {
 3254              		.loc 1 836 0
 3255 01d4 A6EB0B03 		sub	r3, r6, fp
 3256 01d8 0AEB830A 		add	r10, r10, r3, lsl #2
 3257              	.LVL416:
 3258 01dc 1FFA8AFA 		uxth	r10, r10
 3259 01e0 0AF10A0A 		add	r10, r10, #10
 3260 01e4 0FFA8AFA 		sxth	r10, r10
 3261              	.LVL417:
 3262 01e8 93E7     		b	.L205
 3263              	.LVL418:
 3264              	.L197:
 857:Drivers/hagl/src/hagl.c **** 
 3265              		.loc 1 857 0
 3266 01ea 09B0     		add	sp, sp, #36
 3267              	.LCFI67:
 3268              		.cfi_def_cfa_offset 36
 3269              		@ sp needed
 3270 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3271              	.LVL419:
 3272              	.L209:
 3273              		.align	2
 3274              	.L208:
 3275 01f0 00000000 		.word	.LANCHOR0
 3276              		.cfi_endproc
 3277              	.LFE30:
 3279              		.section	.text.hagl_fill_rounded_rectangle,"ax",%progbits
 3280              		.align	1
 3281              		.global	hagl_fill_rounded_rectangle
 3282              		.syntax unified
 3283              		.thumb
 3284              		.thumb_func
 3285              		.fpu fpv5-d16
 3287              	hagl_fill_rounded_rectangle:
ARM GAS  /tmp/ccrQATq6.s 			page 83


 3288              	.LFB31:
 859:Drivers/hagl/src/hagl.c **** 
 3289              		.loc 1 859 0
 3290              		.cfi_startproc
 3291              		@ args = 8, pretend = 0, frame = 40
 3292              		@ frame_needed = 0, uses_anonymous_args = 0
 3293              	.LVL420:
 3294 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3295              	.LCFI68:
 3296              		.cfi_def_cfa_offset 36
 3297              		.cfi_offset 4, -36
 3298              		.cfi_offset 5, -32
 3299              		.cfi_offset 6, -28
 3300              		.cfi_offset 7, -24
 3301              		.cfi_offset 8, -20
 3302              		.cfi_offset 9, -16
 3303              		.cfi_offset 10, -12
 3304              		.cfi_offset 11, -8
 3305              		.cfi_offset 14, -4
 3306 0004 8DB0     		sub	sp, sp, #52
 3307              	.LCFI69:
 3308              		.cfi_def_cfa_offset 88
 3309 0006 8246     		mov	r10, r0
 3310 0008 0392     		str	r2, [sp, #12]
 3311 000a BDF95800 		ldrsh	r0, [sp, #88]
 3312              	.LVL421:
 3313 000e 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 3314 0012 0294     		str	r4, [sp, #8]
 865:Drivers/hagl/src/hagl.c ****         x0 = x0 + x1;
 3315              		.loc 1 865 0
 3316 0014 9245     		cmp	r10, r2
 3317 0016 02DC     		bgt	.L211
 3318 0018 CDF80CA0 		str	r10, [sp, #12]
 3319 001c 9246     		mov	r10, r2
 3320              	.L211:
 3321              	.LVL422:
 872:Drivers/hagl/src/hagl.c ****         y0 = y0 + y1;
 3322              		.loc 1 872 0
 3323 001e 9942     		cmp	r1, r3
 3324 0020 02DC     		bgt	.L212
 3325 0022 1A46     		mov	r2, r3
 3326 0024 0B46     		mov	r3, r1
 3327              	.LVL423:
 3328 0026 1146     		mov	r1, r2
 3329              	.LVL424:
 3330              	.L212:
 879:Drivers/hagl/src/hagl.c ****         return;
 3331              		.loc 1 879 0
 3332 0028 594A     		ldr	r2, .L222
 3333 002a 1288     		ldrh	r2, [r2]
 3334 002c 9245     		cmp	r10, r2
 3335 002e C0F2AC80 		blt	.L210
 879:Drivers/hagl/src/hagl.c ****         return;
 3336              		.loc 1 879 0 is_stmt 0 discriminator 1
 3337 0032 574A     		ldr	r2, .L222
 3338 0034 5288     		ldrh	r2, [r2, #2]
 3339 0036 9142     		cmp	r1, r2
ARM GAS  /tmp/ccrQATq6.s 			page 84


 3340 0038 C0F2A780 		blt	.L210
 884:Drivers/hagl/src/hagl.c ****         return;
 3341              		.loc 1 884 0 is_stmt 1
 3342 003c 544A     		ldr	r2, .L222
 3343 003e 9288     		ldrh	r2, [r2, #4]
 3344 0040 039C     		ldr	r4, [sp, #12]
 3345 0042 9442     		cmp	r4, r2
 3346 0044 00F3A180 		bgt	.L210
 884:Drivers/hagl/src/hagl.c ****         return;
 3347              		.loc 1 884 0 is_stmt 0 discriminator 1
 3348 0048 514A     		ldr	r2, .L222
 3349 004a D288     		ldrh	r2, [r2, #6]
 3350 004c 9342     		cmp	r3, r2
 3351 004e 00F39C80 		bgt	.L210
 889:Drivers/hagl/src/hagl.c ****     height = y1 - y0 + 1;
 3352              		.loc 1 889 0 is_stmt 1
 3353 0052 1FFA8AF2 		uxth	r2, r10
 3354 0056 0992     		str	r2, [sp, #36]
 3355 0058 A4B2     		uxth	r4, r4
 3356 005a 0A94     		str	r4, [sp, #40]
 3357 005c 141B     		subs	r4, r2, r4
 3358 005e A4B2     		uxth	r4, r4
 3359 0060 0134     		adds	r4, r4, #1
 3360              	.LVL425:
 890:Drivers/hagl/src/hagl.c ****     r = min(r, min(width / 2, height / 2));
 3361              		.loc 1 890 0
 3362 0062 8AB2     		uxth	r2, r1
 3363 0064 0792     		str	r2, [sp, #28]
 3364 0066 9BB2     		uxth	r3, r3
 3365 0068 0893     		str	r3, [sp, #32]
 3366 006a D21A     		subs	r2, r2, r3
 3367 006c 92B2     		uxth	r2, r2
 3368 006e 0132     		adds	r2, r2, #1
 3369              	.LVL426:
 891:Drivers/hagl/src/hagl.c **** 
 3370              		.loc 1 891 0
 3371 0070 8146     		mov	r9, r0
 3372 0072 C4F34E01 		ubfx	r1, r4, #1, #15
 3373              	.LVL427:
 3374 0076 C2F34E02 		ubfx	r2, r2, #1, #15
 3375              	.LVL428:
 3376              	.LBB57:
 3377              	.LBB58:
  50:Drivers/hagl/include/rgb888.h ****         return b;
 3378              		.loc 2 50 0
 3379 007a 9142     		cmp	r1, r2
 3380 007c 00DD     		ble	.L214
  51:Drivers/hagl/include/rgb888.h ****     };
 3381              		.loc 2 51 0
 3382 007e 1146     		mov	r1, r2
 3383              	.LVL429:
 3384              	.L214:
 3385              	.LBE58:
 3386              	.LBE57:
 3387              	.LBB59:
 3388              	.LBB60:
  50:Drivers/hagl/include/rgb888.h ****         return b;
ARM GAS  /tmp/ccrQATq6.s 			page 85


 3389              		.loc 2 50 0
 3390 0080 8842     		cmp	r0, r1
 3391 0082 00DD     		ble	.L215
  51:Drivers/hagl/include/rgb888.h ****     };
 3392              		.loc 2 51 0
 3393 0084 8946     		mov	r9, r1
 3394              	.L215:
 3395              	.LVL430:
 3396              	.LBE60:
 3397              	.LBE59:
 891:Drivers/hagl/src/hagl.c **** 
 3398              		.loc 1 891 0
 3399 0086 0FFA89F2 		sxth	r2, r9
 3400              	.LVL431:
 895:Drivers/hagl/src/hagl.c **** 
 3401              		.loc 1 895 0
 3402 008a 1FFA89F9 		uxth	r9, r9
 3403 008e 4FEA4903 		lsl	r3, r9, #1
 3404              	.LVL432:
 3405 0092 9BB2     		uxth	r3, r3
 3406 0094 C3F10303 		rsb	r3, r3, #3
 3407 0098 1BB2     		sxth	r3, r3
 3408 009a 0493     		str	r3, [sp, #16]
 3409              	.LVL433:
 893:Drivers/hagl/src/hagl.c ****     y = r;
 3410              		.loc 1 893 0
 3411 009c 0023     		movs	r3, #0
 3412 009e 9846     		mov	r8, r3
 3413 00a0 CDF82CA0 		str	r10, [sp, #44]
 3414 00a4 9246     		mov	r10, r2
 3415              	.LVL434:
 897:Drivers/hagl/src/hagl.c ****         x++;
 3416              		.loc 1 897 0
 3417 00a6 49E0     		b	.L216
 3418              	.LVL435:
 3419              	.L217:
 904:Drivers/hagl/src/hagl.c ****         }
 3420              		.loc 1 904 0
 3421 00a8 B300     		lsls	r3, r6, #2
 3422 00aa 9BB2     		uxth	r3, r3
 3423 00ac 049A     		ldr	r2, [sp, #16]
 3424 00ae 1344     		add	r3, r3, r2
 3425 00b0 9BB2     		uxth	r3, r3
 3426 00b2 0633     		adds	r3, r3, #6
 3427 00b4 1BB2     		sxth	r3, r3
 3428 00b6 0493     		str	r3, [sp, #16]
 3429              	.LVL436:
 3430              	.L218:
 908:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - y;
 3431              		.loc 1 908 0
 3432 00b8 089B     		ldr	r3, [sp, #32]
 3433 00ba 03EB090B 		add	fp, r3, r9
 3434 00be 1FFA8BFB 		uxth	fp, fp
 3435 00c2 ABEB0601 		sub	r1, fp, r6
 3436              	.LVL437:
 909:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + y;
 3437              		.loc 1 909 0
ARM GAS  /tmp/ccrQATq6.s 			page 86


 3438 00c6 0A9B     		ldr	r3, [sp, #40]
 3439 00c8 03EB0904 		add	r4, r3, r9
 3440 00cc A4B2     		uxth	r4, r4
 3441 00ce 1FFA8AF7 		uxth	r7, r10
 3442 00d2 E31B     		subs	r3, r4, r7
 3443 00d4 9AB2     		uxth	r2, r3
 3444 00d6 10B2     		sxth	r0, r2
 3445              	.LVL438:
 910:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 3446              		.loc 1 910 0
 3447 00d8 099B     		ldr	r3, [sp, #36]
 3448 00da A3EB0905 		sub	r5, r3, r9
 3449 00de ADB2     		uxth	r5, r5
 3450 00e0 7B19     		adds	r3, r7, r5
 3451 00e2 9BB2     		uxth	r3, r3
 3452              	.LVL439:
 911:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 3453              		.loc 1 911 0
 3454 00e4 9B1A     		subs	r3, r3, r2
 3455              	.LVL440:
 3456 00e6 9BB2     		uxth	r3, r3
 3457 00e8 1A46     		mov	r2, r3
 3458              	.LVL441:
 912:Drivers/hagl/src/hagl.c **** 
 3459              		.loc 1 912 0
 3460 00ea 029B     		ldr	r3, [sp, #8]
 3461 00ec 0692     		str	r2, [sp, #24]
 3462 00ee 09B2     		sxth	r1, r1
 3463 00f0 0590     		str	r0, [sp, #20]
 3464 00f2 FFF7FEFF 		bl	hagl_draw_hline
 3465              	.LVL442:
 914:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - x;
 3466              		.loc 1 914 0
 3467 00f6 ABEB0701 		sub	r1, fp, r7
 3468              	.LVL443:
 915:Drivers/hagl/src/hagl.c ****         rx1 = x1 - r + x;
 3469              		.loc 1 915 0
 3470 00fa A41B     		subs	r4, r4, r6
 3471 00fc A3B2     		uxth	r3, r4
 3472 00fe 0FFA83FB 		sxth	fp, r3
 3473              	.LVL444:
 916:Drivers/hagl/src/hagl.c ****         width = rx1 -  rx0;
 3474              		.loc 1 916 0
 3475 0102 7419     		adds	r4, r6, r5
 3476 0104 A4B2     		uxth	r4, r4
 3477              	.LVL445:
 917:Drivers/hagl/src/hagl.c ****         hagl_draw_hline(rx0, ry0, width, color);
 3478              		.loc 1 917 0
 3479 0106 E41A     		subs	r4, r4, r3
 3480              	.LVL446:
 3481 0108 A4B2     		uxth	r4, r4
 3482              	.LVL447:
 918:Drivers/hagl/src/hagl.c **** 
 3483              		.loc 1 918 0
 3484 010a 029B     		ldr	r3, [sp, #8]
 3485 010c 2246     		mov	r2, r4
 3486 010e 09B2     		sxth	r1, r1
ARM GAS  /tmp/ccrQATq6.s 			page 87


 3487 0110 5846     		mov	r0, fp
 3488 0112 FFF7FEFF 		bl	hagl_draw_hline
 3489              	.LVL448:
 921:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - x;
 3490              		.loc 1 921 0
 3491 0116 0799     		ldr	r1, [sp, #28]
 3492 0118 A1EB0905 		sub	r5, r1, r9
 3493              	.LVL449:
 3494 011c ADB2     		uxth	r5, r5
 3495 011e 7919     		adds	r1, r7, r5
 3496              	.LVL450:
 925:Drivers/hagl/src/hagl.c **** 
 3497              		.loc 1 925 0
 3498 0120 029F     		ldr	r7, [sp, #8]
 3499 0122 3B46     		mov	r3, r7
 3500 0124 2246     		mov	r2, r4
 3501 0126 09B2     		sxth	r1, r1
 3502 0128 5846     		mov	r0, fp
 3503 012a FFF7FEFF 		bl	hagl_draw_hline
 3504              	.LVL451:
 927:Drivers/hagl/src/hagl.c ****         rx0 = x0 + r - y;
 3505              		.loc 1 927 0
 3506 012e 7119     		adds	r1, r6, r5
 3507              	.LVL452:
 931:Drivers/hagl/src/hagl.c ****     }
 3508              		.loc 1 931 0
 3509 0130 3B46     		mov	r3, r7
 3510 0132 069A     		ldr	r2, [sp, #24]
 3511 0134 09B2     		sxth	r1, r1
 3512 0136 0598     		ldr	r0, [sp, #20]
 3513 0138 FFF7FEFF 		bl	hagl_draw_hline
 3514              	.LVL453:
 3515              	.L216:
 897:Drivers/hagl/src/hagl.c ****         x++;
 3516              		.loc 1 897 0
 3517 013c D045     		cmp	r8, r10
 3518 013e 14DC     		bgt	.L221
 898:Drivers/hagl/src/hagl.c **** 
 3519              		.loc 1 898 0
 3520 0140 08F10106 		add	r6, r8, #1
 3521 0144 B6B2     		uxth	r6, r6
 3522 0146 0FFA86F8 		sxth	r8, r6
 3523              	.LVL454:
 900:Drivers/hagl/src/hagl.c ****             y--;
 3524              		.loc 1 900 0
 3525 014a 049A     		ldr	r2, [sp, #16]
 3526 014c 002A     		cmp	r2, #0
 3527 014e ABDD     		ble	.L217
 901:Drivers/hagl/src/hagl.c ****             d = d + 4 * (x - y) + 10;
 3528              		.loc 1 901 0
 3529 0150 0AF1FF3A 		add	r10, r10, #-1
 3530              	.LVL455:
 3531 0154 0FFA8AFA 		sxth	r10, r10
 3532              	.LVL456:
 902:Drivers/hagl/src/hagl.c ****         } else {
 3533              		.loc 1 902 0
 3534 0158 A8EB0A03 		sub	r3, r8, r10
ARM GAS  /tmp/ccrQATq6.s 			page 88


 3535 015c 02EB8303 		add	r3, r2, r3, lsl #2
 3536 0160 9BB2     		uxth	r3, r3
 3537 0162 0A33     		adds	r3, r3, #10
 3538 0164 1BB2     		sxth	r3, r3
 3539 0166 0493     		str	r3, [sp, #16]
 3540              	.LVL457:
 3541 0168 A6E7     		b	.L218
 3542              	.L221:
 3543 016a DDF82CA0 		ldr	r10, [sp, #44]
 3544              	.LVL458:
 935:Drivers/hagl/src/hagl.c **** };
 3545              		.loc 1 935 0
 3546 016e 089B     		ldr	r3, [sp, #32]
 3547 0170 4B44     		add	r3, r3, r9
 3548 0172 1946     		mov	r1, r3
 3549 0174 079B     		ldr	r3, [sp, #28]
 3550 0176 A3EB0903 		sub	r3, r3, r9
 3551 017a 029A     		ldr	r2, [sp, #8]
 3552 017c 0092     		str	r2, [sp]
 3553 017e 1BB2     		sxth	r3, r3
 3554 0180 5246     		mov	r2, r10
 3555 0182 09B2     		sxth	r1, r1
 3556 0184 0398     		ldr	r0, [sp, #12]
 3557 0186 FFF7FEFF 		bl	hagl_fill_rectangle
 3558              	.LVL459:
 3559              	.L210:
 936:Drivers/hagl/src/hagl.c **** 
 3560              		.loc 1 936 0
 3561 018a 0DB0     		add	sp, sp, #52
 3562              	.LCFI70:
 3563              		.cfi_def_cfa_offset 36
 3564              		@ sp needed
 3565 018c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3566              	.LVL460:
 3567              	.L223:
 3568              		.align	2
 3569              	.L222:
 3570 0190 00000000 		.word	.LANCHOR0
 3571              		.cfi_endproc
 3572              	.LFE31:
 3574              		.section	.text.hagl_load_image,"ax",%progbits
 3575              		.align	1
 3576              		.global	hagl_load_image
 3577              		.syntax unified
 3578              		.thumb
 3579              		.thumb_func
 3580              		.fpu fpv5-d16
 3582              	hagl_load_image:
 3583              	.LFB34:
 972:Drivers/hagl/src/hagl.c **** 
 973:Drivers/hagl/src/hagl.c **** uint32_t hagl_load_image(int16_t x0, int16_t y0, const char *filename)
 974:Drivers/hagl/src/hagl.c **** {
 3584              		.loc 1 974 0
 3585              		.cfi_startproc
 3586              		@ args = 0, pretend = 0, frame = 3232
 3587              		@ frame_needed = 0, uses_anonymous_args = 0
 3588              	.LVL461:
ARM GAS  /tmp/ccrQATq6.s 			page 89


 3589 0000 10B5     		push	{r4, lr}
 3590              	.LCFI71:
 3591              		.cfi_def_cfa_offset 8
 3592              		.cfi_offset 4, -8
 3593              		.cfi_offset 14, -4
 3594 0002 ADF6A84D 		subw	sp, sp, #3240
 3595              	.LCFI72:
 3596              		.cfi_def_cfa_offset 3248
 975:Drivers/hagl/src/hagl.c ****     uint8_t work[3100];
 976:Drivers/hagl/src/hagl.c ****     JDEC decoder;
 977:Drivers/hagl/src/hagl.c ****     JRESULT result;
 978:Drivers/hagl/src/hagl.c ****     tjpgd_iodev_t device;
 979:Drivers/hagl/src/hagl.c **** 
 980:Drivers/hagl/src/hagl.c ****     device.x0 = x0;
 3597              		.loc 1 980 0
 3598 0006 ADF81000 		strh	r0, [sp, #16]	@ movhi
 981:Drivers/hagl/src/hagl.c ****     device.y0 = y0;
 3599              		.loc 1 981 0
 3600 000a ADF81210 		strh	r1, [sp, #18]	@ movhi
 982:Drivers/hagl/src/hagl.c ****     device.fp = fopen(filename, "rb");
 3601              		.loc 1 982 0
 3602 000e 1649     		ldr	r1, .L231
 3603              	.LVL462:
 3604 0010 1046     		mov	r0, r2
 3605              	.LVL463:
 3606 0012 FFF7FEFF 		bl	fopen
 3607              	.LVL464:
 3608 0016 0390     		str	r0, [sp, #12]
 983:Drivers/hagl/src/hagl.c **** 
 984:Drivers/hagl/src/hagl.c ****     if (!device.fp) {
 3609              		.loc 1 984 0
 3610 0018 20B3     		cbz	r0, .L228
 985:Drivers/hagl/src/hagl.c ****         return HAGL_ERR_FILE_IO;
 986:Drivers/hagl/src/hagl.c ****     }
 987:Drivers/hagl/src/hagl.c ****     result = jd_prepare(&decoder, tjpgd_data_reader, work, 3100, (void *)&device);
 3611              		.loc 1 987 0
 3612 001a 03AB     		add	r3, sp, #12
 3613 001c 0093     		str	r3, [sp]
 3614 001e 40F61C43 		movw	r3, #3100
 3615 0022 23AA     		add	r2, sp, #140
 3616 0024 1149     		ldr	r1, .L231+4
 3617 0026 05A8     		add	r0, sp, #20
 3618 0028 FFF7FEFF 		bl	jd_prepare
 3619              	.LVL465:
 988:Drivers/hagl/src/hagl.c ****     if (result == JDR_OK) {
 3620              		.loc 1 988 0
 3621 002c 0446     		mov	r4, r0
 3622 002e 88B9     		cbnz	r0, .L226
 989:Drivers/hagl/src/hagl.c ****         result = jd_decomp(&decoder, tjpgd_data_writer, 0);
 3623              		.loc 1 989 0
 3624 0030 0022     		movs	r2, #0
 3625 0032 0F49     		ldr	r1, .L231+8
 3626 0034 05A8     		add	r0, sp, #20
 3627              	.LVL466:
 3628 0036 FFF7FEFF 		bl	jd_decomp
 3629              	.LVL467:
 990:Drivers/hagl/src/hagl.c ****         if (JDR_OK != result) {
ARM GAS  /tmp/ccrQATq6.s 			page 90


 3630              		.loc 1 990 0
 3631 003a 0446     		mov	r4, r0
 3632 003c 20B9     		cbnz	r0, .L230
 991:Drivers/hagl/src/hagl.c ****             fclose(device.fp);
 992:Drivers/hagl/src/hagl.c ****             return HAGL_ERR_TJPGD + result;
 993:Drivers/hagl/src/hagl.c ****         }
 994:Drivers/hagl/src/hagl.c ****     } else {
 995:Drivers/hagl/src/hagl.c ****         fclose(device.fp);
 996:Drivers/hagl/src/hagl.c ****         return HAGL_ERR_TJPGD + result;
 997:Drivers/hagl/src/hagl.c ****     }
 998:Drivers/hagl/src/hagl.c **** 
 999:Drivers/hagl/src/hagl.c ****     fclose(device.fp);
 3633              		.loc 1 999 0
 3634 003e 0398     		ldr	r0, [sp, #12]
 3635              	.LVL468:
 3636 0040 FFF7FEFF 		bl	fclose
 3637              	.LVL469:
1000:Drivers/hagl/src/hagl.c ****     return HAGL_OK;
 3638              		.loc 1 1000 0
 3639 0044 0020     		movs	r0, #0
 3640 0046 0AE0     		b	.L224
 3641              	.LVL470:
 3642              	.L230:
 991:Drivers/hagl/src/hagl.c ****             fclose(device.fp);
 3643              		.loc 1 991 0
 3644 0048 0398     		ldr	r0, [sp, #12]
 3645              	.LVL471:
 3646 004a FFF7FEFF 		bl	fclose
 3647              	.LVL472:
 992:Drivers/hagl/src/hagl.c ****         }
 3648              		.loc 1 992 0
 3649 004e 04F16400 		add	r0, r4, #100
 3650 0052 04E0     		b	.L224
 3651              	.LVL473:
 3652              	.L226:
 995:Drivers/hagl/src/hagl.c ****         return HAGL_ERR_TJPGD + result;
 3653              		.loc 1 995 0
 3654 0054 0398     		ldr	r0, [sp, #12]
 3655              	.LVL474:
 3656 0056 FFF7FEFF 		bl	fclose
 3657              	.LVL475:
 996:Drivers/hagl/src/hagl.c ****     }
 3658              		.loc 1 996 0
 3659 005a 04F16400 		add	r0, r4, #100
 3660              	.L224:
1001:Drivers/hagl/src/hagl.c **** }
 3661              		.loc 1 1001 0
 3662 005e 0DF6A84D 		addw	sp, sp, #3240
 3663              	.LCFI73:
 3664              		.cfi_remember_state
 3665              		.cfi_def_cfa_offset 8
 3666              		@ sp needed
 3667 0062 10BD     		pop	{r4, pc}
 3668              	.L228:
 3669              	.LCFI74:
 3670              		.cfi_restore_state
 985:Drivers/hagl/src/hagl.c ****     }
ARM GAS  /tmp/ccrQATq6.s 			page 91


 3671              		.loc 1 985 0
 3672 0064 0220     		movs	r0, #2
 3673 0066 FAE7     		b	.L224
 3674              	.L232:
 3675              		.align	2
 3676              	.L231:
 3677 0068 00000000 		.word	.LC0
 3678 006c 00000000 		.word	tjpgd_data_reader
 3679 0070 00000000 		.word	tjpgd_data_writer
 3680              		.cfi_endproc
 3681              	.LFE34:
 3683              		.section	.text.hagl_color,"ax",%progbits
 3684              		.align	1
 3685              		.global	hagl_color
 3686              		.syntax unified
 3687              		.thumb
 3688              		.thumb_func
 3689              		.fpu fpv5-d16
 3691              	hagl_color:
 3692              	.LFB35:
1002:Drivers/hagl/src/hagl.c **** 
1003:Drivers/hagl/src/hagl.c **** color_t hagl_color(uint8_t r, uint8_t g, uint8_t b)
1004:Drivers/hagl/src/hagl.c **** {
 3693              		.loc 1 1004 0
 3694              		.cfi_startproc
 3695              		@ args = 0, pretend = 0, frame = 0
 3696              		@ frame_needed = 0, uses_anonymous_args = 0
 3697              		@ link register save eliminated.
 3698              	.LVL476:
 3699 0000 10B4     		push	{r4}
 3700              	.LCFI75:
 3701              		.cfi_def_cfa_offset 4
 3702              		.cfi_offset 4, -4
 3703              	.LVL477:
 3704              	.LBB61:
 3705              	.LBB62:
 3706              		.file 3 "Drivers/hagl/include/hagl_hal.h"
   1:Drivers/hagl/include/hagl_hal.h **** /*
   2:Drivers/hagl/include/hagl_hal.h **** MIT License
   3:Drivers/hagl/include/hagl_hal.h **** Copyright (c) 2018-2021 Mika Tuupola
   4:Drivers/hagl/include/hagl_hal.h **** Permission is hereby granted, free of charge, to any person obtaining a copy
   5:Drivers/hagl/include/hagl_hal.h **** of this software and associated documentation files (the "Software"), to deal
   6:Drivers/hagl/include/hagl_hal.h **** in the Software without restriction, including without limitation the rights
   7:Drivers/hagl/include/hagl_hal.h **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   8:Drivers/hagl/include/hagl_hal.h **** copies of the Software, and to permit persons to whom the Software is
   9:Drivers/hagl/include/hagl_hal.h **** furnished to do so, subject to the following conditions:
  10:Drivers/hagl/include/hagl_hal.h **** The above copyright notice and this permission notice shall be included in all
  11:Drivers/hagl/include/hagl_hal.h **** copies or substantial portions of the Software.
  12:Drivers/hagl/include/hagl_hal.h **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  13:Drivers/hagl/include/hagl_hal.h **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  14:Drivers/hagl/include/hagl_hal.h **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  15:Drivers/hagl/include/hagl_hal.h **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  16:Drivers/hagl/include/hagl_hal.h **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  17:Drivers/hagl/include/hagl_hal.h **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  18:Drivers/hagl/include/hagl_hal.h **** SOFTWARE.
  19:Drivers/hagl/include/hagl_hal.h **** -cut-
  20:Drivers/hagl/include/hagl_hal.h **** This file is part of the GD HAL for the HAGL graphics library:
ARM GAS  /tmp/ccrQATq6.s 			page 92


  21:Drivers/hagl/include/hagl_hal.h **** https://github.com/tuupola/hagl_gd
  22:Drivers/hagl/include/hagl_hal.h **** SPDX-License-Identifier: MIT
  23:Drivers/hagl/include/hagl_hal.h **** */
  24:Drivers/hagl/include/hagl_hal.h **** 
  25:Drivers/hagl/include/hagl_hal.h **** #ifndef _HAGL_GD_HAL_H
  26:Drivers/hagl/include/hagl_hal.h **** #define _HAGL_GD_HAL_H
  27:Drivers/hagl/include/hagl_hal.h **** 
  28:Drivers/hagl/include/hagl_hal.h **** #ifdef __cplusplus
  29:Drivers/hagl/include/hagl_hal.h **** extern "C" {
  30:Drivers/hagl/include/hagl_hal.h **** #endif
  31:Drivers/hagl/include/hagl_hal.h **** 
  32:Drivers/hagl/include/hagl_hal.h **** #include <stdint.h>
  33:Drivers/hagl/include/hagl_hal.h **** #include <bitmap.h>
  34:Drivers/hagl/include/hagl_hal.h **** 
  35:Drivers/hagl/include/hagl_hal.h **** /* HAL must provide display dimensions and depth. */
  36:Drivers/hagl/include/hagl_hal.h **** #ifndef DISPLAY_WIDTH
  37:Drivers/hagl/include/hagl_hal.h **** #define DISPLAY_WIDTH   (480)
  38:Drivers/hagl/include/hagl_hal.h **** #endif
  39:Drivers/hagl/include/hagl_hal.h **** #ifndef DISPLAY_HEIGHT
  40:Drivers/hagl/include/hagl_hal.h **** #define DISPLAY_HEIGHT  (272)
  41:Drivers/hagl/include/hagl_hal.h **** #endif
  42:Drivers/hagl/include/hagl_hal.h **** #define DISPLAY_DEPTH   (8)
  43:Drivers/hagl/include/hagl_hal.h **** 
  44:Drivers/hagl/include/hagl_hal.h **** /* These are the optional features this HAL provides. */
  45:Drivers/hagl/include/hagl_hal.h **** #define HAGL_HAS_HAL_COLOR
  46:Drivers/hagl/include/hagl_hal.h **** #define HAGL_HAS_HAL_FILL_RECTANGLE
  47:Drivers/hagl/include/hagl_hal.h **** #define HAGL_HAS_HAL_BLIT
  48:Drivers/hagl/include/hagl_hal.h **** 
  49:Drivers/hagl/include/hagl_hal.h **** /** HAL must provide typedef for colors. This HAL uses RGB888. */
  50:Drivers/hagl/include/hagl_hal.h **** typedef uint8_t color_t;
  51:Drivers/hagl/include/hagl_hal.h **** 
  52:Drivers/hagl/include/hagl_hal.h **** /**
  53:Drivers/hagl/include/hagl_hal.h ****  * @brief Draw a single pixel
  54:Drivers/hagl/include/hagl_hal.h ****  *
  55:Drivers/hagl/include/hagl_hal.h ****  * This is the only mandatory function HAL must provide.
  56:Drivers/hagl/include/hagl_hal.h ****  *
  57:Drivers/hagl/include/hagl_hal.h ****  * @param x0 X coordinate
  58:Drivers/hagl/include/hagl_hal.h ****  * @param y0 Y coorginate
  59:Drivers/hagl/include/hagl_hal.h ****  * @param color color
  60:Drivers/hagl/include/hagl_hal.h ****  */
  61:Drivers/hagl/include/hagl_hal.h **** void hagl_hal_put_pixel(int16_t x0, int16_t y0, color_t color);
  62:Drivers/hagl/include/hagl_hal.h **** 
  63:Drivers/hagl/include/hagl_hal.h **** void hagl_hal_fill_rectangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1, color_t color);
  64:Drivers/hagl/include/hagl_hal.h **** 
  65:Drivers/hagl/include/hagl_hal.h **** void hagl_hal_blit(int16_t x0, int16_t y0, bitmap_t *source);
  66:Drivers/hagl/include/hagl_hal.h **** 
  67:Drivers/hagl/include/hagl_hal.h **** /**
  68:Drivers/hagl/include/hagl_hal.h ****  * @brief Convert RGB to HAL color type
  69:Drivers/hagl/include/hagl_hal.h ****  *
  70:Drivers/hagl/include/hagl_hal.h ****  * This is used for HAL implementations which use some other pixel
  71:Drivers/hagl/include/hagl_hal.h ****  * format than RGB332.
  72:Drivers/hagl/include/hagl_hal.h ****  */
  73:Drivers/hagl/include/hagl_hal.h **** static inline color_t hagl_hal_color(uint8_t r, uint8_t g, uint8_t b) {
  74:Drivers/hagl/include/hagl_hal.h ****     uint8_t r3 = ((r >> 4) & 0b00000110) | (r & 0b00000001);
 3707              		.loc 3 74 0
 3708 0002 0409     		lsrs	r4, r0, #4
 3709 0004 04F00604 		and	r4, r4, #6
ARM GAS  /tmp/ccrQATq6.s 			page 93


 3710 0008 00F00100 		and	r0, r0, #1
 3711              	.LVL478:
 3712 000c 0443     		orrs	r4, r4, r0
 3713              	.LVL479:
  75:Drivers/hagl/include/hagl_hal.h ****     uint8_t g3 = ((g >> 4) & 0b00000110) | (g & 0b00000001);
 3714              		.loc 3 75 0
 3715 000e 0809     		lsrs	r0, r1, #4
 3716 0010 00F00600 		and	r0, r0, #6
 3717 0014 01F00101 		and	r1, r1, #1
 3718              	.LVL480:
 3719 0018 0843     		orrs	r0, r0, r1
 3720              	.LVL481:
  76:Drivers/hagl/include/hagl_hal.h ****     uint8_t b3 = ((b >> 4) & 0b00000110) | (b & 0b00000001);
 3721              		.loc 3 76 0
 3722 001a 1309     		lsrs	r3, r2, #4
 3723 001c 03F00603 		and	r3, r3, #6
 3724 0020 02F00102 		and	r2, r2, #1
 3725              	.LVL482:
 3726 0024 1A43     		orrs	r2, r2, r3
 3727              	.LVL483:
  77:Drivers/hagl/include/hagl_hal.h ****     return (r3 << 5) | (g3 << 2) | (b3);
 3728              		.loc 3 77 0
 3729 0026 8000     		lsls	r0, r0, #2
 3730              	.LVL484:
 3731 0028 40EA4410 		orr	r0, r0, r4, lsl #5
 3732 002c 40B2     		sxtb	r0, r0
 3733 002e 1043     		orrs	r0, r0, r2
 3734              	.LVL485:
 3735              	.LBE62:
 3736              	.LBE61:
1005:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_COLOR
1006:Drivers/hagl/src/hagl.c ****     return hagl_hal_color(r, g, b);
1007:Drivers/hagl/src/hagl.c **** #else
1008:Drivers/hagl/src/hagl.c ****     return rgb565(r, g, b);
1009:Drivers/hagl/src/hagl.c **** #endif
1010:Drivers/hagl/src/hagl.c **** }
 3737              		.loc 1 1010 0
 3738 0030 C0B2     		uxtb	r0, r0
 3739 0032 5DF8044B 		ldr	r4, [sp], #4
 3740              	.LCFI76:
 3741              		.cfi_restore 4
 3742              		.cfi_def_cfa_offset 0
 3743 0036 7047     		bx	lr
 3744              		.cfi_endproc
 3745              	.LFE35:
 3747              		.section	.text.hagl_get_pixel,"ax",%progbits
 3748              		.align	1
 3749              		.global	hagl_get_pixel
 3750              		.syntax unified
 3751              		.thumb
 3752              		.thumb_func
 3753              		.fpu fpv5-d16
 3755              	hagl_get_pixel:
 3756              	.LFB9:
  89:Drivers/hagl/src/hagl.c ****     /* x0 or y0 is before the edge, nothing to do. */
 3757              		.loc 1 89 0
 3758              		.cfi_startproc
ARM GAS  /tmp/ccrQATq6.s 			page 94


 3759              		@ args = 0, pretend = 0, frame = 0
 3760              		@ frame_needed = 0, uses_anonymous_args = 0
 3761              	.LVL486:
 3762 0000 08B5     		push	{r3, lr}
 3763              	.LCFI77:
 3764              		.cfi_def_cfa_offset 8
 3765              		.cfi_offset 3, -8
 3766              		.cfi_offset 14, -4
  91:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
 3767              		.loc 1 91 0
 3768 0002 114B     		ldr	r3, .L242
 3769 0004 1B88     		ldrh	r3, [r3]
 3770 0006 9842     		cmp	r0, r3
 3771 0008 11DB     		blt	.L236
  91:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
 3772              		.loc 1 91 0 is_stmt 0 discriminator 1
 3773 000a 0F4B     		ldr	r3, .L242
 3774 000c 5B88     		ldrh	r3, [r3, #2]
 3775 000e 9942     		cmp	r1, r3
 3776 0010 0DDB     		blt	.L236
  96:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
 3777              		.loc 1 96 0 is_stmt 1
 3778 0012 0D4B     		ldr	r3, .L242
 3779 0014 9B88     		ldrh	r3, [r3, #4]
 3780 0016 9842     		cmp	r0, r3
 3781 0018 0FDC     		bgt	.L239
  96:Drivers/hagl/src/hagl.c ****         return hagl_color(0, 0, 0);
 3782              		.loc 1 96 0 is_stmt 0 discriminator 1
 3783 001a 0B4B     		ldr	r3, .L242
 3784 001c DB88     		ldrh	r3, [r3, #6]
 3785 001e 9942     		cmp	r1, r3
 3786 0020 0BDC     		bgt	.L239
 103:Drivers/hagl/src/hagl.c **** #endif /* HAGL_HAS_HAL_GET_PIXEL */
 3787              		.loc 1 103 0 is_stmt 1
 3788 0022 0022     		movs	r2, #0
 3789 0024 1146     		mov	r1, r2
 3790              	.LVL487:
 3791 0026 1046     		mov	r0, r2
 3792              	.LVL488:
 3793 0028 FFF7FEFF 		bl	hagl_color
 3794              	.LVL489:
 3795 002c 04E0     		b	.L238
 3796              	.LVL490:
 3797              	.L236:
  92:Drivers/hagl/src/hagl.c ****     }
 3798              		.loc 1 92 0
 3799 002e 0022     		movs	r2, #0
 3800 0030 1146     		mov	r1, r2
 3801              	.LVL491:
 3802 0032 1046     		mov	r0, r2
 3803              	.LVL492:
 3804 0034 FFF7FEFF 		bl	hagl_color
 3805              	.LVL493:
 3806              	.L238:
 105:Drivers/hagl/src/hagl.c **** 
 3807              		.loc 1 105 0
 3808 0038 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccrQATq6.s 			page 95


 3809              	.LVL494:
 3810              	.L239:
  97:Drivers/hagl/src/hagl.c ****     }
 3811              		.loc 1 97 0
 3812 003a 0022     		movs	r2, #0
 3813 003c 1146     		mov	r1, r2
 3814              	.LVL495:
 3815 003e 1046     		mov	r0, r2
 3816              	.LVL496:
 3817 0040 FFF7FEFF 		bl	hagl_color
 3818              	.LVL497:
 3819 0044 F8E7     		b	.L238
 3820              	.L243:
 3821 0046 00BF     		.align	2
 3822              	.L242:
 3823 0048 00000000 		.word	.LANCHOR0
 3824              		.cfi_endproc
 3825              	.LFE9:
 3827              		.section	.text.hagl_init,"ax",%progbits
 3828              		.align	1
 3829              		.global	hagl_init
 3830              		.syntax unified
 3831              		.thumb
 3832              		.thumb_func
 3833              		.fpu fpv5-d16
 3835              	hagl_init:
 3836              	.LFB36:
1011:Drivers/hagl/src/hagl.c **** 
1012:Drivers/hagl/src/hagl.c **** bitmap_t *hagl_init() {
 3837              		.loc 1 1012 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 0
 3840              		@ frame_needed = 0, uses_anonymous_args = 0
 3841 0000 08B5     		push	{r3, lr}
 3842              	.LCFI78:
 3843              		.cfi_def_cfa_offset 8
 3844              		.cfi_offset 3, -8
 3845              		.cfi_offset 14, -4
1013:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_INIT
1014:Drivers/hagl/src/hagl.c ****     bitmap_t *bb = hagl_hal_init();
1015:Drivers/hagl/src/hagl.c ****     hagl_clear_screen();
1016:Drivers/hagl/src/hagl.c ****     return bb;
1017:Drivers/hagl/src/hagl.c **** #else
1018:Drivers/hagl/src/hagl.c ****     hagl_clear_screen();
 3846              		.loc 1 1018 0
 3847 0002 FFF7FEFF 		bl	hagl_clear_screen
 3848              	.LVL498:
1019:Drivers/hagl/src/hagl.c ****     return NULL;
1020:Drivers/hagl/src/hagl.c **** #endif
1021:Drivers/hagl/src/hagl.c **** };
 3849              		.loc 1 1021 0
 3850 0006 0020     		movs	r0, #0
 3851 0008 08BD     		pop	{r3, pc}
 3852              		.cfi_endproc
 3853              	.LFE36:
 3855              		.section	.text.hagl_flush,"ax",%progbits
 3856              		.align	1
ARM GAS  /tmp/ccrQATq6.s 			page 96


 3857              		.global	hagl_flush
 3858              		.syntax unified
 3859              		.thumb
 3860              		.thumb_func
 3861              		.fpu fpv5-d16
 3863              	hagl_flush:
 3864              	.LFB37:
1022:Drivers/hagl/src/hagl.c **** 
1023:Drivers/hagl/src/hagl.c **** size_t hagl_flush() {
 3865              		.loc 1 1023 0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 0
 3868              		@ frame_needed = 0, uses_anonymous_args = 0
 3869              		@ link register save eliminated.
1024:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_FLUSH
1025:Drivers/hagl/src/hagl.c ****     return hagl_hal_flush();
1026:Drivers/hagl/src/hagl.c **** #else
1027:Drivers/hagl/src/hagl.c ****     return 0;
1028:Drivers/hagl/src/hagl.c **** #endif
1029:Drivers/hagl/src/hagl.c **** };
 3870              		.loc 1 1029 0
 3871 0000 0020     		movs	r0, #0
 3872 0002 7047     		bx	lr
 3873              		.cfi_endproc
 3874              	.LFE37:
 3876              		.section	.text.hagl_close,"ax",%progbits
 3877              		.align	1
 3878              		.global	hagl_close
 3879              		.syntax unified
 3880              		.thumb
 3881              		.thumb_func
 3882              		.fpu fpv5-d16
 3884              	hagl_close:
 3885              	.LFB38:
1030:Drivers/hagl/src/hagl.c **** 
1031:Drivers/hagl/src/hagl.c **** void hagl_close() {
 3886              		.loc 1 1031 0
 3887              		.cfi_startproc
 3888              		@ args = 0, pretend = 0, frame = 0
 3889              		@ frame_needed = 0, uses_anonymous_args = 0
 3890              		@ link register save eliminated.
1032:Drivers/hagl/src/hagl.c **** #ifdef HAGL_HAS_HAL_CLOSE
1033:Drivers/hagl/src/hagl.c ****     hagl_hal_close();
1034:Drivers/hagl/src/hagl.c **** #else
1035:Drivers/hagl/src/hagl.c **** #endif
1036:Drivers/hagl/src/hagl.c **** };
 3891              		.loc 1 1036 0
 3892 0000 7047     		bx	lr
 3893              		.cfi_endproc
 3894              	.LFE38:
 3896              		.section	.data.clip_window,"aw",%progbits
 3897              		.align	2
 3898              		.set	.LANCHOR0,. + 0
 3901              	clip_window:
 3902 0000 0000     		.short	0
 3903 0002 0000     		.short	0
 3904 0004 DF01     		.short	479
ARM GAS  /tmp/ccrQATq6.s 			page 97


 3905 0006 0F01     		.short	271
 3906              		.section	.rodata.hagl_load_image.str1.4,"aMS",%progbits,1
 3907              		.align	2
 3908              	.LC0:
 3909 0000 726200   		.ascii	"rb\000"
 3910              		.text
 3911              	.Letext0:
 3912              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 3913              		.file 5 "/usr/include/newlib/machine/_default_types.h"
 3914              		.file 6 "/usr/include/newlib/sys/lock.h"
 3915              		.file 7 "/usr/include/newlib/sys/_types.h"
 3916              		.file 8 "/usr/include/newlib/sys/reent.h"
 3917              		.file 9 "/usr/include/newlib/ctype.h"
 3918              		.file 10 "/usr/include/newlib/stdlib.h"
 3919              		.file 11 "/usr/include/newlib/sys/_stdint.h"
 3920              		.file 12 "/usr/include/newlib/stdio.h"
 3921              		.file 13 "Drivers/hagl/include/bitmap.h"
 3922              		.file 14 "Drivers/hagl/include/fontx.h"
 3923              		.file 15 "Drivers/hagl/include/window.h"
 3924              		.file 16 "Drivers/hagl/include/tjpgd.h"
 3925              		.file 17 "Drivers/hagl/include/clip.h"
ARM GAS  /tmp/ccrQATq6.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 hagl.c
     /tmp/ccrQATq6.s:17     .text.tjpgd_data_reader:0000000000000000 $t
     /tmp/ccrQATq6.s:23     .text.tjpgd_data_reader:0000000000000000 tjpgd_data_reader
     /tmp/ccrQATq6.s:76     .text.hagl_set_clip_window:0000000000000000 $t
     /tmp/ccrQATq6.s:83     .text.hagl_set_clip_window:0000000000000000 hagl_set_clip_window
     /tmp/ccrQATq6.s:113    .text.hagl_set_clip_window:0000000000000014 $d
     /tmp/ccrQATq6.s:118    .text.hagl_put_pixel:0000000000000000 $t
     /tmp/ccrQATq6.s:125    .text.hagl_put_pixel:0000000000000000 hagl_put_pixel
     /tmp/ccrQATq6.s:170    .text.hagl_put_pixel:000000000000002c $d
     /tmp/ccrQATq6.s:175    .text.hagl_draw_line:0000000000000000 $t
     /tmp/ccrQATq6.s:182    .text.hagl_draw_line:0000000000000000 hagl_draw_line
     /tmp/ccrQATq6.s:364    .text.hagl_draw_line:0000000000000104 $d
     /tmp/ccrQATq6.s:369    .text.hagl_draw_hline:0000000000000000 $t
     /tmp/ccrQATq6.s:376    .text.hagl_draw_hline:0000000000000000 hagl_draw_hline
     /tmp/ccrQATq6.s:409    .text.hagl_draw_vline:0000000000000000 $t
     /tmp/ccrQATq6.s:416    .text.hagl_draw_vline:0000000000000000 hagl_draw_vline
     /tmp/ccrQATq6.s:449    .text.hagl_draw_rectangle:0000000000000000 $t
     /tmp/ccrQATq6.s:456    .text.hagl_draw_rectangle:0000000000000000 hagl_draw_rectangle
     /tmp/ccrQATq6.s:564    .text.hagl_draw_rectangle:0000000000000098 $d
     /tmp/ccrQATq6.s:569    .text.hagl_fill_rectangle:0000000000000000 $t
     /tmp/ccrQATq6.s:576    .text.hagl_fill_rectangle:0000000000000000 hagl_fill_rectangle
     /tmp/ccrQATq6.s:711    .text.hagl_fill_rectangle:0000000000000074 $d
     /tmp/ccrQATq6.s:716    .text.hagl_get_glyph:0000000000000000 $t
     /tmp/ccrQATq6.s:723    .text.hagl_get_glyph:0000000000000000 hagl_get_glyph
     /tmp/ccrQATq6.s:853    .text.hagl_blit:0000000000000000 $t
     /tmp/ccrQATq6.s:860    .text.hagl_blit:0000000000000000 hagl_blit
     /tmp/ccrQATq6.s:977    .text.hagl_blit:0000000000000070 $d
     /tmp/ccrQATq6.s:982    .text.hagl_put_char:0000000000000000 $t
     /tmp/ccrQATq6.s:989    .text.hagl_put_char:0000000000000000 hagl_put_char
     /tmp/ccrQATq6.s:1138   .text.hagl_put_text:0000000000000000 $t
     /tmp/ccrQATq6.s:1145   .text.hagl_put_text:0000000000000000 hagl_put_text
     /tmp/ccrQATq6.s:1245   .text.tjpgd_data_writer:0000000000000000 $t
     /tmp/ccrQATq6.s:1251   .text.tjpgd_data_writer:0000000000000000 tjpgd_data_writer
     /tmp/ccrQATq6.s:1325   .text.hagl_scale_blit:0000000000000000 $t
     /tmp/ccrQATq6.s:1332   .text.hagl_scale_blit:0000000000000000 hagl_scale_blit
     /tmp/ccrQATq6.s:1440   .text.hagl_clear_screen:0000000000000000 $t
     /tmp/ccrQATq6.s:1447   .text.hagl_clear_screen:0000000000000000 hagl_clear_screen
     /tmp/ccrQATq6.s:1509   .text.hagl_clear_screen:0000000000000040 $d
     /tmp/ccrQATq6.s:1514   .text.hagl_clear_clip_window:0000000000000000 $t
     /tmp/ccrQATq6.s:1521   .text.hagl_clear_clip_window:0000000000000000 hagl_clear_clip_window
     /tmp/ccrQATq6.s:1555   .text.hagl_clear_clip_window:0000000000000024 $d
     /tmp/ccrQATq6.s:1560   .text.hagl_draw_circle:0000000000000000 $t
     /tmp/ccrQATq6.s:1567   .text.hagl_draw_circle:0000000000000000 hagl_draw_circle
     /tmp/ccrQATq6.s:1786   .text.hagl_fill_circle:0000000000000000 $t
     /tmp/ccrQATq6.s:1793   .text.hagl_fill_circle:0000000000000000 hagl_fill_circle
     /tmp/ccrQATq6.s:1928   .text.hagl_draw_ellipse:0000000000000000 $t
     /tmp/ccrQATq6.s:1935   .text.hagl_draw_ellipse:0000000000000000 hagl_draw_ellipse
     /tmp/ccrQATq6.s:2226   .text.hagl_fill_ellipse:0000000000000000 $t
     /tmp/ccrQATq6.s:2233   .text.hagl_fill_ellipse:0000000000000000 hagl_fill_ellipse
     /tmp/ccrQATq6.s:2490   .text.hagl_draw_polygon:0000000000000000 $t
     /tmp/ccrQATq6.s:2497   .text.hagl_draw_polygon:0000000000000000 hagl_draw_polygon
     /tmp/ccrQATq6.s:2577   .text.hagl_draw_polygon:000000000000005c $d
     /tmp/ccrQATq6.s:2582   .text.hagl_fill_polygon:0000000000000000 $t
     /tmp/ccrQATq6.s:2589   .text.hagl_fill_polygon:0000000000000000 hagl_fill_polygon
     /tmp/ccrQATq6.s:2864   .text.hagl_draw_triangle:0000000000000000 $t
     /tmp/ccrQATq6.s:2871   .text.hagl_draw_triangle:0000000000000000 hagl_draw_triangle
ARM GAS  /tmp/ccrQATq6.s 			page 99


     /tmp/ccrQATq6.s:2914   .text.hagl_fill_triangle:0000000000000000 $t
     /tmp/ccrQATq6.s:2921   .text.hagl_fill_triangle:0000000000000000 hagl_fill_triangle
     /tmp/ccrQATq6.s:2964   .text.hagl_draw_rounded_rectangle:0000000000000000 $t
     /tmp/ccrQATq6.s:2971   .text.hagl_draw_rounded_rectangle:0000000000000000 hagl_draw_rounded_rectangle
     /tmp/ccrQATq6.s:3275   .text.hagl_draw_rounded_rectangle:00000000000001f0 $d
     /tmp/ccrQATq6.s:3280   .text.hagl_fill_rounded_rectangle:0000000000000000 $t
     /tmp/ccrQATq6.s:3287   .text.hagl_fill_rounded_rectangle:0000000000000000 hagl_fill_rounded_rectangle
     /tmp/ccrQATq6.s:3570   .text.hagl_fill_rounded_rectangle:0000000000000190 $d
     /tmp/ccrQATq6.s:3575   .text.hagl_load_image:0000000000000000 $t
     /tmp/ccrQATq6.s:3582   .text.hagl_load_image:0000000000000000 hagl_load_image
     /tmp/ccrQATq6.s:3677   .text.hagl_load_image:0000000000000068 $d
     /tmp/ccrQATq6.s:3684   .text.hagl_color:0000000000000000 $t
     /tmp/ccrQATq6.s:3691   .text.hagl_color:0000000000000000 hagl_color
     /tmp/ccrQATq6.s:3748   .text.hagl_get_pixel:0000000000000000 $t
     /tmp/ccrQATq6.s:3755   .text.hagl_get_pixel:0000000000000000 hagl_get_pixel
     /tmp/ccrQATq6.s:3823   .text.hagl_get_pixel:0000000000000048 $d
     /tmp/ccrQATq6.s:3828   .text.hagl_init:0000000000000000 $t
     /tmp/ccrQATq6.s:3835   .text.hagl_init:0000000000000000 hagl_init
     /tmp/ccrQATq6.s:3856   .text.hagl_flush:0000000000000000 $t
     /tmp/ccrQATq6.s:3863   .text.hagl_flush:0000000000000000 hagl_flush
     /tmp/ccrQATq6.s:3877   .text.hagl_close:0000000000000000 $t
     /tmp/ccrQATq6.s:3884   .text.hagl_close:0000000000000000 hagl_close
     /tmp/ccrQATq6.s:3897   .data.clip_window:0000000000000000 $d
     /tmp/ccrQATq6.s:3901   .data.clip_window:0000000000000000 clip_window
     /tmp/ccrQATq6.s:3907   .rodata.hagl_load_image.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
fread
fseek
hagl_hal_put_pixel
clip_line
hagl_hal_fill_rectangle
fontx_glyph
hagl_hal_blit
bitmap_init
fontx_meta
fopen
jd_prepare
jd_decomp
fclose
