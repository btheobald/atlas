ARM GAS  /tmp/ccbPnc67.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_i2c.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	I2C_Flush_TXDR:
  24              	.LFB204:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @file    stm32h7xx_hal_i2c.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream o
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccbPnc67.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream or channel depends on Instance
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   the DMA Tx or Rx stream or channel depends on Instance
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ==========================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
ARM GAS  /tmp/ccbPnc67.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
ARM GAS  /tmp/ccbPnc67.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
ARM GAS  /tmp/ccbPnc67.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
ARM GAS  /tmp/ccbPnc67.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #include "stm32h7xx_hal.h"
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @addtogroup STM32H7xx_HAL_Driver
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /* Bit field can be combinated with @ref I2C_
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /* Bit field can be combinated with @ref I2C_
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /* Bit field can be combinated with @ref I2C_
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /* Bit definition to manage addition of globa
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /* Bit definition to manage only STOP eveneme
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /* Bit definition to manage only Reload of NB
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
ARM GAS  /tmp/ccbPnc67.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to treat different error callback */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccbPnc67.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           the selected configuration:
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Clock Timing
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 1
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Dual Addressing mode
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 2
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) General call mode
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Nostretch mode
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c == NULL)
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
ARM GAS  /tmp/ccbPnc67.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c == NULL)
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
ARM GAS  /tmp/ccbPnc67.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
ARM GAS  /tmp/ccbPnc67.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (pCallback == NULL)
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
ARM GAS  /tmp/ccbPnc67.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccbPnc67.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
ARM GAS  /tmp/ccbPnc67.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (pCallback == NULL)
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/ccbPnc67.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief   Data transfers functions
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                       ##### IO operation functions #####
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     transfers.
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             after finishing transfer.
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             using DMA mode.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Blocking mode functions are :
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
ARM GAS  /tmp/ccbPnc67.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccbPnc67.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
ARM GAS  /tmp/ccbPnc67.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccbPnc67.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
ARM GAS  /tmp/ccbPnc67.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccbPnc67.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP flag */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
ARM GAS  /tmp/ccbPnc67.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Store Last receive data if any */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Read data from RXDR */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferCount--;
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP flag */
ARM GAS  /tmp/ccbPnc67.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  /tmp/ccbPnc67.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
ARM GAS  /tmp/ccbPnc67.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccbPnc67.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
ARM GAS  /tmp/ccbPnc67.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address */
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
ARM GAS  /tmp/ccbPnc67.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  /tmp/ccbPnc67.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address */
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
ARM GAS  /tmp/ccbPnc67.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccbPnc67.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
ARM GAS  /tmp/ccbPnc67.s 			page 39


2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
ARM GAS  /tmp/ccbPnc67.s 			page 40


2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 41


2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
ARM GAS  /tmp/ccbPnc67.s 			page 42


2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
ARM GAS  /tmp/ccbPnc67.s 			page 43


2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
ARM GAS  /tmp/ccbPnc67.s 			page 44


2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 45


2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/ccbPnc67.s 			page 46


2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 47


2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
ARM GAS  /tmp/ccbPnc67.s 			page 48


2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 49


2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 50


2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
ARM GAS  /tmp/ccbPnc67.s 			page 51


2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
ARM GAS  /tmp/ccbPnc67.s 			page 52


2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 53


2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 54


2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Trials Number of trials
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   FlagStatus tmp1;
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   FlagStatus tmp2;
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Generate Start */
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccbPnc67.s 			page 55


3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Update I2C state */
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Update I2C error code */
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Process Unlocked */
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             return HAL_ERROR;
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Device is ready */
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_OK;
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  /tmp/ccbPnc67.s 			page 56


3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate Stop */
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Trials */
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Trials++;
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (I2C_Trials < Trials);
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update I2C state */
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update I2C error code */
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 57


3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
ARM GAS  /tmp/ccbPnc67.s 			page 58


3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 59


3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 60


3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/ccbPnc67.s 			page 61


3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  /tmp/ccbPnc67.s 			page 62


3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
ARM GAS  /tmp/ccbPnc67.s 			page 63


3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
ARM GAS  /tmp/ccbPnc67.s 			page 64


3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
ARM GAS  /tmp/ccbPnc67.s 			page 65


3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
ARM GAS  /tmp/ccbPnc67.s 			page 66


3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/ccbPnc67.s 			page 67


3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  /tmp/ccbPnc67.s 			page 68


3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Nothing to do */
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/ccbPnc67.s 			page 69


3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Reset XferSize */
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable DMA Request */
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccbPnc67.s 			page 70


3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccbPnc67.s 			page 71


3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
ARM GAS  /tmp/ccbPnc67.s 			page 72


4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccbPnc67.s 			page 73


4081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
4082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
4085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Nothing to do */
4091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
4135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
ARM GAS  /tmp/ccbPnc67.s 			page 74


4138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Reset XferSize */
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
4158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
4173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable DMA Request */
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
ARM GAS  /tmp/ccbPnc67.s 			page 75


4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
4208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmp;
4221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
ARM GAS  /tmp/ccbPnc67.s 			page 76


4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Do nothing */
4271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  * @{
4304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  */
4305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/ccbPnc67.s 			page 77


4309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
4336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear BERR flag */
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear OVR flag */
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ARLO flag */
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
ARM GAS  /tmp/ccbPnc67.s 			page 78


4366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
ARM GAS  /tmp/ccbPnc67.s 			page 79


4423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
ARM GAS  /tmp/ccbPnc67.s 			page 80


4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C error callback.
4507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 81


4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
4543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
4544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
4545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
4548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
4549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     and the data flow.
4551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
4553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
4554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL state
4561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Return I2C handle state */
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->State;
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         the configuration information for I2C module
4572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL mode
4573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->Mode;
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** * @brief  Return the I2C error code.
4581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** * @retval I2C Error Code
4584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** */
4585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 82


4594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
4600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
4613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Locked */
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize--;
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
4644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Write data to TXDR */
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
ARM GAS  /tmp/ccbPnc67.s 			page 83


4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize--;
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
4655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Generate Stop */
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccbPnc67.s 			page 84


4708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if STOPF is set */
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
ARM GAS  /tmp/ccbPnc67.s 			page 85


4765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* Sam
4771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Flush TX register */
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear NACK Flag */
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
4821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 86


4822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
4839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
4850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/ccbPnc67.s 			page 87


4879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
4883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
4884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Locked */
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC interrupt */
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Recover Slave address */
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 88


4936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Generate Stop */
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 89


4993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
4995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if STOPF is set */
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
5026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             treatdmanack = 1U;
5048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccbPnc67.s 			page 90


5050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             treatdmanack = 1U;
5060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (treatdmanack == 1U)
5065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* S
5067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear NACK Flag */
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Flush TX register */
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
5084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear NACK Flag */
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
5090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmpstate = hi2c->State;
5100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
ARM GAS  /tmp/ccbPnc67.s 			page 91


5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           else
5112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Do nothing */
5114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 92


5164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Memory Address */
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
5180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Memory Address */
ARM GAS  /tmp/ccbPnc67.s 			page 93


5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
5233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint8_t transferdirection;
5257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t ownadd1code;
5259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t ownadd2code;
5260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(ITFlags);
5263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
ARM GAS  /tmp/ccbPnc67.s 			page 94


5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Reset Address Event counter */
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear ADDR flag */
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Process Unlocked */
5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
5299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Slave Addr callback */
5309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Else clear address flag only */
5334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
ARM GAS  /tmp/ccbPnc67.s 			page 95


5335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
ARM GAS  /tmp/ccbPnc67.s 			page 96


5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
ARM GAS  /tmp/ccbPnc67.s 			page 97


5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
5479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear STOP Flag */
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
ARM GAS  /tmp/ccbPnc67.s 			page 98


5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
5509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set acknowledge error code */
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Fetch Last receive data if any */
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
5519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     UNUSED(tmpreg);
5523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register */
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccbPnc67.s 			page 99


5563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
ARM GAS  /tmp/ccbPnc67.s 			page 100


5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear STOP Flag */
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register */
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
ARM GAS  /tmp/ccbPnc67.s 			page 101


5677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store Last receive data if any */
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
5695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Tranfer */
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccbPnc67.s 			page 102


5734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store Last receive data if any */
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
ARM GAS  /tmp/ccbPnc67.s 			page 103


5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
5800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear NACK Flag */
5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
5833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Set new error code */
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts */
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
ARM GAS  /tmp/ccbPnc67.s 			page 104


5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable all interrupts */
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
5860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* This change will be do later */
5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || (tmppreviousstat
5872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
5879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA TX */
5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || (tmppreviou
5901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
ARM GAS  /tmp/ccbPnc67.s 			page 105


5905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
5908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA RX */
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
5931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
5936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
5942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccbPnc67.s 			page 106


5962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
5974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
5978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
  26              		.loc 1 5978 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
5979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
5980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
5981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  32              		.loc 1 5981 0
  33 0000 0368     		ldr	r3, [r0]
  34 0002 9A69     		ldr	r2, [r3, #24]
  35 0004 12F0020F 		tst	r2, #2
  36 0008 01D0     		beq	.L2
5982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  37              		.loc 1 5983 0
  38 000a 0022     		movs	r2, #0
  39 000c 9A62     		str	r2, [r3, #40]
  40              	.L2:
5984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register if not empty */
5987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  41              		.loc 1 5987 0
  42 000e 0368     		ldr	r3, [r0]
  43 0010 9A69     		ldr	r2, [r3, #24]
  44 0012 12F0010F 		tst	r2, #1
  45 0016 03D1     		bne	.L1
5988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  46              		.loc 1 5989 0
  47 0018 9A69     		ldr	r2, [r3, #24]
  48 001a 42F00102 		orr	r2, r2, #1
  49 001e 9A61     		str	r2, [r3, #24]
  50              	.L1:
5990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
  51              		.loc 1 5991 0
  52 0020 7047     		bx	lr
ARM GAS  /tmp/ccbPnc67.s 			page 107


  53              		.cfi_endproc
  54              	.LFE204:
  56              		.section	.text.I2C_TransferConfig,"ax",%progbits
  57              		.align	1
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-d16
  63              	I2C_TransferConfig:
  64              	.LFB216:
5992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
5995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
5996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable DMA Request */
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update Buffer pointer */
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the DMA stream or channel depends on Instance */
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
6029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccbPnc67.s 			page 108


6039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable DMA Request */
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update Buffer pointer */
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  /tmp/ccbPnc67.s 			page 109


6096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the DMA stream or channel depends on Instance */
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
6104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param hdma DMA handle
6146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 110


6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       treatdmaerror = 1U;
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
6164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       treatdmaerror = 1U;
6166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Acknowledge */
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param hdma DMA handle.
6184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
6198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccbPnc67.s 			page 111


6210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  /tmp/ccbPnc67.s 			page 112


6267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
6298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 113


6324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Store Last receive data if any */
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return HAL_OK */
6332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_OK;
6334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
6336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
6338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
6361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
6378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 114


6381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check for the Timeout */
6386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
6390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Process Unlocked */
6395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
6398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
6399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
6406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
6409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
6419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
6422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
6435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
ARM GAS  /tmp/ccbPnc67.s 			page 115


6438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
  65              		.loc 1 6446 0
  66              		.cfi_startproc
  67              		@ args = 4, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.LVL1:
  71 0000 70B4     		push	{r4, r5, r6}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 12
  74              		.cfi_offset 4, -12
  75              		.cfi_offset 5, -8
  76              		.cfi_offset 6, -4
  77 0002 039E     		ldr	r6, [sp, #12]
6447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
6448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* update CR2 register */
6453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEN
  78              		.loc 1 6453 0
  79 0004 0568     		ldr	r5, [r0]
  80 0006 6868     		ldr	r0, [r5, #4]
  81              	.LVL2:
  82 0008 740D     		lsrs	r4, r6, #21
  83 000a 04F48064 		and	r4, r4, #1024
  84 000e 44F07F74 		orr	r4, r4, #66846720
  85 0012 44F45834 		orr	r4, r4, #221184
  86 0016 44F47F74 		orr	r4, r4, #1020
  87 001a 44F00304 		orr	r4, r4, #3
  88 001e 20EA0400 		bic	r0, r0, r4
  89 0022 C1F30901 		ubfx	r1, r1, #0, #10
  90              	.LVL3:
  91 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  92 002a 1943     		orrs	r1, r1, r3
  93 002c 3143     		orrs	r1, r1, r6
  94 002e 0143     		orrs	r1, r1, r0
  95 0030 6960     		str	r1, [r5, #4]
6454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_
6455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
  96              		.loc 1 6455 0
  97 0032 70BC     		pop	{r4, r5, r6}
  98              	.LCFI1:
  99              		.cfi_restore 6
 100              		.cfi_restore 5
 101              		.cfi_restore 4
 102              		.cfi_def_cfa_offset 0
 103              	.LVL4:
ARM GAS  /tmp/ccbPnc67.s 			page 116


 104 0034 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE216:
 108              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-d16
 115              	I2C_Enable_IRQ:
 116              	.LFB217:
6456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 117              		.loc 1 6465 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL5:
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 123              		.loc 1 6468 0
 124 0000 436B     		ldr	r3, [r0, #52]
 125 0002 1A4A     		ldr	r2, .L21
 126 0004 9342     		cmp	r3, r2
 127 0006 15D0     		beq	.L7
 128              		.loc 1 6468 0 is_stmt 0 discriminator 1
 129 0008 194A     		ldr	r2, .L21+4
 130 000a 9342     		cmp	r3, r2
 131 000c 12D0     		beq	.L7
6469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
6478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
6484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
ARM GAS  /tmp/ccbPnc67.s 			page 117


6487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_RELOAD_IT)
6490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 132              		.loc 1 6497 0 is_stmt 1
 133 000e 11F4004F 		tst	r1, #32768
 134 0012 29D1     		bne	.L17
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 135              		.loc 1 6466 0
 136 0014 0023     		movs	r3, #0
 137              	.L13:
 138              	.LVL6:
6498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 139              		.loc 1 6503 0
 140 0016 11F0010F 		tst	r1, #1
 141 001a 01D0     		beq	.L14
6504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 142              		.loc 1 6506 0
 143 001c 43F0F203 		orr	r3, r3, #242
 144              	.LVL7:
 145              	.L14:
6507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 146              		.loc 1 6509 0
 147 0020 11F0020F 		tst	r1, #2
 148 0024 01D0     		beq	.L15
6510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 149              		.loc 1 6512 0
 150 0026 43F0F403 		orr	r3, r3, #244
 151              	.LVL8:
 152              	.L15:
6513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 153              		.loc 1 6515 0
 154 002a 2029     		cmp	r1, #32
 155 002c 0CD1     		bne	.L12
6516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
ARM GAS  /tmp/ccbPnc67.s 			page 118


 156              		.loc 1 6518 0
 157 002e 43F02003 		orr	r3, r3, #32
 158              	.LVL9:
 159 0032 09E0     		b	.L12
 160              	.LVL10:
 161              	.L7:
6471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 162              		.loc 1 6471 0
 163 0034 11F4004F 		tst	r1, #32768
 164 0038 0BD1     		bne	.L16
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 165              		.loc 1 6466 0
 166 003a 0023     		movs	r3, #0
 167              	.L9:
 168              	.LVL11:
6477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 169              		.loc 1 6477 0
 170 003c 1029     		cmp	r1, #16
 171 003e 0AD0     		beq	.L18
 172              	.L10:
6483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 173              		.loc 1 6483 0
 174 0040 2029     		cmp	r1, #32
 175 0042 0BD0     		beq	.L19
 176              	.L11:
6489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 177              		.loc 1 6489 0
 178 0044 4029     		cmp	r1, #64
 179 0046 0CD0     		beq	.L20
 180              	.L12:
6519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* all interrupts requested done */
6525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 181              		.loc 1 6525 0
 182 0048 0168     		ldr	r1, [r0]
 183              	.LVL12:
 184 004a 0A68     		ldr	r2, [r1]
 185 004c 1343     		orrs	r3, r3, r2
 186              	.LVL13:
 187 004e 0B60     		str	r3, [r1]
6526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 188              		.loc 1 6526 0
 189 0050 7047     		bx	lr
 190              	.LVL14:
 191              	.L16:
6474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 192              		.loc 1 6474 0
 193 0052 B823     		movs	r3, #184
 194 0054 F2E7     		b	.L9
 195              	.LVL15:
 196              	.L18:
6480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 197              		.loc 1 6480 0
ARM GAS  /tmp/ccbPnc67.s 			page 119


 198 0056 43F09003 		orr	r3, r3, #144
 199              	.LVL16:
 200 005a F1E7     		b	.L10
 201              	.L19:
6486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 202              		.loc 1 6486 0
 203 005c 43F06003 		orr	r3, r3, #96
 204              	.LVL17:
 205 0060 F0E7     		b	.L11
 206              	.L20:
6492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 207              		.loc 1 6492 0
 208 0062 43F04003 		orr	r3, r3, #64
 209              	.LVL18:
 210 0066 EFE7     		b	.L12
 211              	.LVL19:
 212              	.L17:
6500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 213              		.loc 1 6500 0
 214 0068 B823     		movs	r3, #184
 215 006a D4E7     		b	.L13
 216              	.L22:
 217              		.align	2
 218              	.L21:
 219 006c 00000000 		.word	I2C_Master_ISR_DMA
 220 0070 00000000 		.word	I2C_Slave_ISR_DMA
 221              		.cfi_endproc
 222              	.LFE217:
 224              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 225              		.align	1
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	I2C_Disable_IRQ:
 232              	.LFB218:
6527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 233              		.loc 1 6536 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238              	.LVL20:
6537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 239              		.loc 1 6539 0
 240 0000 11F0010F 		tst	r1, #1
ARM GAS  /tmp/ccbPnc67.s 			page 120


 241 0004 09D0     		beq	.L30
 242              	.LVL21:
6540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 243              		.loc 1 6544 0
 244 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 245 000a 03F02803 		and	r3, r3, #40
 246 000e 282B     		cmp	r3, #40
 247 0010 01D0     		beq	.L45
6545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 248              		.loc 1 6547 0
 249 0012 F223     		movs	r3, #242
 250 0014 02E0     		b	.L24
 251              	.L45:
6542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 252              		.loc 1 6542 0
 253 0016 4223     		movs	r3, #66
 254 0018 00E0     		b	.L24
 255              	.LVL22:
 256              	.L30:
6537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 257              		.loc 1 6537 0
 258 001a 0023     		movs	r3, #0
 259              	.LVL23:
 260              	.L24:
6548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 261              		.loc 1 6551 0
 262 001c 11F0020F 		tst	r1, #2
 263 0020 29D0     		beq	.L34
6536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 264              		.loc 1 6536 0
 265 0022 10B4     		push	{r4}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 4, -4
6552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 269              		.loc 1 6554 0
 270 0024 43F04404 		orr	r4, r3, #68
 271              	.LVL24:
6555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 272              		.loc 1 6556 0
 273 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 274 002c 02F02802 		and	r2, r2, #40
 275 0030 282A     		cmp	r2, #40
 276 0032 12D0     		beq	.L32
6557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 121


6558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 277              		.loc 1 6559 0
 278 0034 43F0F403 		orr	r3, r3, #244
 279              	.LVL25:
 280              	.L25:
6560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 281              		.loc 1 6563 0
 282 0038 11F4004F 		tst	r1, #32768
 283 003c 0FD1     		bne	.L46
 284              	.L26:
6564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 285              		.loc 1 6569 0
 286 003e 1029     		cmp	r1, #16
 287 0040 10D0     		beq	.L47
 288              	.L27:
6570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 289              		.loc 1 6575 0
 290 0042 2029     		cmp	r1, #32
 291 0044 11D0     		beq	.L48
 292              	.L28:
6576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 293              		.loc 1 6581 0
 294 0046 4029     		cmp	r1, #64
 295 0048 12D0     		beq	.L49
 296              	.L29:
6582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable TC interrupts */
6584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 297              		.loc 1 6590 0
 298 004a 0168     		ldr	r1, [r0]
 299              	.LVL26:
 300 004c 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccbPnc67.s 			page 122


 301 004e 22EA0303 		bic	r3, r2, r3
 302              	.LVL27:
 303 0052 0B60     		str	r3, [r1]
6591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 304              		.loc 1 6591 0
 305 0054 5DF8044B 		ldr	r4, [sp], #4
 306              	.LCFI3:
 307              		.cfi_remember_state
 308              		.cfi_restore 4
 309              		.cfi_def_cfa_offset 0
 310 0058 7047     		bx	lr
 311              	.LVL28:
 312              	.L32:
 313              	.LCFI4:
 314              		.cfi_restore_state
6554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 315              		.loc 1 6554 0
 316 005a 2346     		mov	r3, r4
 317 005c ECE7     		b	.L25
 318              	.LVL29:
 319              	.L46:
6566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 320              		.loc 1 6566 0
 321 005e 43F0B803 		orr	r3, r3, #184
 322              	.LVL30:
 323 0062 ECE7     		b	.L26
 324              	.L47:
6572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 325              		.loc 1 6572 0
 326 0064 43F09003 		orr	r3, r3, #144
 327              	.LVL31:
 328 0068 EBE7     		b	.L27
 329              	.L48:
6578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 330              		.loc 1 6578 0
 331 006a 43F02003 		orr	r3, r3, #32
 332              	.LVL32:
 333 006e EAE7     		b	.L28
 334              	.L49:
6584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 335              		.loc 1 6584 0
 336 0070 43F04003 		orr	r3, r3, #64
 337              	.LVL33:
 338 0074 E9E7     		b	.L29
 339              	.L34:
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 0
 342              		.cfi_restore 4
6563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 343              		.loc 1 6563 0
 344 0076 11F4004F 		tst	r1, #32768
 345 007a 0BD1     		bne	.L50
 346              	.L36:
6569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 347              		.loc 1 6569 0
 348 007c 1029     		cmp	r1, #16
 349 007e 0CD0     		beq	.L51
ARM GAS  /tmp/ccbPnc67.s 			page 123


 350              	.L38:
6575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 351              		.loc 1 6575 0
 352 0080 2029     		cmp	r1, #32
 353 0082 0DD0     		beq	.L52
 354              	.L40:
6581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 355              		.loc 1 6581 0
 356 0084 4029     		cmp	r1, #64
 357 0086 0ED0     		beq	.L53
 358              	.L42:
6590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 359              		.loc 1 6590 0
 360 0088 0168     		ldr	r1, [r0]
 361              	.LVL34:
 362 008a 0A68     		ldr	r2, [r1]
 363 008c 22EA0303 		bic	r3, r2, r3
 364              	.LVL35:
 365 0090 0B60     		str	r3, [r1]
 366 0092 7047     		bx	lr
 367              	.LVL36:
 368              	.L50:
6566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 369              		.loc 1 6566 0
 370 0094 43F0B803 		orr	r3, r3, #184
 371              	.LVL37:
 372 0098 F0E7     		b	.L36
 373              	.L51:
6572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 374              		.loc 1 6572 0
 375 009a 43F09003 		orr	r3, r3, #144
 376              	.LVL38:
 377 009e EFE7     		b	.L38
 378              	.L52:
6578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 379              		.loc 1 6578 0
 380 00a0 43F02003 		orr	r3, r3, #32
 381              	.LVL39:
 382 00a4 EEE7     		b	.L40
 383              	.L53:
6584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 384              		.loc 1 6584 0
 385 00a6 43F04003 		orr	r3, r3, #64
 386              	.LVL40:
 387 00aa EDE7     		b	.L42
 388              		.cfi_endproc
 389              	.LFE218:
 391              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv5-d16
 398              	I2C_ConvertOtherXferOptions:
 399              	.LFB219:
6592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
ARM GAS  /tmp/ccbPnc67.s 			page 124


6594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functionnal XferOptions.
6595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 400              		.loc 1 6599 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405              	.LVL41:
6600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 406              		.loc 1 6603 0
 407 0000 C36A     		ldr	r3, [r0, #44]
 408 0002 AA2B     		cmp	r3, #170
 409 0004 04D0     		beq	.L57
6604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 410              		.loc 1 6611 0
 411 0006 C36A     		ldr	r3, [r0, #44]
 412 0008 B3F52A4F 		cmp	r3, #43520
 413 000c 03D0     		beq	.L58
 414              	.L54:
6612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
6614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
6618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 415              		.loc 1 6619 0
 416 000e 7047     		bx	lr
 417              	.L57:
6605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 418              		.loc 1 6605 0
 419 0010 0023     		movs	r3, #0
 420 0012 C362     		str	r3, [r0, #44]
 421 0014 7047     		bx	lr
 422              	.L58:
6613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 423              		.loc 1 6613 0
 424 0016 4FF00073 		mov	r3, #33554432
 425 001a C362     		str	r3, [r0, #44]
 426              		.loc 1 6619 0
 427 001c F7E7     		b	.L54
 428              		.cfi_endproc
ARM GAS  /tmp/ccbPnc67.s 			page 125


 429              	.LFE219:
 431              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 432              		.align	1
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv5-d16
 438              	I2C_IsAcknowledgeFailed:
 439              	.LFB215:
6378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 440              		.loc 1 6378 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              	.LVL42:
 445 0000 70B5     		push	{r4, r5, r6, lr}
 446              	.LCFI6:
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 4, -16
 449              		.cfi_offset 5, -12
 450              		.cfi_offset 6, -8
 451              		.cfi_offset 14, -4
 452 0002 0446     		mov	r4, r0
 453 0004 0D46     		mov	r5, r1
 454 0006 1646     		mov	r6, r2
6379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 455              		.loc 1 6379 0
 456 0008 0368     		ldr	r3, [r0]
 457 000a 9B69     		ldr	r3, [r3, #24]
 458 000c 13F0100F 		tst	r3, #16
 459 0010 1CD0     		beq	.L66
 460              	.LVL43:
 461              	.L62:
6383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 462              		.loc 1 6383 0
 463 0012 2368     		ldr	r3, [r4]
 464 0014 9A69     		ldr	r2, [r3, #24]
 465 0016 12F0200F 		tst	r2, #32
 466 001a 19D1     		bne	.L67
6386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 467              		.loc 1 6386 0
 468 001c B5F1FF3F 		cmp	r5, #-1
 469 0020 F7D0     		beq	.L62
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 470              		.loc 1 6388 0
 471 0022 FFF7FEFF 		bl	HAL_GetTick
 472              	.LVL44:
 473 0026 801B     		subs	r0, r0, r6
 474 0028 A842     		cmp	r0, r5
 475 002a 01D8     		bhi	.L63
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 476              		.loc 1 6388 0 is_stmt 0 discriminator 1
 477 002c 002D     		cmp	r5, #0
 478 002e F0D1     		bne	.L62
 479              	.L63:
6390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 480              		.loc 1 6390 0 is_stmt 1
ARM GAS  /tmp/ccbPnc67.s 			page 126


 481 0030 636C     		ldr	r3, [r4, #68]
 482 0032 43F02003 		orr	r3, r3, #32
 483 0036 6364     		str	r3, [r4, #68]
6391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 484              		.loc 1 6391 0
 485 0038 2023     		movs	r3, #32
 486 003a 84F84130 		strb	r3, [r4, #65]
6392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 487              		.loc 1 6392 0
 488 003e 0023     		movs	r3, #0
 489 0040 84F84230 		strb	r3, [r4, #66]
6395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 490              		.loc 1 6395 0
 491 0044 84F84030 		strb	r3, [r4, #64]
6397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 492              		.loc 1 6397 0
 493 0048 0120     		movs	r0, #1
 494 004a 20E0     		b	.L61
 495              	.LVL45:
 496              	.L66:
6423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 497              		.loc 1 6423 0
 498 004c 0020     		movs	r0, #0
 499              	.LVL46:
 500 004e 1EE0     		b	.L61
 501              	.LVL47:
 502              	.L67:
6403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 503              		.loc 1 6403 0
 504 0050 1022     		movs	r2, #16
 505 0052 DA61     		str	r2, [r3, #28]
6406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 506              		.loc 1 6406 0
 507 0054 2368     		ldr	r3, [r4]
 508 0056 2025     		movs	r5, #32
 509              	.LVL48:
 510 0058 DD61     		str	r5, [r3, #28]
6409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 511              		.loc 1 6409 0
 512 005a 2046     		mov	r0, r4
 513 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 514              	.LVL49:
6412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 515              		.loc 1 6412 0
 516 0060 2268     		ldr	r2, [r4]
 517 0062 5368     		ldr	r3, [r2, #4]
 518 0064 23F0FF73 		bic	r3, r3, #33423360
 519 0068 23F48B33 		bic	r3, r3, #71168
 520 006c 23F4FF73 		bic	r3, r3, #510
 521 0070 23F00103 		bic	r3, r3, #1
 522 0074 5360     		str	r3, [r2, #4]
6414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 523              		.loc 1 6414 0
 524 0076 636C     		ldr	r3, [r4, #68]
 525 0078 43F00403 		orr	r3, r3, #4
 526 007c 6364     		str	r3, [r4, #68]
6415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/ccbPnc67.s 			page 127


 527              		.loc 1 6415 0
 528 007e 84F84150 		strb	r5, [r4, #65]
6416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 529              		.loc 1 6416 0
 530 0082 0023     		movs	r3, #0
 531 0084 84F84230 		strb	r3, [r4, #66]
6419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 532              		.loc 1 6419 0
 533 0088 84F84030 		strb	r3, [r4, #64]
6421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 534              		.loc 1 6421 0
 535 008c 0120     		movs	r0, #1
 536              	.L61:
6424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 537              		.loc 1 6424 0
 538 008e 70BD     		pop	{r4, r5, r6, pc}
 539              		.cfi_endproc
 540              	.LFE215:
 542              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 543              		.align	1
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv5-d16
 549              	I2C_WaitOnTXISFlagUntilTimeout:
 550              	.LFB212:
6244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 551              		.loc 1 6244 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL50:
 556 0000 70B5     		push	{r4, r5, r6, lr}
 557              	.LCFI7:
 558              		.cfi_def_cfa_offset 16
 559              		.cfi_offset 4, -16
 560              		.cfi_offset 5, -12
 561              		.cfi_offset 6, -8
 562              		.cfi_offset 14, -4
 563 0002 0446     		mov	r4, r0
 564 0004 0D46     		mov	r5, r1
 565 0006 1646     		mov	r6, r2
 566              	.LVL51:
 567              	.L71:
6245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 568              		.loc 1 6245 0
 569 0008 2368     		ldr	r3, [r4]
 570 000a 9B69     		ldr	r3, [r3, #24]
 571 000c 13F0020F 		tst	r3, #2
 572 0010 1DD1     		bne	.L76
6248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 573              		.loc 1 6248 0
 574 0012 3246     		mov	r2, r6
 575 0014 2946     		mov	r1, r5
 576 0016 2046     		mov	r0, r4
 577 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 578              	.LVL52:
ARM GAS  /tmp/ccbPnc67.s 			page 128


 579 001c C8B9     		cbnz	r0, .L74
6254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 580              		.loc 1 6254 0
 581 001e B5F1FF3F 		cmp	r5, #-1
 582 0022 F1D0     		beq	.L71
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 583              		.loc 1 6256 0
 584 0024 FFF7FEFF 		bl	HAL_GetTick
 585              	.LVL53:
 586 0028 801B     		subs	r0, r0, r6
 587 002a A842     		cmp	r0, r5
 588 002c 01D8     		bhi	.L72
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 589              		.loc 1 6256 0 is_stmt 0 discriminator 1
 590 002e 002D     		cmp	r5, #0
 591 0030 EAD1     		bne	.L71
 592              	.L72:
6258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 593              		.loc 1 6258 0 is_stmt 1
 594 0032 636C     		ldr	r3, [r4, #68]
 595 0034 43F02003 		orr	r3, r3, #32
 596 0038 6364     		str	r3, [r4, #68]
6259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 597              		.loc 1 6259 0
 598 003a 2023     		movs	r3, #32
 599 003c 84F84130 		strb	r3, [r4, #65]
6260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 600              		.loc 1 6260 0
 601 0040 0023     		movs	r3, #0
 602 0042 84F84230 		strb	r3, [r4, #66]
6263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 603              		.loc 1 6263 0
 604 0046 84F84030 		strb	r3, [r4, #64]
6265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 605              		.loc 1 6265 0
 606 004a 0120     		movs	r0, #1
 607 004c 00E0     		b	.L70
 608              	.L76:
6269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 609              		.loc 1 6269 0
 610 004e 0020     		movs	r0, #0
 611              	.L70:
6270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 612              		.loc 1 6270 0
 613 0050 70BD     		pop	{r4, r5, r6, pc}
 614              	.LVL54:
 615              	.L74:
6250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 616              		.loc 1 6250 0
 617 0052 0120     		movs	r0, #1
 618 0054 FCE7     		b	.L70
 619              		.cfi_endproc
 620              	.LFE212:
 622              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 623              		.align	1
 624              		.syntax unified
 625              		.thumb
ARM GAS  /tmp/ccbPnc67.s 			page 129


 626              		.thumb_func
 627              		.fpu fpv5-d16
 629              	I2C_WaitOnFlagUntilTimeout:
 630              	.LFB211:
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 631              		.loc 1 6214 0
 632              		.cfi_startproc
 633              		@ args = 4, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              	.LVL55:
 636 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 637              	.LCFI8:
 638              		.cfi_def_cfa_offset 24
 639              		.cfi_offset 3, -24
 640              		.cfi_offset 4, -20
 641              		.cfi_offset 5, -16
 642              		.cfi_offset 6, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 0546     		mov	r5, r0
 646 0004 0F46     		mov	r7, r1
 647 0006 1646     		mov	r6, r2
 648 0008 1C46     		mov	r4, r3
 649              	.LVL56:
 650              	.L79:
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 651              		.loc 1 6215 0
 652 000a 2B68     		ldr	r3, [r5]
 653 000c 9B69     		ldr	r3, [r3, #24]
 654 000e 37EA0303 		bics	r3, r7, r3
 655 0012 0CBF     		ite	eq
 656 0014 0123     		moveq	r3, #1
 657 0016 0023     		movne	r3, #0
 658 0018 B342     		cmp	r3, r6
 659 001a 18D1     		bne	.L84
6218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 660              		.loc 1 6218 0
 661 001c B4F1FF3F 		cmp	r4, #-1
 662 0020 F3D0     		beq	.L79
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 663              		.loc 1 6220 0
 664 0022 FFF7FEFF 		bl	HAL_GetTick
 665              	.LVL57:
 666 0026 069B     		ldr	r3, [sp, #24]
 667 0028 C01A     		subs	r0, r0, r3
 668 002a A042     		cmp	r0, r4
 669 002c 01D8     		bhi	.L80
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 670              		.loc 1 6220 0 is_stmt 0 discriminator 1
 671 002e 002C     		cmp	r4, #0
 672 0030 EBD1     		bne	.L79
 673              	.L80:
6222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 674              		.loc 1 6222 0 is_stmt 1
 675 0032 6B6C     		ldr	r3, [r5, #68]
 676 0034 43F02003 		orr	r3, r3, #32
 677 0038 6B64     		str	r3, [r5, #68]
ARM GAS  /tmp/ccbPnc67.s 			page 130


6223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 678              		.loc 1 6223 0
 679 003a 2023     		movs	r3, #32
 680 003c 85F84130 		strb	r3, [r5, #65]
6224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 681              		.loc 1 6224 0
 682 0040 0023     		movs	r3, #0
 683 0042 85F84230 		strb	r3, [r5, #66]
6227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 684              		.loc 1 6227 0
 685 0046 85F84030 		strb	r3, [r5, #64]
6228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 686              		.loc 1 6228 0
 687 004a 0120     		movs	r0, #1
 688 004c 00E0     		b	.L81
 689              	.L84:
6232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 690              		.loc 1 6232 0
 691 004e 0020     		movs	r0, #0
 692              	.L81:
6233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 693              		.loc 1 6233 0
 694 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 695              		.cfi_endproc
 696              	.LFE211:
 698              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 699              		.align	1
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu fpv5-d16
 705              	I2C_RequestMemoryWrite:
 706              	.LFB194:
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 707              		.loc 1 5155 0
 708              		.cfi_startproc
 709              		@ args = 8, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              	.LVL58:
 712 0000 70B5     		push	{r4, r5, r6, lr}
 713              	.LCFI9:
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 4, -16
 716              		.cfi_offset 5, -12
 717              		.cfi_offset 6, -8
 718              		.cfi_offset 14, -4
 719 0002 82B0     		sub	sp, sp, #8
 720              	.LCFI10:
 721              		.cfi_def_cfa_offset 24
 722 0004 0446     		mov	r4, r0
 723 0006 1646     		mov	r6, r2
 724 0008 1D46     		mov	r5, r3
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 725              		.loc 1 5156 0
 726 000a 184B     		ldr	r3, .L92
 727              	.LVL59:
 728 000c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccbPnc67.s 			page 131


 729 000e 4FF08073 		mov	r3, #16777216
 730 0012 EAB2     		uxtb	r2, r5
 731              	.LVL60:
 732 0014 FFF7FEFF 		bl	I2C_TransferConfig
 733              	.LVL61:
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 734              		.loc 1 5159 0
 735 0018 079A     		ldr	r2, [sp, #28]
 736 001a 0699     		ldr	r1, [sp, #24]
 737 001c 2046     		mov	r0, r4
 738 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 739              	.LVL62:
 740 0022 E8B9     		cbnz	r0, .L89
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 741              		.loc 1 5165 0
 742 0024 012D     		cmp	r5, #1
 743 0026 0ED1     		bne	.L87
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 744              		.loc 1 5168 0
 745 0028 2368     		ldr	r3, [r4]
 746 002a F6B2     		uxtb	r6, r6
 747 002c 9E62     		str	r6, [r3, #40]
 748              	.L88:
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 749              		.loc 1 5187 0
 750 002e 079B     		ldr	r3, [sp, #28]
 751 0030 0093     		str	r3, [sp]
 752 0032 069B     		ldr	r3, [sp, #24]
 753 0034 0022     		movs	r2, #0
 754 0036 8021     		movs	r1, #128
 755 0038 2046     		mov	r0, r4
 756 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 757              	.LVL63:
 758 003e 0346     		mov	r3, r0
 759 0040 78B1     		cbz	r0, .L86
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 760              		.loc 1 5189 0
 761 0042 0123     		movs	r3, #1
 762 0044 0DE0     		b	.L86
 763              	.L87:
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 764              		.loc 1 5174 0
 765 0046 2368     		ldr	r3, [r4]
 766 0048 320A     		lsrs	r2, r6, #8
 767 004a 9A62     		str	r2, [r3, #40]
5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 768              		.loc 1 5177 0
 769 004c 079A     		ldr	r2, [sp, #28]
 770 004e 0699     		ldr	r1, [sp, #24]
 771 0050 2046     		mov	r0, r4
 772 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 773              	.LVL64:
 774 0056 38B9     		cbnz	r0, .L90
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 775              		.loc 1 5183 0
 776 0058 2368     		ldr	r3, [r4]
 777 005a F6B2     		uxtb	r6, r6
ARM GAS  /tmp/ccbPnc67.s 			page 132


 778 005c 9E62     		str	r6, [r3, #40]
 779 005e E6E7     		b	.L88
 780              	.L89:
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 781              		.loc 1 5161 0
 782 0060 0123     		movs	r3, #1
 783              	.L86:
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 784              		.loc 1 5193 0
 785 0062 1846     		mov	r0, r3
 786 0064 02B0     		add	sp, sp, #8
 787              	.LCFI11:
 788              		.cfi_remember_state
 789              		.cfi_def_cfa_offset 16
 790              		@ sp needed
 791 0066 70BD     		pop	{r4, r5, r6, pc}
 792              	.LVL65:
 793              	.L90:
 794              	.LCFI12:
 795              		.cfi_restore_state
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 796              		.loc 1 5179 0
 797 0068 0123     		movs	r3, #1
 798 006a FAE7     		b	.L86
 799              	.L93:
 800              		.align	2
 801              	.L92:
 802 006c 00200080 		.word	-2147475456
 803              		.cfi_endproc
 804              	.LFE194:
 806              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 807              		.align	1
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv5-d16
 813              	I2C_RequestMemoryRead:
 814              	.LFB195:
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 815              		.loc 1 5208 0
 816              		.cfi_startproc
 817              		@ args = 8, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              	.LVL66:
 820 0000 70B5     		push	{r4, r5, r6, lr}
 821              	.LCFI13:
 822              		.cfi_def_cfa_offset 16
 823              		.cfi_offset 4, -16
 824              		.cfi_offset 5, -12
 825              		.cfi_offset 6, -8
 826              		.cfi_offset 14, -4
 827 0002 82B0     		sub	sp, sp, #8
 828              	.LCFI14:
 829              		.cfi_def_cfa_offset 24
 830 0004 0446     		mov	r4, r0
 831 0006 1646     		mov	r6, r2
 832 0008 1D46     		mov	r5, r3
ARM GAS  /tmp/ccbPnc67.s 			page 133


5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 833              		.loc 1 5209 0
 834 000a 184B     		ldr	r3, .L101
 835              	.LVL67:
 836 000c 0093     		str	r3, [sp]
 837 000e 0023     		movs	r3, #0
 838 0010 EAB2     		uxtb	r2, r5
 839              	.LVL68:
 840 0012 FFF7FEFF 		bl	I2C_TransferConfig
 841              	.LVL69:
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 842              		.loc 1 5212 0
 843 0016 079A     		ldr	r2, [sp, #28]
 844 0018 0699     		ldr	r1, [sp, #24]
 845 001a 2046     		mov	r0, r4
 846 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 847              	.LVL70:
 848 0020 E8B9     		cbnz	r0, .L98
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 849              		.loc 1 5218 0
 850 0022 012D     		cmp	r5, #1
 851 0024 0ED1     		bne	.L96
5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 852              		.loc 1 5221 0
 853 0026 2368     		ldr	r3, [r4]
 854 0028 F6B2     		uxtb	r6, r6
 855 002a 9E62     		str	r6, [r3, #40]
 856              	.L97:
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 857              		.loc 1 5240 0
 858 002c 079B     		ldr	r3, [sp, #28]
 859 002e 0093     		str	r3, [sp]
 860 0030 069B     		ldr	r3, [sp, #24]
 861 0032 0022     		movs	r2, #0
 862 0034 4021     		movs	r1, #64
 863 0036 2046     		mov	r0, r4
 864 0038 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 865              	.LVL71:
 866 003c 0346     		mov	r3, r0
 867 003e 78B1     		cbz	r0, .L95
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 868              		.loc 1 5242 0
 869 0040 0123     		movs	r3, #1
 870 0042 0DE0     		b	.L95
 871              	.L96:
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 872              		.loc 1 5227 0
 873 0044 2368     		ldr	r3, [r4]
 874 0046 320A     		lsrs	r2, r6, #8
 875 0048 9A62     		str	r2, [r3, #40]
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 876              		.loc 1 5230 0
 877 004a 079A     		ldr	r2, [sp, #28]
 878 004c 0699     		ldr	r1, [sp, #24]
 879 004e 2046     		mov	r0, r4
 880 0050 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 881              	.LVL72:
ARM GAS  /tmp/ccbPnc67.s 			page 134


 882 0054 38B9     		cbnz	r0, .L99
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 883              		.loc 1 5236 0
 884 0056 2368     		ldr	r3, [r4]
 885 0058 F6B2     		uxtb	r6, r6
 886 005a 9E62     		str	r6, [r3, #40]
 887 005c E6E7     		b	.L97
 888              	.L98:
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 889              		.loc 1 5214 0
 890 005e 0123     		movs	r3, #1
 891              	.L95:
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 892              		.loc 1 5246 0
 893 0060 1846     		mov	r0, r3
 894 0062 02B0     		add	sp, sp, #8
 895              	.LCFI15:
 896              		.cfi_remember_state
 897              		.cfi_def_cfa_offset 16
 898              		@ sp needed
 899 0064 70BD     		pop	{r4, r5, r6, pc}
 900              	.LVL73:
 901              	.L99:
 902              	.LCFI16:
 903              		.cfi_restore_state
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 904              		.loc 1 5232 0
 905 0066 0123     		movs	r3, #1
 906 0068 FAE7     		b	.L95
 907              	.L102:
 908 006a 00BF     		.align	2
 909              	.L101:
 910 006c 00200080 		.word	-2147475456
 911              		.cfi_endproc
 912              	.LFE195:
 914              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 915              		.align	1
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu fpv5-d16
 921              	I2C_WaitOnSTOPFlagUntilTimeout:
 922              	.LFB213:
6281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 923              		.loc 1 6281 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              	.LVL74:
 928 0000 70B5     		push	{r4, r5, r6, lr}
 929              	.LCFI17:
 930              		.cfi_def_cfa_offset 16
 931              		.cfi_offset 4, -16
 932              		.cfi_offset 5, -12
 933              		.cfi_offset 6, -8
 934              		.cfi_offset 14, -4
 935 0002 0546     		mov	r5, r0
ARM GAS  /tmp/ccbPnc67.s 			page 135


 936 0004 0C46     		mov	r4, r1
 937 0006 1646     		mov	r6, r2
 938              	.LVL75:
 939              	.L104:
6282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 940              		.loc 1 6282 0
 941 0008 2B68     		ldr	r3, [r5]
 942 000a 9B69     		ldr	r3, [r3, #24]
 943 000c 13F0200F 		tst	r3, #32
 944 0010 1AD1     		bne	.L110
6285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 945              		.loc 1 6285 0
 946 0012 3246     		mov	r2, r6
 947 0014 2146     		mov	r1, r4
 948 0016 2846     		mov	r0, r5
 949 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 950              	.LVL76:
 951 001c B0B9     		cbnz	r0, .L108
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 952              		.loc 1 6291 0
 953 001e FFF7FEFF 		bl	HAL_GetTick
 954              	.LVL77:
 955 0022 801B     		subs	r0, r0, r6
 956 0024 A042     		cmp	r0, r4
 957 0026 01D8     		bhi	.L106
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 958              		.loc 1 6291 0 is_stmt 0 discriminator 1
 959 0028 002C     		cmp	r4, #0
 960 002a EDD1     		bne	.L104
 961              	.L106:
6293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 962              		.loc 1 6293 0 is_stmt 1
 963 002c 6B6C     		ldr	r3, [r5, #68]
 964 002e 43F02003 		orr	r3, r3, #32
 965 0032 6B64     		str	r3, [r5, #68]
6294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 966              		.loc 1 6294 0
 967 0034 2023     		movs	r3, #32
 968 0036 85F84130 		strb	r3, [r5, #65]
6295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 969              		.loc 1 6295 0
 970 003a 0023     		movs	r3, #0
 971 003c 85F84230 		strb	r3, [r5, #66]
6298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 972              		.loc 1 6298 0
 973 0040 85F84030 		strb	r3, [r5, #64]
6300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 974              		.loc 1 6300 0
 975 0044 0120     		movs	r0, #1
 976              	.L105:
6304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 977              		.loc 1 6304 0
 978 0046 70BD     		pop	{r4, r5, r6, pc}
 979              	.LVL78:
 980              	.L110:
6303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 981              		.loc 1 6303 0
ARM GAS  /tmp/ccbPnc67.s 			page 136


 982 0048 0020     		movs	r0, #0
 983 004a FCE7     		b	.L105
 984              	.L108:
6287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 985              		.loc 1 6287 0
 986 004c 0120     		movs	r0, #1
 987 004e FAE7     		b	.L105
 988              		.cfi_endproc
 989              	.LFE213:
 991              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 992              		.align	1
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 996              		.fpu fpv5-d16
 998              	I2C_WaitOnRXNEFlagUntilTimeout:
 999              	.LFB214:
6315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1000              		.loc 1 6315 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              	.LVL79:
 1005 0000 70B5     		push	{r4, r5, r6, lr}
 1006              	.LCFI18:
 1007              		.cfi_def_cfa_offset 16
 1008              		.cfi_offset 4, -16
 1009              		.cfi_offset 5, -12
 1010              		.cfi_offset 6, -8
 1011              		.cfi_offset 14, -4
 1012 0002 0446     		mov	r4, r0
 1013 0004 0D46     		mov	r5, r1
 1014 0006 1646     		mov	r6, r2
 1015              	.LVL80:
 1016              	.L112:
6316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1017              		.loc 1 6316 0
 1018 0008 2368     		ldr	r3, [r4]
 1019 000a 9B69     		ldr	r3, [r3, #24]
 1020 000c 13F0040F 		tst	r3, #4
 1021 0010 3ED1     		bne	.L120
6319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1022              		.loc 1 6319 0
 1023 0012 3246     		mov	r2, r6
 1024 0014 2946     		mov	r1, r5
 1025 0016 2046     		mov	r0, r4
 1026 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1027              	.LVL81:
 1028 001c 0146     		mov	r1, r0
 1029 001e 0028     		cmp	r0, #0
 1030 0020 38D1     		bne	.L118
6325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1031              		.loc 1 6325 0
 1032 0022 2368     		ldr	r3, [r4]
 1033 0024 9A69     		ldr	r2, [r3, #24]
 1034 0026 12F0200F 		tst	r2, #32
 1035 002a 13D1     		bne	.L121
ARM GAS  /tmp/ccbPnc67.s 			page 137


6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1036              		.loc 1 6355 0
 1037 002c FFF7FEFF 		bl	HAL_GetTick
 1038              	.LVL82:
 1039 0030 801B     		subs	r0, r0, r6
 1040 0032 A842     		cmp	r0, r5
 1041 0034 01D8     		bhi	.L116
6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1042              		.loc 1 6355 0 is_stmt 0 discriminator 1
 1043 0036 002D     		cmp	r5, #0
 1044 0038 E6D1     		bne	.L112
 1045              	.L116:
6357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1046              		.loc 1 6357 0 is_stmt 1
 1047 003a 636C     		ldr	r3, [r4, #68]
 1048 003c 43F02003 		orr	r3, r3, #32
 1049 0040 6364     		str	r3, [r4, #68]
6358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1050              		.loc 1 6358 0
 1051 0042 2023     		movs	r3, #32
 1052 0044 84F84130 		strb	r3, [r4, #65]
6361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1053              		.loc 1 6361 0
 1054 0048 0023     		movs	r3, #0
 1055 004a 84F84030 		strb	r3, [r4, #64]
6363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1056              		.loc 1 6363 0
 1057 004e 0121     		movs	r1, #1
 1058              	.L113:
6367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1059              		.loc 1 6367 0
 1060 0050 0846     		mov	r0, r1
 1061 0052 70BD     		pop	{r4, r5, r6, pc}
 1062              	.LVL83:
 1063              	.L121:
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1064              		.loc 1 6329 0
 1065 0054 9A69     		ldr	r2, [r3, #24]
 1066 0056 12F0040F 		tst	r2, #4
 1067 005a 02D0     		beq	.L115
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1068              		.loc 1 6329 0 is_stmt 0 discriminator 1
 1069 005c 228D     		ldrh	r2, [r4, #40]
 1070 005e 002A     		cmp	r2, #0
 1071 0060 F6D1     		bne	.L113
 1072              	.L115:
6338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1073              		.loc 1 6338 0 is_stmt 1
 1074 0062 2022     		movs	r2, #32
 1075 0064 DA61     		str	r2, [r3, #28]
6341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1076              		.loc 1 6341 0
 1077 0066 2168     		ldr	r1, [r4]
 1078 0068 4B68     		ldr	r3, [r1, #4]
 1079 006a 23F0FF73 		bic	r3, r3, #33423360
 1080 006e 23F48B33 		bic	r3, r3, #71168
 1081 0072 23F4FF73 		bic	r3, r3, #510
ARM GAS  /tmp/ccbPnc67.s 			page 138


 1082 0076 23F00103 		bic	r3, r3, #1
 1083 007a 4B60     		str	r3, [r1, #4]
6343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1084              		.loc 1 6343 0
 1085 007c 0023     		movs	r3, #0
 1086 007e 6364     		str	r3, [r4, #68]
6344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1087              		.loc 1 6344 0
 1088 0080 84F84120 		strb	r2, [r4, #65]
6345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1089              		.loc 1 6345 0
 1090 0084 84F84230 		strb	r3, [r4, #66]
6348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1091              		.loc 1 6348 0
 1092 0088 84F84030 		strb	r3, [r4, #64]
6350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1093              		.loc 1 6350 0
 1094 008c 0121     		movs	r1, #1
 1095 008e DFE7     		b	.L113
 1096              	.L120:
6366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 1097              		.loc 1 6366 0
 1098 0090 0021     		movs	r1, #0
 1099 0092 DDE7     		b	.L113
 1100              	.L118:
6321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1101              		.loc 1 6321 0
 1102 0094 0121     		movs	r1, #1
 1103 0096 DBE7     		b	.L113
 1104              		.cfi_endproc
 1105              	.LFE214:
 1107              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1108              		.align	1
 1109              		.weak	HAL_I2C_MspInit
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu fpv5-d16
 1115              	HAL_I2C_MspInit:
 1116              	.LFB143:
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1117              		.loc 1 628 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122              	.LVL84:
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1123              		.loc 1 635 0
 1124 0000 7047     		bx	lr
 1125              		.cfi_endproc
 1126              	.LFE143:
 1128              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1129              		.align	1
 1130              		.global	HAL_I2C_Init
 1131              		.syntax unified
 1132              		.thumb
ARM GAS  /tmp/ccbPnc67.s 			page 139


 1133              		.thumb_func
 1134              		.fpu fpv5-d16
 1136              	HAL_I2C_Init:
 1137              	.LFB141:
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1138              		.loc 1 473 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              	.LVL85:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1143              		.loc 1 475 0
 1144 0000 0028     		cmp	r0, #0
 1145 0002 57D0     		beq	.L129
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1146              		.loc 1 473 0
 1147 0004 10B5     		push	{r4, lr}
 1148              	.LCFI19:
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
 1152 0006 0446     		mov	r4, r0
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1153              		.loc 1 490 0
 1154 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1155 000c 002B     		cmp	r3, #0
 1156 000e 41D0     		beq	.L134
 1157              	.LVL86:
 1158              	.L125:
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1159              		.loc 1 521 0
 1160 0010 2423     		movs	r3, #36
 1161 0012 84F84130 		strb	r3, [r4, #65]
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1162              		.loc 1 524 0
 1163 0016 2268     		ldr	r2, [r4]
 1164 0018 1368     		ldr	r3, [r2]
 1165 001a 23F00103 		bic	r3, r3, #1
 1166 001e 1360     		str	r3, [r2]
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1167              		.loc 1 528 0
 1168 0020 6368     		ldr	r3, [r4, #4]
 1169 0022 2268     		ldr	r2, [r4]
 1170 0024 23F07063 		bic	r3, r3, #251658240
 1171 0028 1361     		str	r3, [r2, #16]
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1172              		.loc 1 532 0
 1173 002a 2268     		ldr	r2, [r4]
 1174 002c 9368     		ldr	r3, [r2, #8]
 1175 002e 23F40043 		bic	r3, r3, #32768
 1176 0032 9360     		str	r3, [r2, #8]
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1177              		.loc 1 535 0
 1178 0034 E368     		ldr	r3, [r4, #12]
 1179 0036 012B     		cmp	r3, #1
 1180 0038 31D0     		beq	.L135
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccbPnc67.s 			page 140


 1181              		.loc 1 541 0
 1182 003a A368     		ldr	r3, [r4, #8]
 1183 003c 2268     		ldr	r2, [r4]
 1184 003e 43F40443 		orr	r3, r3, #33792
 1185 0042 9360     		str	r3, [r2, #8]
 1186              	.L127:
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1187              		.loc 1 546 0
 1188 0044 E368     		ldr	r3, [r4, #12]
 1189 0046 022B     		cmp	r3, #2
 1190 0048 2FD0     		beq	.L136
 1191              	.L128:
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1192              		.loc 1 551 0
 1193 004a 2268     		ldr	r2, [r4]
 1194 004c 5168     		ldr	r1, [r2, #4]
 1195 004e 1A4B     		ldr	r3, .L137
 1196 0050 0B43     		orrs	r3, r3, r1
 1197 0052 5360     		str	r3, [r2, #4]
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1198              		.loc 1 555 0
 1199 0054 2268     		ldr	r2, [r4]
 1200 0056 D368     		ldr	r3, [r2, #12]
 1201 0058 23F40043 		bic	r3, r3, #32768
 1202 005c D360     		str	r3, [r2, #12]
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1203              		.loc 1 558 0
 1204 005e 2369     		ldr	r3, [r4, #16]
 1205 0060 6269     		ldr	r2, [r4, #20]
 1206 0062 1343     		orrs	r3, r3, r2
 1207 0064 A169     		ldr	r1, [r4, #24]
 1208 0066 2268     		ldr	r2, [r4]
 1209 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1210 006c D360     		str	r3, [r2, #12]
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1211              		.loc 1 562 0
 1212 006e E369     		ldr	r3, [r4, #28]
 1213 0070 216A     		ldr	r1, [r4, #32]
 1214 0072 2268     		ldr	r2, [r4]
 1215 0074 0B43     		orrs	r3, r3, r1
 1216 0076 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1217              		.loc 1 565 0
 1218 0078 2268     		ldr	r2, [r4]
 1219 007a 1368     		ldr	r3, [r2]
 1220 007c 43F00103 		orr	r3, r3, #1
 1221 0080 1360     		str	r3, [r2]
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1222              		.loc 1 567 0
 1223 0082 0020     		movs	r0, #0
 1224 0084 6064     		str	r0, [r4, #68]
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1225              		.loc 1 568 0
 1226 0086 2023     		movs	r3, #32
 1227 0088 84F84130 		strb	r3, [r4, #65]
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1228              		.loc 1 569 0
ARM GAS  /tmp/ccbPnc67.s 			page 141


 1229 008c 2063     		str	r0, [r4, #48]
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1230              		.loc 1 570 0
 1231 008e 84F84200 		strb	r0, [r4, #66]
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1232              		.loc 1 573 0
 1233 0092 10BD     		pop	{r4, pc}
 1234              	.LVL87:
 1235              	.L134:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1236              		.loc 1 493 0
 1237 0094 80F84030 		strb	r3, [r0, #64]
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1238              		.loc 1 517 0
 1239 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1240              	.LVL88:
 1241 009c B8E7     		b	.L125
 1242              	.L135:
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1243              		.loc 1 537 0
 1244 009e A368     		ldr	r3, [r4, #8]
 1245 00a0 2268     		ldr	r2, [r4]
 1246 00a2 43F40043 		orr	r3, r3, #32768
 1247 00a6 9360     		str	r3, [r2, #8]
 1248 00a8 CCE7     		b	.L127
 1249              	.L136:
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1250              		.loc 1 548 0
 1251 00aa 2368     		ldr	r3, [r4]
 1252 00ac 4FF40062 		mov	r2, #2048
 1253 00b0 5A60     		str	r2, [r3, #4]
 1254 00b2 CAE7     		b	.L128
 1255              	.LVL89:
 1256              	.L129:
 1257              	.LCFI20:
 1258              		.cfi_def_cfa_offset 0
 1259              		.cfi_restore 4
 1260              		.cfi_restore 14
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1261              		.loc 1 477 0
 1262 00b4 0120     		movs	r0, #1
 1263              	.LVL90:
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1264              		.loc 1 573 0
 1265 00b6 7047     		bx	lr
 1266              	.L138:
 1267              		.align	2
 1268              	.L137:
 1269 00b8 00800002 		.word	33587200
 1270              		.cfi_endproc
 1271              	.LFE141:
 1273              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1274              		.align	1
 1275              		.weak	HAL_I2C_MspDeInit
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
ARM GAS  /tmp/ccbPnc67.s 			page 142


 1279              		.fpu fpv5-d16
 1281              	HAL_I2C_MspDeInit:
 1282              	.LFB144:
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1283              		.loc 1 644 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288              	.LVL91:
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1289              		.loc 1 651 0
 1290 0000 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE144:
 1294              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1295              		.align	1
 1296              		.global	HAL_I2C_DeInit
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu fpv5-d16
 1302              	HAL_I2C_DeInit:
 1303              	.LFB142:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1304              		.loc 1 582 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308              	.LVL92:
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1309              		.loc 1 584 0
 1310 0000 A8B1     		cbz	r0, .L142
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1311              		.loc 1 582 0
 1312 0002 10B5     		push	{r4, lr}
 1313              	.LCFI21:
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 4, -8
 1316              		.cfi_offset 14, -4
 1317 0004 0446     		mov	r4, r0
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1318              		.loc 1 592 0
 1319 0006 2423     		movs	r3, #36
 1320 0008 80F84130 		strb	r3, [r0, #65]
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1321              		.loc 1 595 0
 1322 000c 0268     		ldr	r2, [r0]
 1323 000e 1368     		ldr	r3, [r2]
 1324 0010 23F00103 		bic	r3, r3, #1
 1325 0014 1360     		str	r3, [r2]
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1326              		.loc 1 607 0
 1327 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1328              	.LVL93:
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1329              		.loc 1 610 0
ARM GAS  /tmp/ccbPnc67.s 			page 143


 1330 001a 0020     		movs	r0, #0
 1331 001c 6064     		str	r0, [r4, #68]
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1332              		.loc 1 611 0
 1333 001e 84F84100 		strb	r0, [r4, #65]
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1334              		.loc 1 612 0
 1335 0022 2063     		str	r0, [r4, #48]
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1336              		.loc 1 613 0
 1337 0024 84F84200 		strb	r0, [r4, #66]
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1338              		.loc 1 616 0
 1339 0028 84F84000 		strb	r0, [r4, #64]
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1340              		.loc 1 619 0
 1341 002c 10BD     		pop	{r4, pc}
 1342              	.LVL94:
 1343              	.L142:
 1344              	.LCFI22:
 1345              		.cfi_def_cfa_offset 0
 1346              		.cfi_restore 4
 1347              		.cfi_restore 14
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1348              		.loc 1 586 0
 1349 002e 0120     		movs	r0, #1
 1350              	.LVL95:
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1351              		.loc 1 619 0
 1352 0030 7047     		bx	lr
 1353              		.cfi_endproc
 1354              	.LFE142:
 1356              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1357              		.align	1
 1358              		.global	HAL_I2C_Master_Transmit
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu fpv5-d16
 1364              	HAL_I2C_Master_Transmit:
 1365              	.LFB145:
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1366              		.loc 1 1064 0
 1367              		.cfi_startproc
 1368              		@ args = 4, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              	.LVL96:
 1371 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1372              	.LCFI23:
 1373              		.cfi_def_cfa_offset 28
 1374              		.cfi_offset 4, -28
 1375              		.cfi_offset 5, -24
 1376              		.cfi_offset 6, -20
 1377              		.cfi_offset 7, -16
 1378              		.cfi_offset 8, -12
 1379              		.cfi_offset 9, -8
 1380              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbPnc67.s 			page 144


 1381 0004 83B0     		sub	sp, sp, #12
 1382              	.LCFI24:
 1383              		.cfi_def_cfa_offset 40
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1384              		.loc 1 1067 0
 1385 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1386 000a EDB2     		uxtb	r5, r5
 1387 000c 202D     		cmp	r5, #32
 1388 000e 40F0A480 		bne	.L155
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1389              		.loc 1 1070 0
 1390 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1391 0016 012C     		cmp	r4, #1
 1392 0018 00F0A480 		beq	.L156
 1393 001c 9846     		mov	r8, r3
 1394 001e 1746     		mov	r7, r2
 1395 0020 0E46     		mov	r6, r1
 1396 0022 0446     		mov	r4, r0
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1397              		.loc 1 1070 0 is_stmt 0 discriminator 2
 1398 0024 4FF00109 		mov	r9, #1
 1399 0028 80F84090 		strb	r9, [r0, #64]
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1400              		.loc 1 1073 0 is_stmt 1 discriminator 2
 1401 002c FFF7FEFF 		bl	HAL_GetTick
 1402              	.LVL97:
 1403 0030 0546     		mov	r5, r0
 1404              	.LVL98:
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1405              		.loc 1 1075 0 discriminator 2
 1406 0032 0090     		str	r0, [sp]
 1407 0034 1923     		movs	r3, #25
 1408 0036 4A46     		mov	r2, r9
 1409 0038 4FF40041 		mov	r1, #32768
 1410 003c 2046     		mov	r0, r4
 1411              	.LVL99:
 1412 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1413              	.LVL100:
 1414 0042 0028     		cmp	r0, #0
 1415 0044 40F09080 		bne	.L157
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1416              		.loc 1 1080 0
 1417 0048 2123     		movs	r3, #33
 1418 004a 84F84130 		strb	r3, [r4, #65]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1419              		.loc 1 1081 0
 1420 004e 1023     		movs	r3, #16
 1421 0050 84F84230 		strb	r3, [r4, #66]
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1422              		.loc 1 1082 0
 1423 0054 0023     		movs	r3, #0
 1424 0056 6364     		str	r3, [r4, #68]
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1425              		.loc 1 1085 0
 1426 0058 6762     		str	r7, [r4, #36]
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1427              		.loc 1 1086 0
ARM GAS  /tmp/ccbPnc67.s 			page 145


 1428 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1429              		.loc 1 1087 0
 1430 005e 6363     		str	r3, [r4, #52]
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1431              		.loc 1 1091 0
 1432 0060 638D     		ldrh	r3, [r4, #42]
 1433 0062 9BB2     		uxth	r3, r3
 1434 0064 FF2B     		cmp	r3, #255
 1435 0066 0AD9     		bls	.L149
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1436              		.loc 1 1093 0
 1437 0068 FF22     		movs	r2, #255
 1438 006a 2285     		strh	r2, [r4, #40]	@ movhi
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1439              		.loc 1 1094 0
 1440 006c 424B     		ldr	r3, .L163
 1441 006e 0093     		str	r3, [sp]
 1442 0070 4FF08073 		mov	r3, #16777216
 1443 0074 3146     		mov	r1, r6
 1444 0076 2046     		mov	r0, r4
 1445 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1446              	.LVL101:
 1447 007c 18E0     		b	.L151
 1448              	.L149:
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1449              		.loc 1 1098 0
 1450 007e 628D     		ldrh	r2, [r4, #42]
 1451 0080 92B2     		uxth	r2, r2
 1452 0082 2285     		strh	r2, [r4, #40]	@ movhi
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1453              		.loc 1 1099 0
 1454 0084 3C4B     		ldr	r3, .L163
 1455 0086 0093     		str	r3, [sp]
 1456 0088 4FF00073 		mov	r3, #33554432
 1457 008c D2B2     		uxtb	r2, r2
 1458 008e 3146     		mov	r1, r6
 1459 0090 2046     		mov	r0, r4
 1460 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1461              	.LVL102:
 1462 0096 0BE0     		b	.L151
 1463              	.L153:
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1464              		.loc 1 1133 0
 1465 0098 628D     		ldrh	r2, [r4, #42]
 1466 009a 92B2     		uxth	r2, r2
 1467 009c 2285     		strh	r2, [r4, #40]	@ movhi
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1468              		.loc 1 1134 0
 1469 009e 0023     		movs	r3, #0
 1470 00a0 0093     		str	r3, [sp]
 1471 00a2 4FF00073 		mov	r3, #33554432
 1472 00a6 D2B2     		uxtb	r2, r2
 1473 00a8 3146     		mov	r1, r6
 1474 00aa 2046     		mov	r0, r4
 1475 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1476              	.LVL103:
ARM GAS  /tmp/ccbPnc67.s 			page 146


 1477              	.L151:
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1478              		.loc 1 1102 0
 1479 00b0 638D     		ldrh	r3, [r4, #42]
 1480 00b2 9BB2     		uxth	r3, r3
 1481 00b4 002B     		cmp	r3, #0
 1482 00b6 33D0     		beq	.L162
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1483              		.loc 1 1105 0
 1484 00b8 2A46     		mov	r2, r5
 1485 00ba 0A99     		ldr	r1, [sp, #40]
 1486 00bc 2046     		mov	r0, r4
 1487 00be FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1488              	.LVL104:
 1489 00c2 0028     		cmp	r0, #0
 1490 00c4 52D1     		bne	.L158
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1491              		.loc 1 1110 0
 1492 00c6 626A     		ldr	r2, [r4, #36]
 1493 00c8 2368     		ldr	r3, [r4]
 1494 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1495 00cc 9A62     		str	r2, [r3, #40]
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1496              		.loc 1 1113 0
 1497 00ce 636A     		ldr	r3, [r4, #36]
 1498 00d0 0133     		adds	r3, r3, #1
 1499 00d2 6362     		str	r3, [r4, #36]
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 1500              		.loc 1 1115 0
 1501 00d4 638D     		ldrh	r3, [r4, #42]
 1502 00d6 013B     		subs	r3, r3, #1
 1503 00d8 9BB2     		uxth	r3, r3
 1504 00da 6385     		strh	r3, [r4, #42]	@ movhi
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1505              		.loc 1 1116 0
 1506 00dc 238D     		ldrh	r3, [r4, #40]
 1507 00de 013B     		subs	r3, r3, #1
 1508 00e0 9BB2     		uxth	r3, r3
 1509 00e2 2385     		strh	r3, [r4, #40]	@ movhi
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1510              		.loc 1 1118 0
 1511 00e4 628D     		ldrh	r2, [r4, #42]
 1512 00e6 92B2     		uxth	r2, r2
 1513 00e8 002A     		cmp	r2, #0
 1514 00ea E1D0     		beq	.L151
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1515              		.loc 1 1118 0 is_stmt 0 discriminator 1
 1516 00ec 002B     		cmp	r3, #0
 1517 00ee DFD1     		bne	.L151
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1518              		.loc 1 1121 0 is_stmt 1
 1519 00f0 0095     		str	r5, [sp]
 1520 00f2 0A9B     		ldr	r3, [sp, #40]
 1521 00f4 0022     		movs	r2, #0
 1522 00f6 8021     		movs	r1, #128
 1523 00f8 2046     		mov	r0, r4
 1524 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
ARM GAS  /tmp/ccbPnc67.s 			page 147


 1525              	.LVL105:
 1526 00fe 0028     		cmp	r0, #0
 1527 0100 36D1     		bne	.L159
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1528              		.loc 1 1126 0
 1529 0102 638D     		ldrh	r3, [r4, #42]
 1530 0104 9BB2     		uxth	r3, r3
 1531 0106 FF2B     		cmp	r3, #255
 1532 0108 C6D9     		bls	.L153
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1533              		.loc 1 1128 0
 1534 010a FF22     		movs	r2, #255
 1535 010c 2285     		strh	r2, [r4, #40]	@ movhi
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1536              		.loc 1 1129 0
 1537 010e 0023     		movs	r3, #0
 1538 0110 0093     		str	r3, [sp]
 1539 0112 4FF08073 		mov	r3, #16777216
 1540 0116 3146     		mov	r1, r6
 1541 0118 2046     		mov	r0, r4
 1542 011a FFF7FEFF 		bl	I2C_TransferConfig
 1543              	.LVL106:
 1544 011e C7E7     		b	.L151
 1545              	.L162:
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1546              		.loc 1 1141 0
 1547 0120 2A46     		mov	r2, r5
 1548 0122 0A99     		ldr	r1, [sp, #40]
 1549 0124 2046     		mov	r0, r4
 1550 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1551              	.LVL107:
 1552 012a 0346     		mov	r3, r0
 1553 012c 10BB     		cbnz	r0, .L160
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1554              		.loc 1 1147 0
 1555 012e 2268     		ldr	r2, [r4]
 1556 0130 2021     		movs	r1, #32
 1557 0132 D161     		str	r1, [r2, #28]
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1558              		.loc 1 1150 0
 1559 0134 2068     		ldr	r0, [r4]
 1560 0136 4268     		ldr	r2, [r0, #4]
 1561 0138 22F0FF72 		bic	r2, r2, #33423360
 1562 013c 22F48B32 		bic	r2, r2, #71168
 1563 0140 22F4FF72 		bic	r2, r2, #510
 1564 0144 22F00102 		bic	r2, r2, #1
 1565 0148 4260     		str	r2, [r0, #4]
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1566              		.loc 1 1152 0
 1567 014a 84F84110 		strb	r1, [r4, #65]
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1568              		.loc 1 1153 0
 1569 014e 0022     		movs	r2, #0
 1570 0150 84F84220 		strb	r2, [r4, #66]
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1571              		.loc 1 1156 0
 1572 0154 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/ccbPnc67.s 			page 148


1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1573              		.loc 1 1158 0
 1574 0158 00E0     		b	.L148
 1575              	.LVL108:
 1576              	.L155:
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1577              		.loc 1 1162 0
 1578 015a 0223     		movs	r3, #2
 1579              	.LVL109:
 1580              	.L148:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1581              		.loc 1 1164 0
 1582 015c 1846     		mov	r0, r3
 1583 015e 03B0     		add	sp, sp, #12
 1584              	.LCFI25:
 1585              		.cfi_remember_state
 1586              		.cfi_def_cfa_offset 28
 1587              		@ sp needed
 1588 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1589              	.LVL110:
 1590              	.L156:
 1591              	.LCFI26:
 1592              		.cfi_restore_state
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1593              		.loc 1 1070 0
 1594 0164 0223     		movs	r3, #2
 1595              	.LVL111:
 1596 0166 F9E7     		b	.L148
 1597              	.LVL112:
 1598              	.L157:
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1599              		.loc 1 1077 0
 1600 0168 0123     		movs	r3, #1
 1601 016a F7E7     		b	.L148
 1602              	.L158:
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1603              		.loc 1 1107 0
 1604 016c 0123     		movs	r3, #1
 1605 016e F5E7     		b	.L148
 1606              	.L159:
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1607              		.loc 1 1123 0
 1608 0170 0123     		movs	r3, #1
 1609 0172 F3E7     		b	.L148
 1610              	.L160:
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1611              		.loc 1 1143 0
 1612 0174 0123     		movs	r3, #1
 1613 0176 F1E7     		b	.L148
 1614              	.L164:
 1615              		.align	2
 1616              	.L163:
 1617 0178 00200080 		.word	-2147475456
 1618              		.cfi_endproc
 1619              	.LFE145:
 1621              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1622              		.align	1
ARM GAS  /tmp/ccbPnc67.s 			page 149


 1623              		.global	HAL_I2C_Master_Receive
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
 1627              		.fpu fpv5-d16
 1629              	HAL_I2C_Master_Receive:
 1630              	.LFB146:
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1631              		.loc 1 1178 0
 1632              		.cfi_startproc
 1633              		@ args = 4, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL113:
 1636 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1637              	.LCFI27:
 1638              		.cfi_def_cfa_offset 28
 1639              		.cfi_offset 4, -28
 1640              		.cfi_offset 5, -24
 1641              		.cfi_offset 6, -20
 1642              		.cfi_offset 7, -16
 1643              		.cfi_offset 8, -12
 1644              		.cfi_offset 9, -8
 1645              		.cfi_offset 14, -4
 1646 0004 83B0     		sub	sp, sp, #12
 1647              	.LCFI28:
 1648              		.cfi_def_cfa_offset 40
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1649              		.loc 1 1181 0
 1650 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1651 000a EDB2     		uxtb	r5, r5
 1652 000c 202D     		cmp	r5, #32
 1653 000e 40F0A480 		bne	.L173
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1654              		.loc 1 1184 0
 1655 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1656 0016 012C     		cmp	r4, #1
 1657 0018 00F0A480 		beq	.L174
 1658 001c 9846     		mov	r8, r3
 1659 001e 1746     		mov	r7, r2
 1660 0020 0E46     		mov	r6, r1
 1661 0022 0446     		mov	r4, r0
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1662              		.loc 1 1184 0 is_stmt 0 discriminator 2
 1663 0024 4FF00109 		mov	r9, #1
 1664 0028 80F84090 		strb	r9, [r0, #64]
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1665              		.loc 1 1187 0 is_stmt 1 discriminator 2
 1666 002c FFF7FEFF 		bl	HAL_GetTick
 1667              	.LVL114:
 1668 0030 0546     		mov	r5, r0
 1669              	.LVL115:
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1670              		.loc 1 1189 0 discriminator 2
 1671 0032 0090     		str	r0, [sp]
 1672 0034 1923     		movs	r3, #25
 1673 0036 4A46     		mov	r2, r9
 1674 0038 4FF40041 		mov	r1, #32768
ARM GAS  /tmp/ccbPnc67.s 			page 150


 1675 003c 2046     		mov	r0, r4
 1676              	.LVL116:
 1677 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1678              	.LVL117:
 1679 0042 0028     		cmp	r0, #0
 1680 0044 40F09080 		bne	.L175
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1681              		.loc 1 1194 0
 1682 0048 2223     		movs	r3, #34
 1683 004a 84F84130 		strb	r3, [r4, #65]
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1684              		.loc 1 1195 0
 1685 004e 1023     		movs	r3, #16
 1686 0050 84F84230 		strb	r3, [r4, #66]
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1687              		.loc 1 1196 0
 1688 0054 0023     		movs	r3, #0
 1689 0056 6364     		str	r3, [r4, #68]
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1690              		.loc 1 1199 0
 1691 0058 6762     		str	r7, [r4, #36]
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1692              		.loc 1 1200 0
 1693 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1694              		.loc 1 1201 0
 1695 005e 6363     		str	r3, [r4, #52]
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1696              		.loc 1 1205 0
 1697 0060 638D     		ldrh	r3, [r4, #42]
 1698 0062 9BB2     		uxth	r3, r3
 1699 0064 FF2B     		cmp	r3, #255
 1700 0066 0AD9     		bls	.L167
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1701              		.loc 1 1207 0
 1702 0068 FF22     		movs	r2, #255
 1703 006a 2285     		strh	r2, [r4, #40]	@ movhi
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1704              		.loc 1 1208 0
 1705 006c 424B     		ldr	r3, .L181
 1706 006e 0093     		str	r3, [sp]
 1707 0070 4FF08073 		mov	r3, #16777216
 1708 0074 3146     		mov	r1, r6
 1709 0076 2046     		mov	r0, r4
 1710 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1711              	.LVL118:
 1712 007c 18E0     		b	.L169
 1713              	.L167:
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1714              		.loc 1 1212 0
 1715 007e 628D     		ldrh	r2, [r4, #42]
 1716 0080 92B2     		uxth	r2, r2
 1717 0082 2285     		strh	r2, [r4, #40]	@ movhi
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1718              		.loc 1 1213 0
 1719 0084 3C4B     		ldr	r3, .L181
 1720 0086 0093     		str	r3, [sp]
ARM GAS  /tmp/ccbPnc67.s 			page 151


 1721 0088 4FF00073 		mov	r3, #33554432
 1722 008c D2B2     		uxtb	r2, r2
 1723 008e 3146     		mov	r1, r6
 1724 0090 2046     		mov	r0, r4
 1725 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1726              	.LVL119:
 1727 0096 0BE0     		b	.L169
 1728              	.L171:
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1729              		.loc 1 1248 0
 1730 0098 628D     		ldrh	r2, [r4, #42]
 1731 009a 92B2     		uxth	r2, r2
 1732 009c 2285     		strh	r2, [r4, #40]	@ movhi
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1733              		.loc 1 1249 0
 1734 009e 0023     		movs	r3, #0
 1735 00a0 0093     		str	r3, [sp]
 1736 00a2 4FF00073 		mov	r3, #33554432
 1737 00a6 D2B2     		uxtb	r2, r2
 1738 00a8 3146     		mov	r1, r6
 1739 00aa 2046     		mov	r0, r4
 1740 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1741              	.LVL120:
 1742              	.L169:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1743              		.loc 1 1216 0
 1744 00b0 638D     		ldrh	r3, [r4, #42]
 1745 00b2 9BB2     		uxth	r3, r3
 1746 00b4 002B     		cmp	r3, #0
 1747 00b6 33D0     		beq	.L180
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1748              		.loc 1 1219 0
 1749 00b8 2A46     		mov	r2, r5
 1750 00ba 0A99     		ldr	r1, [sp, #40]
 1751 00bc 2046     		mov	r0, r4
 1752 00be FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1753              	.LVL121:
 1754 00c2 0028     		cmp	r0, #0
 1755 00c4 52D1     		bne	.L176
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1756              		.loc 1 1225 0
 1757 00c6 2368     		ldr	r3, [r4]
 1758 00c8 5A6A     		ldr	r2, [r3, #36]
 1759 00ca 636A     		ldr	r3, [r4, #36]
 1760 00cc 1A70     		strb	r2, [r3]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1761              		.loc 1 1228 0
 1762 00ce 636A     		ldr	r3, [r4, #36]
 1763 00d0 0133     		adds	r3, r3, #1
 1764 00d2 6362     		str	r3, [r4, #36]
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 1765              		.loc 1 1230 0
 1766 00d4 238D     		ldrh	r3, [r4, #40]
 1767 00d6 013B     		subs	r3, r3, #1
 1768 00d8 9BB2     		uxth	r3, r3
 1769 00da 2385     		strh	r3, [r4, #40]	@ movhi
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 152


 1770              		.loc 1 1231 0
 1771 00dc 628D     		ldrh	r2, [r4, #42]
 1772 00de 013A     		subs	r2, r2, #1
 1773 00e0 92B2     		uxth	r2, r2
 1774 00e2 6285     		strh	r2, [r4, #42]	@ movhi
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1775              		.loc 1 1233 0
 1776 00e4 628D     		ldrh	r2, [r4, #42]
 1777 00e6 92B2     		uxth	r2, r2
 1778 00e8 002A     		cmp	r2, #0
 1779 00ea E1D0     		beq	.L169
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1780              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1781 00ec 002B     		cmp	r3, #0
 1782 00ee DFD1     		bne	.L169
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1783              		.loc 1 1236 0 is_stmt 1
 1784 00f0 0095     		str	r5, [sp]
 1785 00f2 0A9B     		ldr	r3, [sp, #40]
 1786 00f4 0022     		movs	r2, #0
 1787 00f6 8021     		movs	r1, #128
 1788 00f8 2046     		mov	r0, r4
 1789 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1790              	.LVL122:
 1791 00fe 0028     		cmp	r0, #0
 1792 0100 36D1     		bne	.L177
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1793              		.loc 1 1241 0
 1794 0102 638D     		ldrh	r3, [r4, #42]
 1795 0104 9BB2     		uxth	r3, r3
 1796 0106 FF2B     		cmp	r3, #255
 1797 0108 C6D9     		bls	.L171
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1798              		.loc 1 1243 0
 1799 010a FF22     		movs	r2, #255
 1800 010c 2285     		strh	r2, [r4, #40]	@ movhi
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1801              		.loc 1 1244 0
 1802 010e 0023     		movs	r3, #0
 1803 0110 0093     		str	r3, [sp]
 1804 0112 4FF08073 		mov	r3, #16777216
 1805 0116 3146     		mov	r1, r6
 1806 0118 2046     		mov	r0, r4
 1807 011a FFF7FEFF 		bl	I2C_TransferConfig
 1808              	.LVL123:
 1809 011e C7E7     		b	.L169
 1810              	.L180:
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1811              		.loc 1 1256 0
 1812 0120 2A46     		mov	r2, r5
 1813 0122 0A99     		ldr	r1, [sp, #40]
 1814 0124 2046     		mov	r0, r4
 1815 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1816              	.LVL124:
 1817 012a 0346     		mov	r3, r0
 1818 012c 10BB     		cbnz	r0, .L178
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 153


 1819              		.loc 1 1262 0
 1820 012e 2268     		ldr	r2, [r4]
 1821 0130 2021     		movs	r1, #32
 1822 0132 D161     		str	r1, [r2, #28]
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1823              		.loc 1 1265 0
 1824 0134 2068     		ldr	r0, [r4]
 1825 0136 4268     		ldr	r2, [r0, #4]
 1826 0138 22F0FF72 		bic	r2, r2, #33423360
 1827 013c 22F48B32 		bic	r2, r2, #71168
 1828 0140 22F4FF72 		bic	r2, r2, #510
 1829 0144 22F00102 		bic	r2, r2, #1
 1830 0148 4260     		str	r2, [r0, #4]
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1831              		.loc 1 1267 0
 1832 014a 84F84110 		strb	r1, [r4, #65]
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1833              		.loc 1 1268 0
 1834 014e 0022     		movs	r2, #0
 1835 0150 84F84220 		strb	r2, [r4, #66]
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1836              		.loc 1 1271 0
 1837 0154 84F84020 		strb	r2, [r4, #64]
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1838              		.loc 1 1273 0
 1839 0158 00E0     		b	.L166
 1840              	.LVL125:
 1841              	.L173:
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1842              		.loc 1 1277 0
 1843 015a 0223     		movs	r3, #2
 1844              	.LVL126:
 1845              	.L166:
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1846              		.loc 1 1279 0
 1847 015c 1846     		mov	r0, r3
 1848 015e 03B0     		add	sp, sp, #12
 1849              	.LCFI29:
 1850              		.cfi_remember_state
 1851              		.cfi_def_cfa_offset 28
 1852              		@ sp needed
 1853 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1854              	.LVL127:
 1855              	.L174:
 1856              	.LCFI30:
 1857              		.cfi_restore_state
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1858              		.loc 1 1184 0
 1859 0164 0223     		movs	r3, #2
 1860              	.LVL128:
 1861 0166 F9E7     		b	.L166
 1862              	.LVL129:
 1863              	.L175:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1864              		.loc 1 1191 0
 1865 0168 0123     		movs	r3, #1
 1866 016a F7E7     		b	.L166
ARM GAS  /tmp/ccbPnc67.s 			page 154


 1867              	.L176:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1868              		.loc 1 1221 0
 1869 016c 0123     		movs	r3, #1
 1870 016e F5E7     		b	.L166
 1871              	.L177:
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1872              		.loc 1 1238 0
 1873 0170 0123     		movs	r3, #1
 1874 0172 F3E7     		b	.L166
 1875              	.L178:
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1876              		.loc 1 1258 0
 1877 0174 0123     		movs	r3, #1
 1878 0176 F1E7     		b	.L166
 1879              	.L182:
 1880              		.align	2
 1881              	.L181:
 1882 0178 00240080 		.word	-2147474432
 1883              		.cfi_endproc
 1884              	.LFE146:
 1886              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1887              		.align	1
 1888              		.global	HAL_I2C_Slave_Transmit
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1892              		.fpu fpv5-d16
 1894              	HAL_I2C_Slave_Transmit:
 1895              	.LFB147:
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1896              		.loc 1 1291 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 0
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              	.LVL130:
 1901 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1902              	.LCFI31:
 1903              		.cfi_def_cfa_offset 24
 1904              		.cfi_offset 4, -24
 1905              		.cfi_offset 5, -20
 1906              		.cfi_offset 6, -16
 1907              		.cfi_offset 7, -12
 1908              		.cfi_offset 8, -8
 1909              		.cfi_offset 14, -4
 1910 0004 82B0     		sub	sp, sp, #8
 1911              	.LCFI32:
 1912              		.cfi_def_cfa_offset 32
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1913              		.loc 1 1294 0
 1914 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1915 000a EDB2     		uxtb	r5, r5
 1916 000c 202D     		cmp	r5, #32
 1917 000e 40F0BA80 		bne	.L194
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1918              		.loc 1 1296 0
 1919 0012 B2FA82F5 		clz	r5, r2
ARM GAS  /tmp/ccbPnc67.s 			page 155


 1920 0016 6D09     		lsrs	r5, r5, #5
 1921 0018 0029     		cmp	r1, #0
 1922 001a 08BF     		it	eq
 1923 001c 0125     		moveq	r5, #1
 1924 001e 002D     		cmp	r5, #0
 1925 0020 4ED1     		bne	.L198
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1926              		.loc 1 1302 0
 1927 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1928 0026 012C     		cmp	r4, #1
 1929 0028 00F0B280 		beq	.L195
 1930 002c 1F46     		mov	r7, r3
 1931 002e 1646     		mov	r6, r2
 1932 0030 0D46     		mov	r5, r1
 1933 0032 0446     		mov	r4, r0
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1934              		.loc 1 1302 0 is_stmt 0 discriminator 2
 1935 0034 0123     		movs	r3, #1
 1936              	.LVL131:
 1937 0036 80F84030 		strb	r3, [r0, #64]
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1938              		.loc 1 1305 0 is_stmt 1 discriminator 2
 1939 003a FFF7FEFF 		bl	HAL_GetTick
 1940              	.LVL132:
 1941 003e 8046     		mov	r8, r0
 1942              	.LVL133:
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1943              		.loc 1 1307 0 discriminator 2
 1944 0040 2123     		movs	r3, #33
 1945 0042 84F84130 		strb	r3, [r4, #65]
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1946              		.loc 1 1308 0 discriminator 2
 1947 0046 2023     		movs	r3, #32
 1948 0048 84F84230 		strb	r3, [r4, #66]
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1949              		.loc 1 1309 0 discriminator 2
 1950 004c 0022     		movs	r2, #0
 1951 004e 6264     		str	r2, [r4, #68]
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1952              		.loc 1 1312 0 discriminator 2
 1953 0050 6562     		str	r5, [r4, #36]
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1954              		.loc 1 1313 0 discriminator 2
 1955 0052 6685     		strh	r6, [r4, #42]	@ movhi
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1956              		.loc 1 1314 0 discriminator 2
 1957 0054 6263     		str	r2, [r4, #52]
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1958              		.loc 1 1317 0 discriminator 2
 1959 0056 2168     		ldr	r1, [r4]
 1960 0058 4B68     		ldr	r3, [r1, #4]
 1961 005a 23F40043 		bic	r3, r3, #32768
 1962 005e 4B60     		str	r3, [r1, #4]
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1963              		.loc 1 1320 0 discriminator 2
 1964 0060 0090     		str	r0, [sp]
 1965 0062 3B46     		mov	r3, r7
ARM GAS  /tmp/ccbPnc67.s 			page 156


 1966 0064 0821     		movs	r1, #8
 1967 0066 2046     		mov	r0, r4
 1968              	.LVL134:
 1969 0068 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1970              	.LVL135:
 1971 006c 0028     		cmp	r0, #0
 1972 006e 2CD1     		bne	.L199
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1973              		.loc 1 1328 0
 1974 0070 2368     		ldr	r3, [r4]
 1975 0072 0822     		movs	r2, #8
 1976 0074 DA61     		str	r2, [r3, #28]
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1977              		.loc 1 1331 0
 1978 0076 E368     		ldr	r3, [r4, #12]
 1979 0078 022B     		cmp	r3, #2
 1980 007a 2DD0     		beq	.L200
 1981              	.L187:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1982              		.loc 1 1346 0
 1983 007c CDF80080 		str	r8, [sp]
 1984 0080 3B46     		mov	r3, r7
 1985 0082 0022     		movs	r2, #0
 1986 0084 4FF48031 		mov	r1, #65536
 1987 0088 2046     		mov	r0, r4
 1988 008a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1989              	.LVL136:
 1990 008e 0028     		cmp	r0, #0
 1991 0090 36D1     		bne	.L201
 1992              	.L189:
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1993              		.loc 1 1353 0
 1994 0092 638D     		ldrh	r3, [r4, #42]
 1995 0094 9BB2     		uxth	r3, r3
 1996 0096 002B     		cmp	r3, #0
 1997 0098 40D0     		beq	.L202
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1998              		.loc 1 1356 0
 1999 009a 4246     		mov	r2, r8
 2000 009c 3946     		mov	r1, r7
 2001 009e 2046     		mov	r0, r4
 2002 00a0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2003              	.LVL137:
 2004 00a4 0028     		cmp	r0, #0
 2005 00a6 32D1     		bne	.L203
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2006              		.loc 1 1364 0
 2007 00a8 626A     		ldr	r2, [r4, #36]
 2008 00aa 2368     		ldr	r3, [r4]
 2009 00ac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2010 00ae 9A62     		str	r2, [r3, #40]
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2011              		.loc 1 1367 0
 2012 00b0 636A     		ldr	r3, [r4, #36]
 2013 00b2 0133     		adds	r3, r3, #1
 2014 00b4 6362     		str	r3, [r4, #36]
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 157


 2015              		.loc 1 1369 0
 2016 00b6 638D     		ldrh	r3, [r4, #42]
 2017 00b8 013B     		subs	r3, r3, #1
 2018 00ba 9BB2     		uxth	r3, r3
 2019 00bc 6385     		strh	r3, [r4, #42]	@ movhi
 2020 00be E8E7     		b	.L189
 2021              	.LVL138:
 2022              	.L198:
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 2023              		.loc 1 1298 0
 2024 00c0 4FF40073 		mov	r3, #512
 2025              	.LVL139:
 2026 00c4 4364     		str	r3, [r0, #68]
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2027              		.loc 1 1299 0
 2028 00c6 0123     		movs	r3, #1
 2029 00c8 5EE0     		b	.L184
 2030              	.LVL140:
 2031              	.L199:
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2032              		.loc 1 1323 0
 2033 00ca 2268     		ldr	r2, [r4]
 2034 00cc 5368     		ldr	r3, [r2, #4]
 2035 00ce 43F40043 		orr	r3, r3, #32768
 2036 00d2 5360     		str	r3, [r2, #4]
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2037              		.loc 1 1324 0
 2038 00d4 0123     		movs	r3, #1
 2039 00d6 57E0     		b	.L184
 2040              	.L200:
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2041              		.loc 1 1334 0
 2042 00d8 CDF80080 		str	r8, [sp]
 2043 00dc 3B46     		mov	r3, r7
 2044 00de 0022     		movs	r2, #0
 2045 00e0 0821     		movs	r1, #8
 2046 00e2 2046     		mov	r0, r4
 2047 00e4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2048              	.LVL141:
 2049 00e8 18B9     		cbnz	r0, .L204
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2050              		.loc 1 1342 0
 2051 00ea 2368     		ldr	r3, [r4]
 2052 00ec 0822     		movs	r2, #8
 2053 00ee DA61     		str	r2, [r3, #28]
 2054 00f0 C4E7     		b	.L187
 2055              	.L204:
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 2056              		.loc 1 1337 0
 2057 00f2 2268     		ldr	r2, [r4]
 2058 00f4 5368     		ldr	r3, [r2, #4]
 2059 00f6 43F40043 		orr	r3, r3, #32768
 2060 00fa 5360     		str	r3, [r2, #4]
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2061              		.loc 1 1338 0
 2062 00fc 0123     		movs	r3, #1
 2063 00fe 43E0     		b	.L184
ARM GAS  /tmp/ccbPnc67.s 			page 158


 2064              	.L201:
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2065              		.loc 1 1349 0
 2066 0100 2268     		ldr	r2, [r4]
 2067 0102 5368     		ldr	r3, [r2, #4]
 2068 0104 43F40043 		orr	r3, r3, #32768
 2069 0108 5360     		str	r3, [r2, #4]
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2070              		.loc 1 1350 0
 2071 010a 0123     		movs	r3, #1
 2072 010c 3CE0     		b	.L184
 2073              	.L203:
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 2074              		.loc 1 1359 0
 2075 010e 2268     		ldr	r2, [r4]
 2076 0110 5368     		ldr	r3, [r2, #4]
 2077 0112 43F40043 		orr	r3, r3, #32768
 2078 0116 5360     		str	r3, [r2, #4]
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2079              		.loc 1 1360 0
 2080 0118 0123     		movs	r3, #1
 2081 011a 35E0     		b	.L184
 2082              	.L202:
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2083              		.loc 1 1373 0
 2084 011c 4246     		mov	r2, r8
 2085 011e 3946     		mov	r1, r7
 2086 0120 2046     		mov	r0, r4
 2087 0122 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2088              	.LVL142:
 2089 0126 58B1     		cbz	r0, .L192
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2090              		.loc 1 1376 0
 2091 0128 2268     		ldr	r2, [r4]
 2092 012a 5368     		ldr	r3, [r2, #4]
 2093 012c 43F40043 		orr	r3, r3, #32768
 2094 0130 5360     		str	r3, [r2, #4]
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2095              		.loc 1 1378 0
 2096 0132 636C     		ldr	r3, [r4, #68]
 2097 0134 042B     		cmp	r3, #4
 2098 0136 01D0     		beq	.L205
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2099              		.loc 1 1386 0
 2100 0138 0123     		movs	r3, #1
 2101 013a 25E0     		b	.L184
 2102              	.L205:
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2103              		.loc 1 1382 0
 2104 013c 0023     		movs	r3, #0
 2105 013e 6364     		str	r3, [r4, #68]
 2106              	.L192:
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2107              		.loc 1 1391 0
 2108 0140 2368     		ldr	r3, [r4]
 2109 0142 2022     		movs	r2, #32
 2110 0144 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccbPnc67.s 			page 159


1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2111              		.loc 1 1394 0
 2112 0146 CDF80080 		str	r8, [sp]
 2113 014a 3B46     		mov	r3, r7
 2114 014c 0122     		movs	r2, #1
 2115 014e 4FF40041 		mov	r1, #32768
 2116 0152 2046     		mov	r0, r4
 2117 0154 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2118              	.LVL143:
 2119 0158 0346     		mov	r3, r0
 2120 015a 68B9     		cbnz	r0, .L206
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2121              		.loc 1 1402 0
 2122 015c 2168     		ldr	r1, [r4]
 2123 015e 4A68     		ldr	r2, [r1, #4]
 2124 0160 42F40042 		orr	r2, r2, #32768
 2125 0164 4A60     		str	r2, [r1, #4]
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2126              		.loc 1 1404 0
 2127 0166 2022     		movs	r2, #32
 2128 0168 84F84120 		strb	r2, [r4, #65]
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2129              		.loc 1 1405 0
 2130 016c 0022     		movs	r2, #0
 2131 016e 84F84220 		strb	r2, [r4, #66]
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2132              		.loc 1 1408 0
 2133 0172 84F84020 		strb	r2, [r4, #64]
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2134              		.loc 1 1410 0
 2135 0176 07E0     		b	.L184
 2136              	.L206:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2137              		.loc 1 1397 0
 2138 0178 2268     		ldr	r2, [r4]
 2139 017a 5368     		ldr	r3, [r2, #4]
 2140 017c 43F40043 		orr	r3, r3, #32768
 2141 0180 5360     		str	r3, [r2, #4]
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2142              		.loc 1 1398 0
 2143 0182 0123     		movs	r3, #1
 2144 0184 00E0     		b	.L184
 2145              	.LVL144:
 2146              	.L194:
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2147              		.loc 1 1414 0
 2148 0186 0223     		movs	r3, #2
 2149              	.LVL145:
 2150              	.L184:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2151              		.loc 1 1416 0
 2152 0188 1846     		mov	r0, r3
 2153 018a 02B0     		add	sp, sp, #8
 2154              	.LCFI33:
 2155              		.cfi_remember_state
 2156              		.cfi_def_cfa_offset 24
 2157              		@ sp needed
ARM GAS  /tmp/ccbPnc67.s 			page 160


 2158 018c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2159              	.LVL146:
 2160              	.L195:
 2161              	.LCFI34:
 2162              		.cfi_restore_state
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2163              		.loc 1 1302 0
 2164 0190 0223     		movs	r3, #2
 2165              	.LVL147:
 2166 0192 F9E7     		b	.L184
 2167              		.cfi_endproc
 2168              	.LFE147:
 2170              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2171              		.align	1
 2172              		.global	HAL_I2C_Slave_Receive
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2176              		.fpu fpv5-d16
 2178              	HAL_I2C_Slave_Receive:
 2179              	.LFB148:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 2180              		.loc 1 1428 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              	.LVL148:
 2185 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2186              	.LCFI35:
 2187              		.cfi_def_cfa_offset 24
 2188              		.cfi_offset 4, -24
 2189              		.cfi_offset 5, -20
 2190              		.cfi_offset 6, -16
 2191              		.cfi_offset 7, -12
 2192              		.cfi_offset 8, -8
 2193              		.cfi_offset 14, -4
 2194 0004 82B0     		sub	sp, sp, #8
 2195              	.LCFI36:
 2196              		.cfi_def_cfa_offset 32
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2197              		.loc 1 1431 0
 2198 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2199 000a EDB2     		uxtb	r5, r5
 2200 000c 202D     		cmp	r5, #32
 2201 000e 40F0A980 		bne	.L216
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2202              		.loc 1 1433 0
 2203 0012 B2FA82F5 		clz	r5, r2
 2204 0016 6D09     		lsrs	r5, r5, #5
 2205 0018 0029     		cmp	r1, #0
 2206 001a 08BF     		it	eq
 2207 001c 0125     		moveq	r5, #1
 2208 001e 65BB     		cbnz	r5, .L220
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2209              		.loc 1 1439 0
 2210 0020 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2211 0024 012C     		cmp	r4, #1
ARM GAS  /tmp/ccbPnc67.s 			page 161


 2212 0026 00F0A280 		beq	.L217
 2213 002a 1F46     		mov	r7, r3
 2214 002c 1646     		mov	r6, r2
 2215 002e 0D46     		mov	r5, r1
 2216 0030 0446     		mov	r4, r0
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2217              		.loc 1 1439 0 is_stmt 0 discriminator 2
 2218 0032 0123     		movs	r3, #1
 2219              	.LVL149:
 2220 0034 80F84030 		strb	r3, [r0, #64]
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2221              		.loc 1 1442 0 is_stmt 1 discriminator 2
 2222 0038 FFF7FEFF 		bl	HAL_GetTick
 2223              	.LVL150:
 2224 003c 8046     		mov	r8, r0
 2225              	.LVL151:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2226              		.loc 1 1444 0 discriminator 2
 2227 003e 2223     		movs	r3, #34
 2228 0040 84F84130 		strb	r3, [r4, #65]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2229              		.loc 1 1445 0 discriminator 2
 2230 0044 2023     		movs	r3, #32
 2231 0046 84F84230 		strb	r3, [r4, #66]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2232              		.loc 1 1446 0 discriminator 2
 2233 004a 0022     		movs	r2, #0
 2234 004c 6264     		str	r2, [r4, #68]
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2235              		.loc 1 1449 0 discriminator 2
 2236 004e 6562     		str	r5, [r4, #36]
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2237              		.loc 1 1450 0 discriminator 2
 2238 0050 6685     		strh	r6, [r4, #42]	@ movhi
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2239              		.loc 1 1451 0 discriminator 2
 2240 0052 6263     		str	r2, [r4, #52]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2241              		.loc 1 1454 0 discriminator 2
 2242 0054 2168     		ldr	r1, [r4]
 2243 0056 4B68     		ldr	r3, [r1, #4]
 2244 0058 23F40043 		bic	r3, r3, #32768
 2245 005c 4B60     		str	r3, [r1, #4]
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2246              		.loc 1 1457 0 discriminator 2
 2247 005e 0090     		str	r0, [sp]
 2248 0060 3B46     		mov	r3, r7
 2249 0062 0821     		movs	r1, #8
 2250 0064 2046     		mov	r0, r4
 2251              	.LVL152:
 2252 0066 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2253              	.LVL153:
 2254 006a 58B1     		cbz	r0, .L210
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2255              		.loc 1 1460 0
 2256 006c 2268     		ldr	r2, [r4]
 2257 006e 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccbPnc67.s 			page 162


 2258 0070 43F40043 		orr	r3, r3, #32768
 2259 0074 5360     		str	r3, [r2, #4]
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2260              		.loc 1 1461 0
 2261 0076 0123     		movs	r3, #1
 2262 0078 75E0     		b	.L208
 2263              	.LVL154:
 2264              	.L220:
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 2265              		.loc 1 1435 0
 2266 007a 4FF40073 		mov	r3, #512
 2267              	.LVL155:
 2268 007e 4364     		str	r3, [r0, #68]
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2269              		.loc 1 1436 0
 2270 0080 0123     		movs	r3, #1
 2271 0082 70E0     		b	.L208
 2272              	.LVL156:
 2273              	.L210:
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2274              		.loc 1 1465 0
 2275 0084 2368     		ldr	r3, [r4]
 2276 0086 0822     		movs	r2, #8
 2277 0088 DA61     		str	r2, [r3, #28]
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2278              		.loc 1 1468 0
 2279 008a CDF80080 		str	r8, [sp]
 2280 008e 3B46     		mov	r3, r7
 2281 0090 0122     		movs	r2, #1
 2282 0092 4FF48031 		mov	r1, #65536
 2283 0096 2046     		mov	r0, r4
 2284 0098 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2285              	.LVL157:
 2286 009c A8B9     		cbnz	r0, .L221
 2287              	.L211:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2288              		.loc 1 1475 0
 2289 009e 638D     		ldrh	r3, [r4, #42]
 2290 00a0 9BB2     		uxth	r3, r3
 2291 00a2 002B     		cmp	r3, #0
 2292 00a4 2ED0     		beq	.L222
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2293              		.loc 1 1478 0
 2294 00a6 4246     		mov	r2, r8
 2295 00a8 3946     		mov	r1, r7
 2296 00aa 2046     		mov	r0, r4
 2297 00ac FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2298              	.LVL158:
 2299 00b0 90B9     		cbnz	r0, .L223
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2300              		.loc 1 1499 0
 2301 00b2 2368     		ldr	r3, [r4]
 2302 00b4 5A6A     		ldr	r2, [r3, #36]
 2303 00b6 636A     		ldr	r3, [r4, #36]
 2304 00b8 1A70     		strb	r2, [r3]
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2305              		.loc 1 1502 0
ARM GAS  /tmp/ccbPnc67.s 			page 163


 2306 00ba 636A     		ldr	r3, [r4, #36]
 2307 00bc 0133     		adds	r3, r3, #1
 2308 00be 6362     		str	r3, [r4, #36]
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2309              		.loc 1 1504 0
 2310 00c0 638D     		ldrh	r3, [r4, #42]
 2311 00c2 013B     		subs	r3, r3, #1
 2312 00c4 9BB2     		uxth	r3, r3
 2313 00c6 6385     		strh	r3, [r4, #42]	@ movhi
 2314 00c8 E9E7     		b	.L211
 2315              	.L221:
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2316              		.loc 1 1471 0
 2317 00ca 2268     		ldr	r2, [r4]
 2318 00cc 5368     		ldr	r3, [r2, #4]
 2319 00ce 43F40043 		orr	r3, r3, #32768
 2320 00d2 5360     		str	r3, [r2, #4]
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2321              		.loc 1 1472 0
 2322 00d4 0123     		movs	r3, #1
 2323 00d6 46E0     		b	.L208
 2324              	.L223:
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2325              		.loc 1 1481 0
 2326 00d8 2268     		ldr	r2, [r4]
 2327 00da 5368     		ldr	r3, [r2, #4]
 2328 00dc 43F40043 		orr	r3, r3, #32768
 2329 00e0 5360     		str	r3, [r2, #4]
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 2330              		.loc 1 1484 0
 2331 00e2 2368     		ldr	r3, [r4]
 2332 00e4 9A69     		ldr	r2, [r3, #24]
 2333 00e6 12F0040F 		tst	r2, #4
 2334 00ea 42D0     		beq	.L218
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2335              		.loc 1 1487 0
 2336 00ec 5A6A     		ldr	r2, [r3, #36]
 2337 00ee 636A     		ldr	r3, [r4, #36]
 2338 00f0 1A70     		strb	r2, [r3]
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2339              		.loc 1 1490 0
 2340 00f2 636A     		ldr	r3, [r4, #36]
 2341 00f4 0133     		adds	r3, r3, #1
 2342 00f6 6362     		str	r3, [r4, #36]
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 2343              		.loc 1 1492 0
 2344 00f8 638D     		ldrh	r3, [r4, #42]
 2345 00fa 013B     		subs	r3, r3, #1
 2346 00fc 9BB2     		uxth	r3, r3
 2347 00fe 6385     		strh	r3, [r4, #42]	@ movhi
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2348              		.loc 1 1495 0
 2349 0100 0123     		movs	r3, #1
 2350 0102 30E0     		b	.L208
 2351              	.L222:
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2352              		.loc 1 1508 0
ARM GAS  /tmp/ccbPnc67.s 			page 164


 2353 0104 4246     		mov	r2, r8
 2354 0106 3946     		mov	r1, r7
 2355 0108 2046     		mov	r0, r4
 2356 010a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2357              	.LVL159:
 2358 010e 30B1     		cbz	r0, .L214
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2359              		.loc 1 1511 0
 2360 0110 2268     		ldr	r2, [r4]
 2361 0112 5368     		ldr	r3, [r2, #4]
 2362 0114 43F40043 		orr	r3, r3, #32768
 2363 0118 5360     		str	r3, [r2, #4]
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2364              		.loc 1 1512 0
 2365 011a 0123     		movs	r3, #1
 2366 011c 23E0     		b	.L208
 2367              	.L214:
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2368              		.loc 1 1516 0
 2369 011e 2368     		ldr	r3, [r4]
 2370 0120 2022     		movs	r2, #32
 2371 0122 DA61     		str	r2, [r3, #28]
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2372              		.loc 1 1519 0
 2373 0124 CDF80080 		str	r8, [sp]
 2374 0128 3B46     		mov	r3, r7
 2375 012a 0122     		movs	r2, #1
 2376 012c 4FF40041 		mov	r1, #32768
 2377 0130 2046     		mov	r0, r4
 2378 0132 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2379              	.LVL160:
 2380 0136 0346     		mov	r3, r0
 2381 0138 68B9     		cbnz	r0, .L224
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2382              		.loc 1 1527 0
 2383 013a 2168     		ldr	r1, [r4]
 2384 013c 4A68     		ldr	r2, [r1, #4]
 2385 013e 42F40042 		orr	r2, r2, #32768
 2386 0142 4A60     		str	r2, [r1, #4]
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2387              		.loc 1 1529 0
 2388 0144 2022     		movs	r2, #32
 2389 0146 84F84120 		strb	r2, [r4, #65]
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2390              		.loc 1 1530 0
 2391 014a 0022     		movs	r2, #0
 2392 014c 84F84220 		strb	r2, [r4, #66]
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2393              		.loc 1 1533 0
 2394 0150 84F84020 		strb	r2, [r4, #64]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2395              		.loc 1 1535 0
 2396 0154 07E0     		b	.L208
 2397              	.L224:
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2398              		.loc 1 1522 0
 2399 0156 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccbPnc67.s 			page 165


 2400 0158 5368     		ldr	r3, [r2, #4]
 2401 015a 43F40043 		orr	r3, r3, #32768
 2402 015e 5360     		str	r3, [r2, #4]
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2403              		.loc 1 1523 0
 2404 0160 0123     		movs	r3, #1
 2405 0162 00E0     		b	.L208
 2406              	.LVL161:
 2407              	.L216:
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2408              		.loc 1 1539 0
 2409 0164 0223     		movs	r3, #2
 2410              	.LVL162:
 2411              	.L208:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2412              		.loc 1 1541 0
 2413 0166 1846     		mov	r0, r3
 2414 0168 02B0     		add	sp, sp, #8
 2415              	.LCFI37:
 2416              		.cfi_remember_state
 2417              		.cfi_def_cfa_offset 24
 2418              		@ sp needed
 2419 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2420              	.LVL163:
 2421              	.L217:
 2422              	.LCFI38:
 2423              		.cfi_restore_state
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2424              		.loc 1 1439 0
 2425 016e 0223     		movs	r3, #2
 2426              	.LVL164:
 2427 0170 F9E7     		b	.L208
 2428              	.LVL165:
 2429              	.L218:
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2430              		.loc 1 1495 0
 2431 0172 0123     		movs	r3, #1
 2432 0174 F7E7     		b	.L208
 2433              		.cfi_endproc
 2434              	.LFE148:
 2436              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2437              		.align	1
 2438              		.global	HAL_I2C_Master_Transmit_IT
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2442              		.fpu fpv5-d16
 2444              	HAL_I2C_Master_Transmit_IT:
 2445              	.LFB149:
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2446              		.loc 1 1554 0
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 0
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 2450              	.LVL166:
 2451 0000 30B5     		push	{r4, r5, lr}
 2452              	.LCFI39:
ARM GAS  /tmp/ccbPnc67.s 			page 166


 2453              		.cfi_def_cfa_offset 12
 2454              		.cfi_offset 4, -12
 2455              		.cfi_offset 5, -8
 2456              		.cfi_offset 14, -4
 2457 0002 83B0     		sub	sp, sp, #12
 2458              	.LCFI40:
 2459              		.cfi_def_cfa_offset 24
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2460              		.loc 1 1557 0
 2461 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2462 0008 E4B2     		uxtb	r4, r4
 2463 000a 202C     		cmp	r4, #32
 2464 000c 37D1     		bne	.L229
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2465              		.loc 1 1559 0
 2466 000e 0468     		ldr	r4, [r0]
 2467 0010 A469     		ldr	r4, [r4, #24]
 2468 0012 14F4004F 		tst	r4, #32768
 2469 0016 35D1     		bne	.L230
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2470              		.loc 1 1565 0
 2471 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2472 001c 012C     		cmp	r4, #1
 2473 001e 33D0     		beq	.L231
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2474              		.loc 1 1565 0 is_stmt 0 discriminator 2
 2475 0020 0124     		movs	r4, #1
 2476 0022 80F84040 		strb	r4, [r0, #64]
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2477              		.loc 1 1567 0 is_stmt 1 discriminator 2
 2478 0026 2124     		movs	r4, #33
 2479 0028 80F84140 		strb	r4, [r0, #65]
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2480              		.loc 1 1568 0 discriminator 2
 2481 002c 1024     		movs	r4, #16
 2482 002e 80F84240 		strb	r4, [r0, #66]
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2483              		.loc 1 1569 0 discriminator 2
 2484 0032 0024     		movs	r4, #0
 2485 0034 4464     		str	r4, [r0, #68]
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2486              		.loc 1 1572 0 discriminator 2
 2487 0036 4262     		str	r2, [r0, #36]
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2488              		.loc 1 1573 0 discriminator 2
 2489 0038 4385     		strh	r3, [r0, #42]	@ movhi
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2490              		.loc 1 1574 0 discriminator 2
 2491 003a 144B     		ldr	r3, .L233
 2492              	.LVL167:
 2493 003c C362     		str	r3, [r0, #44]
 2494              	.LVL168:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2495              		.loc 1 1575 0 discriminator 2
 2496 003e 144B     		ldr	r3, .L233+4
 2497 0040 4363     		str	r3, [r0, #52]
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 167


 2498              		.loc 1 1577 0 discriminator 2
 2499 0042 438D     		ldrh	r3, [r0, #42]
 2500 0044 9BB2     		uxth	r3, r3
 2501 0046 FF2B     		cmp	r3, #255
 2502 0048 14D9     		bls	.L227
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2503              		.loc 1 1579 0
 2504 004a FF23     		movs	r3, #255
 2505 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2506              	.LVL169:
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2507              		.loc 1 1580 0
 2508 004e 4FF08073 		mov	r3, #16777216
 2509              	.LVL170:
 2510              	.L228:
 2511 0052 0446     		mov	r4, r0
 2512              	.LVL171:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2513              		.loc 1 1590 0
 2514 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2515              	.LVL172:
 2516 0058 0E48     		ldr	r0, .L233+8
 2517              	.LVL173:
 2518 005a 0090     		str	r0, [sp]
 2519              	.LVL174:
 2520 005c 2046     		mov	r0, r4
 2521 005e FFF7FEFF 		bl	I2C_TransferConfig
 2522              	.LVL175:
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2523              		.loc 1 1593 0
 2524 0062 0025     		movs	r5, #0
 2525 0064 84F84050 		strb	r5, [r4, #64]
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2526              		.loc 1 1602 0
 2527 0068 0121     		movs	r1, #1
 2528 006a 2046     		mov	r0, r4
 2529 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2530              	.LVL176:
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2531              		.loc 1 1604 0
 2532 0070 2846     		mov	r0, r5
 2533 0072 05E0     		b	.L226
 2534              	.LVL177:
 2535              	.L227:
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2536              		.loc 1 1584 0
 2537 0074 438D     		ldrh	r3, [r0, #42]
 2538 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2539              	.LVL178:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2540              		.loc 1 1585 0
 2541 0078 4FF00073 		mov	r3, #33554432
 2542 007c E9E7     		b	.L228
 2543              	.LVL179:
 2544              	.L229:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2545              		.loc 1 1608 0
ARM GAS  /tmp/ccbPnc67.s 			page 168


 2546 007e 0220     		movs	r0, #2
 2547              	.LVL180:
 2548              	.L226:
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2549              		.loc 1 1610 0
 2550 0080 03B0     		add	sp, sp, #12
 2551              	.LCFI41:
 2552              		.cfi_remember_state
 2553              		.cfi_def_cfa_offset 12
 2554              		@ sp needed
 2555 0082 30BD     		pop	{r4, r5, pc}
 2556              	.LVL181:
 2557              	.L230:
 2558              	.LCFI42:
 2559              		.cfi_restore_state
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2560              		.loc 1 1561 0
 2561 0084 0220     		movs	r0, #2
 2562              	.LVL182:
 2563 0086 FBE7     		b	.L226
 2564              	.LVL183:
 2565              	.L231:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2566              		.loc 1 1565 0
 2567 0088 0220     		movs	r0, #2
 2568              	.LVL184:
 2569 008a F9E7     		b	.L226
 2570              	.L234:
 2571              		.align	2
 2572              	.L233:
 2573 008c 0000FFFF 		.word	-65536
 2574 0090 00000000 		.word	I2C_Master_ISR_IT
 2575 0094 00200080 		.word	-2147475456
 2576              		.cfi_endproc
 2577              	.LFE149:
 2579              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2580              		.align	1
 2581              		.global	HAL_I2C_Master_Receive_IT
 2582              		.syntax unified
 2583              		.thumb
 2584              		.thumb_func
 2585              		.fpu fpv5-d16
 2587              	HAL_I2C_Master_Receive_IT:
 2588              	.LFB150:
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2589              		.loc 1 1623 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 0
 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593              	.LVL185:
 2594 0000 30B5     		push	{r4, r5, lr}
 2595              	.LCFI43:
 2596              		.cfi_def_cfa_offset 12
 2597              		.cfi_offset 4, -12
 2598              		.cfi_offset 5, -8
 2599              		.cfi_offset 14, -4
 2600 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccbPnc67.s 			page 169


 2601              	.LCFI44:
 2602              		.cfi_def_cfa_offset 24
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2603              		.loc 1 1626 0
 2604 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2605 0008 E4B2     		uxtb	r4, r4
 2606 000a 202C     		cmp	r4, #32
 2607 000c 37D1     		bne	.L239
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2608              		.loc 1 1628 0
 2609 000e 0468     		ldr	r4, [r0]
 2610 0010 A469     		ldr	r4, [r4, #24]
 2611 0012 14F4004F 		tst	r4, #32768
 2612 0016 35D1     		bne	.L240
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2613              		.loc 1 1634 0
 2614 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2615 001c 012C     		cmp	r4, #1
 2616 001e 33D0     		beq	.L241
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2617              		.loc 1 1634 0 is_stmt 0 discriminator 2
 2618 0020 0124     		movs	r4, #1
 2619 0022 80F84040 		strb	r4, [r0, #64]
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2620              		.loc 1 1636 0 is_stmt 1 discriminator 2
 2621 0026 2224     		movs	r4, #34
 2622 0028 80F84140 		strb	r4, [r0, #65]
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2623              		.loc 1 1637 0 discriminator 2
 2624 002c 1024     		movs	r4, #16
 2625 002e 80F84240 		strb	r4, [r0, #66]
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2626              		.loc 1 1638 0 discriminator 2
 2627 0032 0024     		movs	r4, #0
 2628 0034 4464     		str	r4, [r0, #68]
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2629              		.loc 1 1641 0 discriminator 2
 2630 0036 4262     		str	r2, [r0, #36]
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2631              		.loc 1 1642 0 discriminator 2
 2632 0038 4385     		strh	r3, [r0, #42]	@ movhi
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2633              		.loc 1 1643 0 discriminator 2
 2634 003a 144B     		ldr	r3, .L243
 2635              	.LVL186:
 2636 003c C362     		str	r3, [r0, #44]
 2637              	.LVL187:
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2638              		.loc 1 1644 0 discriminator 2
 2639 003e 144B     		ldr	r3, .L243+4
 2640 0040 4363     		str	r3, [r0, #52]
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2641              		.loc 1 1646 0 discriminator 2
 2642 0042 438D     		ldrh	r3, [r0, #42]
 2643 0044 9BB2     		uxth	r3, r3
 2644 0046 FF2B     		cmp	r3, #255
 2645 0048 14D9     		bls	.L237
ARM GAS  /tmp/ccbPnc67.s 			page 170


1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2646              		.loc 1 1648 0
 2647 004a FF23     		movs	r3, #255
 2648 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2649              	.LVL188:
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2650              		.loc 1 1649 0
 2651 004e 4FF08073 		mov	r3, #16777216
 2652              	.LVL189:
 2653              	.L238:
 2654 0052 0446     		mov	r4, r0
 2655              	.LVL190:
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2656              		.loc 1 1659 0
 2657 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2658              	.LVL191:
 2659 0058 0E48     		ldr	r0, .L243+8
 2660              	.LVL192:
 2661 005a 0090     		str	r0, [sp]
 2662              	.LVL193:
 2663 005c 2046     		mov	r0, r4
 2664 005e FFF7FEFF 		bl	I2C_TransferConfig
 2665              	.LVL194:
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2666              		.loc 1 1662 0
 2667 0062 0025     		movs	r5, #0
 2668 0064 84F84050 		strb	r5, [r4, #64]
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2669              		.loc 1 1671 0
 2670 0068 0221     		movs	r1, #2
 2671 006a 2046     		mov	r0, r4
 2672 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2673              	.LVL195:
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2674              		.loc 1 1673 0
 2675 0070 2846     		mov	r0, r5
 2676 0072 05E0     		b	.L236
 2677              	.LVL196:
 2678              	.L237:
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2679              		.loc 1 1653 0
 2680 0074 438D     		ldrh	r3, [r0, #42]
 2681 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2682              	.LVL197:
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2683              		.loc 1 1654 0
 2684 0078 4FF00073 		mov	r3, #33554432
 2685 007c E9E7     		b	.L238
 2686              	.LVL198:
 2687              	.L239:
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2688              		.loc 1 1677 0
 2689 007e 0220     		movs	r0, #2
 2690              	.LVL199:
 2691              	.L236:
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2692              		.loc 1 1679 0
ARM GAS  /tmp/ccbPnc67.s 			page 171


 2693 0080 03B0     		add	sp, sp, #12
 2694              	.LCFI45:
 2695              		.cfi_remember_state
 2696              		.cfi_def_cfa_offset 12
 2697              		@ sp needed
 2698 0082 30BD     		pop	{r4, r5, pc}
 2699              	.LVL200:
 2700              	.L240:
 2701              	.LCFI46:
 2702              		.cfi_restore_state
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2703              		.loc 1 1630 0
 2704 0084 0220     		movs	r0, #2
 2705              	.LVL201:
 2706 0086 FBE7     		b	.L236
 2707              	.LVL202:
 2708              	.L241:
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2709              		.loc 1 1634 0
 2710 0088 0220     		movs	r0, #2
 2711              	.LVL203:
 2712 008a F9E7     		b	.L236
 2713              	.L244:
 2714              		.align	2
 2715              	.L243:
 2716 008c 0000FFFF 		.word	-65536
 2717 0090 00000000 		.word	I2C_Master_ISR_IT
 2718 0094 00240080 		.word	-2147474432
 2719              		.cfi_endproc
 2720              	.LFE150:
 2722              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2723              		.align	1
 2724              		.global	HAL_I2C_Slave_Transmit_IT
 2725              		.syntax unified
 2726              		.thumb
 2727              		.thumb_func
 2728              		.fpu fpv5-d16
 2730              	HAL_I2C_Slave_Transmit_IT:
 2731              	.LFB151:
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2732              		.loc 1 1690 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              	.LVL204:
 2737 0000 38B5     		push	{r3, r4, r5, lr}
 2738              	.LCFI47:
 2739              		.cfi_def_cfa_offset 16
 2740              		.cfi_offset 3, -16
 2741              		.cfi_offset 4, -12
 2742              		.cfi_offset 5, -8
 2743              		.cfi_offset 14, -4
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2744              		.loc 1 1691 0
 2745 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2746 0006 DBB2     		uxtb	r3, r3
 2747 0008 202B     		cmp	r3, #32
ARM GAS  /tmp/ccbPnc67.s 			page 172


 2748 000a 23D1     		bne	.L247
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2749              		.loc 1 1694 0
 2750 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2751 0010 012B     		cmp	r3, #1
 2752 0012 21D0     		beq	.L248
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2753              		.loc 1 1694 0 is_stmt 0 discriminator 2
 2754 0014 0123     		movs	r3, #1
 2755 0016 80F84030 		strb	r3, [r0, #64]
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2756              		.loc 1 1696 0 is_stmt 1 discriminator 2
 2757 001a 2123     		movs	r3, #33
 2758 001c 80F84130 		strb	r3, [r0, #65]
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2759              		.loc 1 1697 0 discriminator 2
 2760 0020 2023     		movs	r3, #32
 2761 0022 80F84230 		strb	r3, [r0, #66]
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2762              		.loc 1 1698 0 discriminator 2
 2763 0026 0024     		movs	r4, #0
 2764 0028 4464     		str	r4, [r0, #68]
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2765              		.loc 1 1701 0 discriminator 2
 2766 002a 0568     		ldr	r5, [r0]
 2767 002c 6B68     		ldr	r3, [r5, #4]
 2768 002e 23F40043 		bic	r3, r3, #32768
 2769 0032 6B60     		str	r3, [r5, #4]
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2770              		.loc 1 1704 0 discriminator 2
 2771 0034 4162     		str	r1, [r0, #36]
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2772              		.loc 1 1705 0 discriminator 2
 2773 0036 4285     		strh	r2, [r0, #42]	@ movhi
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2774              		.loc 1 1706 0 discriminator 2
 2775 0038 438D     		ldrh	r3, [r0, #42]
 2776 003a 0385     		strh	r3, [r0, #40]	@ movhi
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2777              		.loc 1 1707 0 discriminator 2
 2778 003c 074B     		ldr	r3, .L250
 2779 003e C362     		str	r3, [r0, #44]
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2780              		.loc 1 1708 0 discriminator 2
 2781 0040 074B     		ldr	r3, .L250+4
 2782 0042 4363     		str	r3, [r0, #52]
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2783              		.loc 1 1711 0 discriminator 2
 2784 0044 80F84040 		strb	r4, [r0, #64]
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2785              		.loc 1 1720 0 discriminator 2
 2786 0048 48F20101 		movw	r1, #32769
 2787              	.LVL205:
 2788 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2789              	.LVL206:
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2790              		.loc 1 1722 0 discriminator 2
ARM GAS  /tmp/ccbPnc67.s 			page 173


 2791 0050 2046     		mov	r0, r4
 2792 0052 00E0     		b	.L246
 2793              	.LVL207:
 2794              	.L247:
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2795              		.loc 1 1726 0
 2796 0054 0220     		movs	r0, #2
 2797              	.LVL208:
 2798              	.L246:
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2799              		.loc 1 1728 0
 2800 0056 38BD     		pop	{r3, r4, r5, pc}
 2801              	.LVL209:
 2802              	.L248:
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2803              		.loc 1 1694 0
 2804 0058 0220     		movs	r0, #2
 2805              	.LVL210:
 2806 005a FCE7     		b	.L246
 2807              	.L251:
 2808              		.align	2
 2809              	.L250:
 2810 005c 0000FFFF 		.word	-65536
 2811 0060 00000000 		.word	I2C_Slave_ISR_IT
 2812              		.cfi_endproc
 2813              	.LFE151:
 2815              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2816              		.align	1
 2817              		.global	HAL_I2C_Slave_Receive_IT
 2818              		.syntax unified
 2819              		.thumb
 2820              		.thumb_func
 2821              		.fpu fpv5-d16
 2823              	HAL_I2C_Slave_Receive_IT:
 2824              	.LFB152:
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2825              		.loc 1 1739 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 2829              	.LVL211:
 2830 0000 38B5     		push	{r3, r4, r5, lr}
 2831              	.LCFI48:
 2832              		.cfi_def_cfa_offset 16
 2833              		.cfi_offset 3, -16
 2834              		.cfi_offset 4, -12
 2835              		.cfi_offset 5, -8
 2836              		.cfi_offset 14, -4
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2837              		.loc 1 1740 0
 2838 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2839 0006 DBB2     		uxtb	r3, r3
 2840 0008 202B     		cmp	r3, #32
 2841 000a 23D1     		bne	.L254
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2842              		.loc 1 1743 0
 2843 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
ARM GAS  /tmp/ccbPnc67.s 			page 174


 2844 0010 012B     		cmp	r3, #1
 2845 0012 21D0     		beq	.L255
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2846              		.loc 1 1743 0 is_stmt 0 discriminator 2
 2847 0014 0123     		movs	r3, #1
 2848 0016 80F84030 		strb	r3, [r0, #64]
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2849              		.loc 1 1745 0 is_stmt 1 discriminator 2
 2850 001a 2223     		movs	r3, #34
 2851 001c 80F84130 		strb	r3, [r0, #65]
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2852              		.loc 1 1746 0 discriminator 2
 2853 0020 2023     		movs	r3, #32
 2854 0022 80F84230 		strb	r3, [r0, #66]
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2855              		.loc 1 1747 0 discriminator 2
 2856 0026 0024     		movs	r4, #0
 2857 0028 4464     		str	r4, [r0, #68]
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2858              		.loc 1 1750 0 discriminator 2
 2859 002a 0568     		ldr	r5, [r0]
 2860 002c 6B68     		ldr	r3, [r5, #4]
 2861 002e 23F40043 		bic	r3, r3, #32768
 2862 0032 6B60     		str	r3, [r5, #4]
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2863              		.loc 1 1753 0 discriminator 2
 2864 0034 4162     		str	r1, [r0, #36]
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2865              		.loc 1 1754 0 discriminator 2
 2866 0036 4285     		strh	r2, [r0, #42]	@ movhi
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2867              		.loc 1 1755 0 discriminator 2
 2868 0038 438D     		ldrh	r3, [r0, #42]
 2869 003a 0385     		strh	r3, [r0, #40]	@ movhi
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2870              		.loc 1 1756 0 discriminator 2
 2871 003c 074B     		ldr	r3, .L257
 2872 003e C362     		str	r3, [r0, #44]
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2873              		.loc 1 1757 0 discriminator 2
 2874 0040 074B     		ldr	r3, .L257+4
 2875 0042 4363     		str	r3, [r0, #52]
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2876              		.loc 1 1760 0 discriminator 2
 2877 0044 80F84040 		strb	r4, [r0, #64]
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2878              		.loc 1 1769 0 discriminator 2
 2879 0048 48F20201 		movw	r1, #32770
 2880              	.LVL212:
 2881 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2882              	.LVL213:
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2883              		.loc 1 1771 0 discriminator 2
 2884 0050 2046     		mov	r0, r4
 2885 0052 00E0     		b	.L253
 2886              	.LVL214:
 2887              	.L254:
ARM GAS  /tmp/ccbPnc67.s 			page 175


1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2888              		.loc 1 1775 0
 2889 0054 0220     		movs	r0, #2
 2890              	.LVL215:
 2891              	.L253:
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2892              		.loc 1 1777 0
 2893 0056 38BD     		pop	{r3, r4, r5, pc}
 2894              	.LVL216:
 2895              	.L255:
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2896              		.loc 1 1743 0
 2897 0058 0220     		movs	r0, #2
 2898              	.LVL217:
 2899 005a FCE7     		b	.L253
 2900              	.L258:
 2901              		.align	2
 2902              	.L257:
 2903 005c 0000FFFF 		.word	-65536
 2904 0060 00000000 		.word	I2C_Slave_ISR_IT
 2905              		.cfi_endproc
 2906              	.LFE152:
 2908              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2909              		.align	1
 2910              		.global	HAL_I2C_Master_Transmit_DMA
 2911              		.syntax unified
 2912              		.thumb
 2913              		.thumb_func
 2914              		.fpu fpv5-d16
 2916              	HAL_I2C_Master_Transmit_DMA:
 2917              	.LFB153:
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2918              		.loc 1 1790 0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 0
 2921              		@ frame_needed = 0, uses_anonymous_args = 0
 2922              	.LVL218:
 2923 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2924              	.LCFI49:
 2925              		.cfi_def_cfa_offset 20
 2926              		.cfi_offset 4, -20
 2927              		.cfi_offset 5, -16
 2928              		.cfi_offset 6, -12
 2929              		.cfi_offset 7, -8
 2930              		.cfi_offset 14, -4
 2931 0002 83B0     		sub	sp, sp, #12
 2932              	.LCFI50:
 2933              		.cfi_def_cfa_offset 32
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2934              		.loc 1 1794 0
 2935 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2936 0008 E4B2     		uxtb	r4, r4
 2937 000a 202C     		cmp	r4, #32
 2938 000c 40F08C80 		bne	.L267
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2939              		.loc 1 1796 0
 2940 0010 0468     		ldr	r4, [r0]
ARM GAS  /tmp/ccbPnc67.s 			page 176


 2941 0012 A469     		ldr	r4, [r4, #24]
 2942 0014 14F4004F 		tst	r4, #32768
 2943 0018 40F08A80 		bne	.L268
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2944              		.loc 1 1802 0
 2945 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2946 0020 012C     		cmp	r4, #1
 2947 0022 00F08780 		beq	.L269
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2948              		.loc 1 1802 0 is_stmt 0 discriminator 2
 2949 0026 0124     		movs	r4, #1
 2950 0028 80F84040 		strb	r4, [r0, #64]
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2951              		.loc 1 1804 0 is_stmt 1 discriminator 2
 2952 002c 2124     		movs	r4, #33
 2953 002e 80F84140 		strb	r4, [r0, #65]
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2954              		.loc 1 1805 0 discriminator 2
 2955 0032 1024     		movs	r4, #16
 2956 0034 80F84240 		strb	r4, [r0, #66]
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2957              		.loc 1 1806 0 discriminator 2
 2958 0038 0024     		movs	r4, #0
 2959 003a 4464     		str	r4, [r0, #68]
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2960              		.loc 1 1809 0 discriminator 2
 2961 003c 4262     		str	r2, [r0, #36]
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2962              		.loc 1 1810 0 discriminator 2
 2963 003e 4385     		strh	r3, [r0, #42]	@ movhi
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2964              		.loc 1 1811 0 discriminator 2
 2965 0040 3D4B     		ldr	r3, .L273
 2966              	.LVL219:
 2967 0042 C362     		str	r3, [r0, #44]
 2968              	.LVL220:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2969              		.loc 1 1812 0 discriminator 2
 2970 0044 3D4B     		ldr	r3, .L273+4
 2971 0046 4363     		str	r3, [r0, #52]
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2972              		.loc 1 1814 0 discriminator 2
 2973 0048 438D     		ldrh	r3, [r0, #42]
 2974 004a 9BB2     		uxth	r3, r3
 2975 004c FF2B     		cmp	r3, #255
 2976 004e 2CD9     		bls	.L261
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2977              		.loc 1 1816 0
 2978 0050 FF23     		movs	r3, #255
 2979 0052 0385     		strh	r3, [r0, #40]	@ movhi
 2980              	.LVL221:
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2981              		.loc 1 1817 0
 2982 0054 4FF08076 		mov	r6, #16777216
 2983              	.LVL222:
 2984              	.L262:
 2985 0058 1546     		mov	r5, r2
ARM GAS  /tmp/ccbPnc67.s 			page 177


 2986 005a 0F46     		mov	r7, r1
 2987 005c 0446     		mov	r4, r0
 2988              	.LVL223:
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2989              		.loc 1 1825 0
 2990 005e 028D     		ldrh	r2, [r0, #40]
 2991              	.LVL224:
 2992 0060 002A     		cmp	r2, #0
 2993 0062 50D0     		beq	.L263
 2994              	.LVL225:
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2995              		.loc 1 1827 0
 2996 0064 836B     		ldr	r3, [r0, #56]
 2997 0066 2BB3     		cbz	r3, .L264
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2998              		.loc 1 1830 0
 2999 0068 354A     		ldr	r2, .L273+8
 3000 006a DA63     		str	r2, [r3, #60]
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3001              		.loc 1 1833 0
 3002 006c 836B     		ldr	r3, [r0, #56]
 3003 006e 354A     		ldr	r2, .L273+12
 3004 0070 DA64     		str	r2, [r3, #76]
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 3005              		.loc 1 1836 0
 3006 0072 826B     		ldr	r2, [r0, #56]
 3007 0074 0023     		movs	r3, #0
 3008 0076 1364     		str	r3, [r2, #64]
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3009              		.loc 1 1837 0
 3010 0078 826B     		ldr	r2, [r0, #56]
 3011 007a 1365     		str	r3, [r2, #80]
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3012              		.loc 1 1840 0
 3013 007c 0268     		ldr	r2, [r0]
 3014 007e 038D     		ldrh	r3, [r0, #40]
 3015 0080 2832     		adds	r2, r2, #40
 3016 0082 2946     		mov	r1, r5
 3017              	.LVL226:
 3018 0084 806B     		ldr	r0, [r0, #56]
 3019              	.LVL227:
 3020 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3021              	.LVL228:
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3022              		.loc 1 1857 0
 3023 008a 0546     		mov	r5, r0
 3024              	.LVL229:
 3025 008c 00B3     		cbz	r0, .L272
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3026              		.loc 1 1881 0
 3027 008e 2023     		movs	r3, #32
 3028 0090 84F84130 		strb	r3, [r4, #65]
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3029              		.loc 1 1882 0
 3030 0094 0022     		movs	r2, #0
 3031 0096 84F84220 		strb	r2, [r4, #66]
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 178


 3032              		.loc 1 1885 0
 3033 009a 636C     		ldr	r3, [r4, #68]
 3034 009c 43F01003 		orr	r3, r3, #16
 3035 00a0 6364     		str	r3, [r4, #68]
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3036              		.loc 1 1888 0
 3037 00a2 84F84020 		strb	r2, [r4, #64]
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3038              		.loc 1 1890 0
 3039 00a6 0125     		movs	r5, #1
 3040 00a8 3FE0     		b	.L260
 3041              	.LVL230:
 3042              	.L261:
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3043              		.loc 1 1821 0
 3044 00aa 438D     		ldrh	r3, [r0, #42]
 3045 00ac 0385     		strh	r3, [r0, #40]	@ movhi
 3046              	.LVL231:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3047              		.loc 1 1822 0
 3048 00ae 4FF00076 		mov	r6, #33554432
 3049 00b2 D1E7     		b	.L262
 3050              	.LVL232:
 3051              	.L264:
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3052              		.loc 1 1845 0
 3053 00b4 2023     		movs	r3, #32
 3054 00b6 80F84130 		strb	r3, [r0, #65]
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3055              		.loc 1 1846 0
 3056 00ba 0022     		movs	r2, #0
 3057 00bc 80F84220 		strb	r2, [r0, #66]
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3058              		.loc 1 1849 0
 3059 00c0 436C     		ldr	r3, [r0, #68]
 3060 00c2 43F08003 		orr	r3, r3, #128
 3061 00c6 4364     		str	r3, [r0, #68]
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3062              		.loc 1 1852 0
 3063 00c8 80F84020 		strb	r2, [r0, #64]
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3064              		.loc 1 1854 0
 3065 00cc 0125     		movs	r5, #1
 3066              	.LVL233:
 3067 00ce 2CE0     		b	.L260
 3068              	.LVL234:
 3069              	.L272:
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3070              		.loc 1 1861 0
 3071 00d0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3072 00d4 1C4B     		ldr	r3, .L273+16
 3073 00d6 0093     		str	r3, [sp]
 3074 00d8 3346     		mov	r3, r6
 3075 00da 3946     		mov	r1, r7
 3076 00dc 2046     		mov	r0, r4
 3077              	.LVL235:
 3078 00de FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/ccbPnc67.s 			page 179


 3079              	.LVL236:
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3080              		.loc 1 1864 0
 3081 00e2 638D     		ldrh	r3, [r4, #42]
 3082 00e4 228D     		ldrh	r2, [r4, #40]
 3083 00e6 9B1A     		subs	r3, r3, r2
 3084 00e8 9BB2     		uxth	r3, r3
 3085 00ea 6385     		strh	r3, [r4, #42]	@ movhi
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3086              		.loc 1 1867 0
 3087 00ec 0023     		movs	r3, #0
 3088 00ee 84F84030 		strb	r3, [r4, #64]
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3089              		.loc 1 1873 0
 3090 00f2 1021     		movs	r1, #16
 3091 00f4 2046     		mov	r0, r4
 3092 00f6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3093              	.LVL237:
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3094              		.loc 1 1876 0
 3095 00fa 2268     		ldr	r2, [r4]
 3096 00fc 1368     		ldr	r3, [r2]
 3097 00fe 43F48043 		orr	r3, r3, #16384
 3098 0102 1360     		str	r3, [r2]
 3099 0104 11E0     		b	.L260
 3100              	.LVL238:
 3101              	.L263:
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3102              		.loc 1 1896 0
 3103 0106 114B     		ldr	r3, .L273+20
 3104 0108 4363     		str	r3, [r0, #52]
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3105              		.loc 1 1900 0
 3106 010a 0F4B     		ldr	r3, .L273+16
 3107 010c 0093     		str	r3, [sp]
 3108 010e 4FF00073 		mov	r3, #33554432
 3109 0112 D2B2     		uxtb	r2, r2
 3110 0114 FFF7FEFF 		bl	I2C_TransferConfig
 3111              	.LVL239:
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3112              		.loc 1 1903 0
 3113 0118 0025     		movs	r5, #0
 3114              	.LVL240:
 3115 011a 84F84050 		strb	r5, [r4, #64]
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3116              		.loc 1 1911 0
 3117 011e 0121     		movs	r1, #1
 3118 0120 2046     		mov	r0, r4
 3119 0122 FFF7FEFF 		bl	I2C_Enable_IRQ
 3120              	.LVL241:
 3121 0126 00E0     		b	.L260
 3122              	.LVL242:
 3123              	.L267:
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3124              		.loc 1 1918 0
 3125 0128 0225     		movs	r5, #2
 3126              	.LVL243:
ARM GAS  /tmp/ccbPnc67.s 			page 180


 3127              	.L260:
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3128              		.loc 1 1920 0
 3129 012a 2846     		mov	r0, r5
 3130 012c 03B0     		add	sp, sp, #12
 3131              	.LCFI51:
 3132              		.cfi_remember_state
 3133              		.cfi_def_cfa_offset 20
 3134              		@ sp needed
 3135 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 3136              	.LVL244:
 3137              	.L268:
 3138              	.LCFI52:
 3139              		.cfi_restore_state
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3140              		.loc 1 1798 0
 3141 0130 0225     		movs	r5, #2
 3142 0132 FAE7     		b	.L260
 3143              	.L269:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3144              		.loc 1 1802 0
 3145 0134 0225     		movs	r5, #2
 3146 0136 F8E7     		b	.L260
 3147              	.L274:
 3148              		.align	2
 3149              	.L273:
 3150 0138 0000FFFF 		.word	-65536
 3151 013c 00000000 		.word	I2C_Master_ISR_DMA
 3152 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3153 0144 00000000 		.word	I2C_DMAError
 3154 0148 00200080 		.word	-2147475456
 3155 014c 00000000 		.word	I2C_Master_ISR_IT
 3156              		.cfi_endproc
 3157              	.LFE153:
 3159              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3160              		.align	1
 3161              		.global	HAL_I2C_Master_Receive_DMA
 3162              		.syntax unified
 3163              		.thumb
 3164              		.thumb_func
 3165              		.fpu fpv5-d16
 3167              	HAL_I2C_Master_Receive_DMA:
 3168              	.LFB154:
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 3169              		.loc 1 1933 0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173              	.LVL245:
 3174 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3175              	.LCFI53:
 3176              		.cfi_def_cfa_offset 20
 3177              		.cfi_offset 4, -20
 3178              		.cfi_offset 5, -16
 3179              		.cfi_offset 6, -12
 3180              		.cfi_offset 7, -8
 3181              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbPnc67.s 			page 181


 3182 0002 83B0     		sub	sp, sp, #12
 3183              	.LCFI54:
 3184              		.cfi_def_cfa_offset 32
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3185              		.loc 1 1937 0
 3186 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3187 0008 E4B2     		uxtb	r4, r4
 3188 000a 202C     		cmp	r4, #32
 3189 000c 40F08B80 		bne	.L283
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3190              		.loc 1 1939 0
 3191 0010 0468     		ldr	r4, [r0]
 3192 0012 A469     		ldr	r4, [r4, #24]
 3193 0014 14F4004F 		tst	r4, #32768
 3194 0018 40F08980 		bne	.L284
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3195              		.loc 1 1945 0
 3196 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3197 0020 012C     		cmp	r4, #1
 3198 0022 00F08680 		beq	.L285
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3199              		.loc 1 1945 0 is_stmt 0 discriminator 2
 3200 0026 0124     		movs	r4, #1
 3201 0028 80F84040 		strb	r4, [r0, #64]
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3202              		.loc 1 1947 0 is_stmt 1 discriminator 2
 3203 002c 2224     		movs	r4, #34
 3204 002e 80F84140 		strb	r4, [r0, #65]
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3205              		.loc 1 1948 0 discriminator 2
 3206 0032 1024     		movs	r4, #16
 3207 0034 80F84240 		strb	r4, [r0, #66]
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3208              		.loc 1 1949 0 discriminator 2
 3209 0038 0024     		movs	r4, #0
 3210 003a 4464     		str	r4, [r0, #68]
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3211              		.loc 1 1952 0 discriminator 2
 3212 003c 4262     		str	r2, [r0, #36]
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3213              		.loc 1 1953 0 discriminator 2
 3214 003e 4385     		strh	r3, [r0, #42]	@ movhi
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3215              		.loc 1 1954 0 discriminator 2
 3216 0040 3D4B     		ldr	r3, .L289
 3217              	.LVL246:
 3218 0042 C362     		str	r3, [r0, #44]
 3219              	.LVL247:
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3220              		.loc 1 1955 0 discriminator 2
 3221 0044 3D4B     		ldr	r3, .L289+4
 3222 0046 4363     		str	r3, [r0, #52]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3223              		.loc 1 1957 0 discriminator 2
 3224 0048 438D     		ldrh	r3, [r0, #42]
 3225 004a 9BB2     		uxth	r3, r3
 3226 004c FF2B     		cmp	r3, #255
ARM GAS  /tmp/ccbPnc67.s 			page 182


 3227 004e 2AD9     		bls	.L277
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3228              		.loc 1 1959 0
 3229 0050 FF23     		movs	r3, #255
 3230 0052 0385     		strh	r3, [r0, #40]	@ movhi
 3231              	.LVL248:
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3232              		.loc 1 1960 0
 3233 0054 4FF08076 		mov	r6, #16777216
 3234              	.LVL249:
 3235              	.L278:
 3236 0058 0F46     		mov	r7, r1
 3237 005a 0446     		mov	r4, r0
 3238              	.LVL250:
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3239              		.loc 1 1968 0
 3240 005c 018D     		ldrh	r1, [r0, #40]
 3241              	.LVL251:
 3242 005e 0029     		cmp	r1, #0
 3243 0060 4FD0     		beq	.L279
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3244              		.loc 1 1970 0
 3245 0062 C36B     		ldr	r3, [r0, #60]
 3246 0064 23B3     		cbz	r3, .L280
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3247              		.loc 1 1973 0
 3248 0066 3649     		ldr	r1, .L289+8
 3249 0068 D963     		str	r1, [r3, #60]
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3250              		.loc 1 1976 0
 3251 006a C36B     		ldr	r3, [r0, #60]
 3252 006c 3549     		ldr	r1, .L289+12
 3253 006e D964     		str	r1, [r3, #76]
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3254              		.loc 1 1979 0
 3255 0070 C16B     		ldr	r1, [r0, #60]
 3256 0072 0023     		movs	r3, #0
 3257 0074 0B64     		str	r3, [r1, #64]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3258              		.loc 1 1980 0
 3259 0076 C16B     		ldr	r1, [r0, #60]
 3260 0078 0B65     		str	r3, [r1, #80]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3261              		.loc 1 1983 0
 3262 007a 0168     		ldr	r1, [r0]
 3263 007c 038D     		ldrh	r3, [r0, #40]
 3264 007e 2431     		adds	r1, r1, #36
 3265 0080 C06B     		ldr	r0, [r0, #60]
 3266              	.LVL252:
 3267 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3268              	.LVL253:
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3269              		.loc 1 2000 0
 3270 0086 0546     		mov	r5, r0
 3271 0088 00B3     		cbz	r0, .L288
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3272              		.loc 1 2024 0
ARM GAS  /tmp/ccbPnc67.s 			page 183


 3273 008a 2023     		movs	r3, #32
 3274 008c 84F84130 		strb	r3, [r4, #65]
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3275              		.loc 1 2025 0
 3276 0090 0022     		movs	r2, #0
 3277 0092 84F84220 		strb	r2, [r4, #66]
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3278              		.loc 1 2028 0
 3279 0096 636C     		ldr	r3, [r4, #68]
 3280 0098 43F01003 		orr	r3, r3, #16
 3281 009c 6364     		str	r3, [r4, #68]
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3282              		.loc 1 2031 0
 3283 009e 84F84020 		strb	r2, [r4, #64]
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3284              		.loc 1 2033 0
 3285 00a2 0125     		movs	r5, #1
 3286 00a4 40E0     		b	.L276
 3287              	.LVL254:
 3288              	.L277:
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3289              		.loc 1 1964 0
 3290 00a6 438D     		ldrh	r3, [r0, #42]
 3291 00a8 0385     		strh	r3, [r0, #40]	@ movhi
 3292              	.LVL255:
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3293              		.loc 1 1965 0
 3294 00aa 4FF00076 		mov	r6, #33554432
 3295 00ae D3E7     		b	.L278
 3296              	.LVL256:
 3297              	.L280:
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3298              		.loc 1 1988 0
 3299 00b0 2023     		movs	r3, #32
 3300 00b2 80F84130 		strb	r3, [r0, #65]
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3301              		.loc 1 1989 0
 3302 00b6 0022     		movs	r2, #0
 3303              	.LVL257:
 3304 00b8 80F84220 		strb	r2, [r0, #66]
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3305              		.loc 1 1992 0
 3306 00bc 436C     		ldr	r3, [r0, #68]
 3307 00be 43F08003 		orr	r3, r3, #128
 3308 00c2 4364     		str	r3, [r0, #68]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3309              		.loc 1 1995 0
 3310 00c4 80F84020 		strb	r2, [r0, #64]
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3311              		.loc 1 1997 0
 3312 00c8 0125     		movs	r5, #1
 3313 00ca 2DE0     		b	.L276
 3314              	.LVL258:
 3315              	.L288:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3316              		.loc 1 2004 0
 3317 00cc 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
ARM GAS  /tmp/ccbPnc67.s 			page 184


 3318 00d0 1D4B     		ldr	r3, .L289+16
 3319 00d2 0093     		str	r3, [sp]
 3320 00d4 3346     		mov	r3, r6
 3321 00d6 3946     		mov	r1, r7
 3322 00d8 2046     		mov	r0, r4
 3323              	.LVL259:
 3324 00da FFF7FEFF 		bl	I2C_TransferConfig
 3325              	.LVL260:
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3326              		.loc 1 2007 0
 3327 00de 638D     		ldrh	r3, [r4, #42]
 3328 00e0 228D     		ldrh	r2, [r4, #40]
 3329 00e2 9B1A     		subs	r3, r3, r2
 3330 00e4 9BB2     		uxth	r3, r3
 3331 00e6 6385     		strh	r3, [r4, #42]	@ movhi
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3332              		.loc 1 2010 0
 3333 00e8 0023     		movs	r3, #0
 3334 00ea 84F84030 		strb	r3, [r4, #64]
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3335              		.loc 1 2016 0
 3336 00ee 1021     		movs	r1, #16
 3337 00f0 2046     		mov	r0, r4
 3338 00f2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3339              	.LVL261:
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3340              		.loc 1 2019 0
 3341 00f6 2268     		ldr	r2, [r4]
 3342 00f8 1368     		ldr	r3, [r2]
 3343 00fa 43F40043 		orr	r3, r3, #32768
 3344 00fe 1360     		str	r3, [r2]
 3345 0100 12E0     		b	.L276
 3346              	.LVL262:
 3347              	.L279:
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3348              		.loc 1 2039 0
 3349 0102 124B     		ldr	r3, .L289+20
 3350 0104 4363     		str	r3, [r0, #52]
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3351              		.loc 1 2043 0
 3352 0106 104B     		ldr	r3, .L289+16
 3353 0108 0093     		str	r3, [sp]
 3354 010a 4FF00073 		mov	r3, #33554432
 3355 010e CAB2     		uxtb	r2, r1
 3356              	.LVL263:
 3357 0110 3946     		mov	r1, r7
 3358 0112 FFF7FEFF 		bl	I2C_TransferConfig
 3359              	.LVL264:
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3360              		.loc 1 2046 0
 3361 0116 0025     		movs	r5, #0
 3362 0118 84F84050 		strb	r5, [r4, #64]
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3363              		.loc 1 2054 0
 3364 011c 0121     		movs	r1, #1
 3365 011e 2046     		mov	r0, r4
 3366 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
ARM GAS  /tmp/ccbPnc67.s 			page 185


 3367              	.LVL265:
 3368 0124 00E0     		b	.L276
 3369              	.LVL266:
 3370              	.L283:
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3371              		.loc 1 2061 0
 3372 0126 0225     		movs	r5, #2
 3373              	.LVL267:
 3374              	.L276:
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3375              		.loc 1 2063 0
 3376 0128 2846     		mov	r0, r5
 3377 012a 03B0     		add	sp, sp, #12
 3378              	.LCFI55:
 3379              		.cfi_remember_state
 3380              		.cfi_def_cfa_offset 20
 3381              		@ sp needed
 3382 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 3383              	.LVL268:
 3384              	.L284:
 3385              	.LCFI56:
 3386              		.cfi_restore_state
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3387              		.loc 1 1941 0
 3388 012e 0225     		movs	r5, #2
 3389 0130 FAE7     		b	.L276
 3390              	.L285:
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3391              		.loc 1 1945 0
 3392 0132 0225     		movs	r5, #2
 3393 0134 F8E7     		b	.L276
 3394              	.L290:
 3395 0136 00BF     		.align	2
 3396              	.L289:
 3397 0138 0000FFFF 		.word	-65536
 3398 013c 00000000 		.word	I2C_Master_ISR_DMA
 3399 0140 00000000 		.word	I2C_DMAMasterReceiveCplt
 3400 0144 00000000 		.word	I2C_DMAError
 3401 0148 00240080 		.word	-2147474432
 3402 014c 00000000 		.word	I2C_Master_ISR_IT
 3403              		.cfi_endproc
 3404              	.LFE154:
 3406              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3407              		.align	1
 3408              		.global	HAL_I2C_Slave_Transmit_DMA
 3409              		.syntax unified
 3410              		.thumb
 3411              		.thumb_func
 3412              		.fpu fpv5-d16
 3414              	HAL_I2C_Slave_Transmit_DMA:
 3415              	.LFB155:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3416              		.loc 1 2074 0
 3417              		.cfi_startproc
 3418              		@ args = 0, pretend = 0, frame = 0
 3419              		@ frame_needed = 0, uses_anonymous_args = 0
 3420              	.LVL269:
ARM GAS  /tmp/ccbPnc67.s 			page 186


 3421 0000 38B5     		push	{r3, r4, r5, lr}
 3422              	.LCFI57:
 3423              		.cfi_def_cfa_offset 16
 3424              		.cfi_offset 3, -16
 3425              		.cfi_offset 4, -12
 3426              		.cfi_offset 5, -8
 3427              		.cfi_offset 14, -4
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3428              		.loc 1 2077 0
 3429 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3430 0006 DBB2     		uxtb	r3, r3
 3431 0008 202B     		cmp	r3, #32
 3432 000a 67D1     		bne	.L297
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3433              		.loc 1 2079 0
 3434 000c B2FA82F3 		clz	r3, r2
 3435 0010 5B09     		lsrs	r3, r3, #5
 3436 0012 0029     		cmp	r1, #0
 3437 0014 08BF     		it	eq
 3438 0016 0123     		moveq	r3, #1
 3439 0018 002B     		cmp	r3, #0
 3440 001a 39D1     		bne	.L301
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3441              		.loc 1 2085 0
 3442 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3443 0020 012B     		cmp	r3, #1
 3444 0022 5ED0     		beq	.L298
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3445              		.loc 1 2085 0 is_stmt 0 discriminator 2
 3446 0024 0123     		movs	r3, #1
 3447 0026 80F84030 		strb	r3, [r0, #64]
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3448              		.loc 1 2087 0 is_stmt 1 discriminator 2
 3449 002a 2123     		movs	r3, #33
 3450 002c 80F84130 		strb	r3, [r0, #65]
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3451              		.loc 1 2088 0 discriminator 2
 3452 0030 2023     		movs	r3, #32
 3453 0032 80F84230 		strb	r3, [r0, #66]
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3454              		.loc 1 2089 0 discriminator 2
 3455 0036 0023     		movs	r3, #0
 3456 0038 4364     		str	r3, [r0, #68]
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3457              		.loc 1 2092 0 discriminator 2
 3458 003a 4162     		str	r1, [r0, #36]
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3459              		.loc 1 2093 0 discriminator 2
 3460 003c 4285     		strh	r2, [r0, #42]	@ movhi
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3461              		.loc 1 2094 0 discriminator 2
 3462 003e 438D     		ldrh	r3, [r0, #42]
 3463 0040 0385     		strh	r3, [r0, #40]	@ movhi
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3464              		.loc 1 2095 0 discriminator 2
 3465 0042 294B     		ldr	r3, .L303
 3466 0044 C362     		str	r3, [r0, #44]
ARM GAS  /tmp/ccbPnc67.s 			page 187


2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3467              		.loc 1 2096 0 discriminator 2
 3468 0046 294B     		ldr	r3, .L303+4
 3469 0048 4363     		str	r3, [r0, #52]
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3470              		.loc 1 2098 0 discriminator 2
 3471 004a 836B     		ldr	r3, [r0, #56]
 3472 004c 2BB3     		cbz	r3, .L294
 3473 004e 0546     		mov	r5, r0
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3474              		.loc 1 2101 0
 3475 0050 274A     		ldr	r2, .L303+8
 3476              	.LVL270:
 3477 0052 DA63     		str	r2, [r3, #60]
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3478              		.loc 1 2104 0
 3479 0054 836B     		ldr	r3, [r0, #56]
 3480 0056 274A     		ldr	r2, .L303+12
 3481 0058 DA64     		str	r2, [r3, #76]
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3482              		.loc 1 2107 0
 3483 005a 826B     		ldr	r2, [r0, #56]
 3484 005c 0023     		movs	r3, #0
 3485 005e 1364     		str	r3, [r2, #64]
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3486              		.loc 1 2108 0
 3487 0060 826B     		ldr	r2, [r0, #56]
 3488 0062 1365     		str	r3, [r2, #80]
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3489              		.loc 1 2111 0
 3490 0064 0268     		ldr	r2, [r0]
 3491 0066 038D     		ldrh	r3, [r0, #40]
 3492 0068 2832     		adds	r2, r2, #40
 3493 006a 806B     		ldr	r0, [r0, #56]
 3494              	.LVL271:
 3495 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3496              	.LVL272:
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3497              		.loc 1 2128 0
 3498 0070 0446     		mov	r4, r0
 3499 0072 00B3     		cbz	r0, .L302
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3500              		.loc 1 2148 0
 3501 0074 2823     		movs	r3, #40
 3502 0076 85F84130 		strb	r3, [r5, #65]
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3503              		.loc 1 2149 0
 3504 007a 0022     		movs	r2, #0
 3505 007c 85F84220 		strb	r2, [r5, #66]
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3506              		.loc 1 2152 0
 3507 0080 6B6C     		ldr	r3, [r5, #68]
 3508 0082 43F01003 		orr	r3, r3, #16
 3509 0086 6B64     		str	r3, [r5, #68]
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3510              		.loc 1 2155 0
 3511 0088 85F84020 		strb	r2, [r5, #64]
ARM GAS  /tmp/ccbPnc67.s 			page 188


2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3512              		.loc 1 2157 0
 3513 008c 0124     		movs	r4, #1
 3514 008e 26E0     		b	.L292
 3515              	.LVL273:
 3516              	.L301:
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3517              		.loc 1 2081 0
 3518 0090 4FF40073 		mov	r3, #512
 3519 0094 4364     		str	r3, [r0, #68]
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3520              		.loc 1 2082 0
 3521 0096 0124     		movs	r4, #1
 3522 0098 21E0     		b	.L292
 3523              	.L294:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3524              		.loc 1 2116 0
 3525 009a 2823     		movs	r3, #40
 3526 009c 80F84130 		strb	r3, [r0, #65]
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3527              		.loc 1 2117 0
 3528 00a0 0022     		movs	r2, #0
 3529              	.LVL274:
 3530 00a2 80F84220 		strb	r2, [r0, #66]
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3531              		.loc 1 2120 0
 3532 00a6 436C     		ldr	r3, [r0, #68]
 3533 00a8 43F08003 		orr	r3, r3, #128
 3534 00ac 4364     		str	r3, [r0, #68]
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3535              		.loc 1 2123 0
 3536 00ae 80F84020 		strb	r2, [r0, #64]
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3537              		.loc 1 2125 0
 3538 00b2 0124     		movs	r4, #1
 3539 00b4 13E0     		b	.L292
 3540              	.LVL275:
 3541              	.L302:
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3542              		.loc 1 2131 0
 3543 00b6 2A68     		ldr	r2, [r5]
 3544 00b8 5368     		ldr	r3, [r2, #4]
 3545 00ba 23F40043 		bic	r3, r3, #32768
 3546 00be 5360     		str	r3, [r2, #4]
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3547              		.loc 1 2134 0
 3548 00c0 0023     		movs	r3, #0
 3549 00c2 85F84030 		strb	r3, [r5, #64]
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3550              		.loc 1 2140 0
 3551 00c6 4FF40041 		mov	r1, #32768
 3552 00ca 2846     		mov	r0, r5
 3553              	.LVL276:
 3554 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
 3555              	.LVL277:
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3556              		.loc 1 2143 0
ARM GAS  /tmp/ccbPnc67.s 			page 189


 3557 00d0 2A68     		ldr	r2, [r5]
 3558 00d2 1368     		ldr	r3, [r2]
 3559 00d4 43F48043 		orr	r3, r3, #16384
 3560 00d8 1360     		str	r3, [r2]
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3561              		.loc 1 2160 0
 3562 00da 00E0     		b	.L292
 3563              	.LVL278:
 3564              	.L297:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3565              		.loc 1 2164 0
 3566 00dc 0224     		movs	r4, #2
 3567              	.LVL279:
 3568              	.L292:
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3569              		.loc 1 2166 0
 3570 00de 2046     		mov	r0, r4
 3571 00e0 38BD     		pop	{r3, r4, r5, pc}
 3572              	.LVL280:
 3573              	.L298:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3574              		.loc 1 2085 0
 3575 00e2 0224     		movs	r4, #2
 3576 00e4 FBE7     		b	.L292
 3577              	.L304:
 3578 00e6 00BF     		.align	2
 3579              	.L303:
 3580 00e8 0000FFFF 		.word	-65536
 3581 00ec 00000000 		.word	I2C_Slave_ISR_DMA
 3582 00f0 00000000 		.word	I2C_DMASlaveTransmitCplt
 3583 00f4 00000000 		.word	I2C_DMAError
 3584              		.cfi_endproc
 3585              	.LFE155:
 3587              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3588              		.align	1
 3589              		.global	HAL_I2C_Slave_Receive_DMA
 3590              		.syntax unified
 3591              		.thumb
 3592              		.thumb_func
 3593              		.fpu fpv5-d16
 3595              	HAL_I2C_Slave_Receive_DMA:
 3596              	.LFB156:
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3597              		.loc 1 2177 0
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 0
 3600              		@ frame_needed = 0, uses_anonymous_args = 0
 3601              	.LVL281:
 3602 0000 38B5     		push	{r3, r4, r5, lr}
 3603              	.LCFI58:
 3604              		.cfi_def_cfa_offset 16
 3605              		.cfi_offset 3, -16
 3606              		.cfi_offset 4, -12
 3607              		.cfi_offset 5, -8
 3608              		.cfi_offset 14, -4
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3609              		.loc 1 2180 0
ARM GAS  /tmp/ccbPnc67.s 			page 190


 3610 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3611 0006 DBB2     		uxtb	r3, r3
 3612 0008 202B     		cmp	r3, #32
 3613 000a 68D1     		bne	.L311
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3614              		.loc 1 2182 0
 3615 000c B2FA82F3 		clz	r3, r2
 3616 0010 5B09     		lsrs	r3, r3, #5
 3617 0012 0029     		cmp	r1, #0
 3618 0014 08BF     		it	eq
 3619 0016 0123     		moveq	r3, #1
 3620 0018 002B     		cmp	r3, #0
 3621 001a 3AD1     		bne	.L315
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3622              		.loc 1 2188 0
 3623 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3624 0020 012B     		cmp	r3, #1
 3625 0022 5FD0     		beq	.L312
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3626              		.loc 1 2188 0 is_stmt 0 discriminator 2
 3627 0024 0123     		movs	r3, #1
 3628 0026 80F84030 		strb	r3, [r0, #64]
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3629              		.loc 1 2190 0 is_stmt 1 discriminator 2
 3630 002a 2223     		movs	r3, #34
 3631 002c 80F84130 		strb	r3, [r0, #65]
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3632              		.loc 1 2191 0 discriminator 2
 3633 0030 2023     		movs	r3, #32
 3634 0032 80F84230 		strb	r3, [r0, #66]
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3635              		.loc 1 2192 0 discriminator 2
 3636 0036 0023     		movs	r3, #0
 3637 0038 4364     		str	r3, [r0, #68]
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3638              		.loc 1 2195 0 discriminator 2
 3639 003a 4162     		str	r1, [r0, #36]
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3640              		.loc 1 2196 0 discriminator 2
 3641 003c 4285     		strh	r2, [r0, #42]	@ movhi
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3642              		.loc 1 2197 0 discriminator 2
 3643 003e 438D     		ldrh	r3, [r0, #42]
 3644 0040 0385     		strh	r3, [r0, #40]	@ movhi
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3645              		.loc 1 2198 0 discriminator 2
 3646 0042 294B     		ldr	r3, .L317
 3647 0044 C362     		str	r3, [r0, #44]
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3648              		.loc 1 2199 0 discriminator 2
 3649 0046 294B     		ldr	r3, .L317+4
 3650 0048 4363     		str	r3, [r0, #52]
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3651              		.loc 1 2201 0 discriminator 2
 3652 004a C36B     		ldr	r3, [r0, #60]
 3653 004c 33B3     		cbz	r3, .L308
 3654 004e 0A46     		mov	r2, r1
ARM GAS  /tmp/ccbPnc67.s 			page 191


 3655              	.LVL282:
 3656 0050 0546     		mov	r5, r0
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3657              		.loc 1 2204 0
 3658 0052 2749     		ldr	r1, .L317+8
 3659              	.LVL283:
 3660 0054 D963     		str	r1, [r3, #60]
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3661              		.loc 1 2207 0
 3662 0056 C36B     		ldr	r3, [r0, #60]
 3663 0058 2649     		ldr	r1, .L317+12
 3664 005a D964     		str	r1, [r3, #76]
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3665              		.loc 1 2210 0
 3666 005c C16B     		ldr	r1, [r0, #60]
 3667 005e 0023     		movs	r3, #0
 3668 0060 0B64     		str	r3, [r1, #64]
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3669              		.loc 1 2211 0
 3670 0062 C16B     		ldr	r1, [r0, #60]
 3671 0064 0B65     		str	r3, [r1, #80]
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3672              		.loc 1 2214 0
 3673 0066 0168     		ldr	r1, [r0]
 3674 0068 038D     		ldrh	r3, [r0, #40]
 3675 006a 2431     		adds	r1, r1, #36
 3676 006c C06B     		ldr	r0, [r0, #60]
 3677              	.LVL284:
 3678 006e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3679              	.LVL285:
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3680              		.loc 1 2231 0
 3681 0072 0446     		mov	r4, r0
 3682 0074 00B3     		cbz	r0, .L316
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3683              		.loc 1 2251 0
 3684 0076 2823     		movs	r3, #40
 3685 0078 85F84130 		strb	r3, [r5, #65]
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3686              		.loc 1 2252 0
 3687 007c 0022     		movs	r2, #0
 3688 007e 85F84220 		strb	r2, [r5, #66]
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3689              		.loc 1 2255 0
 3690 0082 6B6C     		ldr	r3, [r5, #68]
 3691 0084 43F01003 		orr	r3, r3, #16
 3692 0088 6B64     		str	r3, [r5, #68]
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3693              		.loc 1 2258 0
 3694 008a 85F84020 		strb	r2, [r5, #64]
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3695              		.loc 1 2260 0
 3696 008e 0124     		movs	r4, #1
 3697 0090 26E0     		b	.L306
 3698              	.LVL286:
 3699              	.L315:
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
ARM GAS  /tmp/ccbPnc67.s 			page 192


 3700              		.loc 1 2184 0
 3701 0092 4FF40073 		mov	r3, #512
 3702 0096 4364     		str	r3, [r0, #68]
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3703              		.loc 1 2185 0
 3704 0098 0124     		movs	r4, #1
 3705 009a 21E0     		b	.L306
 3706              	.L308:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3707              		.loc 1 2219 0
 3708 009c 2823     		movs	r3, #40
 3709 009e 80F84130 		strb	r3, [r0, #65]
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3710              		.loc 1 2220 0
 3711 00a2 0022     		movs	r2, #0
 3712              	.LVL287:
 3713 00a4 80F84220 		strb	r2, [r0, #66]
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3714              		.loc 1 2223 0
 3715 00a8 436C     		ldr	r3, [r0, #68]
 3716 00aa 43F08003 		orr	r3, r3, #128
 3717 00ae 4364     		str	r3, [r0, #68]
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3718              		.loc 1 2226 0
 3719 00b0 80F84020 		strb	r2, [r0, #64]
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3720              		.loc 1 2228 0
 3721 00b4 0124     		movs	r4, #1
 3722 00b6 13E0     		b	.L306
 3723              	.LVL288:
 3724              	.L316:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3725              		.loc 1 2234 0
 3726 00b8 2A68     		ldr	r2, [r5]
 3727 00ba 5368     		ldr	r3, [r2, #4]
 3728 00bc 23F40043 		bic	r3, r3, #32768
 3729 00c0 5360     		str	r3, [r2, #4]
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3730              		.loc 1 2237 0
 3731 00c2 0023     		movs	r3, #0
 3732 00c4 85F84030 		strb	r3, [r5, #64]
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3733              		.loc 1 2243 0
 3734 00c8 4FF40041 		mov	r1, #32768
 3735 00cc 2846     		mov	r0, r5
 3736              	.LVL289:
 3737 00ce FFF7FEFF 		bl	I2C_Enable_IRQ
 3738              	.LVL290:
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3739              		.loc 1 2246 0
 3740 00d2 2A68     		ldr	r2, [r5]
 3741 00d4 1368     		ldr	r3, [r2]
 3742 00d6 43F40043 		orr	r3, r3, #32768
 3743 00da 1360     		str	r3, [r2]
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3744              		.loc 1 2263 0
 3745 00dc 00E0     		b	.L306
ARM GAS  /tmp/ccbPnc67.s 			page 193


 3746              	.LVL291:
 3747              	.L311:
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3748              		.loc 1 2267 0
 3749 00de 0224     		movs	r4, #2
 3750              	.LVL292:
 3751              	.L306:
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 3752              		.loc 1 2269 0
 3753 00e0 2046     		mov	r0, r4
 3754 00e2 38BD     		pop	{r3, r4, r5, pc}
 3755              	.LVL293:
 3756              	.L312:
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3757              		.loc 1 2188 0
 3758 00e4 0224     		movs	r4, #2
 3759 00e6 FBE7     		b	.L306
 3760              	.L318:
 3761              		.align	2
 3762              	.L317:
 3763 00e8 0000FFFF 		.word	-65536
 3764 00ec 00000000 		.word	I2C_Slave_ISR_DMA
 3765 00f0 00000000 		.word	I2C_DMASlaveReceiveCplt
 3766 00f4 00000000 		.word	I2C_DMAError
 3767              		.cfi_endproc
 3768              	.LFE156:
 3770              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3771              		.align	1
 3772              		.global	HAL_I2C_Mem_Write
 3773              		.syntax unified
 3774              		.thumb
 3775              		.thumb_func
 3776              		.fpu fpv5-d16
 3778              	HAL_I2C_Mem_Write:
 3779              	.LFB157:
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 3780              		.loc 1 2284 0
 3781              		.cfi_startproc
 3782              		@ args = 12, pretend = 0, frame = 0
 3783              		@ frame_needed = 0, uses_anonymous_args = 0
 3784              	.LVL294:
 3785 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3786              	.LCFI59:
 3787              		.cfi_def_cfa_offset 32
 3788              		.cfi_offset 4, -32
 3789              		.cfi_offset 5, -28
 3790              		.cfi_offset 6, -24
 3791              		.cfi_offset 7, -20
 3792              		.cfi_offset 8, -16
 3793              		.cfi_offset 9, -12
 3794              		.cfi_offset 10, -8
 3795              		.cfi_offset 14, -4
 3796 0004 82B0     		sub	sp, sp, #8
 3797              	.LCFI60:
 3798              		.cfi_def_cfa_offset 40
 3799 0006 BDF82C60 		ldrh	r6, [sp, #44]
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 194


 3800              		.loc 1 2290 0
 3801 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 3802 000e EDB2     		uxtb	r5, r5
 3803 0010 202D     		cmp	r5, #32
 3804 0012 40F0BF80 		bne	.L328
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3805              		.loc 1 2292 0
 3806 0016 B6FA86F5 		clz	r5, r6
 3807 001a 6D09     		lsrs	r5, r5, #5
 3808 001c 0A9C     		ldr	r4, [sp, #40]
 3809 001e 002C     		cmp	r4, #0
 3810 0020 08BF     		it	eq
 3811 0022 0125     		moveq	r5, #1
 3812 0024 D5B9     		cbnz	r5, .L335
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3813              		.loc 1 2299 0
 3814 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3815 002a 012C     		cmp	r4, #1
 3816 002c 00F0B780 		beq	.L329
 3817 0030 9846     		mov	r8, r3
 3818 0032 9146     		mov	r9, r2
 3819 0034 0D46     		mov	r5, r1
 3820 0036 0446     		mov	r4, r0
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3821              		.loc 1 2299 0 is_stmt 0 discriminator 2
 3822 0038 4FF0010A 		mov	r10, #1
 3823 003c 80F840A0 		strb	r10, [r0, #64]
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3824              		.loc 1 2302 0 is_stmt 1 discriminator 2
 3825 0040 FFF7FEFF 		bl	HAL_GetTick
 3826              	.LVL295:
 3827 0044 0746     		mov	r7, r0
 3828              	.LVL296:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3829              		.loc 1 2304 0 discriminator 2
 3830 0046 0090     		str	r0, [sp]
 3831 0048 1923     		movs	r3, #25
 3832 004a 5246     		mov	r2, r10
 3833 004c 4FF40041 		mov	r1, #32768
 3834 0050 2046     		mov	r0, r4
 3835              	.LVL297:
 3836 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3837              	.LVL298:
 3838 0056 30B1     		cbz	r0, .L336
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3839              		.loc 1 2306 0
 3840 0058 0123     		movs	r3, #1
 3841 005a 9CE0     		b	.L320
 3842              	.LVL299:
 3843              	.L335:
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3844              		.loc 1 2294 0
 3845 005c 4FF40073 		mov	r3, #512
 3846              	.LVL300:
 3847 0060 4364     		str	r3, [r0, #68]
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3848              		.loc 1 2295 0
ARM GAS  /tmp/ccbPnc67.s 			page 195


 3849 0062 0123     		movs	r3, #1
 3850 0064 97E0     		b	.L320
 3851              	.LVL301:
 3852              	.L336:
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3853              		.loc 1 2309 0
 3854 0066 2123     		movs	r3, #33
 3855 0068 84F84130 		strb	r3, [r4, #65]
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3856              		.loc 1 2310 0
 3857 006c 4023     		movs	r3, #64
 3858 006e 84F84230 		strb	r3, [r4, #66]
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3859              		.loc 1 2311 0
 3860 0072 0023     		movs	r3, #0
 3861 0074 6364     		str	r3, [r4, #68]
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3862              		.loc 1 2314 0
 3863 0076 0A9A     		ldr	r2, [sp, #40]
 3864 0078 6262     		str	r2, [r4, #36]
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3865              		.loc 1 2315 0
 3866 007a 6685     		strh	r6, [r4, #42]	@ movhi
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3867              		.loc 1 2316 0
 3868 007c 6363     		str	r3, [r4, #52]
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3869              		.loc 1 2319 0
 3870 007e 0197     		str	r7, [sp, #4]
 3871 0080 0C9B     		ldr	r3, [sp, #48]
 3872 0082 0093     		str	r3, [sp]
 3873 0084 4346     		mov	r3, r8
 3874 0086 4A46     		mov	r2, r9
 3875 0088 2946     		mov	r1, r5
 3876 008a 2046     		mov	r0, r4
 3877 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3878              	.LVL302:
 3879 0090 70B9     		cbnz	r0, .L337
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3880              		.loc 1 2327 0
 3881 0092 638D     		ldrh	r3, [r4, #42]
 3882 0094 9BB2     		uxth	r3, r3
 3883 0096 FF2B     		cmp	r3, #255
 3884 0098 0FD9     		bls	.L323
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3885              		.loc 1 2329 0
 3886 009a FF22     		movs	r2, #255
 3887 009c 2285     		strh	r2, [r4, #40]	@ movhi
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3888              		.loc 1 2330 0
 3889 009e 0023     		movs	r3, #0
 3890 00a0 0093     		str	r3, [sp]
 3891 00a2 4FF08073 		mov	r3, #16777216
 3892 00a6 2946     		mov	r1, r5
 3893 00a8 2046     		mov	r0, r4
 3894 00aa FFF7FEFF 		bl	I2C_TransferConfig
 3895              	.LVL303:
ARM GAS  /tmp/ccbPnc67.s 			page 196


 3896 00ae 21E0     		b	.L327
 3897              	.L337:
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 3898              		.loc 1 2322 0
 3899 00b0 0023     		movs	r3, #0
 3900 00b2 84F84030 		strb	r3, [r4, #64]
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3901              		.loc 1 2323 0
 3902 00b6 5346     		mov	r3, r10
 3903 00b8 6DE0     		b	.L320
 3904              	.L323:
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3905              		.loc 1 2334 0
 3906 00ba 628D     		ldrh	r2, [r4, #42]
 3907 00bc 92B2     		uxth	r2, r2
 3908 00be 2285     		strh	r2, [r4, #40]	@ movhi
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3909              		.loc 1 2335 0
 3910 00c0 0023     		movs	r3, #0
 3911 00c2 0093     		str	r3, [sp]
 3912 00c4 4FF00073 		mov	r3, #33554432
 3913 00c8 D2B2     		uxtb	r2, r2
 3914 00ca 2946     		mov	r1, r5
 3915 00cc 2046     		mov	r0, r4
 3916 00ce FFF7FEFF 		bl	I2C_TransferConfig
 3917              	.LVL304:
 3918 00d2 0FE0     		b	.L327
 3919              	.L326:
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3920              		.loc 1 2370 0
 3921 00d4 628D     		ldrh	r2, [r4, #42]
 3922 00d6 92B2     		uxth	r2, r2
 3923 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 3924              		.loc 1 2371 0
 3925 00da 0023     		movs	r3, #0
 3926 00dc 0093     		str	r3, [sp]
 3927 00de 4FF00073 		mov	r3, #33554432
 3928 00e2 D2B2     		uxtb	r2, r2
 3929 00e4 2946     		mov	r1, r5
 3930 00e6 2046     		mov	r0, r4
 3931 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 3932              	.LVL305:
 3933              	.L325:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3934              		.loc 1 2376 0
 3935 00ec 638D     		ldrh	r3, [r4, #42]
 3936 00ee 9BB2     		uxth	r3, r3
 3937 00f0 002B     		cmp	r3, #0
 3938 00f2 32D0     		beq	.L338
 3939              	.L327:
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3940              		.loc 1 2341 0
 3941 00f4 3A46     		mov	r2, r7
 3942 00f6 0C99     		ldr	r1, [sp, #48]
 3943 00f8 2046     		mov	r0, r4
 3944 00fa FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
ARM GAS  /tmp/ccbPnc67.s 			page 197


 3945              	.LVL306:
 3946 00fe 0028     		cmp	r0, #0
 3947 0100 4FD1     		bne	.L331
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3948              		.loc 1 2347 0
 3949 0102 626A     		ldr	r2, [r4, #36]
 3950 0104 2368     		ldr	r3, [r4]
 3951 0106 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3952 0108 9A62     		str	r2, [r3, #40]
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3953              		.loc 1 2350 0
 3954 010a 636A     		ldr	r3, [r4, #36]
 3955 010c 0133     		adds	r3, r3, #1
 3956 010e 6362     		str	r3, [r4, #36]
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 3957              		.loc 1 2352 0
 3958 0110 638D     		ldrh	r3, [r4, #42]
 3959 0112 013B     		subs	r3, r3, #1
 3960 0114 9BB2     		uxth	r3, r3
 3961 0116 6385     		strh	r3, [r4, #42]	@ movhi
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3962              		.loc 1 2353 0
 3963 0118 238D     		ldrh	r3, [r4, #40]
 3964 011a 013B     		subs	r3, r3, #1
 3965 011c 9BB2     		uxth	r3, r3
 3966 011e 2385     		strh	r3, [r4, #40]	@ movhi
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3967              		.loc 1 2355 0
 3968 0120 628D     		ldrh	r2, [r4, #42]
 3969 0122 92B2     		uxth	r2, r2
 3970 0124 002A     		cmp	r2, #0
 3971 0126 E1D0     		beq	.L325
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3972              		.loc 1 2355 0 is_stmt 0 discriminator 1
 3973 0128 002B     		cmp	r3, #0
 3974 012a DFD1     		bne	.L325
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 3975              		.loc 1 2358 0 is_stmt 1
 3976 012c 0097     		str	r7, [sp]
 3977 012e 0C9B     		ldr	r3, [sp, #48]
 3978 0130 0022     		movs	r2, #0
 3979 0132 8021     		movs	r1, #128
 3980 0134 2046     		mov	r0, r4
 3981 0136 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3982              	.LVL307:
 3983 013a A0BB     		cbnz	r0, .L332
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 3984              		.loc 1 2363 0
 3985 013c 638D     		ldrh	r3, [r4, #42]
 3986 013e 9BB2     		uxth	r3, r3
 3987 0140 FF2B     		cmp	r3, #255
 3988 0142 C7D9     		bls	.L326
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3989              		.loc 1 2365 0
 3990 0144 FF22     		movs	r2, #255
 3991 0146 2285     		strh	r2, [r4, #40]	@ movhi
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
ARM GAS  /tmp/ccbPnc67.s 			page 198


 3992              		.loc 1 2366 0
 3993 0148 0023     		movs	r3, #0
 3994 014a 0093     		str	r3, [sp]
 3995 014c 4FF08073 		mov	r3, #16777216
 3996 0150 2946     		mov	r1, r5
 3997 0152 2046     		mov	r0, r4
 3998 0154 FFF7FEFF 		bl	I2C_TransferConfig
 3999              	.LVL308:
 4000 0158 C8E7     		b	.L325
 4001              	.L338:
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4002              		.loc 1 2380 0
 4003 015a 3A46     		mov	r2, r7
 4004 015c 0C99     		ldr	r1, [sp, #48]
 4005 015e 2046     		mov	r0, r4
 4006 0160 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4007              	.LVL309:
 4008 0164 0346     		mov	r3, r0
 4009 0166 00BB     		cbnz	r0, .L333
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4010              		.loc 1 2386 0
 4011 0168 2268     		ldr	r2, [r4]
 4012 016a 2021     		movs	r1, #32
 4013 016c D161     		str	r1, [r2, #28]
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4014              		.loc 1 2389 0
 4015 016e 2068     		ldr	r0, [r4]
 4016 0170 4268     		ldr	r2, [r0, #4]
 4017 0172 22F0FF72 		bic	r2, r2, #33423360
 4018 0176 22F48B32 		bic	r2, r2, #71168
 4019 017a 22F4FF72 		bic	r2, r2, #510
 4020 017e 22F00102 		bic	r2, r2, #1
 4021 0182 4260     		str	r2, [r0, #4]
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4022              		.loc 1 2391 0
 4023 0184 84F84110 		strb	r1, [r4, #65]
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4024              		.loc 1 2392 0
 4025 0188 0022     		movs	r2, #0
 4026 018a 84F84220 		strb	r2, [r4, #66]
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4027              		.loc 1 2395 0
 4028 018e 84F84020 		strb	r2, [r4, #64]
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4029              		.loc 1 2397 0
 4030 0192 00E0     		b	.L320
 4031              	.LVL310:
 4032              	.L328:
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4033              		.loc 1 2401 0
 4034 0194 0223     		movs	r3, #2
 4035              	.LVL311:
 4036              	.L320:
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4037              		.loc 1 2403 0
 4038 0196 1846     		mov	r0, r3
 4039 0198 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccbPnc67.s 			page 199


 4040              	.LCFI61:
 4041              		.cfi_remember_state
 4042              		.cfi_def_cfa_offset 32
 4043              		@ sp needed
 4044 019a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4045              	.LVL312:
 4046              	.L329:
 4047              	.LCFI62:
 4048              		.cfi_restore_state
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4049              		.loc 1 2299 0
 4050 019e 0223     		movs	r3, #2
 4051              	.LVL313:
 4052 01a0 F9E7     		b	.L320
 4053              	.LVL314:
 4054              	.L331:
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 4055              		.loc 1 2343 0
 4056 01a2 0123     		movs	r3, #1
 4057 01a4 F7E7     		b	.L320
 4058              	.L332:
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4059              		.loc 1 2360 0
 4060 01a6 0123     		movs	r3, #1
 4061 01a8 F5E7     		b	.L320
 4062              	.L333:
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4063              		.loc 1 2382 0
 4064 01aa 0123     		movs	r3, #1
 4065 01ac F3E7     		b	.L320
 4066              		.cfi_endproc
 4067              	.LFE157:
 4069              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4070              		.align	1
 4071              		.global	HAL_I2C_Mem_Read
 4072              		.syntax unified
 4073              		.thumb
 4074              		.thumb_func
 4075              		.fpu fpv5-d16
 4077              	HAL_I2C_Mem_Read:
 4078              	.LFB158:
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4079              		.loc 1 2419 0
 4080              		.cfi_startproc
 4081              		@ args = 12, pretend = 0, frame = 0
 4082              		@ frame_needed = 0, uses_anonymous_args = 0
 4083              	.LVL315:
 4084 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4085              	.LCFI63:
 4086              		.cfi_def_cfa_offset 32
 4087              		.cfi_offset 4, -32
 4088              		.cfi_offset 5, -28
 4089              		.cfi_offset 6, -24
 4090              		.cfi_offset 7, -20
 4091              		.cfi_offset 8, -16
 4092              		.cfi_offset 9, -12
 4093              		.cfi_offset 10, -8
ARM GAS  /tmp/ccbPnc67.s 			page 200


 4094              		.cfi_offset 14, -4
 4095 0004 82B0     		sub	sp, sp, #8
 4096              	.LCFI64:
 4097              		.cfi_def_cfa_offset 40
 4098 0006 BDF82C60 		ldrh	r6, [sp, #44]
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4099              		.loc 1 2425 0
 4100 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 4101 000e EDB2     		uxtb	r5, r5
 4102 0010 202D     		cmp	r5, #32
 4103 0012 40F0C180 		bne	.L348
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4104              		.loc 1 2427 0
 4105 0016 B6FA86F5 		clz	r5, r6
 4106 001a 6D09     		lsrs	r5, r5, #5
 4107 001c 0A9C     		ldr	r4, [sp, #40]
 4108 001e 002C     		cmp	r4, #0
 4109 0020 08BF     		it	eq
 4110 0022 0125     		moveq	r5, #1
 4111 0024 D5B9     		cbnz	r5, .L355
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4112              		.loc 1 2434 0
 4113 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4114 002a 012C     		cmp	r4, #1
 4115 002c 00F0B980 		beq	.L349
 4116 0030 9846     		mov	r8, r3
 4117 0032 9146     		mov	r9, r2
 4118 0034 0D46     		mov	r5, r1
 4119 0036 0446     		mov	r4, r0
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4120              		.loc 1 2434 0 is_stmt 0 discriminator 2
 4121 0038 4FF0010A 		mov	r10, #1
 4122 003c 80F840A0 		strb	r10, [r0, #64]
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4123              		.loc 1 2437 0 is_stmt 1 discriminator 2
 4124 0040 FFF7FEFF 		bl	HAL_GetTick
 4125              	.LVL316:
 4126 0044 0746     		mov	r7, r0
 4127              	.LVL317:
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4128              		.loc 1 2439 0 discriminator 2
 4129 0046 0090     		str	r0, [sp]
 4130 0048 1923     		movs	r3, #25
 4131 004a 5246     		mov	r2, r10
 4132 004c 4FF40041 		mov	r1, #32768
 4133 0050 2046     		mov	r0, r4
 4134              	.LVL318:
 4135 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4136              	.LVL319:
 4137 0056 30B1     		cbz	r0, .L356
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4138              		.loc 1 2441 0
 4139 0058 0123     		movs	r3, #1
 4140 005a 9EE0     		b	.L340
 4141              	.LVL320:
 4142              	.L355:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
ARM GAS  /tmp/ccbPnc67.s 			page 201


 4143              		.loc 1 2429 0
 4144 005c 4FF40073 		mov	r3, #512
 4145              	.LVL321:
 4146 0060 4364     		str	r3, [r0, #68]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4147              		.loc 1 2430 0
 4148 0062 0123     		movs	r3, #1
 4149 0064 99E0     		b	.L340
 4150              	.LVL322:
 4151              	.L356:
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4152              		.loc 1 2444 0
 4153 0066 2223     		movs	r3, #34
 4154 0068 84F84130 		strb	r3, [r4, #65]
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4155              		.loc 1 2445 0
 4156 006c 4023     		movs	r3, #64
 4157 006e 84F84230 		strb	r3, [r4, #66]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4158              		.loc 1 2446 0
 4159 0072 0023     		movs	r3, #0
 4160 0074 6364     		str	r3, [r4, #68]
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4161              		.loc 1 2449 0
 4162 0076 0A9A     		ldr	r2, [sp, #40]
 4163 0078 6262     		str	r2, [r4, #36]
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4164              		.loc 1 2450 0
 4165 007a 6685     		strh	r6, [r4, #42]	@ movhi
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4166              		.loc 1 2451 0
 4167 007c 6363     		str	r3, [r4, #52]
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4168              		.loc 1 2454 0
 4169 007e 0197     		str	r7, [sp, #4]
 4170 0080 0C9B     		ldr	r3, [sp, #48]
 4171 0082 0093     		str	r3, [sp]
 4172 0084 4346     		mov	r3, r8
 4173 0086 4A46     		mov	r2, r9
 4174 0088 2946     		mov	r1, r5
 4175 008a 2046     		mov	r0, r4
 4176 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 4177              	.LVL323:
 4178 0090 70B9     		cbnz	r0, .L357
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4179              		.loc 1 2463 0
 4180 0092 638D     		ldrh	r3, [r4, #42]
 4181 0094 9BB2     		uxth	r3, r3
 4182 0096 FF2B     		cmp	r3, #255
 4183 0098 0FD9     		bls	.L343
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4184              		.loc 1 2465 0
 4185 009a FF22     		movs	r2, #255
 4186 009c 2285     		strh	r2, [r4, #40]	@ movhi
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4187              		.loc 1 2466 0
 4188 009e 454B     		ldr	r3, .L359
ARM GAS  /tmp/ccbPnc67.s 			page 202


 4189 00a0 0093     		str	r3, [sp]
 4190 00a2 4FF08073 		mov	r3, #16777216
 4191 00a6 2946     		mov	r1, r5
 4192 00a8 2046     		mov	r0, r4
 4193 00aa FFF7FEFF 		bl	I2C_TransferConfig
 4194              	.LVL324:
 4195 00ae 21E0     		b	.L347
 4196              	.L357:
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4197              		.loc 1 2457 0
 4198 00b0 0023     		movs	r3, #0
 4199 00b2 84F84030 		strb	r3, [r4, #64]
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4200              		.loc 1 2458 0
 4201 00b6 5346     		mov	r3, r10
 4202 00b8 6FE0     		b	.L340
 4203              	.L343:
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4204              		.loc 1 2470 0
 4205 00ba 628D     		ldrh	r2, [r4, #42]
 4206 00bc 92B2     		uxth	r2, r2
 4207 00be 2285     		strh	r2, [r4, #40]	@ movhi
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4208              		.loc 1 2471 0
 4209 00c0 3C4B     		ldr	r3, .L359
 4210 00c2 0093     		str	r3, [sp]
 4211 00c4 4FF00073 		mov	r3, #33554432
 4212 00c8 D2B2     		uxtb	r2, r2
 4213 00ca 2946     		mov	r1, r5
 4214 00cc 2046     		mov	r0, r4
 4215 00ce FFF7FEFF 		bl	I2C_TransferConfig
 4216              	.LVL325:
 4217 00d2 0FE0     		b	.L347
 4218              	.L346:
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4219              		.loc 1 2506 0
 4220 00d4 628D     		ldrh	r2, [r4, #42]
 4221 00d6 92B2     		uxth	r2, r2
 4222 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4223              		.loc 1 2507 0
 4224 00da 0023     		movs	r3, #0
 4225 00dc 0093     		str	r3, [sp]
 4226 00de 4FF00073 		mov	r3, #33554432
 4227 00e2 D2B2     		uxtb	r2, r2
 4228 00e4 2946     		mov	r1, r5
 4229 00e6 2046     		mov	r0, r4
 4230 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 4231              	.LVL326:
 4232              	.L345:
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4233              		.loc 1 2511 0
 4234 00ec 638D     		ldrh	r3, [r4, #42]
 4235 00ee 9BB2     		uxth	r3, r3
 4236 00f0 002B     		cmp	r3, #0
 4237 00f2 34D0     		beq	.L358
 4238              	.L347:
ARM GAS  /tmp/ccbPnc67.s 			page 203


2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4239              		.loc 1 2477 0
 4240 00f4 0097     		str	r7, [sp]
 4241 00f6 0C9B     		ldr	r3, [sp, #48]
 4242 00f8 0022     		movs	r2, #0
 4243 00fa 0421     		movs	r1, #4
 4244 00fc 2046     		mov	r0, r4
 4245 00fe FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4246              	.LVL327:
 4247 0102 0028     		cmp	r0, #0
 4248 0104 4FD1     		bne	.L351
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4249              		.loc 1 2483 0
 4250 0106 2368     		ldr	r3, [r4]
 4251 0108 5A6A     		ldr	r2, [r3, #36]
 4252 010a 636A     		ldr	r3, [r4, #36]
 4253 010c 1A70     		strb	r2, [r3]
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4254              		.loc 1 2486 0
 4255 010e 636A     		ldr	r3, [r4, #36]
 4256 0110 0133     		adds	r3, r3, #1
 4257 0112 6362     		str	r3, [r4, #36]
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 4258              		.loc 1 2488 0
 4259 0114 238D     		ldrh	r3, [r4, #40]
 4260 0116 013B     		subs	r3, r3, #1
 4261 0118 9BB2     		uxth	r3, r3
 4262 011a 2385     		strh	r3, [r4, #40]	@ movhi
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4263              		.loc 1 2489 0
 4264 011c 628D     		ldrh	r2, [r4, #42]
 4265 011e 013A     		subs	r2, r2, #1
 4266 0120 92B2     		uxth	r2, r2
 4267 0122 6285     		strh	r2, [r4, #42]	@ movhi
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4268              		.loc 1 2491 0
 4269 0124 628D     		ldrh	r2, [r4, #42]
 4270 0126 92B2     		uxth	r2, r2
 4271 0128 002A     		cmp	r2, #0
 4272 012a DFD0     		beq	.L345
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4273              		.loc 1 2491 0 is_stmt 0 discriminator 1
 4274 012c 002B     		cmp	r3, #0
 4275 012e DDD1     		bne	.L345
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 4276              		.loc 1 2494 0 is_stmt 1
 4277 0130 0097     		str	r7, [sp]
 4278 0132 0C9B     		ldr	r3, [sp, #48]
 4279 0134 0022     		movs	r2, #0
 4280 0136 8021     		movs	r1, #128
 4281 0138 2046     		mov	r0, r4
 4282 013a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4283              	.LVL328:
 4284 013e A0BB     		cbnz	r0, .L352
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 4285              		.loc 1 2499 0
 4286 0140 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/ccbPnc67.s 			page 204


 4287 0142 9BB2     		uxth	r3, r3
 4288 0144 FF2B     		cmp	r3, #255
 4289 0146 C5D9     		bls	.L346
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4290              		.loc 1 2501 0
 4291 0148 FF22     		movs	r2, #255
 4292 014a 2285     		strh	r2, [r4, #40]	@ movhi
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4293              		.loc 1 2502 0
 4294 014c 0023     		movs	r3, #0
 4295 014e 0093     		str	r3, [sp]
 4296 0150 4FF08073 		mov	r3, #16777216
 4297 0154 2946     		mov	r1, r5
 4298 0156 2046     		mov	r0, r4
 4299 0158 FFF7FEFF 		bl	I2C_TransferConfig
 4300              	.LVL329:
 4301 015c C6E7     		b	.L345
 4302              	.L358:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4303              		.loc 1 2515 0
 4304 015e 3A46     		mov	r2, r7
 4305 0160 0C99     		ldr	r1, [sp, #48]
 4306 0162 2046     		mov	r0, r4
 4307 0164 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4308              	.LVL330:
 4309 0168 0346     		mov	r3, r0
 4310 016a 00BB     		cbnz	r0, .L353
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4311              		.loc 1 2521 0
 4312 016c 2268     		ldr	r2, [r4]
 4313 016e 2021     		movs	r1, #32
 4314 0170 D161     		str	r1, [r2, #28]
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4315              		.loc 1 2524 0
 4316 0172 2068     		ldr	r0, [r4]
 4317 0174 4268     		ldr	r2, [r0, #4]
 4318 0176 22F0FF72 		bic	r2, r2, #33423360
 4319 017a 22F48B32 		bic	r2, r2, #71168
 4320 017e 22F4FF72 		bic	r2, r2, #510
 4321 0182 22F00102 		bic	r2, r2, #1
 4322 0186 4260     		str	r2, [r0, #4]
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4323              		.loc 1 2526 0
 4324 0188 84F84110 		strb	r1, [r4, #65]
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4325              		.loc 1 2527 0
 4326 018c 0022     		movs	r2, #0
 4327 018e 84F84220 		strb	r2, [r4, #66]
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4328              		.loc 1 2530 0
 4329 0192 84F84020 		strb	r2, [r4, #64]
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4330              		.loc 1 2532 0
 4331 0196 00E0     		b	.L340
 4332              	.LVL331:
 4333              	.L348:
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccbPnc67.s 			page 205


 4334              		.loc 1 2536 0
 4335 0198 0223     		movs	r3, #2
 4336              	.LVL332:
 4337              	.L340:
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 4338              		.loc 1 2538 0
 4339 019a 1846     		mov	r0, r3
 4340 019c 02B0     		add	sp, sp, #8
 4341              	.LCFI65:
 4342              		.cfi_remember_state
 4343              		.cfi_def_cfa_offset 32
 4344              		@ sp needed
 4345 019e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4346              	.LVL333:
 4347              	.L349:
 4348              	.LCFI66:
 4349              		.cfi_restore_state
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4350              		.loc 1 2434 0
 4351 01a2 0223     		movs	r3, #2
 4352              	.LVL334:
 4353 01a4 F9E7     		b	.L340
 4354              	.LVL335:
 4355              	.L351:
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 4356              		.loc 1 2479 0
 4357 01a6 0123     		movs	r3, #1
 4358 01a8 F7E7     		b	.L340
 4359              	.L352:
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4360              		.loc 1 2496 0
 4361 01aa 0123     		movs	r3, #1
 4362 01ac F5E7     		b	.L340
 4363              	.L353:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4364              		.loc 1 2517 0
 4365 01ae 0123     		movs	r3, #1
 4366 01b0 F3E7     		b	.L340
 4367              	.L360:
 4368 01b2 00BF     		.align	2
 4369              	.L359:
 4370 01b4 00240080 		.word	-2147474432
 4371              		.cfi_endproc
 4372              	.LFE158:
 4374              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4375              		.align	1
 4376              		.global	HAL_I2C_Mem_Write_IT
 4377              		.syntax unified
 4378              		.thumb
 4379              		.thumb_func
 4380              		.fpu fpv5-d16
 4382              	HAL_I2C_Mem_Write_IT:
 4383              	.LFB159:
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4384              		.loc 1 2552 0
 4385              		.cfi_startproc
 4386              		@ args = 8, pretend = 0, frame = 0
ARM GAS  /tmp/ccbPnc67.s 			page 206


 4387              		@ frame_needed = 0, uses_anonymous_args = 0
 4388              	.LVL336:
 4389 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4390              	.LCFI67:
 4391              		.cfi_def_cfa_offset 24
 4392              		.cfi_offset 4, -24
 4393              		.cfi_offset 5, -20
 4394              		.cfi_offset 6, -16
 4395              		.cfi_offset 7, -12
 4396              		.cfi_offset 8, -8
 4397              		.cfi_offset 14, -4
 4398 0004 82B0     		sub	sp, sp, #8
 4399              	.LCFI68:
 4400              		.cfi_def_cfa_offset 32
 4401 0006 BDF82460 		ldrh	r6, [sp, #36]
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4402              		.loc 1 2559 0
 4403 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4404 000e E4B2     		uxtb	r4, r4
 4405 0010 202C     		cmp	r4, #32
 4406 0012 5BD1     		bne	.L367
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4407              		.loc 1 2561 0
 4408 0014 B6FA86F4 		clz	r4, r6
 4409 0018 6409     		lsrs	r4, r4, #5
 4410 001a 089D     		ldr	r5, [sp, #32]
 4411 001c 002D     		cmp	r5, #0
 4412 001e 08BF     		it	eq
 4413 0020 0124     		moveq	r4, #1
 4414 0022 002C     		cmp	r4, #0
 4415 0024 38D1     		bne	.L371
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4416              		.loc 1 2567 0
 4417 0026 0468     		ldr	r4, [r0]
 4418 0028 A469     		ldr	r4, [r4, #24]
 4419 002a 14F4004F 		tst	r4, #32768
 4420 002e 52D1     		bne	.L368
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4421              		.loc 1 2573 0
 4422 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4423 0034 012C     		cmp	r4, #1
 4424 0036 50D0     		beq	.L369
 4425 0038 1F46     		mov	r7, r3
 4426 003a 1446     		mov	r4, r2
 4427 003c 8846     		mov	r8, r1
 4428 003e 0546     		mov	r5, r0
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4429              		.loc 1 2573 0 is_stmt 0 discriminator 2
 4430 0040 0123     		movs	r3, #1
 4431              	.LVL337:
 4432 0042 80F84030 		strb	r3, [r0, #64]
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4433              		.loc 1 2576 0 is_stmt 1 discriminator 2
 4434 0046 FFF7FEFF 		bl	HAL_GetTick
 4435              	.LVL338:
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4436              		.loc 1 2578 0 discriminator 2
ARM GAS  /tmp/ccbPnc67.s 			page 207


 4437 004a 2123     		movs	r3, #33
 4438 004c 85F84130 		strb	r3, [r5, #65]
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4439              		.loc 1 2579 0 discriminator 2
 4440 0050 4023     		movs	r3, #64
 4441 0052 85F84230 		strb	r3, [r5, #66]
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4442              		.loc 1 2580 0 discriminator 2
 4443 0056 0023     		movs	r3, #0
 4444 0058 6B64     		str	r3, [r5, #68]
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4445              		.loc 1 2583 0 discriminator 2
 4446 005a 089B     		ldr	r3, [sp, #32]
 4447 005c 6B62     		str	r3, [r5, #36]
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4448              		.loc 1 2584 0 discriminator 2
 4449 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4450              		.loc 1 2585 0 discriminator 2
 4451 0060 1F4B     		ldr	r3, .L372
 4452 0062 EB62     		str	r3, [r5, #44]
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4453              		.loc 1 2586 0 discriminator 2
 4454 0064 1F4B     		ldr	r3, .L372+4
 4455 0066 6B63     		str	r3, [r5, #52]
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4456              		.loc 1 2588 0 discriminator 2
 4457 0068 6B8D     		ldrh	r3, [r5, #42]
 4458 006a 9BB2     		uxth	r3, r3
 4459 006c FF2B     		cmp	r3, #255
 4460 006e 18D9     		bls	.L364
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4461              		.loc 1 2590 0
 4462 0070 FF23     		movs	r3, #255
 4463 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4464              	.LVL339:
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4465              		.loc 1 2591 0
 4466 0074 4FF08076 		mov	r6, #16777216
 4467              	.LVL340:
 4468              	.L365:
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4469              		.loc 1 2600 0
 4470 0078 0190     		str	r0, [sp, #4]
 4471 007a 1923     		movs	r3, #25
 4472 007c 0093     		str	r3, [sp]
 4473 007e 3B46     		mov	r3, r7
 4474 0080 2246     		mov	r2, r4
 4475 0082 4146     		mov	r1, r8
 4476 0084 2846     		mov	r0, r5
 4477              	.LVL341:
 4478 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4479              	.LVL342:
 4480 008a 0446     		mov	r4, r0
 4481 008c 70B1     		cbz	r0, .L366
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4482              		.loc 1 2603 0
ARM GAS  /tmp/ccbPnc67.s 			page 208


 4483 008e 0023     		movs	r3, #0
 4484 0090 85F84030 		strb	r3, [r5, #64]
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4485              		.loc 1 2604 0
 4486 0094 0124     		movs	r4, #1
 4487 0096 1AE0     		b	.L362
 4488              	.LVL343:
 4489              	.L371:
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4490              		.loc 1 2563 0
 4491 0098 4FF40073 		mov	r3, #512
 4492              	.LVL344:
 4493 009c 4364     		str	r3, [r0, #68]
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4494              		.loc 1 2564 0
 4495 009e 0124     		movs	r4, #1
 4496 00a0 15E0     		b	.L362
 4497              	.LVL345:
 4498              	.L364:
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4499              		.loc 1 2595 0
 4500 00a2 6B8D     		ldrh	r3, [r5, #42]
 4501 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
 4502              	.LVL346:
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4503              		.loc 1 2596 0
 4504 00a6 4FF00076 		mov	r6, #33554432
 4505 00aa E5E7     		b	.L365
 4506              	.LVL347:
 4507              	.L366:
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4508              		.loc 1 2608 0
 4509 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4510 00b0 0027     		movs	r7, #0
 4511 00b2 0097     		str	r7, [sp]
 4512 00b4 3346     		mov	r3, r6
 4513 00b6 4146     		mov	r1, r8
 4514 00b8 2846     		mov	r0, r5
 4515 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4516              	.LVL348:
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4517              		.loc 1 2611 0
 4518 00be 85F84070 		strb	r7, [r5, #64]
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4519              		.loc 1 2620 0
 4520 00c2 0121     		movs	r1, #1
 4521 00c4 2846     		mov	r0, r5
 4522 00c6 FFF7FEFF 		bl	I2C_Enable_IRQ
 4523              	.LVL349:
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4524              		.loc 1 2622 0
 4525 00ca 00E0     		b	.L362
 4526              	.LVL350:
 4527              	.L367:
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4528              		.loc 1 2626 0
 4529 00cc 0224     		movs	r4, #2
ARM GAS  /tmp/ccbPnc67.s 			page 209


 4530              	.LVL351:
 4531              	.L362:
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4532              		.loc 1 2628 0
 4533 00ce 2046     		mov	r0, r4
 4534 00d0 02B0     		add	sp, sp, #8
 4535              	.LCFI69:
 4536              		.cfi_remember_state
 4537              		.cfi_def_cfa_offset 24
 4538              		@ sp needed
 4539 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4540              	.LVL352:
 4541              	.L368:
 4542              	.LCFI70:
 4543              		.cfi_restore_state
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4544              		.loc 1 2569 0
 4545 00d6 0224     		movs	r4, #2
 4546 00d8 F9E7     		b	.L362
 4547              	.L369:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4548              		.loc 1 2573 0
 4549 00da 0224     		movs	r4, #2
 4550 00dc F7E7     		b	.L362
 4551              	.L373:
 4552 00de 00BF     		.align	2
 4553              	.L372:
 4554 00e0 0000FFFF 		.word	-65536
 4555 00e4 00000000 		.word	I2C_Master_ISR_IT
 4556              		.cfi_endproc
 4557              	.LFE159:
 4559              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4560              		.align	1
 4561              		.global	HAL_I2C_Mem_Read_IT
 4562              		.syntax unified
 4563              		.thumb
 4564              		.thumb_func
 4565              		.fpu fpv5-d16
 4567              	HAL_I2C_Mem_Read_IT:
 4568              	.LFB160:
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4569              		.loc 1 2643 0
 4570              		.cfi_startproc
 4571              		@ args = 8, pretend = 0, frame = 0
 4572              		@ frame_needed = 0, uses_anonymous_args = 0
 4573              	.LVL353:
 4574 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4575              	.LCFI71:
 4576              		.cfi_def_cfa_offset 24
 4577              		.cfi_offset 4, -24
 4578              		.cfi_offset 5, -20
 4579              		.cfi_offset 6, -16
 4580              		.cfi_offset 7, -12
 4581              		.cfi_offset 8, -8
 4582              		.cfi_offset 14, -4
 4583 0004 82B0     		sub	sp, sp, #8
 4584              	.LCFI72:
ARM GAS  /tmp/ccbPnc67.s 			page 210


 4585              		.cfi_def_cfa_offset 32
 4586 0006 BDF82460 		ldrh	r6, [sp, #36]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4587              		.loc 1 2650 0
 4588 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4589 000e E4B2     		uxtb	r4, r4
 4590 0010 202C     		cmp	r4, #32
 4591 0012 5CD1     		bne	.L380
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4592              		.loc 1 2652 0
 4593 0014 B6FA86F4 		clz	r4, r6
 4594 0018 6409     		lsrs	r4, r4, #5
 4595 001a 089D     		ldr	r5, [sp, #32]
 4596 001c 002D     		cmp	r5, #0
 4597 001e 08BF     		it	eq
 4598 0020 0124     		moveq	r4, #1
 4599 0022 002C     		cmp	r4, #0
 4600 0024 38D1     		bne	.L384
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4601              		.loc 1 2658 0
 4602 0026 0468     		ldr	r4, [r0]
 4603 0028 A469     		ldr	r4, [r4, #24]
 4604 002a 14F4004F 		tst	r4, #32768
 4605 002e 53D1     		bne	.L381
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4606              		.loc 1 2664 0
 4607 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4608 0034 012C     		cmp	r4, #1
 4609 0036 51D0     		beq	.L382
 4610 0038 1F46     		mov	r7, r3
 4611 003a 1446     		mov	r4, r2
 4612 003c 8846     		mov	r8, r1
 4613 003e 0546     		mov	r5, r0
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4614              		.loc 1 2664 0 is_stmt 0 discriminator 2
 4615 0040 0123     		movs	r3, #1
 4616              	.LVL354:
 4617 0042 80F84030 		strb	r3, [r0, #64]
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4618              		.loc 1 2667 0 is_stmt 1 discriminator 2
 4619 0046 FFF7FEFF 		bl	HAL_GetTick
 4620              	.LVL355:
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4621              		.loc 1 2669 0 discriminator 2
 4622 004a 2223     		movs	r3, #34
 4623 004c 85F84130 		strb	r3, [r5, #65]
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4624              		.loc 1 2670 0 discriminator 2
 4625 0050 4023     		movs	r3, #64
 4626 0052 85F84230 		strb	r3, [r5, #66]
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4627              		.loc 1 2671 0 discriminator 2
 4628 0056 0023     		movs	r3, #0
 4629 0058 6B64     		str	r3, [r5, #68]
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4630              		.loc 1 2674 0 discriminator 2
 4631 005a 089B     		ldr	r3, [sp, #32]
ARM GAS  /tmp/ccbPnc67.s 			page 211


 4632 005c 6B62     		str	r3, [r5, #36]
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4633              		.loc 1 2675 0 discriminator 2
 4634 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4635              		.loc 1 2676 0 discriminator 2
 4636 0060 1F4B     		ldr	r3, .L385
 4637 0062 EB62     		str	r3, [r5, #44]
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4638              		.loc 1 2677 0 discriminator 2
 4639 0064 1F4B     		ldr	r3, .L385+4
 4640 0066 6B63     		str	r3, [r5, #52]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4641              		.loc 1 2679 0 discriminator 2
 4642 0068 6B8D     		ldrh	r3, [r5, #42]
 4643 006a 9BB2     		uxth	r3, r3
 4644 006c FF2B     		cmp	r3, #255
 4645 006e 18D9     		bls	.L377
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4646              		.loc 1 2681 0
 4647 0070 FF23     		movs	r3, #255
 4648 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4649              	.LVL356:
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4650              		.loc 1 2682 0
 4651 0074 4FF08076 		mov	r6, #16777216
 4652              	.LVL357:
 4653              	.L378:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4654              		.loc 1 2691 0
 4655 0078 0190     		str	r0, [sp, #4]
 4656 007a 1923     		movs	r3, #25
 4657 007c 0093     		str	r3, [sp]
 4658 007e 3B46     		mov	r3, r7
 4659 0080 2246     		mov	r2, r4
 4660 0082 4146     		mov	r1, r8
 4661 0084 2846     		mov	r0, r5
 4662              	.LVL358:
 4663 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4664              	.LVL359:
 4665 008a 0446     		mov	r4, r0
 4666 008c 70B1     		cbz	r0, .L379
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4667              		.loc 1 2694 0
 4668 008e 0023     		movs	r3, #0
 4669 0090 85F84030 		strb	r3, [r5, #64]
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4670              		.loc 1 2695 0
 4671 0094 0124     		movs	r4, #1
 4672 0096 1BE0     		b	.L375
 4673              	.LVL360:
 4674              	.L384:
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4675              		.loc 1 2654 0
 4676 0098 4FF40073 		mov	r3, #512
 4677              	.LVL361:
 4678 009c 4364     		str	r3, [r0, #68]
ARM GAS  /tmp/ccbPnc67.s 			page 212


2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4679              		.loc 1 2655 0
 4680 009e 0124     		movs	r4, #1
 4681 00a0 16E0     		b	.L375
 4682              	.LVL362:
 4683              	.L377:
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4684              		.loc 1 2686 0
 4685 00a2 6B8D     		ldrh	r3, [r5, #42]
 4686 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
 4687              	.LVL363:
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4688              		.loc 1 2687 0
 4689 00a6 4FF00076 		mov	r6, #33554432
 4690 00aa E5E7     		b	.L378
 4691              	.LVL364:
 4692              	.L379:
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4693              		.loc 1 2699 0
 4694 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4695 00b0 0D4B     		ldr	r3, .L385+8
 4696 00b2 0093     		str	r3, [sp]
 4697 00b4 3346     		mov	r3, r6
 4698 00b6 4146     		mov	r1, r8
 4699 00b8 2846     		mov	r0, r5
 4700 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4701              	.LVL365:
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4702              		.loc 1 2702 0
 4703 00be 0023     		movs	r3, #0
 4704 00c0 85F84030 		strb	r3, [r5, #64]
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4705              		.loc 1 2711 0
 4706 00c4 0221     		movs	r1, #2
 4707 00c6 2846     		mov	r0, r5
 4708 00c8 FFF7FEFF 		bl	I2C_Enable_IRQ
 4709              	.LVL366:
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4710              		.loc 1 2713 0
 4711 00cc 00E0     		b	.L375
 4712              	.LVL367:
 4713              	.L380:
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4714              		.loc 1 2717 0
 4715 00ce 0224     		movs	r4, #2
 4716              	.LVL368:
 4717              	.L375:
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 4718              		.loc 1 2719 0
 4719 00d0 2046     		mov	r0, r4
 4720 00d2 02B0     		add	sp, sp, #8
 4721              	.LCFI73:
 4722              		.cfi_remember_state
 4723              		.cfi_def_cfa_offset 24
 4724              		@ sp needed
 4725 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4726              	.LVL369:
ARM GAS  /tmp/ccbPnc67.s 			page 213


 4727              	.L381:
 4728              	.LCFI74:
 4729              		.cfi_restore_state
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4730              		.loc 1 2660 0
 4731 00d8 0224     		movs	r4, #2
 4732 00da F9E7     		b	.L375
 4733              	.L382:
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4734              		.loc 1 2664 0
 4735 00dc 0224     		movs	r4, #2
 4736 00de F7E7     		b	.L375
 4737              	.L386:
 4738              		.align	2
 4739              	.L385:
 4740 00e0 0000FFFF 		.word	-65536
 4741 00e4 00000000 		.word	I2C_Master_ISR_IT
 4742 00e8 00240080 		.word	-2147474432
 4743              		.cfi_endproc
 4744              	.LFE160:
 4746              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4747              		.align	1
 4748              		.global	HAL_I2C_Mem_Write_DMA
 4749              		.syntax unified
 4750              		.thumb
 4751              		.thumb_func
 4752              		.fpu fpv5-d16
 4754              	HAL_I2C_Mem_Write_DMA:
 4755              	.LFB161:
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4756              		.loc 1 2733 0
 4757              		.cfi_startproc
 4758              		@ args = 8, pretend = 0, frame = 0
 4759              		@ frame_needed = 0, uses_anonymous_args = 0
 4760              	.LVL370:
 4761 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4762              	.LCFI75:
 4763              		.cfi_def_cfa_offset 28
 4764              		.cfi_offset 4, -28
 4765              		.cfi_offset 5, -24
 4766              		.cfi_offset 6, -20
 4767              		.cfi_offset 7, -16
 4768              		.cfi_offset 8, -12
 4769              		.cfi_offset 9, -8
 4770              		.cfi_offset 14, -4
 4771 0004 83B0     		sub	sp, sp, #12
 4772              	.LCFI76:
 4773              		.cfi_def_cfa_offset 40
 4774 0006 BDF82C50 		ldrh	r5, [sp, #44]
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4775              		.loc 1 2741 0
 4776 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4777 000e E4B2     		uxtb	r4, r4
 4778 0010 202C     		cmp	r4, #32
 4779 0012 40F09A80 		bne	.L396
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4780              		.loc 1 2743 0
ARM GAS  /tmp/ccbPnc67.s 			page 214


 4781 0016 B5FA85F4 		clz	r4, r5
 4782 001a 6409     		lsrs	r4, r4, #5
 4783 001c 0A9E     		ldr	r6, [sp, #40]
 4784 001e 002E     		cmp	r6, #0
 4785 0020 08BF     		it	eq
 4786 0022 0124     		moveq	r4, #1
 4787 0024 002C     		cmp	r4, #0
 4788 0026 59D1     		bne	.L401
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4789              		.loc 1 2749 0
 4790 0028 0468     		ldr	r4, [r0]
 4791 002a A469     		ldr	r4, [r4, #24]
 4792 002c 14F4004F 		tst	r4, #32768
 4793 0030 40F09080 		bne	.L397
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4794              		.loc 1 2755 0
 4795 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4796 0038 012C     		cmp	r4, #1
 4797 003a 00F08D80 		beq	.L398
 4798 003e 1F46     		mov	r7, r3
 4799 0040 1646     		mov	r6, r2
 4800 0042 8846     		mov	r8, r1
 4801 0044 0446     		mov	r4, r0
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4802              		.loc 1 2755 0 is_stmt 0 discriminator 2
 4803 0046 0123     		movs	r3, #1
 4804              	.LVL371:
 4805 0048 80F84030 		strb	r3, [r0, #64]
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4806              		.loc 1 2758 0 is_stmt 1 discriminator 2
 4807 004c FFF7FEFF 		bl	HAL_GetTick
 4808              	.LVL372:
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4809              		.loc 1 2760 0 discriminator 2
 4810 0050 2123     		movs	r3, #33
 4811 0052 84F84130 		strb	r3, [r4, #65]
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4812              		.loc 1 2761 0 discriminator 2
 4813 0056 4023     		movs	r3, #64
 4814 0058 84F84230 		strb	r3, [r4, #66]
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4815              		.loc 1 2762 0 discriminator 2
 4816 005c 0023     		movs	r3, #0
 4817 005e 6364     		str	r3, [r4, #68]
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4818              		.loc 1 2765 0 discriminator 2
 4819 0060 0A9B     		ldr	r3, [sp, #40]
 4820 0062 6362     		str	r3, [r4, #36]
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4821              		.loc 1 2766 0 discriminator 2
 4822 0064 6585     		strh	r5, [r4, #42]	@ movhi
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4823              		.loc 1 2767 0 discriminator 2
 4824 0066 3D4B     		ldr	r3, .L404
 4825 0068 E362     		str	r3, [r4, #44]
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4826              		.loc 1 2768 0 discriminator 2
ARM GAS  /tmp/ccbPnc67.s 			page 215


 4827 006a 3D4B     		ldr	r3, .L404+4
 4828 006c 6363     		str	r3, [r4, #52]
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4829              		.loc 1 2770 0 discriminator 2
 4830 006e 638D     		ldrh	r3, [r4, #42]
 4831 0070 9BB2     		uxth	r3, r3
 4832 0072 FF2B     		cmp	r3, #255
 4833 0074 37D9     		bls	.L390
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4834              		.loc 1 2772 0
 4835 0076 FF23     		movs	r3, #255
 4836 0078 2385     		strh	r3, [r4, #40]	@ movhi
 4837              	.LVL373:
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4838              		.loc 1 2773 0
 4839 007a 4FF08079 		mov	r9, #16777216
 4840              	.LVL374:
 4841              	.L391:
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4842              		.loc 1 2782 0
 4843 007e 0190     		str	r0, [sp, #4]
 4844 0080 1923     		movs	r3, #25
 4845 0082 0093     		str	r3, [sp]
 4846 0084 3B46     		mov	r3, r7
 4847 0086 3246     		mov	r2, r6
 4848 0088 4146     		mov	r1, r8
 4849 008a 2046     		mov	r0, r4
 4850              	.LVL375:
 4851 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4852              	.LVL376:
 4853 0090 0028     		cmp	r0, #0
 4854 0092 2DD1     		bne	.L402
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4855              		.loc 1 2790 0
 4856 0094 A36B     		ldr	r3, [r4, #56]
 4857 0096 002B     		cmp	r3, #0
 4858 0098 2FD0     		beq	.L393
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4859              		.loc 1 2793 0
 4860 009a 324A     		ldr	r2, .L404+8
 4861 009c DA63     		str	r2, [r3, #60]
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4862              		.loc 1 2796 0
 4863 009e A36B     		ldr	r3, [r4, #56]
 4864 00a0 314A     		ldr	r2, .L404+12
 4865 00a2 DA64     		str	r2, [r3, #76]
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4866              		.loc 1 2799 0
 4867 00a4 A26B     		ldr	r2, [r4, #56]
 4868 00a6 0023     		movs	r3, #0
 4869 00a8 1364     		str	r3, [r2, #64]
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4870              		.loc 1 2800 0
 4871 00aa A26B     		ldr	r2, [r4, #56]
 4872 00ac 1365     		str	r3, [r2, #80]
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4873              		.loc 1 2803 0
ARM GAS  /tmp/ccbPnc67.s 			page 216


 4874 00ae 2268     		ldr	r2, [r4]
 4875 00b0 238D     		ldrh	r3, [r4, #40]
 4876 00b2 2832     		adds	r2, r2, #40
 4877 00b4 0A99     		ldr	r1, [sp, #40]
 4878 00b6 A06B     		ldr	r0, [r4, #56]
 4879 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4880              	.LVL377:
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4881              		.loc 1 2820 0
 4882 00bc 0546     		mov	r5, r0
 4883 00be 50B3     		cbz	r0, .L403
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4884              		.loc 1 2844 0
 4885 00c0 2023     		movs	r3, #32
 4886 00c2 84F84130 		strb	r3, [r4, #65]
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4887              		.loc 1 2845 0
 4888 00c6 0022     		movs	r2, #0
 4889 00c8 84F84220 		strb	r2, [r4, #66]
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4890              		.loc 1 2848 0
 4891 00cc 636C     		ldr	r3, [r4, #68]
 4892 00ce 43F01003 		orr	r3, r3, #16
 4893 00d2 6364     		str	r3, [r4, #68]
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4894              		.loc 1 2851 0
 4895 00d4 84F84020 		strb	r2, [r4, #64]
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4896              		.loc 1 2853 0
 4897 00d8 0125     		movs	r5, #1
 4898 00da 37E0     		b	.L388
 4899              	.LVL378:
 4900              	.L401:
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4901              		.loc 1 2745 0
 4902 00dc 4FF40073 		mov	r3, #512
 4903              	.LVL379:
 4904 00e0 4364     		str	r3, [r0, #68]
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4905              		.loc 1 2746 0
 4906 00e2 0125     		movs	r5, #1
 4907 00e4 32E0     		b	.L388
 4908              	.LVL380:
 4909              	.L390:
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4910              		.loc 1 2777 0
 4911 00e6 638D     		ldrh	r3, [r4, #42]
 4912 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 4913              	.LVL381:
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4914              		.loc 1 2778 0
 4915 00ea 4FF00079 		mov	r9, #33554432
 4916 00ee C6E7     		b	.L391
 4917              	.LVL382:
 4918              	.L402:
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4919              		.loc 1 2785 0
ARM GAS  /tmp/ccbPnc67.s 			page 217


 4920 00f0 0023     		movs	r3, #0
 4921 00f2 84F84030 		strb	r3, [r4, #64]
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4922              		.loc 1 2786 0
 4923 00f6 0125     		movs	r5, #1
 4924 00f8 28E0     		b	.L388
 4925              	.L393:
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4926              		.loc 1 2808 0
 4927 00fa 2023     		movs	r3, #32
 4928 00fc 84F84130 		strb	r3, [r4, #65]
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4929              		.loc 1 2809 0
 4930 0100 0022     		movs	r2, #0
 4931 0102 84F84220 		strb	r2, [r4, #66]
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4932              		.loc 1 2812 0
 4933 0106 636C     		ldr	r3, [r4, #68]
 4934 0108 43F08003 		orr	r3, r3, #128
 4935 010c 6364     		str	r3, [r4, #68]
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4936              		.loc 1 2815 0
 4937 010e 84F84020 		strb	r2, [r4, #64]
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4938              		.loc 1 2817 0
 4939 0112 0125     		movs	r5, #1
 4940 0114 1AE0     		b	.L388
 4941              	.LVL383:
 4942              	.L403:
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4943              		.loc 1 2824 0
 4944 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4945 011a 0026     		movs	r6, #0
 4946 011c 0096     		str	r6, [sp]
 4947 011e 4B46     		mov	r3, r9
 4948 0120 4146     		mov	r1, r8
 4949 0122 2046     		mov	r0, r4
 4950              	.LVL384:
 4951 0124 FFF7FEFF 		bl	I2C_TransferConfig
 4952              	.LVL385:
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4953              		.loc 1 2827 0
 4954 0128 638D     		ldrh	r3, [r4, #42]
 4955 012a 228D     		ldrh	r2, [r4, #40]
 4956 012c 9B1A     		subs	r3, r3, r2
 4957 012e 9BB2     		uxth	r3, r3
 4958 0130 6385     		strh	r3, [r4, #42]	@ movhi
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4959              		.loc 1 2830 0
 4960 0132 84F84060 		strb	r6, [r4, #64]
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4961              		.loc 1 2836 0
 4962 0136 1021     		movs	r1, #16
 4963 0138 2046     		mov	r0, r4
 4964 013a FFF7FEFF 		bl	I2C_Enable_IRQ
 4965              	.LVL386:
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 218


 4966              		.loc 1 2839 0
 4967 013e 2268     		ldr	r2, [r4]
 4968 0140 1368     		ldr	r3, [r2]
 4969 0142 43F48043 		orr	r3, r3, #16384
 4970 0146 1360     		str	r3, [r2]
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4971              		.loc 1 2856 0
 4972 0148 00E0     		b	.L388
 4973              	.LVL387:
 4974              	.L396:
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4975              		.loc 1 2860 0
 4976 014a 0225     		movs	r5, #2
 4977              	.LVL388:
 4978              	.L388:
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4979              		.loc 1 2862 0
 4980 014c 2846     		mov	r0, r5
 4981 014e 03B0     		add	sp, sp, #12
 4982              	.LCFI77:
 4983              		.cfi_remember_state
 4984              		.cfi_def_cfa_offset 28
 4985              		@ sp needed
 4986 0150 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4987              	.LVL389:
 4988              	.L397:
 4989              	.LCFI78:
 4990              		.cfi_restore_state
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4991              		.loc 1 2751 0
 4992 0154 0225     		movs	r5, #2
 4993 0156 F9E7     		b	.L388
 4994              	.L398:
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4995              		.loc 1 2755 0
 4996 0158 0225     		movs	r5, #2
 4997 015a F7E7     		b	.L388
 4998              	.L405:
 4999              		.align	2
 5000              	.L404:
 5001 015c 0000FFFF 		.word	-65536
 5002 0160 00000000 		.word	I2C_Master_ISR_DMA
 5003 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5004 0168 00000000 		.word	I2C_DMAError
 5005              		.cfi_endproc
 5006              	.LFE161:
 5008              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 5009              		.align	1
 5010              		.global	HAL_I2C_Mem_Read_DMA
 5011              		.syntax unified
 5012              		.thumb
 5013              		.thumb_func
 5014              		.fpu fpv5-d16
 5016              	HAL_I2C_Mem_Read_DMA:
 5017              	.LFB162:
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 5018              		.loc 1 2877 0
ARM GAS  /tmp/ccbPnc67.s 			page 219


 5019              		.cfi_startproc
 5020              		@ args = 8, pretend = 0, frame = 0
 5021              		@ frame_needed = 0, uses_anonymous_args = 0
 5022              	.LVL390:
 5023 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5024              	.LCFI79:
 5025              		.cfi_def_cfa_offset 28
 5026              		.cfi_offset 4, -28
 5027              		.cfi_offset 5, -24
 5028              		.cfi_offset 6, -20
 5029              		.cfi_offset 7, -16
 5030              		.cfi_offset 8, -12
 5031              		.cfi_offset 9, -8
 5032              		.cfi_offset 14, -4
 5033 0004 83B0     		sub	sp, sp, #12
 5034              	.LCFI80:
 5035              		.cfi_def_cfa_offset 40
 5036 0006 BDF82C50 		ldrh	r5, [sp, #44]
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5037              		.loc 1 2885 0
 5038 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5039 000e E4B2     		uxtb	r4, r4
 5040 0010 202C     		cmp	r4, #32
 5041 0012 40F09B80 		bne	.L415
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5042              		.loc 1 2887 0
 5043 0016 B5FA85F4 		clz	r4, r5
 5044 001a 6409     		lsrs	r4, r4, #5
 5045 001c 0A9E     		ldr	r6, [sp, #40]
 5046 001e 002E     		cmp	r6, #0
 5047 0020 08BF     		it	eq
 5048 0022 0124     		moveq	r4, #1
 5049 0024 002C     		cmp	r4, #0
 5050 0026 59D1     		bne	.L420
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5051              		.loc 1 2893 0
 5052 0028 0468     		ldr	r4, [r0]
 5053 002a A469     		ldr	r4, [r4, #24]
 5054 002c 14F4004F 		tst	r4, #32768
 5055 0030 40F09180 		bne	.L416
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5056              		.loc 1 2899 0
 5057 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5058 0038 012C     		cmp	r4, #1
 5059 003a 00F08E80 		beq	.L417
 5060 003e 1F46     		mov	r7, r3
 5061 0040 1646     		mov	r6, r2
 5062 0042 8846     		mov	r8, r1
 5063 0044 0446     		mov	r4, r0
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5064              		.loc 1 2899 0 is_stmt 0 discriminator 2
 5065 0046 0123     		movs	r3, #1
 5066              	.LVL391:
 5067 0048 80F84030 		strb	r3, [r0, #64]
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5068              		.loc 1 2902 0 is_stmt 1 discriminator 2
 5069 004c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccbPnc67.s 			page 220


 5070              	.LVL392:
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5071              		.loc 1 2904 0 discriminator 2
 5072 0050 2223     		movs	r3, #34
 5073 0052 84F84130 		strb	r3, [r4, #65]
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5074              		.loc 1 2905 0 discriminator 2
 5075 0056 4023     		movs	r3, #64
 5076 0058 84F84230 		strb	r3, [r4, #66]
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5077              		.loc 1 2906 0 discriminator 2
 5078 005c 0023     		movs	r3, #0
 5079 005e 6364     		str	r3, [r4, #68]
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5080              		.loc 1 2909 0 discriminator 2
 5081 0060 0A9B     		ldr	r3, [sp, #40]
 5082 0062 6362     		str	r3, [r4, #36]
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5083              		.loc 1 2910 0 discriminator 2
 5084 0064 6585     		strh	r5, [r4, #42]	@ movhi
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5085              		.loc 1 2911 0 discriminator 2
 5086 0066 3E4B     		ldr	r3, .L423
 5087 0068 E362     		str	r3, [r4, #44]
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5088              		.loc 1 2912 0 discriminator 2
 5089 006a 3E4B     		ldr	r3, .L423+4
 5090 006c 6363     		str	r3, [r4, #52]
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5091              		.loc 1 2914 0 discriminator 2
 5092 006e 638D     		ldrh	r3, [r4, #42]
 5093 0070 9BB2     		uxth	r3, r3
 5094 0072 FF2B     		cmp	r3, #255
 5095 0074 37D9     		bls	.L409
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5096              		.loc 1 2916 0
 5097 0076 FF23     		movs	r3, #255
 5098 0078 2385     		strh	r3, [r4, #40]	@ movhi
 5099              	.LVL393:
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5100              		.loc 1 2917 0
 5101 007a 4FF08079 		mov	r9, #16777216
 5102              	.LVL394:
 5103              	.L410:
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5104              		.loc 1 2926 0
 5105 007e 0190     		str	r0, [sp, #4]
 5106 0080 1923     		movs	r3, #25
 5107 0082 0093     		str	r3, [sp]
 5108 0084 3B46     		mov	r3, r7
 5109 0086 3246     		mov	r2, r6
 5110 0088 4146     		mov	r1, r8
 5111 008a 2046     		mov	r0, r4
 5112              	.LVL395:
 5113 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 5114              	.LVL396:
 5115 0090 0028     		cmp	r0, #0
ARM GAS  /tmp/ccbPnc67.s 			page 221


 5116 0092 2DD1     		bne	.L421
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5117              		.loc 1 2933 0
 5118 0094 E36B     		ldr	r3, [r4, #60]
 5119 0096 002B     		cmp	r3, #0
 5120 0098 2FD0     		beq	.L412
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5121              		.loc 1 2936 0
 5122 009a 334A     		ldr	r2, .L423+8
 5123 009c DA63     		str	r2, [r3, #60]
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5124              		.loc 1 2939 0
 5125 009e E36B     		ldr	r3, [r4, #60]
 5126 00a0 324A     		ldr	r2, .L423+12
 5127 00a2 DA64     		str	r2, [r3, #76]
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5128              		.loc 1 2942 0
 5129 00a4 E26B     		ldr	r2, [r4, #60]
 5130 00a6 0023     		movs	r3, #0
 5131 00a8 1364     		str	r3, [r2, #64]
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5132              		.loc 1 2943 0
 5133 00aa E26B     		ldr	r2, [r4, #60]
 5134 00ac 1365     		str	r3, [r2, #80]
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5135              		.loc 1 2946 0
 5136 00ae 2168     		ldr	r1, [r4]
 5137 00b0 238D     		ldrh	r3, [r4, #40]
 5138 00b2 0A9A     		ldr	r2, [sp, #40]
 5139 00b4 2431     		adds	r1, r1, #36
 5140 00b6 E06B     		ldr	r0, [r4, #60]
 5141 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5142              	.LVL397:
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5143              		.loc 1 2963 0
 5144 00bc 0546     		mov	r5, r0
 5145 00be 50B3     		cbz	r0, .L422
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5146              		.loc 1 2986 0
 5147 00c0 2023     		movs	r3, #32
 5148 00c2 84F84130 		strb	r3, [r4, #65]
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5149              		.loc 1 2987 0
 5150 00c6 0022     		movs	r2, #0
 5151 00c8 84F84220 		strb	r2, [r4, #66]
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5152              		.loc 1 2990 0
 5153 00cc 636C     		ldr	r3, [r4, #68]
 5154 00ce 43F01003 		orr	r3, r3, #16
 5155 00d2 6364     		str	r3, [r4, #68]
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5156              		.loc 1 2993 0
 5157 00d4 84F84020 		strb	r2, [r4, #64]
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5158              		.loc 1 2995 0
 5159 00d8 0125     		movs	r5, #1
 5160 00da 38E0     		b	.L407
ARM GAS  /tmp/ccbPnc67.s 			page 222


 5161              	.LVL398:
 5162              	.L420:
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 5163              		.loc 1 2889 0
 5164 00dc 4FF40073 		mov	r3, #512
 5165              	.LVL399:
 5166 00e0 4364     		str	r3, [r0, #68]
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5167              		.loc 1 2890 0
 5168 00e2 0125     		movs	r5, #1
 5169 00e4 33E0     		b	.L407
 5170              	.LVL400:
 5171              	.L409:
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5172              		.loc 1 2921 0
 5173 00e6 638D     		ldrh	r3, [r4, #42]
 5174 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 5175              	.LVL401:
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5176              		.loc 1 2922 0
 5177 00ea 4FF00079 		mov	r9, #33554432
 5178 00ee C6E7     		b	.L410
 5179              	.LVL402:
 5180              	.L421:
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 5181              		.loc 1 2929 0
 5182 00f0 0023     		movs	r3, #0
 5183 00f2 84F84030 		strb	r3, [r4, #64]
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5184              		.loc 1 2930 0
 5185 00f6 0125     		movs	r5, #1
 5186 00f8 29E0     		b	.L407
 5187              	.L412:
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5188              		.loc 1 2951 0
 5189 00fa 2023     		movs	r3, #32
 5190 00fc 84F84130 		strb	r3, [r4, #65]
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5191              		.loc 1 2952 0
 5192 0100 0022     		movs	r2, #0
 5193 0102 84F84220 		strb	r2, [r4, #66]
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5194              		.loc 1 2955 0
 5195 0106 636C     		ldr	r3, [r4, #68]
 5196 0108 43F08003 		orr	r3, r3, #128
 5197 010c 6364     		str	r3, [r4, #68]
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5198              		.loc 1 2958 0
 5199 010e 84F84020 		strb	r2, [r4, #64]
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5200              		.loc 1 2960 0
 5201 0112 0125     		movs	r5, #1
 5202 0114 1BE0     		b	.L407
 5203              	.LVL403:
 5204              	.L422:
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5205              		.loc 1 2966 0
ARM GAS  /tmp/ccbPnc67.s 			page 223


 5206 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5207 011a 154B     		ldr	r3, .L423+16
 5208 011c 0093     		str	r3, [sp]
 5209 011e 4B46     		mov	r3, r9
 5210 0120 4146     		mov	r1, r8
 5211 0122 2046     		mov	r0, r4
 5212              	.LVL404:
 5213 0124 FFF7FEFF 		bl	I2C_TransferConfig
 5214              	.LVL405:
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5215              		.loc 1 2969 0
 5216 0128 638D     		ldrh	r3, [r4, #42]
 5217 012a 228D     		ldrh	r2, [r4, #40]
 5218 012c 9B1A     		subs	r3, r3, r2
 5219 012e 9BB2     		uxth	r3, r3
 5220 0130 6385     		strh	r3, [r4, #42]	@ movhi
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5221              		.loc 1 2972 0
 5222 0132 0023     		movs	r3, #0
 5223 0134 84F84030 		strb	r3, [r4, #64]
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5224              		.loc 1 2978 0
 5225 0138 1021     		movs	r1, #16
 5226 013a 2046     		mov	r0, r4
 5227 013c FFF7FEFF 		bl	I2C_Enable_IRQ
 5228              	.LVL406:
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5229              		.loc 1 2981 0
 5230 0140 2268     		ldr	r2, [r4]
 5231 0142 1368     		ldr	r3, [r2]
 5232 0144 43F40043 		orr	r3, r3, #32768
 5233 0148 1360     		str	r3, [r2]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5234              		.loc 1 2998 0
 5235 014a 00E0     		b	.L407
 5236              	.LVL407:
 5237              	.L415:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5238              		.loc 1 3002 0
 5239 014c 0225     		movs	r5, #2
 5240              	.LVL408:
 5241              	.L407:
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5242              		.loc 1 3004 0
 5243 014e 2846     		mov	r0, r5
 5244 0150 03B0     		add	sp, sp, #12
 5245              	.LCFI81:
 5246              		.cfi_remember_state
 5247              		.cfi_def_cfa_offset 28
 5248              		@ sp needed
 5249 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5250              	.LVL409:
 5251              	.L416:
 5252              	.LCFI82:
 5253              		.cfi_restore_state
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5254              		.loc 1 2895 0
ARM GAS  /tmp/ccbPnc67.s 			page 224


 5255 0156 0225     		movs	r5, #2
 5256 0158 F9E7     		b	.L407
 5257              	.L417:
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5258              		.loc 1 2899 0
 5259 015a 0225     		movs	r5, #2
 5260 015c F7E7     		b	.L407
 5261              	.L424:
 5262 015e 00BF     		.align	2
 5263              	.L423:
 5264 0160 0000FFFF 		.word	-65536
 5265 0164 00000000 		.word	I2C_Master_ISR_DMA
 5266 0168 00000000 		.word	I2C_DMAMasterReceiveCplt
 5267 016c 00000000 		.word	I2C_DMAError
 5268 0170 00240080 		.word	-2147474432
 5269              		.cfi_endproc
 5270              	.LFE162:
 5272              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5273              		.align	1
 5274              		.global	HAL_I2C_IsDeviceReady
 5275              		.syntax unified
 5276              		.thumb
 5277              		.thumb_func
 5278              		.fpu fpv5-d16
 5280              	HAL_I2C_IsDeviceReady:
 5281              	.LFB163:
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 5282              		.loc 1 3018 0
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 8
 5285              		@ frame_needed = 0, uses_anonymous_args = 0
 5286              	.LVL410:
 5287 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5288              	.LCFI83:
 5289              		.cfi_def_cfa_offset 28
 5290              		.cfi_offset 4, -28
 5291              		.cfi_offset 5, -24
 5292              		.cfi_offset 6, -20
 5293              		.cfi_offset 7, -16
 5294              		.cfi_offset 8, -12
 5295              		.cfi_offset 9, -8
 5296              		.cfi_offset 14, -4
 5297 0004 85B0     		sub	sp, sp, #20
 5298              	.LCFI84:
 5299              		.cfi_def_cfa_offset 48
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5300              		.loc 1 3021 0
 5301 0006 0024     		movs	r4, #0
 5302 0008 0394     		str	r4, [sp, #12]
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5303              		.loc 1 3026 0
 5304 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5305 000e E4B2     		uxtb	r4, r4
 5306 0010 202C     		cmp	r4, #32
 5307 0012 40F09B80 		bne	.L436
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5308              		.loc 1 3028 0
ARM GAS  /tmp/ccbPnc67.s 			page 225


 5309 0016 0468     		ldr	r4, [r0]
 5310 0018 A469     		ldr	r4, [r4, #24]
 5311 001a 14F4004F 		tst	r4, #32768
 5312 001e 40F09A80 		bne	.L437
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5313              		.loc 1 3034 0
 5314 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5315 0026 012C     		cmp	r4, #1
 5316 0028 00F09780 		beq	.L438
 5317 002c 1E46     		mov	r6, r3
 5318 002e 9146     		mov	r9, r2
 5319 0030 8846     		mov	r8, r1
 5320 0032 0546     		mov	r5, r0
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5321              		.loc 1 3034 0 is_stmt 0 discriminator 2
 5322 0034 0123     		movs	r3, #1
 5323              	.LVL411:
 5324 0036 80F84030 		strb	r3, [r0, #64]
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5325              		.loc 1 3036 0 is_stmt 1 discriminator 2
 5326 003a 2423     		movs	r3, #36
 5327 003c 80F84130 		strb	r3, [r0, #65]
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5328              		.loc 1 3037 0 discriminator 2
 5329 0040 0023     		movs	r3, #0
 5330 0042 4364     		str	r3, [r0, #68]
 5331              	.LVL412:
 5332              	.L435:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5333              		.loc 1 3042 0
 5334 0044 EB68     		ldr	r3, [r5, #12]
 5335 0046 012B     		cmp	r3, #1
 5336 0048 10D0     		beq	.L443
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5337              		.loc 1 3042 0 is_stmt 0 discriminator 2
 5338 004a C8F30903 		ubfx	r3, r8, #0, #10
 5339 004e 43F42053 		orr	r3, r3, #10240
 5340              	.L428:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5341              		.loc 1 3042 0 discriminator 4
 5342 0052 2A68     		ldr	r2, [r5]
 5343 0054 5360     		str	r3, [r2, #4]
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5344              		.loc 1 3046 0 is_stmt 1 discriminator 4
 5345 0056 FFF7FEFF 		bl	HAL_GetTick
 5346              	.LVL413:
 5347 005a 0746     		mov	r7, r0
 5348              	.LVL414:
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5349              		.loc 1 3048 0 discriminator 4
 5350 005c 2A68     		ldr	r2, [r5]
 5351 005e 9369     		ldr	r3, [r2, #24]
 5352 0060 C3F34013 		ubfx	r3, r3, #5, #1
 5353              	.LVL415:
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5354              		.loc 1 3049 0 discriminator 4
 5355 0064 9469     		ldr	r4, [r2, #24]
ARM GAS  /tmp/ccbPnc67.s 			page 226


 5356 0066 C4F30014 		ubfx	r4, r4, #4, #1
 5357              	.LVL416:
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5358              		.loc 1 3051 0 discriminator 4
 5359 006a 0BE0     		b	.L429
 5360              	.LVL417:
 5361              	.L443:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5362              		.loc 1 3042 0 discriminator 1
 5363 006c C8F30902 		ubfx	r2, r8, #0, #10
 5364 0070 3E4B     		ldr	r3, .L447
 5365 0072 1343     		orrs	r3, r3, r2
 5366 0074 EDE7     		b	.L428
 5367              	.LVL418:
 5368              	.L430:
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5369              		.loc 1 3070 0
 5370 0076 2A68     		ldr	r2, [r5]
 5371 0078 9369     		ldr	r3, [r2, #24]
 5372 007a C3F34013 		ubfx	r3, r3, #5, #1
 5373              	.LVL419:
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5374              		.loc 1 3071 0
 5375 007e 9469     		ldr	r4, [r2, #24]
 5376              	.LVL420:
 5377 0080 C4F30014 		ubfx	r4, r4, #4, #1
 5378              	.LVL421:
 5379              	.L429:
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5380              		.loc 1 3051 0
 5381 0084 2343     		orrs	r3, r3, r4
 5382              	.LVL422:
 5383 0086 15D1     		bne	.L444
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5384              		.loc 1 3053 0
 5385 0088 B6F1FF3F 		cmp	r6, #-1
 5386 008c F3D0     		beq	.L430
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 5387              		.loc 1 3055 0
 5388 008e FFF7FEFF 		bl	HAL_GetTick
 5389              	.LVL423:
 5390 0092 C01B     		subs	r0, r0, r7
 5391 0094 B042     		cmp	r0, r6
 5392 0096 01D8     		bhi	.L431
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 5393              		.loc 1 3055 0 is_stmt 0 discriminator 1
 5394 0098 002E     		cmp	r6, #0
 5395 009a ECD1     		bne	.L430
 5396              	.L431:
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5397              		.loc 1 3058 0 is_stmt 1
 5398 009c 2023     		movs	r3, #32
 5399 009e 85F84130 		strb	r3, [r5, #65]
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5400              		.loc 1 3061 0
 5401 00a2 6B6C     		ldr	r3, [r5, #68]
 5402 00a4 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccbPnc67.s 			page 227


 5403 00a8 6B64     		str	r3, [r5, #68]
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5404              		.loc 1 3064 0
 5405 00aa 0023     		movs	r3, #0
 5406 00ac 85F84030 		strb	r3, [r5, #64]
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 5407              		.loc 1 3066 0
 5408 00b0 0123     		movs	r3, #1
 5409 00b2 4CE0     		b	.L426
 5410              	.L444:
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5411              		.loc 1 3075 0
 5412 00b4 2B68     		ldr	r3, [r5]
 5413 00b6 9B69     		ldr	r3, [r3, #24]
 5414 00b8 13F0100F 		tst	r3, #16
 5415 00bc 23D0     		beq	.L445
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5416              		.loc 1 3097 0
 5417 00be 0097     		str	r7, [sp]
 5418 00c0 3346     		mov	r3, r6
 5419 00c2 0022     		movs	r2, #0
 5420 00c4 2021     		movs	r1, #32
 5421 00c6 2846     		mov	r0, r5
 5422 00c8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5423              	.LVL424:
 5424 00cc 0028     		cmp	r0, #0
 5425 00ce 48D1     		bne	.L440
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5426              		.loc 1 3103 0
 5427 00d0 2B68     		ldr	r3, [r5]
 5428 00d2 1022     		movs	r2, #16
 5429 00d4 DA61     		str	r2, [r3, #28]
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5430              		.loc 1 3106 0
 5431 00d6 2B68     		ldr	r3, [r5]
 5432 00d8 2022     		movs	r2, #32
 5433 00da DA61     		str	r2, [r3, #28]
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5434              		.loc 1 3110 0
 5435 00dc 039B     		ldr	r3, [sp, #12]
 5436 00de 4B45     		cmp	r3, r9
 5437 00e0 23D0     		beq	.L446
 5438              	.L434:
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5439              		.loc 1 3126 0
 5440 00e2 039B     		ldr	r3, [sp, #12]
 5441 00e4 0133     		adds	r3, r3, #1
 5442 00e6 0393     		str	r3, [sp, #12]
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5443              		.loc 1 3128 0
 5444 00e8 039B     		ldr	r3, [sp, #12]
 5445 00ea 4B45     		cmp	r3, r9
 5446 00ec AAD3     		bcc	.L435
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5447              		.loc 1 3131 0
 5448 00ee 2023     		movs	r3, #32
 5449 00f0 85F84130 		strb	r3, [r5, #65]
ARM GAS  /tmp/ccbPnc67.s 			page 228


3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5450              		.loc 1 3134 0
 5451 00f4 6B6C     		ldr	r3, [r5, #68]
 5452 00f6 43F02003 		orr	r3, r3, #32
 5453 00fa 6B64     		str	r3, [r5, #68]
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5454              		.loc 1 3137 0
 5455 00fc 0023     		movs	r3, #0
 5456 00fe 85F84030 		strb	r3, [r5, #64]
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5457              		.loc 1 3139 0
 5458 0102 0123     		movs	r3, #1
 5459 0104 23E0     		b	.L426
 5460              	.L445:
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5461              		.loc 1 3078 0
 5462 0106 0097     		str	r7, [sp]
 5463 0108 3346     		mov	r3, r6
 5464 010a 0022     		movs	r2, #0
 5465 010c 2021     		movs	r1, #32
 5466 010e 2846     		mov	r0, r5
 5467 0110 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5468              	.LVL425:
 5469 0114 0346     		mov	r3, r0
 5470 0116 10BB     		cbnz	r0, .L439
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5471              		.loc 1 3084 0
 5472 0118 2968     		ldr	r1, [r5]
 5473 011a 2022     		movs	r2, #32
 5474 011c CA61     		str	r2, [r1, #28]
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5475              		.loc 1 3087 0
 5476 011e 85F84120 		strb	r2, [r5, #65]
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5477              		.loc 1 3090 0
 5478 0122 0022     		movs	r2, #0
 5479 0124 85F84020 		strb	r2, [r5, #64]
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5480              		.loc 1 3092 0
 5481 0128 11E0     		b	.L426
 5482              	.L446:
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5483              		.loc 1 3113 0
 5484 012a 2A68     		ldr	r2, [r5]
 5485 012c 5368     		ldr	r3, [r2, #4]
 5486 012e 43F48043 		orr	r3, r3, #16384
 5487 0132 5360     		str	r3, [r2, #4]
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5488              		.loc 1 3116 0
 5489 0134 0097     		str	r7, [sp]
 5490 0136 3346     		mov	r3, r6
 5491 0138 0022     		movs	r2, #0
 5492 013a 2021     		movs	r1, #32
 5493 013c 2846     		mov	r0, r5
 5494 013e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5495              	.LVL426:
 5496 0142 80B9     		cbnz	r0, .L441
ARM GAS  /tmp/ccbPnc67.s 			page 229


3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5497              		.loc 1 3122 0
 5498 0144 2B68     		ldr	r3, [r5]
 5499 0146 2022     		movs	r2, #32
 5500 0148 DA61     		str	r2, [r3, #28]
 5501 014a CAE7     		b	.L434
 5502              	.LVL427:
 5503              	.L436:
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5504              		.loc 1 3143 0
 5505 014c 0223     		movs	r3, #2
 5506              	.LVL428:
 5507              	.L426:
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5508              		.loc 1 3145 0
 5509 014e 1846     		mov	r0, r3
 5510 0150 05B0     		add	sp, sp, #20
 5511              	.LCFI85:
 5512              		.cfi_remember_state
 5513              		.cfi_def_cfa_offset 28
 5514              		@ sp needed
 5515 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5516              	.LVL429:
 5517              	.L437:
 5518              	.LCFI86:
 5519              		.cfi_restore_state
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5520              		.loc 1 3030 0
 5521 0156 0223     		movs	r3, #2
 5522              	.LVL430:
 5523 0158 F9E7     		b	.L426
 5524              	.LVL431:
 5525              	.L438:
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5526              		.loc 1 3034 0
 5527 015a 0223     		movs	r3, #2
 5528              	.LVL432:
 5529 015c F7E7     		b	.L426
 5530              	.LVL433:
 5531              	.L439:
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5532              		.loc 1 3080 0
 5533 015e 0123     		movs	r3, #1
 5534 0160 F5E7     		b	.L426
 5535              	.L440:
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5536              		.loc 1 3099 0
 5537 0162 0123     		movs	r3, #1
 5538 0164 F3E7     		b	.L426
 5539              	.L441:
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5540              		.loc 1 3118 0
 5541 0166 0123     		movs	r3, #1
 5542 0168 F1E7     		b	.L426
 5543              	.L448:
 5544 016a 00BF     		.align	2
 5545              	.L447:
ARM GAS  /tmp/ccbPnc67.s 			page 230


 5546 016c 00200002 		.word	33562624
 5547              		.cfi_endproc
 5548              	.LFE163:
 5550              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5551              		.align	1
 5552              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5553              		.syntax unified
 5554              		.thumb
 5555              		.thumb_func
 5556              		.fpu fpv5-d16
 5558              	HAL_I2C_Master_Seq_Transmit_IT:
 5559              	.LFB164:
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5560              		.loc 1 3160 0
 5561              		.cfi_startproc
 5562              		@ args = 4, pretend = 0, frame = 0
 5563              		@ frame_needed = 0, uses_anonymous_args = 0
 5564              	.LVL434:
 5565 0000 70B5     		push	{r4, r5, r6, lr}
 5566              	.LCFI87:
 5567              		.cfi_def_cfa_offset 16
 5568              		.cfi_offset 4, -16
 5569              		.cfi_offset 5, -12
 5570              		.cfi_offset 6, -8
 5571              		.cfi_offset 14, -4
 5572 0002 82B0     		sub	sp, sp, #8
 5573              	.LCFI88:
 5574              		.cfi_def_cfa_offset 24
 5575              	.LVL435:
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5576              		.loc 1 3167 0
 5577 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5578 0008 E4B2     		uxtb	r4, r4
 5579 000a 202C     		cmp	r4, #32
 5580 000c 49D1     		bne	.L455
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5581              		.loc 1 3170 0
 5582 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5583 0012 012C     		cmp	r4, #1
 5584 0014 48D0     		beq	.L456
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5585              		.loc 1 3170 0 is_stmt 0 discriminator 2
 5586 0016 0124     		movs	r4, #1
 5587 0018 80F84040 		strb	r4, [r0, #64]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5588              		.loc 1 3172 0 is_stmt 1 discriminator 2
 5589 001c 2124     		movs	r4, #33
 5590 001e 80F84140 		strb	r4, [r0, #65]
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5591              		.loc 1 3173 0 discriminator 2
 5592 0022 1024     		movs	r4, #16
 5593 0024 80F84240 		strb	r4, [r0, #66]
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5594              		.loc 1 3174 0 discriminator 2
 5595 0028 0024     		movs	r4, #0
 5596 002a 4464     		str	r4, [r0, #68]
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
ARM GAS  /tmp/ccbPnc67.s 			page 231


 5597              		.loc 1 3177 0 discriminator 2
 5598 002c 4262     		str	r2, [r0, #36]
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5599              		.loc 1 3178 0 discriminator 2
 5600 002e 4385     		strh	r3, [r0, #42]	@ movhi
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5601              		.loc 1 3179 0 discriminator 2
 5602 0030 069B     		ldr	r3, [sp, #24]
 5603              	.LVL436:
 5604 0032 C362     		str	r3, [r0, #44]
 5605              	.LVL437:
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5606              		.loc 1 3180 0 discriminator 2
 5607 0034 1D4B     		ldr	r3, .L460
 5608 0036 4363     		str	r3, [r0, #52]
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5609              		.loc 1 3183 0 discriminator 2
 5610 0038 438D     		ldrh	r3, [r0, #42]
 5611 003a 9BB2     		uxth	r3, r3
 5612 003c FF2B     		cmp	r3, #255
 5613 003e 28D9     		bls	.L451
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5614              		.loc 1 3185 0
 5615 0040 FF23     		movs	r3, #255
 5616 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5617              	.LVL438:
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5618              		.loc 1 3186 0
 5619 0044 4FF08076 		mov	r6, #16777216
 5620              	.LVL439:
 5621              	.L452:
 5622 0048 0D46     		mov	r5, r1
 5623 004a 0446     		mov	r4, r0
 5624              	.LVL440:
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5625              		.loc 1 3196 0
 5626 004c 036B     		ldr	r3, [r0, #48]
 5627 004e 112B     		cmp	r3, #17
 5628 0050 05D1     		bne	.L453
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5629              		.loc 1 3196 0 is_stmt 0 discriminator 1
 5630 0052 069B     		ldr	r3, [sp, #24]
 5631 0054 B3F52A4F 		cmp	r3, #43520
 5632 0058 18BF     		it	ne
 5633 005a AA2B     		cmpne	r3, #170
 5634 005c 1DD1     		bne	.L457
 5635              	.L453:
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5636              		.loc 1 3203 0 is_stmt 1
 5637 005e 2046     		mov	r0, r4
 5638              	.LVL441:
 5639 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5640              	.LVL442:
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5641              		.loc 1 3206 0
 5642 0064 638D     		ldrh	r3, [r4, #42]
 5643 0066 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccbPnc67.s 			page 232


 5644 0068 FF2B     		cmp	r3, #255
 5645 006a 18D8     		bhi	.L458
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5646              		.loc 1 3208 0
 5647 006c E66A     		ldr	r6, [r4, #44]
 5648              	.LVL443:
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5649              		.loc 1 3162 0
 5650 006e 104B     		ldr	r3, .L460+4
 5651              	.L454:
 5652              	.LVL444:
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5653              		.loc 1 3213 0
 5654 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5655 0074 0093     		str	r3, [sp]
 5656 0076 3346     		mov	r3, r6
 5657              	.LVL445:
 5658 0078 2946     		mov	r1, r5
 5659 007a 2046     		mov	r0, r4
 5660 007c FFF7FEFF 		bl	I2C_TransferConfig
 5661              	.LVL446:
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5662              		.loc 1 3216 0
 5663 0080 0025     		movs	r5, #0
 5664 0082 84F84050 		strb	r5, [r4, #64]
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5665              		.loc 1 3221 0
 5666 0086 0121     		movs	r1, #1
 5667 0088 2046     		mov	r0, r4
 5668 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 5669              	.LVL447:
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5670              		.loc 1 3223 0
 5671 008e 2846     		mov	r0, r5
 5672 0090 08E0     		b	.L450
 5673              	.LVL448:
 5674              	.L451:
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5675              		.loc 1 3190 0
 5676 0092 438D     		ldrh	r3, [r0, #42]
 5677 0094 0385     		strh	r3, [r0, #40]	@ movhi
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5678              		.loc 1 3191 0
 5679 0096 C66A     		ldr	r6, [r0, #44]
 5680              	.LVL449:
 5681 0098 D6E7     		b	.L452
 5682              	.L457:
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5683              		.loc 1 3198 0
 5684 009a 0023     		movs	r3, #0
 5685 009c E8E7     		b	.L454
 5686              	.LVL450:
 5687              	.L458:
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5688              		.loc 1 3162 0
 5689 009e 044B     		ldr	r3, .L460+4
 5690 00a0 E6E7     		b	.L454
ARM GAS  /tmp/ccbPnc67.s 			page 233


 5691              	.LVL451:
 5692              	.L455:
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5693              		.loc 1 3227 0
 5694 00a2 0220     		movs	r0, #2
 5695              	.LVL452:
 5696              	.L450:
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5697              		.loc 1 3229 0
 5698 00a4 02B0     		add	sp, sp, #8
 5699              	.LCFI89:
 5700              		.cfi_remember_state
 5701              		.cfi_def_cfa_offset 16
 5702              		@ sp needed
 5703 00a6 70BD     		pop	{r4, r5, r6, pc}
 5704              	.LVL453:
 5705              	.L456:
 5706              	.LCFI90:
 5707              		.cfi_restore_state
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5708              		.loc 1 3170 0
 5709 00a8 0220     		movs	r0, #2
 5710              	.LVL454:
 5711 00aa FBE7     		b	.L450
 5712              	.L461:
 5713              		.align	2
 5714              	.L460:
 5715 00ac 00000000 		.word	I2C_Master_ISR_IT
 5716 00b0 00200080 		.word	-2147475456
 5717              		.cfi_endproc
 5718              	.LFE164:
 5720              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5721              		.align	1
 5722              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5723              		.syntax unified
 5724              		.thumb
 5725              		.thumb_func
 5726              		.fpu fpv5-d16
 5728              	HAL_I2C_Master_Seq_Transmit_DMA:
 5729              	.LFB165:
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5730              		.loc 1 3244 0
 5731              		.cfi_startproc
 5732              		@ args = 4, pretend = 0, frame = 0
 5733              		@ frame_needed = 0, uses_anonymous_args = 0
 5734              	.LVL455:
 5735 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5736              	.LCFI91:
 5737              		.cfi_def_cfa_offset 24
 5738              		.cfi_offset 4, -24
 5739              		.cfi_offset 5, -20
 5740              		.cfi_offset 6, -16
 5741              		.cfi_offset 7, -12
 5742              		.cfi_offset 8, -8
 5743              		.cfi_offset 14, -4
 5744 0004 82B0     		sub	sp, sp, #8
 5745              	.LCFI92:
ARM GAS  /tmp/ccbPnc67.s 			page 234


 5746              		.cfi_def_cfa_offset 32
 5747              	.LVL456:
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5748              		.loc 1 3252 0
 5749 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5750 000a E4B2     		uxtb	r4, r4
 5751 000c 202C     		cmp	r4, #32
 5752 000e 40F09C80 		bne	.L472
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5753              		.loc 1 3255 0
 5754 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5755 0016 012C     		cmp	r4, #1
 5756 0018 00F09C80 		beq	.L473
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5757              		.loc 1 3255 0 is_stmt 0 discriminator 2
 5758 001c 0124     		movs	r4, #1
 5759 001e 80F84040 		strb	r4, [r0, #64]
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5760              		.loc 1 3257 0 is_stmt 1 discriminator 2
 5761 0022 2124     		movs	r4, #33
 5762 0024 80F84140 		strb	r4, [r0, #65]
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5763              		.loc 1 3258 0 discriminator 2
 5764 0028 1024     		movs	r4, #16
 5765 002a 80F84240 		strb	r4, [r0, #66]
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5766              		.loc 1 3259 0 discriminator 2
 5767 002e 0024     		movs	r4, #0
 5768 0030 4464     		str	r4, [r0, #68]
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5769              		.loc 1 3262 0 discriminator 2
 5770 0032 4262     		str	r2, [r0, #36]
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5771              		.loc 1 3263 0 discriminator 2
 5772 0034 4385     		strh	r3, [r0, #42]	@ movhi
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5773              		.loc 1 3264 0 discriminator 2
 5774 0036 089B     		ldr	r3, [sp, #32]
 5775              	.LVL457:
 5776 0038 C362     		str	r3, [r0, #44]
 5777              	.LVL458:
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5778              		.loc 1 3265 0 discriminator 2
 5779 003a 474B     		ldr	r3, .L479
 5780 003c 4363     		str	r3, [r0, #52]
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5781              		.loc 1 3268 0 discriminator 2
 5782 003e 438D     		ldrh	r3, [r0, #42]
 5783 0040 9BB2     		uxth	r3, r3
 5784 0042 FF2B     		cmp	r3, #255
 5785 0044 3ED9     		bls	.L464
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5786              		.loc 1 3270 0
 5787 0046 FF23     		movs	r3, #255
 5788 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5789              	.LVL459:
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 235


 5790              		.loc 1 3271 0
 5791 004a 4FF08077 		mov	r7, #16777216
 5792              	.LVL460:
 5793              	.L465:
 5794 004e 1546     		mov	r5, r2
 5795 0050 8846     		mov	r8, r1
 5796 0052 0446     		mov	r4, r0
 5797              	.LVL461:
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5798              		.loc 1 3281 0
 5799 0054 036B     		ldr	r3, [r0, #48]
 5800 0056 112B     		cmp	r3, #17
 5801 0058 05D1     		bne	.L466
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5802              		.loc 1 3281 0 is_stmt 0 discriminator 1
 5803 005a 089B     		ldr	r3, [sp, #32]
 5804 005c B3F52A4F 		cmp	r3, #43520
 5805 0060 18BF     		it	ne
 5806 0062 AA2B     		cmpne	r3, #170
 5807 0064 32D1     		bne	.L474
 5808              	.L466:
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5809              		.loc 1 3288 0 is_stmt 1
 5810 0066 2046     		mov	r0, r4
 5811              	.LVL462:
 5812 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5813              	.LVL463:
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5814              		.loc 1 3291 0
 5815 006c 638D     		ldrh	r3, [r4, #42]
 5816 006e 9BB2     		uxth	r3, r3
 5817 0070 FF2B     		cmp	r3, #255
 5818 0072 2DD8     		bhi	.L475
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5819              		.loc 1 3293 0
 5820 0074 E76A     		ldr	r7, [r4, #44]
 5821              	.LVL464:
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5822              		.loc 1 3246 0
 5823 0076 394E     		ldr	r6, .L479+4
 5824              	.L467:
 5825              	.LVL465:
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5826              		.loc 1 3297 0
 5827 0078 228D     		ldrh	r2, [r4, #40]
 5828 007a 002A     		cmp	r2, #0
 5829 007c 52D0     		beq	.L468
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5830              		.loc 1 3299 0
 5831 007e A36B     		ldr	r3, [r4, #56]
 5832 0080 43B3     		cbz	r3, .L469
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5833              		.loc 1 3302 0
 5834 0082 374A     		ldr	r2, .L479+8
 5835 0084 DA63     		str	r2, [r3, #60]
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5836              		.loc 1 3305 0
ARM GAS  /tmp/ccbPnc67.s 			page 236


 5837 0086 A36B     		ldr	r3, [r4, #56]
 5838 0088 364A     		ldr	r2, .L479+12
 5839 008a DA64     		str	r2, [r3, #76]
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5840              		.loc 1 3308 0
 5841 008c A26B     		ldr	r2, [r4, #56]
 5842 008e 0023     		movs	r3, #0
 5843 0090 1364     		str	r3, [r2, #64]
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5844              		.loc 1 3309 0
 5845 0092 A26B     		ldr	r2, [r4, #56]
 5846 0094 1365     		str	r3, [r2, #80]
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5847              		.loc 1 3312 0
 5848 0096 2268     		ldr	r2, [r4]
 5849 0098 238D     		ldrh	r3, [r4, #40]
 5850 009a 2832     		adds	r2, r2, #40
 5851 009c 2946     		mov	r1, r5
 5852 009e A06B     		ldr	r0, [r4, #56]
 5853 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5854              	.LVL466:
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5855              		.loc 1 3329 0
 5856 00a4 0546     		mov	r5, r0
 5857              	.LVL467:
 5858 00a6 18B3     		cbz	r0, .L478
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5859              		.loc 1 3352 0
 5860 00a8 2023     		movs	r3, #32
 5861 00aa 84F84130 		strb	r3, [r4, #65]
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5862              		.loc 1 3353 0
 5863 00ae 0022     		movs	r2, #0
 5864 00b0 84F84220 		strb	r2, [r4, #66]
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5865              		.loc 1 3356 0
 5866 00b4 636C     		ldr	r3, [r4, #68]
 5867 00b6 43F01003 		orr	r3, r3, #16
 5868 00ba 6364     		str	r3, [r4, #68]
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5869              		.loc 1 3359 0
 5870 00bc 84F84020 		strb	r2, [r4, #64]
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5871              		.loc 1 3361 0
 5872 00c0 0125     		movs	r5, #1
 5873 00c2 43E0     		b	.L463
 5874              	.LVL468:
 5875              	.L464:
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5876              		.loc 1 3275 0
 5877 00c4 438D     		ldrh	r3, [r0, #42]
 5878 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5879              		.loc 1 3276 0
 5880 00c8 C76A     		ldr	r7, [r0, #44]
 5881              	.LVL469:
 5882 00ca C0E7     		b	.L465
ARM GAS  /tmp/ccbPnc67.s 			page 237


 5883              	.L474:
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5884              		.loc 1 3283 0
 5885 00cc 0026     		movs	r6, #0
 5886 00ce D3E7     		b	.L467
 5887              	.LVL470:
 5888              	.L475:
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5889              		.loc 1 3246 0
 5890 00d0 224E     		ldr	r6, .L479+4
 5891 00d2 D1E7     		b	.L467
 5892              	.LVL471:
 5893              	.L469:
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5894              		.loc 1 3317 0
 5895 00d4 2023     		movs	r3, #32
 5896 00d6 84F84130 		strb	r3, [r4, #65]
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5897              		.loc 1 3318 0
 5898 00da 0022     		movs	r2, #0
 5899 00dc 84F84220 		strb	r2, [r4, #66]
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5900              		.loc 1 3321 0
 5901 00e0 636C     		ldr	r3, [r4, #68]
 5902 00e2 43F08003 		orr	r3, r3, #128
 5903 00e6 6364     		str	r3, [r4, #68]
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5904              		.loc 1 3324 0
 5905 00e8 84F84020 		strb	r2, [r4, #64]
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5906              		.loc 1 3326 0
 5907 00ec 0125     		movs	r5, #1
 5908              	.LVL472:
 5909 00ee 2DE0     		b	.L463
 5910              	.LVL473:
 5911              	.L478:
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5912              		.loc 1 3332 0
 5913 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5914 00f4 0096     		str	r6, [sp]
 5915 00f6 3B46     		mov	r3, r7
 5916 00f8 4146     		mov	r1, r8
 5917 00fa 2046     		mov	r0, r4
 5918              	.LVL474:
 5919 00fc FFF7FEFF 		bl	I2C_TransferConfig
 5920              	.LVL475:
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5921              		.loc 1 3335 0
 5922 0100 638D     		ldrh	r3, [r4, #42]
 5923 0102 228D     		ldrh	r2, [r4, #40]
 5924 0104 9B1A     		subs	r3, r3, r2
 5925 0106 9BB2     		uxth	r3, r3
 5926 0108 6385     		strh	r3, [r4, #42]	@ movhi
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5927              		.loc 1 3338 0
 5928 010a 0023     		movs	r3, #0
 5929 010c 84F84030 		strb	r3, [r4, #64]
ARM GAS  /tmp/ccbPnc67.s 			page 238


3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5930              		.loc 1 3344 0
 5931 0110 1021     		movs	r1, #16
 5932 0112 2046     		mov	r0, r4
 5933 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 5934              	.LVL476:
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5935              		.loc 1 3347 0
 5936 0118 2268     		ldr	r2, [r4]
 5937 011a 1368     		ldr	r3, [r2]
 5938 011c 43F48043 		orr	r3, r3, #16384
 5939 0120 1360     		str	r3, [r2]
 5940 0122 13E0     		b	.L463
 5941              	.LVL477:
 5942              	.L468:
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5943              		.loc 1 3367 0
 5944 0124 104B     		ldr	r3, .L479+16
 5945 0126 6363     		str	r3, [r4, #52]
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5946              		.loc 1 3371 0
 5947 0128 0C4B     		ldr	r3, .L479+4
 5948 012a 0093     		str	r3, [sp]
 5949 012c 4FF00073 		mov	r3, #33554432
 5950 0130 D2B2     		uxtb	r2, r2
 5951 0132 4146     		mov	r1, r8
 5952 0134 2046     		mov	r0, r4
 5953 0136 FFF7FEFF 		bl	I2C_TransferConfig
 5954              	.LVL478:
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5955              		.loc 1 3374 0
 5956 013a 0025     		movs	r5, #0
 5957              	.LVL479:
 5958 013c 84F84050 		strb	r5, [r4, #64]
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5959              		.loc 1 3382 0
 5960 0140 0121     		movs	r1, #1
 5961 0142 2046     		mov	r0, r4
 5962 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 5963              	.LVL480:
 5964 0148 00E0     		b	.L463
 5965              	.LVL481:
 5966              	.L472:
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5967              		.loc 1 3389 0
 5968 014a 0225     		movs	r5, #2
 5969              	.LVL482:
 5970              	.L463:
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5971              		.loc 1 3391 0
 5972 014c 2846     		mov	r0, r5
 5973 014e 02B0     		add	sp, sp, #8
 5974              	.LCFI93:
 5975              		.cfi_remember_state
 5976              		.cfi_def_cfa_offset 24
 5977              		@ sp needed
 5978 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccbPnc67.s 			page 239


 5979              	.LVL483:
 5980              	.L473:
 5981              	.LCFI94:
 5982              		.cfi_restore_state
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5983              		.loc 1 3255 0
 5984 0154 0225     		movs	r5, #2
 5985 0156 F9E7     		b	.L463
 5986              	.L480:
 5987              		.align	2
 5988              	.L479:
 5989 0158 00000000 		.word	I2C_Master_ISR_DMA
 5990 015c 00200080 		.word	-2147475456
 5991 0160 00000000 		.word	I2C_DMAMasterTransmitCplt
 5992 0164 00000000 		.word	I2C_DMAError
 5993 0168 00000000 		.word	I2C_Master_ISR_IT
 5994              		.cfi_endproc
 5995              	.LFE165:
 5997              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5998              		.align	1
 5999              		.global	HAL_I2C_Master_Seq_Receive_IT
 6000              		.syntax unified
 6001              		.thumb
 6002              		.thumb_func
 6003              		.fpu fpv5-d16
 6005              	HAL_I2C_Master_Seq_Receive_IT:
 6006              	.LFB166:
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 6007              		.loc 1 3406 0
 6008              		.cfi_startproc
 6009              		@ args = 4, pretend = 0, frame = 0
 6010              		@ frame_needed = 0, uses_anonymous_args = 0
 6011              	.LVL484:
 6012 0000 70B5     		push	{r4, r5, r6, lr}
 6013              	.LCFI95:
 6014              		.cfi_def_cfa_offset 16
 6015              		.cfi_offset 4, -16
 6016              		.cfi_offset 5, -12
 6017              		.cfi_offset 6, -8
 6018              		.cfi_offset 14, -4
 6019 0002 82B0     		sub	sp, sp, #8
 6020              	.LCFI96:
 6021              		.cfi_def_cfa_offset 24
 6022              	.LVL485:
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6023              		.loc 1 3413 0
 6024 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6025 0008 E4B2     		uxtb	r4, r4
 6026 000a 202C     		cmp	r4, #32
 6027 000c 49D1     		bne	.L487
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6028              		.loc 1 3416 0
 6029 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6030 0012 012C     		cmp	r4, #1
 6031 0014 48D0     		beq	.L488
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6032              		.loc 1 3416 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccbPnc67.s 			page 240


 6033 0016 0124     		movs	r4, #1
 6034 0018 80F84040 		strb	r4, [r0, #64]
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6035              		.loc 1 3418 0 is_stmt 1 discriminator 2
 6036 001c 2224     		movs	r4, #34
 6037 001e 80F84140 		strb	r4, [r0, #65]
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6038              		.loc 1 3419 0 discriminator 2
 6039 0022 1024     		movs	r4, #16
 6040 0024 80F84240 		strb	r4, [r0, #66]
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6041              		.loc 1 3420 0 discriminator 2
 6042 0028 0024     		movs	r4, #0
 6043 002a 4464     		str	r4, [r0, #68]
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6044              		.loc 1 3423 0 discriminator 2
 6045 002c 4262     		str	r2, [r0, #36]
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6046              		.loc 1 3424 0 discriminator 2
 6047 002e 4385     		strh	r3, [r0, #42]	@ movhi
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6048              		.loc 1 3425 0 discriminator 2
 6049 0030 069B     		ldr	r3, [sp, #24]
 6050              	.LVL486:
 6051 0032 C362     		str	r3, [r0, #44]
 6052              	.LVL487:
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6053              		.loc 1 3426 0 discriminator 2
 6054 0034 1D4B     		ldr	r3, .L492
 6055 0036 4363     		str	r3, [r0, #52]
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6056              		.loc 1 3429 0 discriminator 2
 6057 0038 438D     		ldrh	r3, [r0, #42]
 6058 003a 9BB2     		uxth	r3, r3
 6059 003c FF2B     		cmp	r3, #255
 6060 003e 28D9     		bls	.L483
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6061              		.loc 1 3431 0
 6062 0040 FF23     		movs	r3, #255
 6063 0042 0385     		strh	r3, [r0, #40]	@ movhi
 6064              	.LVL488:
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6065              		.loc 1 3432 0
 6066 0044 4FF08076 		mov	r6, #16777216
 6067              	.LVL489:
 6068              	.L484:
 6069 0048 0D46     		mov	r5, r1
 6070 004a 0446     		mov	r4, r0
 6071              	.LVL490:
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6072              		.loc 1 3442 0
 6073 004c 036B     		ldr	r3, [r0, #48]
 6074 004e 122B     		cmp	r3, #18
 6075 0050 05D1     		bne	.L485
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6076              		.loc 1 3442 0 is_stmt 0 discriminator 1
 6077 0052 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/ccbPnc67.s 			page 241


 6078 0054 B3F52A4F 		cmp	r3, #43520
 6079 0058 18BF     		it	ne
 6080 005a AA2B     		cmpne	r3, #170
 6081 005c 1DD1     		bne	.L489
 6082              	.L485:
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6083              		.loc 1 3449 0 is_stmt 1
 6084 005e 2046     		mov	r0, r4
 6085              	.LVL491:
 6086 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6087              	.LVL492:
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6088              		.loc 1 3452 0
 6089 0064 638D     		ldrh	r3, [r4, #42]
 6090 0066 9BB2     		uxth	r3, r3
 6091 0068 FF2B     		cmp	r3, #255
 6092 006a 18D8     		bhi	.L490
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6093              		.loc 1 3454 0
 6094 006c E66A     		ldr	r6, [r4, #44]
 6095              	.LVL493:
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6096              		.loc 1 3408 0
 6097 006e 104B     		ldr	r3, .L492+4
 6098              	.L486:
 6099              	.LVL494:
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6100              		.loc 1 3459 0
 6101 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6102 0074 0093     		str	r3, [sp]
 6103 0076 3346     		mov	r3, r6
 6104              	.LVL495:
 6105 0078 2946     		mov	r1, r5
 6106 007a 2046     		mov	r0, r4
 6107 007c FFF7FEFF 		bl	I2C_TransferConfig
 6108              	.LVL496:
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6109              		.loc 1 3462 0
 6110 0080 0025     		movs	r5, #0
 6111 0082 84F84050 		strb	r5, [r4, #64]
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6112              		.loc 1 3467 0
 6113 0086 0221     		movs	r1, #2
 6114 0088 2046     		mov	r0, r4
 6115 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6116              	.LVL497:
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6117              		.loc 1 3469 0
 6118 008e 2846     		mov	r0, r5
 6119 0090 08E0     		b	.L482
 6120              	.LVL498:
 6121              	.L483:
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6122              		.loc 1 3436 0
 6123 0092 438D     		ldrh	r3, [r0, #42]
 6124 0094 0385     		strh	r3, [r0, #40]	@ movhi
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 242


 6125              		.loc 1 3437 0
 6126 0096 C66A     		ldr	r6, [r0, #44]
 6127              	.LVL499:
 6128 0098 D6E7     		b	.L484
 6129              	.L489:
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6130              		.loc 1 3444 0
 6131 009a 0023     		movs	r3, #0
 6132 009c E8E7     		b	.L486
 6133              	.LVL500:
 6134              	.L490:
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6135              		.loc 1 3408 0
 6136 009e 044B     		ldr	r3, .L492+4
 6137 00a0 E6E7     		b	.L486
 6138              	.LVL501:
 6139              	.L487:
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6140              		.loc 1 3473 0
 6141 00a2 0220     		movs	r0, #2
 6142              	.LVL502:
 6143              	.L482:
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6144              		.loc 1 3475 0
 6145 00a4 02B0     		add	sp, sp, #8
 6146              	.LCFI97:
 6147              		.cfi_remember_state
 6148              		.cfi_def_cfa_offset 16
 6149              		@ sp needed
 6150 00a6 70BD     		pop	{r4, r5, r6, pc}
 6151              	.LVL503:
 6152              	.L488:
 6153              	.LCFI98:
 6154              		.cfi_restore_state
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6155              		.loc 1 3416 0
 6156 00a8 0220     		movs	r0, #2
 6157              	.LVL504:
 6158 00aa FBE7     		b	.L482
 6159              	.L493:
 6160              		.align	2
 6161              	.L492:
 6162 00ac 00000000 		.word	I2C_Master_ISR_IT
 6163 00b0 00240080 		.word	-2147474432
 6164              		.cfi_endproc
 6165              	.LFE166:
 6167              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 6168              		.align	1
 6169              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6170              		.syntax unified
 6171              		.thumb
 6172              		.thumb_func
 6173              		.fpu fpv5-d16
 6175              	HAL_I2C_Master_Seq_Receive_DMA:
 6176              	.LFB167:
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 6177              		.loc 1 3490 0
ARM GAS  /tmp/ccbPnc67.s 			page 243


 6178              		.cfi_startproc
 6179              		@ args = 4, pretend = 0, frame = 0
 6180              		@ frame_needed = 0, uses_anonymous_args = 0
 6181              	.LVL505:
 6182 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6183              	.LCFI99:
 6184              		.cfi_def_cfa_offset 24
 6185              		.cfi_offset 4, -24
 6186              		.cfi_offset 5, -20
 6187              		.cfi_offset 6, -16
 6188              		.cfi_offset 7, -12
 6189              		.cfi_offset 8, -8
 6190              		.cfi_offset 14, -4
 6191 0004 82B0     		sub	sp, sp, #8
 6192              	.LCFI100:
 6193              		.cfi_def_cfa_offset 32
 6194              	.LVL506:
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6195              		.loc 1 3498 0
 6196 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6197 000a E4B2     		uxtb	r4, r4
 6198 000c 202C     		cmp	r4, #32
 6199 000e 40F09C80 		bne	.L504
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6200              		.loc 1 3501 0
 6201 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6202 0016 012C     		cmp	r4, #1
 6203 0018 00F09C80 		beq	.L505
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6204              		.loc 1 3501 0 is_stmt 0 discriminator 2
 6205 001c 0124     		movs	r4, #1
 6206 001e 80F84040 		strb	r4, [r0, #64]
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6207              		.loc 1 3503 0 is_stmt 1 discriminator 2
 6208 0022 2224     		movs	r4, #34
 6209 0024 80F84140 		strb	r4, [r0, #65]
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6210              		.loc 1 3504 0 discriminator 2
 6211 0028 1024     		movs	r4, #16
 6212 002a 80F84240 		strb	r4, [r0, #66]
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6213              		.loc 1 3505 0 discriminator 2
 6214 002e 0024     		movs	r4, #0
 6215 0030 4464     		str	r4, [r0, #68]
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6216              		.loc 1 3508 0 discriminator 2
 6217 0032 4262     		str	r2, [r0, #36]
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6218              		.loc 1 3509 0 discriminator 2
 6219 0034 4385     		strh	r3, [r0, #42]	@ movhi
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6220              		.loc 1 3510 0 discriminator 2
 6221 0036 089B     		ldr	r3, [sp, #32]
 6222              	.LVL507:
 6223 0038 C362     		str	r3, [r0, #44]
 6224              	.LVL508:
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 244


 6225              		.loc 1 3511 0 discriminator 2
 6226 003a 474B     		ldr	r3, .L511
 6227 003c 4363     		str	r3, [r0, #52]
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6228              		.loc 1 3514 0 discriminator 2
 6229 003e 438D     		ldrh	r3, [r0, #42]
 6230 0040 9BB2     		uxth	r3, r3
 6231 0042 FF2B     		cmp	r3, #255
 6232 0044 3ED9     		bls	.L496
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6233              		.loc 1 3516 0
 6234 0046 FF23     		movs	r3, #255
 6235 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6236              	.LVL509:
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6237              		.loc 1 3517 0
 6238 004a 4FF08077 		mov	r7, #16777216
 6239              	.LVL510:
 6240              	.L497:
 6241 004e 1546     		mov	r5, r2
 6242 0050 8846     		mov	r8, r1
 6243 0052 0446     		mov	r4, r0
 6244              	.LVL511:
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6245              		.loc 1 3527 0
 6246 0054 036B     		ldr	r3, [r0, #48]
 6247 0056 122B     		cmp	r3, #18
 6248 0058 05D1     		bne	.L498
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6249              		.loc 1 3527 0 is_stmt 0 discriminator 1
 6250 005a 089B     		ldr	r3, [sp, #32]
 6251 005c B3F52A4F 		cmp	r3, #43520
 6252 0060 18BF     		it	ne
 6253 0062 AA2B     		cmpne	r3, #170
 6254 0064 32D1     		bne	.L506
 6255              	.L498:
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6256              		.loc 1 3534 0 is_stmt 1
 6257 0066 2046     		mov	r0, r4
 6258              	.LVL512:
 6259 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6260              	.LVL513:
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6261              		.loc 1 3537 0
 6262 006c 638D     		ldrh	r3, [r4, #42]
 6263 006e 9BB2     		uxth	r3, r3
 6264 0070 FF2B     		cmp	r3, #255
 6265 0072 2DD8     		bhi	.L507
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6266              		.loc 1 3539 0
 6267 0074 E76A     		ldr	r7, [r4, #44]
 6268              	.LVL514:
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6269              		.loc 1 3492 0
 6270 0076 394E     		ldr	r6, .L511+4
 6271              	.L499:
 6272              	.LVL515:
ARM GAS  /tmp/ccbPnc67.s 			page 245


3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6273              		.loc 1 3543 0
 6274 0078 228D     		ldrh	r2, [r4, #40]
 6275 007a 002A     		cmp	r2, #0
 6276 007c 52D0     		beq	.L500
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6277              		.loc 1 3545 0
 6278 007e E36B     		ldr	r3, [r4, #60]
 6279 0080 43B3     		cbz	r3, .L501
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6280              		.loc 1 3548 0
 6281 0082 374A     		ldr	r2, .L511+8
 6282 0084 DA63     		str	r2, [r3, #60]
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6283              		.loc 1 3551 0
 6284 0086 E36B     		ldr	r3, [r4, #60]
 6285 0088 364A     		ldr	r2, .L511+12
 6286 008a DA64     		str	r2, [r3, #76]
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6287              		.loc 1 3554 0
 6288 008c E26B     		ldr	r2, [r4, #60]
 6289 008e 0023     		movs	r3, #0
 6290 0090 1364     		str	r3, [r2, #64]
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6291              		.loc 1 3555 0
 6292 0092 E26B     		ldr	r2, [r4, #60]
 6293 0094 1365     		str	r3, [r2, #80]
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6294              		.loc 1 3558 0
 6295 0096 2168     		ldr	r1, [r4]
 6296 0098 238D     		ldrh	r3, [r4, #40]
 6297 009a 2A46     		mov	r2, r5
 6298 009c 2431     		adds	r1, r1, #36
 6299 009e E06B     		ldr	r0, [r4, #60]
 6300 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6301              	.LVL516:
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6302              		.loc 1 3575 0
 6303 00a4 0546     		mov	r5, r0
 6304              	.LVL517:
 6305 00a6 18B3     		cbz	r0, .L510
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6306              		.loc 1 3598 0
 6307 00a8 2023     		movs	r3, #32
 6308 00aa 84F84130 		strb	r3, [r4, #65]
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6309              		.loc 1 3599 0
 6310 00ae 0022     		movs	r2, #0
 6311 00b0 84F84220 		strb	r2, [r4, #66]
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6312              		.loc 1 3602 0
 6313 00b4 636C     		ldr	r3, [r4, #68]
 6314 00b6 43F01003 		orr	r3, r3, #16
 6315 00ba 6364     		str	r3, [r4, #68]
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6316              		.loc 1 3605 0
 6317 00bc 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/ccbPnc67.s 			page 246


3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6318              		.loc 1 3607 0
 6319 00c0 0125     		movs	r5, #1
 6320 00c2 43E0     		b	.L495
 6321              	.LVL518:
 6322              	.L496:
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6323              		.loc 1 3521 0
 6324 00c4 438D     		ldrh	r3, [r0, #42]
 6325 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6326              		.loc 1 3522 0
 6327 00c8 C76A     		ldr	r7, [r0, #44]
 6328              	.LVL519:
 6329 00ca C0E7     		b	.L497
 6330              	.L506:
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6331              		.loc 1 3529 0
 6332 00cc 0026     		movs	r6, #0
 6333 00ce D3E7     		b	.L499
 6334              	.LVL520:
 6335              	.L507:
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6336              		.loc 1 3492 0
 6337 00d0 224E     		ldr	r6, .L511+4
 6338 00d2 D1E7     		b	.L499
 6339              	.LVL521:
 6340              	.L501:
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6341              		.loc 1 3563 0
 6342 00d4 2023     		movs	r3, #32
 6343 00d6 84F84130 		strb	r3, [r4, #65]
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6344              		.loc 1 3564 0
 6345 00da 0022     		movs	r2, #0
 6346 00dc 84F84220 		strb	r2, [r4, #66]
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6347              		.loc 1 3567 0
 6348 00e0 636C     		ldr	r3, [r4, #68]
 6349 00e2 43F08003 		orr	r3, r3, #128
 6350 00e6 6364     		str	r3, [r4, #68]
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6351              		.loc 1 3570 0
 6352 00e8 84F84020 		strb	r2, [r4, #64]
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6353              		.loc 1 3572 0
 6354 00ec 0125     		movs	r5, #1
 6355              	.LVL522:
 6356 00ee 2DE0     		b	.L495
 6357              	.LVL523:
 6358              	.L510:
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6359              		.loc 1 3578 0
 6360 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6361 00f4 0096     		str	r6, [sp]
 6362 00f6 3B46     		mov	r3, r7
 6363 00f8 4146     		mov	r1, r8
ARM GAS  /tmp/ccbPnc67.s 			page 247


 6364 00fa 2046     		mov	r0, r4
 6365              	.LVL524:
 6366 00fc FFF7FEFF 		bl	I2C_TransferConfig
 6367              	.LVL525:
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6368              		.loc 1 3581 0
 6369 0100 638D     		ldrh	r3, [r4, #42]
 6370 0102 228D     		ldrh	r2, [r4, #40]
 6371 0104 9B1A     		subs	r3, r3, r2
 6372 0106 9BB2     		uxth	r3, r3
 6373 0108 6385     		strh	r3, [r4, #42]	@ movhi
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6374              		.loc 1 3584 0
 6375 010a 0023     		movs	r3, #0
 6376 010c 84F84030 		strb	r3, [r4, #64]
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6377              		.loc 1 3590 0
 6378 0110 1021     		movs	r1, #16
 6379 0112 2046     		mov	r0, r4
 6380 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 6381              	.LVL526:
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6382              		.loc 1 3593 0
 6383 0118 2268     		ldr	r2, [r4]
 6384 011a 1368     		ldr	r3, [r2]
 6385 011c 43F40043 		orr	r3, r3, #32768
 6386 0120 1360     		str	r3, [r2]
 6387 0122 13E0     		b	.L495
 6388              	.LVL527:
 6389              	.L500:
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6390              		.loc 1 3613 0
 6391 0124 104B     		ldr	r3, .L511+16
 6392 0126 6363     		str	r3, [r4, #52]
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6393              		.loc 1 3617 0
 6394 0128 0C4B     		ldr	r3, .L511+4
 6395 012a 0093     		str	r3, [sp]
 6396 012c 4FF00073 		mov	r3, #33554432
 6397 0130 D2B2     		uxtb	r2, r2
 6398 0132 4146     		mov	r1, r8
 6399 0134 2046     		mov	r0, r4
 6400 0136 FFF7FEFF 		bl	I2C_TransferConfig
 6401              	.LVL528:
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6402              		.loc 1 3620 0
 6403 013a 0025     		movs	r5, #0
 6404              	.LVL529:
 6405 013c 84F84050 		strb	r5, [r4, #64]
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6406              		.loc 1 3628 0
 6407 0140 0121     		movs	r1, #1
 6408 0142 2046     		mov	r0, r4
 6409 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 6410              	.LVL530:
 6411 0148 00E0     		b	.L495
 6412              	.LVL531:
ARM GAS  /tmp/ccbPnc67.s 			page 248


 6413              	.L504:
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6414              		.loc 1 3635 0
 6415 014a 0225     		movs	r5, #2
 6416              	.LVL532:
 6417              	.L495:
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6418              		.loc 1 3637 0
 6419 014c 2846     		mov	r0, r5
 6420 014e 02B0     		add	sp, sp, #8
 6421              	.LCFI101:
 6422              		.cfi_remember_state
 6423              		.cfi_def_cfa_offset 24
 6424              		@ sp needed
 6425 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6426              	.LVL533:
 6427              	.L505:
 6428              	.LCFI102:
 6429              		.cfi_restore_state
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6430              		.loc 1 3501 0
 6431 0154 0225     		movs	r5, #2
 6432 0156 F9E7     		b	.L495
 6433              	.L512:
 6434              		.align	2
 6435              	.L511:
 6436 0158 00000000 		.word	I2C_Master_ISR_DMA
 6437 015c 00240080 		.word	-2147474432
 6438 0160 00000000 		.word	I2C_DMAMasterReceiveCplt
 6439 0164 00000000 		.word	I2C_DMAError
 6440 0168 00000000 		.word	I2C_Master_ISR_IT
 6441              		.cfi_endproc
 6442              	.LFE167:
 6444              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6445              		.align	1
 6446              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6447              		.syntax unified
 6448              		.thumb
 6449              		.thumb_func
 6450              		.fpu fpv5-d16
 6452              	HAL_I2C_Slave_Seq_Transmit_IT:
 6453              	.LFB168:
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 6454              		.loc 1 3650 0
 6455              		.cfi_startproc
 6456              		@ args = 0, pretend = 0, frame = 0
 6457              		@ frame_needed = 0, uses_anonymous_args = 0
 6458              	.LVL534:
 6459 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6460              	.LCFI103:
 6461              		.cfi_def_cfa_offset 24
 6462              		.cfi_offset 3, -24
 6463              		.cfi_offset 4, -20
 6464              		.cfi_offset 5, -16
 6465              		.cfi_offset 6, -12
 6466              		.cfi_offset 7, -8
 6467              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbPnc67.s 			page 249


3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6468              		.loc 1 3654 0
 6469 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6470 0006 04F02804 		and	r4, r4, #40
 6471 000a 282C     		cmp	r4, #40
 6472 000c 01D0     		beq	.L521
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6473              		.loc 1 3730 0
 6474 000e 0120     		movs	r0, #1
 6475              	.LVL535:
 6476              	.L514:
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6477              		.loc 1 3732 0
 6478 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6479              	.LVL536:
 6480              	.L521:
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6481              		.loc 1 3656 0
 6482 0012 B2FA82F4 		clz	r4, r2
 6483 0016 6409     		lsrs	r4, r4, #5
 6484 0018 0029     		cmp	r1, #0
 6485 001a 08BF     		it	eq
 6486 001c 0124     		moveq	r4, #1
 6487 001e 24B1     		cbz	r4, .L515
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6488              		.loc 1 3658 0
 6489 0020 4FF40073 		mov	r3, #512
 6490              	.LVL537:
 6491 0024 4364     		str	r3, [r0, #68]
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6492              		.loc 1 3659 0
 6493 0026 0120     		movs	r0, #1
 6494              	.LVL538:
 6495 0028 F2E7     		b	.L514
 6496              	.LVL539:
 6497              	.L515:
 6498 002a 1F46     		mov	r7, r3
 6499 002c 1646     		mov	r6, r2
 6500 002e 0C46     		mov	r4, r1
 6501 0030 0546     		mov	r5, r0
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6502              		.loc 1 3663 0
 6503 0032 48F20101 		movw	r1, #32769
 6504              	.LVL540:
 6505 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 6506              	.LVL541:
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6507              		.loc 1 3666 0
 6508 003a 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6509 003e 012B     		cmp	r3, #1
 6510 0040 47D0     		beq	.L519
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6511              		.loc 1 3666 0 is_stmt 0 discriminator 2
 6512 0042 0123     		movs	r3, #1
 6513 0044 85F84030 		strb	r3, [r5, #64]
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6514              		.loc 1 3670 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccbPnc67.s 			page 250


 6515 0048 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6516 004c DBB2     		uxtb	r3, r3
 6517 004e 2A2B     		cmp	r3, #42
 6518 0050 24D0     		beq	.L522
 6519              	.L516:
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6520              		.loc 1 3696 0
 6521 0052 2923     		movs	r3, #41
 6522 0054 85F84130 		strb	r3, [r5, #65]
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6523              		.loc 1 3697 0
 6524 0058 2023     		movs	r3, #32
 6525 005a 85F84230 		strb	r3, [r5, #66]
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6526              		.loc 1 3698 0
 6527 005e 0023     		movs	r3, #0
 6528 0060 6B64     		str	r3, [r5, #68]
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6529              		.loc 1 3701 0
 6530 0062 2A68     		ldr	r2, [r5]
 6531 0064 5368     		ldr	r3, [r2, #4]
 6532 0066 23F40043 		bic	r3, r3, #32768
 6533 006a 5360     		str	r3, [r2, #4]
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6534              		.loc 1 3704 0
 6535 006c 6C62     		str	r4, [r5, #36]
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6536              		.loc 1 3705 0
 6537 006e 6E85     		strh	r6, [r5, #42]	@ movhi
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6538              		.loc 1 3706 0
 6539 0070 6B8D     		ldrh	r3, [r5, #42]
 6540 0072 2B85     		strh	r3, [r5, #40]	@ movhi
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6541              		.loc 1 3707 0
 6542 0074 EF62     		str	r7, [r5, #44]
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6543              		.loc 1 3708 0
 6544 0076 184B     		ldr	r3, .L523
 6545 0078 6B63     		str	r3, [r5, #52]
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6546              		.loc 1 3710 0
 6547 007a 2B68     		ldr	r3, [r5]
 6548 007c 9A69     		ldr	r2, [r3, #24]
 6549 007e 12F4803F 		tst	r2, #65536
 6550 0082 01D0     		beq	.L517
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6551              		.loc 1 3714 0
 6552 0084 0822     		movs	r2, #8
 6553 0086 DA61     		str	r2, [r3, #28]
 6554              	.L517:
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6555              		.loc 1 3718 0
 6556 0088 0024     		movs	r4, #0
 6557              	.LVL542:
 6558 008a 85F84040 		strb	r4, [r5, #64]
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 251


 6559              		.loc 1 3724 0
 6560 008e 48F20101 		movw	r1, #32769
 6561 0092 2846     		mov	r0, r5
 6562 0094 FFF7FEFF 		bl	I2C_Enable_IRQ
 6563              	.LVL543:
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6564              		.loc 1 3726 0
 6565 0098 2046     		mov	r0, r4
 6566 009a B9E7     		b	.L514
 6567              	.LVL544:
 6568              	.L522:
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6569              		.loc 1 3673 0
 6570 009c 0221     		movs	r1, #2
 6571 009e 2846     		mov	r0, r5
 6572 00a0 FFF7FEFF 		bl	I2C_Disable_IRQ
 6573              	.LVL545:
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6574              		.loc 1 3676 0
 6575 00a4 2B68     		ldr	r3, [r5]
 6576 00a6 1A68     		ldr	r2, [r3]
 6577 00a8 12F4004F 		tst	r2, #32768
 6578 00ac D1D0     		beq	.L516
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6579              		.loc 1 3678 0
 6580 00ae 1A68     		ldr	r2, [r3]
 6581 00b0 22F40042 		bic	r2, r2, #32768
 6582 00b4 1A60     		str	r2, [r3]
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6583              		.loc 1 3680 0
 6584 00b6 EB6B     		ldr	r3, [r5, #60]
 6585 00b8 002B     		cmp	r3, #0
 6586 00ba CAD0     		beq	.L516
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6587              		.loc 1 3684 0
 6588 00bc 074A     		ldr	r2, .L523+4
 6589 00be 1A65     		str	r2, [r3, #80]
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6590              		.loc 1 3687 0
 6591 00c0 E86B     		ldr	r0, [r5, #60]
 6592 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6593              	.LVL546:
 6594 00c6 0028     		cmp	r0, #0
 6595 00c8 C3D0     		beq	.L516
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6596              		.loc 1 3690 0
 6597 00ca E86B     		ldr	r0, [r5, #60]
 6598 00cc 036D     		ldr	r3, [r0, #80]
 6599 00ce 9847     		blx	r3
 6600              	.LVL547:
 6601 00d0 BFE7     		b	.L516
 6602              	.L519:
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6603              		.loc 1 3666 0
 6604 00d2 0220     		movs	r0, #2
 6605 00d4 9CE7     		b	.L514
 6606              	.L524:
ARM GAS  /tmp/ccbPnc67.s 			page 252


 6607 00d6 00BF     		.align	2
 6608              	.L523:
 6609 00d8 00000000 		.word	I2C_Slave_ISR_IT
 6610 00dc 00000000 		.word	I2C_DMAAbort
 6611              		.cfi_endproc
 6612              	.LFE168:
 6614              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6615              		.align	1
 6616              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6617              		.syntax unified
 6618              		.thumb
 6619              		.thumb_func
 6620              		.fpu fpv5-d16
 6622              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6623              	.LFB169:
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6624              		.loc 1 3745 0
 6625              		.cfi_startproc
 6626              		@ args = 0, pretend = 0, frame = 0
 6627              		@ frame_needed = 0, uses_anonymous_args = 0
 6628              	.LVL548:
 6629 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6630              	.LCFI104:
 6631              		.cfi_def_cfa_offset 24
 6632              		.cfi_offset 3, -24
 6633              		.cfi_offset 4, -20
 6634              		.cfi_offset 5, -16
 6635              		.cfi_offset 6, -12
 6636              		.cfi_offset 7, -8
 6637              		.cfi_offset 14, -4
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6638              		.loc 1 3751 0
 6639 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 6640 0006 05F02805 		and	r5, r5, #40
 6641 000a 282D     		cmp	r5, #40
 6642 000c 02D0     		beq	.L539
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6643              		.loc 1 3909 0
 6644 000e 0125     		movs	r5, #1
 6645              	.LVL549:
 6646              	.L526:
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6647              		.loc 1 3911 0
 6648 0010 2846     		mov	r0, r5
 6649 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6650              	.LVL550:
 6651              	.L539:
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6652              		.loc 1 3753 0
 6653 0014 B2FA82F4 		clz	r4, r2
 6654 0018 6409     		lsrs	r4, r4, #5
 6655 001a 0029     		cmp	r1, #0
 6656 001c 08BF     		it	eq
 6657 001e 0124     		moveq	r4, #1
 6658 0020 002C     		cmp	r4, #0
 6659 0022 5ED1     		bne	.L540
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 253


 6660              		.loc 1 3760 0
 6661 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6662 0028 012C     		cmp	r4, #1
 6663 002a 00F0B180 		beq	.L536
 6664 002e 1F46     		mov	r7, r3
 6665 0030 1646     		mov	r6, r2
 6666 0032 0D46     		mov	r5, r1
 6667 0034 0446     		mov	r4, r0
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6668              		.loc 1 3760 0 is_stmt 0 discriminator 2
 6669 0036 0123     		movs	r3, #1
 6670              	.LVL551:
 6671 0038 80F84030 		strb	r3, [r0, #64]
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6672              		.loc 1 3763 0 is_stmt 1 discriminator 2
 6673 003c 48F20101 		movw	r1, #32769
 6674              	.LVL552:
 6675 0040 FFF7FEFF 		bl	I2C_Disable_IRQ
 6676              	.LVL553:
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6677              		.loc 1 3767 0 discriminator 2
 6678 0044 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6679 0048 DBB2     		uxtb	r3, r3
 6680 004a 2A2B     		cmp	r3, #42
 6681 004c 4ED0     		beq	.L541
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6682              		.loc 1 3792 0
 6683 004e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6684 0052 DBB2     		uxtb	r3, r3
 6685 0054 292B     		cmp	r3, #41
 6686 0056 65D0     		beq	.L542
 6687              	.L529:
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6688              		.loc 1 3819 0
 6689 0058 2923     		movs	r3, #41
 6690 005a 84F84130 		strb	r3, [r4, #65]
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6691              		.loc 1 3820 0
 6692 005e 2023     		movs	r3, #32
 6693 0060 84F84230 		strb	r3, [r4, #66]
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6694              		.loc 1 3821 0
 6695 0064 0023     		movs	r3, #0
 6696 0066 6364     		str	r3, [r4, #68]
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6697              		.loc 1 3824 0
 6698 0068 2268     		ldr	r2, [r4]
 6699 006a 5368     		ldr	r3, [r2, #4]
 6700 006c 23F40043 		bic	r3, r3, #32768
 6701 0070 5360     		str	r3, [r2, #4]
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6702              		.loc 1 3827 0
 6703 0072 6562     		str	r5, [r4, #36]
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6704              		.loc 1 3828 0
 6705 0074 6685     		strh	r6, [r4, #42]	@ movhi
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
ARM GAS  /tmp/ccbPnc67.s 			page 254


 6706              		.loc 1 3829 0
 6707 0076 638D     		ldrh	r3, [r4, #42]
 6708 0078 2385     		strh	r3, [r4, #40]	@ movhi
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6709              		.loc 1 3830 0
 6710 007a E762     		str	r7, [r4, #44]
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6711              		.loc 1 3831 0
 6712 007c 454B     		ldr	r3, .L544
 6713 007e 6363     		str	r3, [r4, #52]
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6714              		.loc 1 3833 0
 6715 0080 A36B     		ldr	r3, [r4, #56]
 6716 0082 002B     		cmp	r3, #0
 6717 0084 65D0     		beq	.L530
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6718              		.loc 1 3836 0
 6719 0086 444A     		ldr	r2, .L544+4
 6720 0088 DA63     		str	r2, [r3, #60]
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6721              		.loc 1 3839 0
 6722 008a A36B     		ldr	r3, [r4, #56]
 6723 008c 434A     		ldr	r2, .L544+8
 6724 008e DA64     		str	r2, [r3, #76]
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6725              		.loc 1 3842 0
 6726 0090 A26B     		ldr	r2, [r4, #56]
 6727 0092 0023     		movs	r3, #0
 6728 0094 1364     		str	r3, [r2, #64]
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6729              		.loc 1 3843 0
 6730 0096 A26B     		ldr	r2, [r4, #56]
 6731 0098 1365     		str	r3, [r2, #80]
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6732              		.loc 1 3846 0
 6733 009a 2268     		ldr	r2, [r4]
 6734 009c 238D     		ldrh	r3, [r4, #40]
 6735 009e 2832     		adds	r2, r2, #40
 6736 00a0 2946     		mov	r1, r5
 6737 00a2 A06B     		ldr	r0, [r4, #56]
 6738 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6739              	.LVL554:
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6740              		.loc 1 3863 0
 6741 00a8 0546     		mov	r5, r0
 6742              	.LVL555:
 6743 00aa 0028     		cmp	r0, #0
 6744 00ac 5FD1     		bne	.L543
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6745              		.loc 1 3866 0
 6746 00ae 638D     		ldrh	r3, [r4, #42]
 6747 00b0 228D     		ldrh	r2, [r4, #40]
 6748 00b2 9B1A     		subs	r3, r3, r2
 6749 00b4 9BB2     		uxth	r3, r3
 6750 00b6 6385     		strh	r3, [r4, #42]	@ movhi
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6751              		.loc 1 3869 0
ARM GAS  /tmp/ccbPnc67.s 			page 255


 6752 00b8 0023     		movs	r3, #0
 6753 00ba 2385     		strh	r3, [r4, #40]	@ movhi
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6754              		.loc 1 3886 0
 6755 00bc 2368     		ldr	r3, [r4]
 6756 00be 9A69     		ldr	r2, [r3, #24]
 6757 00c0 12F4803F 		tst	r2, #65536
 6758 00c4 61D1     		bne	.L533
 6759              	.L534:
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6760              		.loc 1 3894 0
 6761 00c6 0023     		movs	r3, #0
 6762 00c8 84F84030 		strb	r3, [r4, #64]
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6763              		.loc 1 3900 0
 6764 00cc 4FF40041 		mov	r1, #32768
 6765 00d0 2046     		mov	r0, r4
 6766              	.LVL556:
 6767 00d2 FFF7FEFF 		bl	I2C_Enable_IRQ
 6768              	.LVL557:
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6769              		.loc 1 3903 0
 6770 00d6 2268     		ldr	r2, [r4]
 6771 00d8 1368     		ldr	r3, [r2]
 6772 00da 43F48043 		orr	r3, r3, #16384
 6773 00de 1360     		str	r3, [r2]
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6774              		.loc 1 3905 0
 6775 00e0 96E7     		b	.L526
 6776              	.LVL558:
 6777              	.L540:
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6778              		.loc 1 3755 0
 6779 00e2 4FF40073 		mov	r3, #512
 6780              	.LVL559:
 6781 00e6 4364     		str	r3, [r0, #68]
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6782              		.loc 1 3756 0
 6783 00e8 0125     		movs	r5, #1
 6784 00ea 91E7     		b	.L526
 6785              	.LVL560:
 6786              	.L541:
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6787              		.loc 1 3770 0
 6788 00ec 0221     		movs	r1, #2
 6789 00ee 2046     		mov	r0, r4
 6790 00f0 FFF7FEFF 		bl	I2C_Disable_IRQ
 6791              	.LVL561:
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6792              		.loc 1 3772 0
 6793 00f4 2368     		ldr	r3, [r4]
 6794 00f6 1A68     		ldr	r2, [r3]
 6795 00f8 12F4004F 		tst	r2, #32768
 6796 00fc ACD0     		beq	.L529
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6797              		.loc 1 3775 0
 6798 00fe E26B     		ldr	r2, [r4, #60]
ARM GAS  /tmp/ccbPnc67.s 			page 256


 6799 0100 002A     		cmp	r2, #0
 6800 0102 A9D0     		beq	.L529
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6801              		.loc 1 3777 0
 6802 0104 1A68     		ldr	r2, [r3]
 6803 0106 22F40042 		bic	r2, r2, #32768
 6804 010a 1A60     		str	r2, [r3]
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6805              		.loc 1 3781 0
 6806 010c E36B     		ldr	r3, [r4, #60]
 6807 010e 244A     		ldr	r2, .L544+12
 6808 0110 1A65     		str	r2, [r3, #80]
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6809              		.loc 1 3784 0
 6810 0112 E06B     		ldr	r0, [r4, #60]
 6811 0114 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6812              	.LVL562:
 6813 0118 0028     		cmp	r0, #0
 6814 011a 9DD0     		beq	.L529
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6815              		.loc 1 3787 0
 6816 011c E06B     		ldr	r0, [r4, #60]
 6817 011e 036D     		ldr	r3, [r0, #80]
 6818 0120 9847     		blx	r3
 6819              	.LVL563:
 6820 0122 99E7     		b	.L529
 6821              	.L542:
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6822              		.loc 1 3794 0
 6823 0124 2368     		ldr	r3, [r4]
 6824 0126 1A68     		ldr	r2, [r3]
 6825 0128 12F4804F 		tst	r2, #16384
 6826 012c 94D0     		beq	.L529
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6827              		.loc 1 3796 0
 6828 012e 1A68     		ldr	r2, [r3]
 6829 0130 22F48042 		bic	r2, r2, #16384
 6830 0134 1A60     		str	r2, [r3]
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6831              		.loc 1 3799 0
 6832 0136 A36B     		ldr	r3, [r4, #56]
 6833 0138 002B     		cmp	r3, #0
 6834 013a 8DD0     		beq	.L529
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6835              		.loc 1 3803 0
 6836 013c 184A     		ldr	r2, .L544+12
 6837 013e 1A65     		str	r2, [r3, #80]
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6838              		.loc 1 3806 0
 6839 0140 A06B     		ldr	r0, [r4, #56]
 6840 0142 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6841              	.LVL564:
 6842 0146 0028     		cmp	r0, #0
 6843 0148 86D0     		beq	.L529
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6844              		.loc 1 3809 0
 6845 014a A06B     		ldr	r0, [r4, #56]
ARM GAS  /tmp/ccbPnc67.s 			page 257


 6846 014c 036D     		ldr	r3, [r0, #80]
 6847 014e 9847     		blx	r3
 6848              	.LVL565:
 6849 0150 82E7     		b	.L529
 6850              	.L530:
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6851              		.loc 1 3851 0
 6852 0152 2823     		movs	r3, #40
 6853 0154 84F84130 		strb	r3, [r4, #65]
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6854              		.loc 1 3852 0
 6855 0158 0022     		movs	r2, #0
 6856 015a 84F84220 		strb	r2, [r4, #66]
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6857              		.loc 1 3855 0
 6858 015e 636C     		ldr	r3, [r4, #68]
 6859 0160 43F08003 		orr	r3, r3, #128
 6860 0164 6364     		str	r3, [r4, #68]
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6861              		.loc 1 3858 0
 6862 0166 84F84020 		strb	r2, [r4, #64]
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6863              		.loc 1 3860 0
 6864 016a 0125     		movs	r5, #1
 6865              	.LVL566:
 6866 016c 50E7     		b	.L526
 6867              	.LVL567:
 6868              	.L543:
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6869              		.loc 1 3874 0
 6870 016e 2823     		movs	r3, #40
 6871 0170 84F84130 		strb	r3, [r4, #65]
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6872              		.loc 1 3875 0
 6873 0174 0022     		movs	r2, #0
 6874 0176 84F84220 		strb	r2, [r4, #66]
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6875              		.loc 1 3878 0
 6876 017a 636C     		ldr	r3, [r4, #68]
 6877 017c 43F01003 		orr	r3, r3, #16
 6878 0180 6364     		str	r3, [r4, #68]
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6879              		.loc 1 3881 0
 6880 0182 84F84020 		strb	r2, [r4, #64]
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6881              		.loc 1 3883 0
 6882 0186 0125     		movs	r5, #1
 6883 0188 42E7     		b	.L526
 6884              	.L533:
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6885              		.loc 1 3890 0
 6886 018a 0822     		movs	r2, #8
 6887 018c DA61     		str	r2, [r3, #28]
 6888 018e 9AE7     		b	.L534
 6889              	.LVL568:
 6890              	.L536:
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 258


 6891              		.loc 1 3760 0
 6892 0190 0225     		movs	r5, #2
 6893 0192 3DE7     		b	.L526
 6894              	.L545:
 6895              		.align	2
 6896              	.L544:
 6897 0194 00000000 		.word	I2C_Slave_ISR_DMA
 6898 0198 00000000 		.word	I2C_DMASlaveTransmitCplt
 6899 019c 00000000 		.word	I2C_DMAError
 6900 01a0 00000000 		.word	I2C_DMAAbort
 6901              		.cfi_endproc
 6902              	.LFE169:
 6904              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6905              		.align	1
 6906              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6907              		.syntax unified
 6908              		.thumb
 6909              		.thumb_func
 6910              		.fpu fpv5-d16
 6912              	HAL_I2C_Slave_Seq_Receive_IT:
 6913              	.LFB170:
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 6914              		.loc 1 3924 0
 6915              		.cfi_startproc
 6916              		@ args = 0, pretend = 0, frame = 0
 6917              		@ frame_needed = 0, uses_anonymous_args = 0
 6918              	.LVL569:
 6919 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6920              	.LCFI105:
 6921              		.cfi_def_cfa_offset 24
 6922              		.cfi_offset 3, -24
 6923              		.cfi_offset 4, -20
 6924              		.cfi_offset 5, -16
 6925              		.cfi_offset 6, -12
 6926              		.cfi_offset 7, -8
 6927              		.cfi_offset 14, -4
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6928              		.loc 1 3928 0
 6929 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6930 0006 04F02804 		and	r4, r4, #40
 6931 000a 282C     		cmp	r4, #40
 6932 000c 01D0     		beq	.L554
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6933              		.loc 1 4004 0
 6934 000e 0120     		movs	r0, #1
 6935              	.LVL570:
 6936              	.L547:
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6937              		.loc 1 4006 0
 6938 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6939              	.LVL571:
 6940              	.L554:
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6941              		.loc 1 3930 0
 6942 0012 B2FA82F4 		clz	r4, r2
 6943 0016 6409     		lsrs	r4, r4, #5
 6944 0018 0029     		cmp	r1, #0
ARM GAS  /tmp/ccbPnc67.s 			page 259


 6945 001a 08BF     		it	eq
 6946 001c 0124     		moveq	r4, #1
 6947 001e 24B1     		cbz	r4, .L548
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6948              		.loc 1 3932 0
 6949 0020 4FF40073 		mov	r3, #512
 6950              	.LVL572:
 6951 0024 4364     		str	r3, [r0, #68]
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6952              		.loc 1 3933 0
 6953 0026 0120     		movs	r0, #1
 6954              	.LVL573:
 6955 0028 F2E7     		b	.L547
 6956              	.LVL574:
 6957              	.L548:
 6958 002a 1F46     		mov	r7, r3
 6959 002c 1646     		mov	r6, r2
 6960 002e 0C46     		mov	r4, r1
 6961 0030 0546     		mov	r5, r0
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6962              		.loc 1 3937 0
 6963 0032 48F20201 		movw	r1, #32770
 6964              	.LVL575:
 6965 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 6966              	.LVL576:
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6967              		.loc 1 3940 0
 6968 003a 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6969 003e 012B     		cmp	r3, #1
 6970 0040 47D0     		beq	.L552
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6971              		.loc 1 3940 0 is_stmt 0 discriminator 2
 6972 0042 0123     		movs	r3, #1
 6973 0044 85F84030 		strb	r3, [r5, #64]
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6974              		.loc 1 3944 0 is_stmt 1 discriminator 2
 6975 0048 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6976 004c DBB2     		uxtb	r3, r3
 6977 004e 292B     		cmp	r3, #41
 6978 0050 24D0     		beq	.L555
 6979              	.L549:
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6980              		.loc 1 3970 0
 6981 0052 2A23     		movs	r3, #42
 6982 0054 85F84130 		strb	r3, [r5, #65]
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6983              		.loc 1 3971 0
 6984 0058 2023     		movs	r3, #32
 6985 005a 85F84230 		strb	r3, [r5, #66]
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6986              		.loc 1 3972 0
 6987 005e 0023     		movs	r3, #0
 6988 0060 6B64     		str	r3, [r5, #68]
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6989              		.loc 1 3975 0
 6990 0062 2A68     		ldr	r2, [r5]
 6991 0064 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccbPnc67.s 			page 260


 6992 0066 23F40043 		bic	r3, r3, #32768
 6993 006a 5360     		str	r3, [r2, #4]
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6994              		.loc 1 3978 0
 6995 006c 6C62     		str	r4, [r5, #36]
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6996              		.loc 1 3979 0
 6997 006e 6E85     		strh	r6, [r5, #42]	@ movhi
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6998              		.loc 1 3980 0
 6999 0070 6B8D     		ldrh	r3, [r5, #42]
 7000 0072 2B85     		strh	r3, [r5, #40]	@ movhi
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 7001              		.loc 1 3981 0
 7002 0074 EF62     		str	r7, [r5, #44]
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7003              		.loc 1 3982 0
 7004 0076 184B     		ldr	r3, .L556
 7005 0078 6B63     		str	r3, [r5, #52]
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7006              		.loc 1 3984 0
 7007 007a 2B68     		ldr	r3, [r5]
 7008 007c 9A69     		ldr	r2, [r3, #24]
 7009 007e 12F4803F 		tst	r2, #65536
 7010 0082 01D1     		bne	.L550
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7011              		.loc 1 3988 0
 7012 0084 0822     		movs	r2, #8
 7013 0086 DA61     		str	r2, [r3, #28]
 7014              	.L550:
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7015              		.loc 1 3992 0
 7016 0088 0024     		movs	r4, #0
 7017              	.LVL577:
 7018 008a 85F84040 		strb	r4, [r5, #64]
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7019              		.loc 1 3998 0
 7020 008e 48F20201 		movw	r1, #32770
 7021 0092 2846     		mov	r0, r5
 7022 0094 FFF7FEFF 		bl	I2C_Enable_IRQ
 7023              	.LVL578:
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7024              		.loc 1 4000 0
 7025 0098 2046     		mov	r0, r4
 7026 009a B9E7     		b	.L547
 7027              	.LVL579:
 7028              	.L555:
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7029              		.loc 1 3947 0
 7030 009c 0121     		movs	r1, #1
 7031 009e 2846     		mov	r0, r5
 7032 00a0 FFF7FEFF 		bl	I2C_Disable_IRQ
 7033              	.LVL580:
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 7034              		.loc 1 3949 0
 7035 00a4 2B68     		ldr	r3, [r5]
 7036 00a6 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccbPnc67.s 			page 261


 7037 00a8 12F4804F 		tst	r2, #16384
 7038 00ac D1D0     		beq	.L549
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7039              		.loc 1 3951 0
 7040 00ae 1A68     		ldr	r2, [r3]
 7041 00b0 22F48042 		bic	r2, r2, #16384
 7042 00b4 1A60     		str	r2, [r3]
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 7043              		.loc 1 3954 0
 7044 00b6 AB6B     		ldr	r3, [r5, #56]
 7045 00b8 002B     		cmp	r3, #0
 7046 00ba CAD0     		beq	.L549
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7047              		.loc 1 3958 0
 7048 00bc 074A     		ldr	r2, .L556+4
 7049 00be 1A65     		str	r2, [r3, #80]
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 7050              		.loc 1 3961 0
 7051 00c0 A86B     		ldr	r0, [r5, #56]
 7052 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7053              	.LVL581:
 7054 00c6 0028     		cmp	r0, #0
 7055 00c8 C3D0     		beq	.L549
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 7056              		.loc 1 3964 0
 7057 00ca A86B     		ldr	r0, [r5, #56]
 7058 00cc 036D     		ldr	r3, [r0, #80]
 7059 00ce 9847     		blx	r3
 7060              	.LVL582:
 7061 00d0 BFE7     		b	.L549
 7062              	.L552:
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7063              		.loc 1 3940 0
 7064 00d2 0220     		movs	r0, #2
 7065 00d4 9CE7     		b	.L547
 7066              	.L557:
 7067 00d6 00BF     		.align	2
 7068              	.L556:
 7069 00d8 00000000 		.word	I2C_Slave_ISR_IT
 7070 00dc 00000000 		.word	I2C_DMAAbort
 7071              		.cfi_endproc
 7072              	.LFE170:
 7074              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 7075              		.align	1
 7076              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 7077              		.syntax unified
 7078              		.thumb
 7079              		.thumb_func
 7080              		.fpu fpv5-d16
 7082              	HAL_I2C_Slave_Seq_Receive_DMA:
 7083              	.LFB171:
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 7084              		.loc 1 4019 0
 7085              		.cfi_startproc
 7086              		@ args = 0, pretend = 0, frame = 0
 7087              		@ frame_needed = 0, uses_anonymous_args = 0
 7088              	.LVL583:
ARM GAS  /tmp/ccbPnc67.s 			page 262


 7089 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7090              	.LCFI106:
 7091              		.cfi_def_cfa_offset 24
 7092              		.cfi_offset 3, -24
 7093              		.cfi_offset 4, -20
 7094              		.cfi_offset 5, -16
 7095              		.cfi_offset 6, -12
 7096              		.cfi_offset 7, -8
 7097              		.cfi_offset 14, -4
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7098              		.loc 1 4025 0
 7099 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 7100 0006 04F02804 		and	r4, r4, #40
 7101 000a 282C     		cmp	r4, #40
 7102 000c 02D0     		beq	.L572
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7103              		.loc 1 4183 0
 7104 000e 0125     		movs	r5, #1
 7105              	.LVL584:
 7106              	.L559:
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7107              		.loc 1 4185 0
 7108 0010 2846     		mov	r0, r5
 7109 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7110              	.LVL585:
 7111              	.L572:
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7112              		.loc 1 4027 0
 7113 0014 B2FA82F4 		clz	r4, r2
 7114 0018 6409     		lsrs	r4, r4, #5
 7115 001a 0029     		cmp	r1, #0
 7116 001c 08BF     		it	eq
 7117 001e 0124     		moveq	r4, #1
 7118 0020 24B1     		cbz	r4, .L560
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 7119              		.loc 1 4029 0
 7120 0022 4FF40073 		mov	r3, #512
 7121              	.LVL586:
 7122 0026 4364     		str	r3, [r0, #68]
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7123              		.loc 1 4030 0
 7124 0028 0125     		movs	r5, #1
 7125 002a F1E7     		b	.L559
 7126              	.LVL587:
 7127              	.L560:
 7128 002c 1F46     		mov	r7, r3
 7129 002e 1646     		mov	r6, r2
 7130 0030 0D46     		mov	r5, r1
 7131 0032 0446     		mov	r4, r0
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7132              		.loc 1 4034 0
 7133 0034 48F20201 		movw	r1, #32770
 7134              	.LVL588:
 7135 0038 FFF7FEFF 		bl	I2C_Disable_IRQ
 7136              	.LVL589:
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7137              		.loc 1 4037 0
ARM GAS  /tmp/ccbPnc67.s 			page 263


 7138 003c 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 7139 0040 012B     		cmp	r3, #1
 7140 0042 00F0A480 		beq	.L569
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7141              		.loc 1 4037 0 is_stmt 0 discriminator 2
 7142 0046 0123     		movs	r3, #1
 7143 0048 84F84030 		strb	r3, [r4, #64]
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7144              		.loc 1 4041 0 is_stmt 1 discriminator 2
 7145 004c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7146 0050 DBB2     		uxtb	r3, r3
 7147 0052 292B     		cmp	r3, #41
 7148 0054 49D0     		beq	.L573
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7149              		.loc 1 4066 0
 7150 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7151 005a DBB2     		uxtb	r3, r3
 7152 005c 2A2B     		cmp	r3, #42
 7153 005e 60D0     		beq	.L574
 7154              	.L562:
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7155              		.loc 1 4093 0
 7156 0060 2A23     		movs	r3, #42
 7157 0062 84F84130 		strb	r3, [r4, #65]
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7158              		.loc 1 4094 0
 7159 0066 2023     		movs	r3, #32
 7160 0068 84F84230 		strb	r3, [r4, #66]
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7161              		.loc 1 4095 0
 7162 006c 0023     		movs	r3, #0
 7163 006e 6364     		str	r3, [r4, #68]
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7164              		.loc 1 4098 0
 7165 0070 2268     		ldr	r2, [r4]
 7166 0072 5368     		ldr	r3, [r2, #4]
 7167 0074 23F40043 		bic	r3, r3, #32768
 7168 0078 5360     		str	r3, [r2, #4]
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7169              		.loc 1 4101 0
 7170 007a 6562     		str	r5, [r4, #36]
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7171              		.loc 1 4102 0
 7172 007c 6685     		strh	r6, [r4, #42]	@ movhi
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7173              		.loc 1 4103 0
 7174 007e 638D     		ldrh	r3, [r4, #42]
 7175 0080 2385     		strh	r3, [r4, #40]	@ movhi
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7176              		.loc 1 4104 0
 7177 0082 E762     		str	r7, [r4, #44]
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7178              		.loc 1 4105 0
 7179 0084 434B     		ldr	r3, .L576
 7180 0086 6363     		str	r3, [r4, #52]
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7181              		.loc 1 4107 0
ARM GAS  /tmp/ccbPnc67.s 			page 264


 7182 0088 E36B     		ldr	r3, [r4, #60]
 7183 008a 002B     		cmp	r3, #0
 7184 008c 60D0     		beq	.L563
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7185              		.loc 1 4110 0
 7186 008e 424A     		ldr	r2, .L576+4
 7187 0090 DA63     		str	r2, [r3, #60]
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7188              		.loc 1 4113 0
 7189 0092 E36B     		ldr	r3, [r4, #60]
 7190 0094 414A     		ldr	r2, .L576+8
 7191 0096 DA64     		str	r2, [r3, #76]
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7192              		.loc 1 4116 0
 7193 0098 E26B     		ldr	r2, [r4, #60]
 7194 009a 0023     		movs	r3, #0
 7195 009c 1364     		str	r3, [r2, #64]
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7196              		.loc 1 4117 0
 7197 009e E26B     		ldr	r2, [r4, #60]
 7198 00a0 1365     		str	r3, [r2, #80]
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7199              		.loc 1 4120 0
 7200 00a2 2168     		ldr	r1, [r4]
 7201 00a4 238D     		ldrh	r3, [r4, #40]
 7202 00a6 2A46     		mov	r2, r5
 7203 00a8 2431     		adds	r1, r1, #36
 7204 00aa E06B     		ldr	r0, [r4, #60]
 7205 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 7206              	.LVL590:
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7207              		.loc 1 4137 0
 7208 00b0 0546     		mov	r5, r0
 7209              	.LVL591:
 7210 00b2 0028     		cmp	r0, #0
 7211 00b4 5AD1     		bne	.L575
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7212              		.loc 1 4140 0
 7213 00b6 638D     		ldrh	r3, [r4, #42]
 7214 00b8 228D     		ldrh	r2, [r4, #40]
 7215 00ba 9B1A     		subs	r3, r3, r2
 7216 00bc 9BB2     		uxth	r3, r3
 7217 00be 6385     		strh	r3, [r4, #42]	@ movhi
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7218              		.loc 1 4143 0
 7219 00c0 0023     		movs	r3, #0
 7220 00c2 2385     		strh	r3, [r4, #40]	@ movhi
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7221              		.loc 1 4160 0
 7222 00c4 2368     		ldr	r3, [r4]
 7223 00c6 9A69     		ldr	r2, [r3, #24]
 7224 00c8 12F4803F 		tst	r2, #65536
 7225 00cc 5CD0     		beq	.L566
 7226              	.L567:
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7227              		.loc 1 4168 0
 7228 00ce 0023     		movs	r3, #0
ARM GAS  /tmp/ccbPnc67.s 			page 265


 7229 00d0 84F84030 		strb	r3, [r4, #64]
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7230              		.loc 1 4174 0
 7231 00d4 48F20201 		movw	r1, #32770
 7232 00d8 2046     		mov	r0, r4
 7233              	.LVL592:
 7234 00da FFF7FEFF 		bl	I2C_Enable_IRQ
 7235              	.LVL593:
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7236              		.loc 1 4177 0
 7237 00de 2268     		ldr	r2, [r4]
 7238 00e0 1368     		ldr	r3, [r2]
 7239 00e2 43F40043 		orr	r3, r3, #32768
 7240 00e6 1360     		str	r3, [r2]
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7241              		.loc 1 4179 0
 7242 00e8 92E7     		b	.L559
 7243              	.LVL594:
 7244              	.L573:
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7245              		.loc 1 4044 0
 7246 00ea 0121     		movs	r1, #1
 7247 00ec 2046     		mov	r0, r4
 7248 00ee FFF7FEFF 		bl	I2C_Disable_IRQ
 7249              	.LVL595:
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 7250              		.loc 1 4046 0
 7251 00f2 2368     		ldr	r3, [r4]
 7252 00f4 1A68     		ldr	r2, [r3]
 7253 00f6 12F4804F 		tst	r2, #16384
 7254 00fa B1D0     		beq	.L562
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 7255              		.loc 1 4049 0
 7256 00fc A26B     		ldr	r2, [r4, #56]
 7257 00fe 002A     		cmp	r2, #0
 7258 0100 AED0     		beq	.L562
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7259              		.loc 1 4051 0
 7260 0102 1A68     		ldr	r2, [r3]
 7261 0104 22F48042 		bic	r2, r2, #16384
 7262 0108 1A60     		str	r2, [r3]
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7263              		.loc 1 4055 0
 7264 010a A36B     		ldr	r3, [r4, #56]
 7265 010c 244A     		ldr	r2, .L576+12
 7266 010e 1A65     		str	r2, [r3, #80]
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 7267              		.loc 1 4058 0
 7268 0110 A06B     		ldr	r0, [r4, #56]
 7269 0112 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7270              	.LVL596:
 7271 0116 0028     		cmp	r0, #0
 7272 0118 A2D0     		beq	.L562
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 7273              		.loc 1 4061 0
 7274 011a A06B     		ldr	r0, [r4, #56]
 7275 011c 036D     		ldr	r3, [r0, #80]
ARM GAS  /tmp/ccbPnc67.s 			page 266


 7276 011e 9847     		blx	r3
 7277              	.LVL597:
 7278 0120 9EE7     		b	.L562
 7279              	.L574:
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 7280              		.loc 1 4068 0
 7281 0122 2368     		ldr	r3, [r4]
 7282 0124 1A68     		ldr	r2, [r3]
 7283 0126 12F4004F 		tst	r2, #32768
 7284 012a 99D0     		beq	.L562
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7285              		.loc 1 4070 0
 7286 012c 1A68     		ldr	r2, [r3]
 7287 012e 22F40042 		bic	r2, r2, #32768
 7288 0132 1A60     		str	r2, [r3]
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 7289              		.loc 1 4073 0
 7290 0134 E36B     		ldr	r3, [r4, #60]
 7291 0136 002B     		cmp	r3, #0
 7292 0138 92D0     		beq	.L562
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7293              		.loc 1 4077 0
 7294 013a 194A     		ldr	r2, .L576+12
 7295 013c 1A65     		str	r2, [r3, #80]
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 7296              		.loc 1 4080 0
 7297 013e E06B     		ldr	r0, [r4, #60]
 7298 0140 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7299              	.LVL598:
 7300 0144 0028     		cmp	r0, #0
 7301 0146 8BD0     		beq	.L562
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 7302              		.loc 1 4083 0
 7303 0148 E06B     		ldr	r0, [r4, #60]
 7304 014a 036D     		ldr	r3, [r0, #80]
 7305 014c 9847     		blx	r3
 7306              	.LVL599:
 7307 014e 87E7     		b	.L562
 7308              	.L563:
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7309              		.loc 1 4125 0
 7310 0150 2823     		movs	r3, #40
 7311 0152 84F84130 		strb	r3, [r4, #65]
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7312              		.loc 1 4126 0
 7313 0156 0022     		movs	r2, #0
 7314 0158 84F84220 		strb	r2, [r4, #66]
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7315              		.loc 1 4129 0
 7316 015c 636C     		ldr	r3, [r4, #68]
 7317 015e 43F08003 		orr	r3, r3, #128
 7318 0162 6364     		str	r3, [r4, #68]
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7319              		.loc 1 4132 0
 7320 0164 84F84020 		strb	r2, [r4, #64]
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7321              		.loc 1 4134 0
ARM GAS  /tmp/ccbPnc67.s 			page 267


 7322 0168 0125     		movs	r5, #1
 7323              	.LVL600:
 7324 016a 51E7     		b	.L559
 7325              	.LVL601:
 7326              	.L575:
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7327              		.loc 1 4148 0
 7328 016c 2823     		movs	r3, #40
 7329 016e 84F84130 		strb	r3, [r4, #65]
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7330              		.loc 1 4149 0
 7331 0172 0022     		movs	r2, #0
 7332 0174 84F84220 		strb	r2, [r4, #66]
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7333              		.loc 1 4152 0
 7334 0178 636C     		ldr	r3, [r4, #68]
 7335 017a 43F01003 		orr	r3, r3, #16
 7336 017e 6364     		str	r3, [r4, #68]
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7337              		.loc 1 4155 0
 7338 0180 84F84020 		strb	r2, [r4, #64]
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7339              		.loc 1 4157 0
 7340 0184 0125     		movs	r5, #1
 7341 0186 43E7     		b	.L559
 7342              	.L566:
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7343              		.loc 1 4164 0
 7344 0188 0822     		movs	r2, #8
 7345 018a DA61     		str	r2, [r3, #28]
 7346 018c 9FE7     		b	.L567
 7347              	.LVL602:
 7348              	.L569:
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7349              		.loc 1 4037 0
 7350 018e 0225     		movs	r5, #2
 7351              	.LVL603:
 7352 0190 3EE7     		b	.L559
 7353              	.L577:
 7354 0192 00BF     		.align	2
 7355              	.L576:
 7356 0194 00000000 		.word	I2C_Slave_ISR_DMA
 7357 0198 00000000 		.word	I2C_DMASlaveReceiveCplt
 7358 019c 00000000 		.word	I2C_DMAError
 7359 01a0 00000000 		.word	I2C_DMAAbort
 7360              		.cfi_endproc
 7361              	.LFE171:
 7363              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7364              		.align	1
 7365              		.global	HAL_I2C_EnableListen_IT
 7366              		.syntax unified
 7367              		.thumb
 7368              		.thumb_func
 7369              		.fpu fpv5-d16
 7371              	HAL_I2C_EnableListen_IT:
 7372              	.LFB172:
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
ARM GAS  /tmp/ccbPnc67.s 			page 268


 7373              		.loc 1 4194 0
 7374              		.cfi_startproc
 7375              		@ args = 0, pretend = 0, frame = 0
 7376              		@ frame_needed = 0, uses_anonymous_args = 0
 7377              	.LVL604:
 7378 0000 08B5     		push	{r3, lr}
 7379              	.LCFI107:
 7380              		.cfi_def_cfa_offset 8
 7381              		.cfi_offset 3, -8
 7382              		.cfi_offset 14, -4
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7383              		.loc 1 4195 0
 7384 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7385 0006 DBB2     		uxtb	r3, r3
 7386 0008 202B     		cmp	r3, #32
 7387 000a 01D0     		beq	.L582
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7388              		.loc 1 4207 0
 7389 000c 0220     		movs	r0, #2
 7390              	.LVL605:
 7391              	.L579:
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7392              		.loc 1 4209 0
 7393 000e 08BD     		pop	{r3, pc}
 7394              	.LVL606:
 7395              	.L582:
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7396              		.loc 1 4197 0
 7397 0010 2823     		movs	r3, #40
 7398 0012 80F84130 		strb	r3, [r0, #65]
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7399              		.loc 1 4198 0
 7400 0016 044B     		ldr	r3, .L583
 7401 0018 4363     		str	r3, [r0, #52]
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7402              		.loc 1 4201 0
 7403 001a 4FF40041 		mov	r1, #32768
 7404 001e FFF7FEFF 		bl	I2C_Enable_IRQ
 7405              	.LVL607:
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7406              		.loc 1 4203 0
 7407 0022 0020     		movs	r0, #0
 7408 0024 F3E7     		b	.L579
 7409              	.L584:
 7410 0026 00BF     		.align	2
 7411              	.L583:
 7412 0028 00000000 		.word	I2C_Slave_ISR_IT
 7413              		.cfi_endproc
 7414              	.LFE172:
 7416              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7417              		.align	1
 7418              		.global	HAL_I2C_DisableListen_IT
 7419              		.syntax unified
 7420              		.thumb
 7421              		.thumb_func
 7422              		.fpu fpv5-d16
 7424              	HAL_I2C_DisableListen_IT:
ARM GAS  /tmp/ccbPnc67.s 			page 269


 7425              	.LFB173:
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7426              		.loc 1 4218 0
 7427              		.cfi_startproc
 7428              		@ args = 0, pretend = 0, frame = 0
 7429              		@ frame_needed = 0, uses_anonymous_args = 0
 7430              	.LVL608:
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7431              		.loc 1 4223 0
 7432 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7433 0004 DBB2     		uxtb	r3, r3
 7434 0006 282B     		cmp	r3, #40
 7435 0008 01D0     		beq	.L592
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7436              		.loc 1 4238 0
 7437 000a 0220     		movs	r0, #2
 7438              	.LVL609:
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7439              		.loc 1 4240 0
 7440 000c 7047     		bx	lr
 7441              	.LVL610:
 7442              	.L592:
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7443              		.loc 1 4218 0
 7444 000e 10B5     		push	{r4, lr}
 7445              	.LCFI108:
 7446              		.cfi_def_cfa_offset 8
 7447              		.cfi_offset 4, -8
 7448              		.cfi_offset 14, -4
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7449              		.loc 1 4225 0
 7450 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7451              	.LVL611:
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7452              		.loc 1 4226 0
 7453 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7454 0018 02F00302 		and	r2, r2, #3
 7455              	.LVL612:
 7456 001c 1343     		orrs	r3, r3, r2
 7457 001e 0363     		str	r3, [r0, #48]
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7458              		.loc 1 4227 0
 7459 0020 2023     		movs	r3, #32
 7460 0022 80F84130 		strb	r3, [r0, #65]
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7461              		.loc 1 4228 0
 7462 0026 0024     		movs	r4, #0
 7463 0028 80F84240 		strb	r4, [r0, #66]
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7464              		.loc 1 4229 0
 7465 002c 4463     		str	r4, [r0, #52]
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7466              		.loc 1 4232 0
 7467 002e 4FF40041 		mov	r1, #32768
 7468 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7469              	.LVL613:
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccbPnc67.s 			page 270


 7470              		.loc 1 4234 0
 7471 0036 2046     		mov	r0, r4
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7472              		.loc 1 4240 0
 7473 0038 10BD     		pop	{r4, pc}
 7474              		.cfi_endproc
 7475              	.LFE173:
 7477              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7478              		.align	1
 7479              		.global	HAL_I2C_Master_Abort_IT
 7480              		.syntax unified
 7481              		.thumb
 7482              		.thumb_func
 7483              		.fpu fpv5-d16
 7485              	HAL_I2C_Master_Abort_IT:
 7486              	.LFB174:
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7487              		.loc 1 4251 0
 7488              		.cfi_startproc
 7489              		@ args = 0, pretend = 0, frame = 0
 7490              		@ frame_needed = 0, uses_anonymous_args = 0
 7491              	.LVL614:
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7492              		.loc 1 4252 0
 7493 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7494 0004 DBB2     		uxtb	r3, r3
 7495 0006 102B     		cmp	r3, #16
 7496 0008 01D0     		beq	.L603
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7497              		.loc 1 4294 0
 7498 000a 0120     		movs	r0, #1
 7499              	.LVL615:
 7500 000c 7047     		bx	lr
 7501              	.LVL616:
 7502              	.L603:
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7503              		.loc 1 4255 0
 7504 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7505 0012 012B     		cmp	r3, #1
 7506 0014 32D0     		beq	.L598
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7507              		.loc 1 4251 0 discriminator 2
 7508 0016 30B5     		push	{r4, r5, lr}
 7509              	.LCFI109:
 7510              		.cfi_def_cfa_offset 12
 7511              		.cfi_offset 4, -12
 7512              		.cfi_offset 5, -8
 7513              		.cfi_offset 14, -4
 7514 0018 83B0     		sub	sp, sp, #12
 7515              	.LCFI110:
 7516              		.cfi_def_cfa_offset 24
 7517 001a 0C46     		mov	r4, r1
 7518 001c 0546     		mov	r5, r0
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7519              		.loc 1 4255 0 discriminator 2
 7520 001e 0123     		movs	r3, #1
 7521 0020 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/ccbPnc67.s 			page 271


4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7522              		.loc 1 4258 0 discriminator 2
 7523 0024 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7524 0028 DBB2     		uxtb	r3, r3
 7525 002a 212B     		cmp	r3, #33
 7526 002c 1AD0     		beq	.L604
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7527              		.loc 1 4263 0
 7528 002e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7529 0032 DBB2     		uxtb	r3, r3
 7530 0034 222B     		cmp	r3, #34
 7531 0036 1BD0     		beq	.L605
 7532              	.LVL617:
 7533              	.L596:
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7534              		.loc 1 4274 0
 7535 0038 6023     		movs	r3, #96
 7536 003a 85F84130 		strb	r3, [r5, #65]
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7537              		.loc 1 4278 0
 7538 003e 104B     		ldr	r3, .L606
 7539 0040 0093     		str	r3, [sp]
 7540 0042 4FF00073 		mov	r3, #33554432
 7541 0046 0122     		movs	r2, #1
 7542 0048 2146     		mov	r1, r4
 7543 004a 2846     		mov	r0, r5
 7544 004c FFF7FEFF 		bl	I2C_TransferConfig
 7545              	.LVL618:
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7546              		.loc 1 4281 0
 7547 0050 0024     		movs	r4, #0
 7548 0052 85F84040 		strb	r4, [r5, #64]
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7549              		.loc 1 4286 0
 7550 0056 2021     		movs	r1, #32
 7551 0058 2846     		mov	r0, r5
 7552 005a FFF7FEFF 		bl	I2C_Enable_IRQ
 7553              	.LVL619:
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7554              		.loc 1 4288 0
 7555 005e 2046     		mov	r0, r4
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7556              		.loc 1 4296 0
 7557 0060 03B0     		add	sp, sp, #12
 7558              	.LCFI111:
 7559              		.cfi_remember_state
 7560              		.cfi_def_cfa_offset 12
 7561              		@ sp needed
 7562 0062 30BD     		pop	{r4, r5, pc}
 7563              	.LVL620:
 7564              	.L604:
 7565              	.LCFI112:
 7566              		.cfi_restore_state
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7567              		.loc 1 4260 0
 7568 0064 0121     		movs	r1, #1
 7569              	.LVL621:
ARM GAS  /tmp/ccbPnc67.s 			page 272


 7570 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 7571              	.LVL622:
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7572              		.loc 1 4261 0
 7573 006a 1123     		movs	r3, #17
 7574 006c 2B63     		str	r3, [r5, #48]
 7575 006e E3E7     		b	.L596
 7576              	.LVL623:
 7577              	.L605:
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7578              		.loc 1 4265 0
 7579 0070 0221     		movs	r1, #2
 7580              	.LVL624:
 7581 0072 FFF7FEFF 		bl	I2C_Disable_IRQ
 7582              	.LVL625:
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7583              		.loc 1 4266 0
 7584 0076 1223     		movs	r3, #18
 7585 0078 2B63     		str	r3, [r5, #48]
 7586 007a DDE7     		b	.L596
 7587              	.LVL626:
 7588              	.L598:
 7589              	.LCFI113:
 7590              		.cfi_def_cfa_offset 0
 7591              		.cfi_restore 4
 7592              		.cfi_restore 5
 7593              		.cfi_restore 14
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7594              		.loc 1 4255 0
 7595 007c 0220     		movs	r0, #2
 7596              	.LVL627:
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7597              		.loc 1 4296 0
 7598 007e 7047     		bx	lr
 7599              	.L607:
 7600              		.align	2
 7601              	.L606:
 7602 0080 00400080 		.word	-2147467264
 7603              		.cfi_endproc
 7604              	.LFE174:
 7606              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7607              		.align	1
 7608              		.global	HAL_I2C_EV_IRQHandler
 7609              		.syntax unified
 7610              		.thumb
 7611              		.thumb_func
 7612              		.fpu fpv5-d16
 7614              	HAL_I2C_EV_IRQHandler:
 7615              	.LFB175:
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7616              		.loc 1 4313 0
 7617              		.cfi_startproc
 7618              		@ args = 0, pretend = 0, frame = 0
 7619              		@ frame_needed = 0, uses_anonymous_args = 0
 7620              	.LVL628:
 7621 0000 08B5     		push	{r3, lr}
 7622              	.LCFI114:
ARM GAS  /tmp/ccbPnc67.s 			page 273


 7623              		.cfi_def_cfa_offset 8
 7624              		.cfi_offset 3, -8
 7625              		.cfi_offset 14, -4
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7626              		.loc 1 4315 0
 7627 0002 0368     		ldr	r3, [r0]
 7628 0004 9969     		ldr	r1, [r3, #24]
 7629              	.LVL629:
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7630              		.loc 1 4316 0
 7631 0006 1A68     		ldr	r2, [r3]
 7632              	.LVL630:
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7633              		.loc 1 4319 0
 7634 0008 436B     		ldr	r3, [r0, #52]
 7635 000a 03B1     		cbz	r3, .L608
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7636              		.loc 1 4321 0
 7637 000c 9847     		blx	r3
 7638              	.LVL631:
 7639              	.L608:
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7640              		.loc 1 4323 0
 7641 000e 08BD     		pop	{r3, pc}
 7642              		.cfi_endproc
 7643              	.LFE175:
 7645              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7646              		.align	1
 7647              		.weak	HAL_I2C_MasterTxCpltCallback
 7648              		.syntax unified
 7649              		.thumb
 7650              		.thumb_func
 7651              		.fpu fpv5-d16
 7653              	HAL_I2C_MasterTxCpltCallback:
 7654              	.LFB177:
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7655              		.loc 1 4381 0
 7656              		.cfi_startproc
 7657              		@ args = 0, pretend = 0, frame = 0
 7658              		@ frame_needed = 0, uses_anonymous_args = 0
 7659              		@ link register save eliminated.
 7660              	.LVL632:
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7661              		.loc 1 4388 0
 7662 0000 7047     		bx	lr
 7663              		.cfi_endproc
 7664              	.LFE177:
 7666              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7667              		.align	1
 7668              		.weak	HAL_I2C_MasterRxCpltCallback
 7669              		.syntax unified
 7670              		.thumb
 7671              		.thumb_func
 7672              		.fpu fpv5-d16
 7674              	HAL_I2C_MasterRxCpltCallback:
 7675              	.LFB178:
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccbPnc67.s 			page 274


 7676              		.loc 1 4397 0
 7677              		.cfi_startproc
 7678              		@ args = 0, pretend = 0, frame = 0
 7679              		@ frame_needed = 0, uses_anonymous_args = 0
 7680              		@ link register save eliminated.
 7681              	.LVL633:
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7682              		.loc 1 4404 0
 7683 0000 7047     		bx	lr
 7684              		.cfi_endproc
 7685              	.LFE178:
 7687              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7688              		.align	1
 7689              		.syntax unified
 7690              		.thumb
 7691              		.thumb_func
 7692              		.fpu fpv5-d16
 7694              	I2C_ITMasterSeqCplt:
 7695              	.LFB197:
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7696              		.loc 1 5350 0
 7697              		.cfi_startproc
 7698              		@ args = 0, pretend = 0, frame = 0
 7699              		@ frame_needed = 0, uses_anonymous_args = 0
 7700              	.LVL634:
 7701 0000 38B5     		push	{r3, r4, r5, lr}
 7702              	.LCFI115:
 7703              		.cfi_def_cfa_offset 16
 7704              		.cfi_offset 3, -16
 7705              		.cfi_offset 4, -12
 7706              		.cfi_offset 5, -8
 7707              		.cfi_offset 14, -4
 7708 0002 0446     		mov	r4, r0
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7709              		.loc 1 5352 0
 7710 0004 0023     		movs	r3, #0
 7711 0006 80F84230 		strb	r3, [r0, #66]
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7712              		.loc 1 5356 0
 7713 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7714 000e DBB2     		uxtb	r3, r3
 7715 0010 212B     		cmp	r3, #33
 7716 0012 0FD0     		beq	.L617
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7717              		.loc 1 5378 0
 7718 0014 2023     		movs	r3, #32
 7719 0016 80F84130 		strb	r3, [r0, #65]
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7720              		.loc 1 5379 0
 7721 001a 1223     		movs	r3, #18
 7722 001c 0363     		str	r3, [r0, #48]
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7723              		.loc 1 5380 0
 7724 001e 0025     		movs	r5, #0
 7725 0020 4563     		str	r5, [r0, #52]
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7726              		.loc 1 5383 0
ARM GAS  /tmp/ccbPnc67.s 			page 275


 7727 0022 0221     		movs	r1, #2
 7728 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7729              	.LVL635:
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7730              		.loc 1 5386 0
 7731 0028 84F84050 		strb	r5, [r4, #64]
5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7732              		.loc 1 5392 0
 7733 002c 2046     		mov	r0, r4
 7734 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7735              	.LVL636:
 7736              	.L613:
5395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7737              		.loc 1 5395 0
 7738 0032 38BD     		pop	{r3, r4, r5, pc}
 7739              	.LVL637:
 7740              	.L617:
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7741              		.loc 1 5358 0
 7742 0034 2023     		movs	r3, #32
 7743 0036 80F84130 		strb	r3, [r0, #65]
5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7744              		.loc 1 5359 0
 7745 003a 1123     		movs	r3, #17
 7746 003c 0363     		str	r3, [r0, #48]
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7747              		.loc 1 5360 0
 7748 003e 0025     		movs	r5, #0
 7749 0040 4563     		str	r5, [r0, #52]
5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7750              		.loc 1 5363 0
 7751 0042 0121     		movs	r1, #1
 7752 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7753              	.LVL638:
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7754              		.loc 1 5366 0
 7755 0048 84F84050 		strb	r5, [r4, #64]
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7756              		.loc 1 5372 0
 7757 004c 2046     		mov	r0, r4
 7758 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7759              	.LVL639:
 7760 0052 EEE7     		b	.L613
 7761              		.cfi_endproc
 7762              	.LFE197:
 7764              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7765              		.align	1
 7766              		.weak	HAL_I2C_SlaveTxCpltCallback
 7767              		.syntax unified
 7768              		.thumb
 7769              		.thumb_func
 7770              		.fpu fpv5-d16
 7772              	HAL_I2C_SlaveTxCpltCallback:
 7773              	.LFB179:
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7774              		.loc 1 4412 0
 7775              		.cfi_startproc
ARM GAS  /tmp/ccbPnc67.s 			page 276


 7776              		@ args = 0, pretend = 0, frame = 0
 7777              		@ frame_needed = 0, uses_anonymous_args = 0
 7778              		@ link register save eliminated.
 7779              	.LVL640:
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7780              		.loc 1 4419 0
 7781 0000 7047     		bx	lr
 7782              		.cfi_endproc
 7783              	.LFE179:
 7785              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7786              		.align	1
 7787              		.weak	HAL_I2C_SlaveRxCpltCallback
 7788              		.syntax unified
 7789              		.thumb
 7790              		.thumb_func
 7791              		.fpu fpv5-d16
 7793              	HAL_I2C_SlaveRxCpltCallback:
 7794              	.LFB180:
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7795              		.loc 1 4428 0
 7796              		.cfi_startproc
 7797              		@ args = 0, pretend = 0, frame = 0
 7798              		@ frame_needed = 0, uses_anonymous_args = 0
 7799              		@ link register save eliminated.
 7800              	.LVL641:
4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7801              		.loc 1 4435 0
 7802 0000 7047     		bx	lr
 7803              		.cfi_endproc
 7804              	.LFE180:
 7806              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7807              		.align	1
 7808              		.syntax unified
 7809              		.thumb
 7810              		.thumb_func
 7811              		.fpu fpv5-d16
 7813              	I2C_ITSlaveSeqCplt:
 7814              	.LFB198:
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7815              		.loc 1 5403 0
 7816              		.cfi_startproc
 7817              		@ args = 0, pretend = 0, frame = 0
 7818              		@ frame_needed = 0, uses_anonymous_args = 0
 7819              	.LVL642:
 7820 0000 10B5     		push	{r4, lr}
 7821              	.LCFI116:
 7822              		.cfi_def_cfa_offset 8
 7823              		.cfi_offset 4, -8
 7824              		.cfi_offset 14, -4
 7825 0002 0446     		mov	r4, r0
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7826              		.loc 1 5404 0
 7827 0004 0368     		ldr	r3, [r0]
 7828 0006 1A68     		ldr	r2, [r3]
 7829              	.LVL643:
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7830              		.loc 1 5407 0
ARM GAS  /tmp/ccbPnc67.s 			page 277


 7831 0008 0021     		movs	r1, #0
 7832 000a 80F84210 		strb	r1, [r0, #66]
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7833              		.loc 1 5410 0
 7834 000e 12F4804F 		tst	r2, #16384
 7835 0012 0ED0     		beq	.L621
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7836              		.loc 1 5413 0
 7837 0014 1A68     		ldr	r2, [r3]
 7838              	.LVL644:
 7839 0016 22F48042 		bic	r2, r2, #16384
 7840 001a 1A60     		str	r2, [r3]
 7841              	.L622:
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7842              		.loc 1 5425 0
 7843 001c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7844 0020 DBB2     		uxtb	r3, r3
 7845 0022 292B     		cmp	r3, #41
 7846 0024 0DD0     		beq	.L626
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7847              		.loc 1 5445 0
 7848 0026 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7849 002a DBB2     		uxtb	r3, r3
 7850 002c 2A2B     		cmp	r3, #42
 7851 002e 18D0     		beq	.L627
 7852              	.LVL645:
 7853              	.L620:
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7854              		.loc 1 5468 0
 7855 0030 10BD     		pop	{r4, pc}
 7856              	.LVL646:
 7857              	.L621:
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7858              		.loc 1 5415 0
 7859 0032 12F4004F 		tst	r2, #32768
 7860 0036 F1D0     		beq	.L622
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7861              		.loc 1 5418 0
 7862 0038 1A68     		ldr	r2, [r3]
 7863              	.LVL647:
 7864 003a 22F40042 		bic	r2, r2, #32768
 7865 003e 1A60     		str	r2, [r3]
 7866 0040 ECE7     		b	.L622
 7867              	.L626:
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7868              		.loc 1 5428 0
 7869 0042 2823     		movs	r3, #40
 7870 0044 84F84130 		strb	r3, [r4, #65]
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7871              		.loc 1 5429 0
 7872 0048 2123     		movs	r3, #33
 7873 004a 2363     		str	r3, [r4, #48]
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7874              		.loc 1 5432 0
 7875 004c 0121     		movs	r1, #1
 7876 004e 2046     		mov	r0, r4
 7877              	.LVL648:
ARM GAS  /tmp/ccbPnc67.s 			page 278


 7878 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 7879              	.LVL649:
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7880              		.loc 1 5435 0
 7881 0054 0023     		movs	r3, #0
 7882 0056 84F84030 		strb	r3, [r4, #64]
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7883              		.loc 1 5441 0
 7884 005a 2046     		mov	r0, r4
 7885 005c FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7886              	.LVL650:
 7887 0060 E6E7     		b	.L620
 7888              	.LVL651:
 7889              	.L627:
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7890              		.loc 1 5448 0
 7891 0062 2823     		movs	r3, #40
 7892 0064 84F84130 		strb	r3, [r4, #65]
5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7893              		.loc 1 5449 0
 7894 0068 2223     		movs	r3, #34
 7895 006a 2363     		str	r3, [r4, #48]
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7896              		.loc 1 5452 0
 7897 006c 0221     		movs	r1, #2
 7898 006e 2046     		mov	r0, r4
 7899              	.LVL652:
 7900 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 7901              	.LVL653:
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7902              		.loc 1 5455 0
 7903 0074 0023     		movs	r3, #0
 7904 0076 84F84030 		strb	r3, [r4, #64]
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7905              		.loc 1 5461 0
 7906 007a 2046     		mov	r0, r4
 7907 007c FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7908              	.LVL654:
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7909              		.loc 1 5468 0
 7910 0080 D6E7     		b	.L620
 7911              		.cfi_endproc
 7912              	.LFE198:
 7914              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7915              		.align	1
 7916              		.syntax unified
 7917              		.thumb
 7918              		.thumb_func
 7919              		.fpu fpv5-d16
 7921              	I2C_DMASlaveTransmitCplt:
 7922              	.LFB206:
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7923              		.loc 1 6047 0
 7924              		.cfi_startproc
 7925              		@ args = 0, pretend = 0, frame = 0
 7926              		@ frame_needed = 0, uses_anonymous_args = 0
 7927              	.LVL655:
ARM GAS  /tmp/ccbPnc67.s 			page 279


 7928 0000 08B5     		push	{r3, lr}
 7929              	.LCFI117:
 7930              		.cfi_def_cfa_offset 8
 7931              		.cfi_offset 3, -8
 7932              		.cfi_offset 14, -4
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7933              		.loc 1 6048 0
 7934 0002 806B     		ldr	r0, [r0, #56]
 7935              	.LVL656:
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7936              		.loc 1 6049 0
 7937 0004 C36A     		ldr	r3, [r0, #44]
 7938              	.LVL657:
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7939              		.loc 1 6051 0
 7940 0006 002B     		cmp	r3, #0
 7941 0008 18BF     		it	ne
 7942 000a B3F1807F 		cmpne	r3, #16777216
 7943 000e 00D0     		beq	.L631
 7944              	.LVL658:
 7945              	.L628:
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7946              		.loc 1 6066 0
 7947 0010 08BD     		pop	{r3, pc}
 7948              	.LVL659:
 7949              	.L631:
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7950              		.loc 1 6054 0
 7951 0012 0268     		ldr	r2, [r0]
 7952 0014 1368     		ldr	r3, [r2]
 7953              	.LVL660:
 7954 0016 23F48043 		bic	r3, r3, #16384
 7955 001a 1360     		str	r3, [r2]
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7956              		.loc 1 6058 0
 7957 001c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7958              	.LVL661:
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7959              		.loc 1 6066 0
 7960 0020 F6E7     		b	.L628
 7961              		.cfi_endproc
 7962              	.LFE206:
 7964              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7965              		.align	1
 7966              		.syntax unified
 7967              		.thumb
 7968              		.thumb_func
 7969              		.fpu fpv5-d16
 7971              	I2C_DMASlaveReceiveCplt:
 7972              	.LFB208:
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7973              		.loc 1 6122 0
 7974              		.cfi_startproc
 7975              		@ args = 0, pretend = 0, frame = 0
 7976              		@ frame_needed = 0, uses_anonymous_args = 0
 7977              	.LVL662:
 7978 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccbPnc67.s 			page 280


 7979              	.LCFI118:
 7980              		.cfi_def_cfa_offset 8
 7981              		.cfi_offset 4, -8
 7982              		.cfi_offset 14, -4
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7983              		.loc 1 6123 0
 7984 0002 806B     		ldr	r0, [r0, #56]
 7985              	.LVL663:
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7986              		.loc 1 6124 0
 7987 0004 C46A     		ldr	r4, [r0, #44]
 7988              	.LVL664:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7989              		.loc 1 6126 0
 7990 0006 C36B     		ldr	r3, [r0, #60]
 7991 0008 1B68     		ldr	r3, [r3]
 7992 000a 2349     		ldr	r1, .L638
 7993 000c 234A     		ldr	r2, .L638+4
 7994 000e 9342     		cmp	r3, r2
 7995 0010 18BF     		it	ne
 7996 0012 8B42     		cmpne	r3, r1
 7997 0014 2FD0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7998              		.loc 1 6126 0 is_stmt 0 discriminator 2
 7999 0016 1832     		adds	r2, r2, #24
 8000 0018 9342     		cmp	r3, r2
 8001 001a 2CD0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8002              		.loc 1 6126 0 discriminator 4
 8003 001c 1832     		adds	r2, r2, #24
 8004 001e 9342     		cmp	r3, r2
 8005 0020 29D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8006              		.loc 1 6126 0 discriminator 6
 8007 0022 1832     		adds	r2, r2, #24
 8008 0024 9342     		cmp	r3, r2
 8009 0026 26D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8010              		.loc 1 6126 0 discriminator 8
 8011 0028 1832     		adds	r2, r2, #24
 8012 002a 9342     		cmp	r3, r2
 8013 002c 23D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8014              		.loc 1 6126 0 discriminator 10
 8015 002e 1832     		adds	r2, r2, #24
 8016 0030 9342     		cmp	r3, r2
 8017 0032 20D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8018              		.loc 1 6126 0 discriminator 12
 8019 0034 1832     		adds	r2, r2, #24
 8020 0036 9342     		cmp	r3, r2
 8021 0038 1DD0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8022              		.loc 1 6126 0 discriminator 14
 8023 003a 02F55672 		add	r2, r2, #856
 8024 003e 9342     		cmp	r3, r2
 8025 0040 19D0     		beq	.L633
ARM GAS  /tmp/ccbPnc67.s 			page 281


6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8026              		.loc 1 6126 0 discriminator 16
 8027 0042 1832     		adds	r2, r2, #24
 8028 0044 9342     		cmp	r3, r2
 8029 0046 16D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8030              		.loc 1 6126 0 discriminator 18
 8031 0048 1832     		adds	r2, r2, #24
 8032 004a 9342     		cmp	r3, r2
 8033 004c 13D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8034              		.loc 1 6126 0 discriminator 20
 8035 004e 1832     		adds	r2, r2, #24
 8036 0050 9342     		cmp	r3, r2
 8037 0052 10D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8038              		.loc 1 6126 0 discriminator 22
 8039 0054 1832     		adds	r2, r2, #24
 8040 0056 9342     		cmp	r3, r2
 8041 0058 0DD0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8042              		.loc 1 6126 0 discriminator 24
 8043 005a 1832     		adds	r2, r2, #24
 8044 005c 9342     		cmp	r3, r2
 8045 005e 0AD0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8046              		.loc 1 6126 0 discriminator 26
 8047 0060 1832     		adds	r2, r2, #24
 8048 0062 9342     		cmp	r3, r2
 8049 0064 07D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8050              		.loc 1 6126 0 discriminator 28
 8051 0066 1832     		adds	r2, r2, #24
 8052 0068 9342     		cmp	r3, r2
 8053 006a 04D0     		beq	.L633
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8054              		.loc 1 6126 0 discriminator 30
 8055 006c 5B68     		ldr	r3, [r3, #4]
 8056 006e B3FA83F3 		clz	r3, r3
 8057 0072 5B09     		lsrs	r3, r3, #5
 8058 0074 03E0     		b	.L635
 8059              	.L633:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8060              		.loc 1 6126 0 discriminator 29
 8061 0076 5B68     		ldr	r3, [r3, #4]
 8062 0078 B3FA83F3 		clz	r3, r3
 8063 007c 5B09     		lsrs	r3, r3, #5
 8064              	.L635:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8065              		.loc 1 6126 0 discriminator 32
 8066 007e 4BB1     		cbz	r3, .L632
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 8067              		.loc 1 6126 0 discriminator 33
 8068 0080 14F5803F 		cmn	r4, #65536
 8069 0084 06D0     		beq	.L632
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8070              		.loc 1 6130 0 is_stmt 1
ARM GAS  /tmp/ccbPnc67.s 			page 282


 8071 0086 0268     		ldr	r2, [r0]
 8072 0088 1368     		ldr	r3, [r2]
 8073 008a 23F40043 		bic	r3, r3, #32768
 8074 008e 1360     		str	r3, [r2]
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8075              		.loc 1 6133 0
 8076 0090 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8077              	.LVL665:
 8078              	.L632:
6141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8079              		.loc 1 6141 0
 8080 0094 10BD     		pop	{r4, pc}
 8081              	.LVL666:
 8082              	.L639:
 8083 0096 00BF     		.align	2
 8084              	.L638:
 8085 0098 10000240 		.word	1073872912
 8086 009c 28000240 		.word	1073872936
 8087              		.cfi_endproc
 8088              	.LFE208:
 8090              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 8091              		.align	1
 8092              		.weak	HAL_I2C_AddrCallback
 8093              		.syntax unified
 8094              		.thumb
 8095              		.thumb_func
 8096              		.fpu fpv5-d16
 8098              	HAL_I2C_AddrCallback:
 8099              	.LFB181:
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8100              		.loc 1 4446 0
 8101              		.cfi_startproc
 8102              		@ args = 0, pretend = 0, frame = 0
 8103              		@ frame_needed = 0, uses_anonymous_args = 0
 8104              		@ link register save eliminated.
 8105              	.LVL667:
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8106              		.loc 1 4455 0
 8107 0000 7047     		bx	lr
 8108              		.cfi_endproc
 8109              	.LFE181:
 8111              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 8112              		.align	1
 8113              		.syntax unified
 8114              		.thumb
 8115              		.thumb_func
 8116              		.fpu fpv5-d16
 8118              	I2C_ITAddrCplt:
 8119              	.LFB196:
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint8_t transferdirection;
 8120              		.loc 1 5255 0
 8121              		.cfi_startproc
 8122              		@ args = 0, pretend = 0, frame = 0
 8123              		@ frame_needed = 0, uses_anonymous_args = 0
 8124              	.LVL668:
 8125 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8126              	.LCFI119:
ARM GAS  /tmp/ccbPnc67.s 			page 283


 8127              		.cfi_def_cfa_offset 24
 8128              		.cfi_offset 3, -24
 8129              		.cfi_offset 4, -20
 8130              		.cfi_offset 5, -16
 8131              		.cfi_offset 6, -12
 8132              		.cfi_offset 7, -8
 8133              		.cfi_offset 14, -4
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8134              		.loc 1 5265 0
 8135 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8136 0006 03F02803 		and	r3, r3, #40
 8137 000a 282B     		cmp	r3, #40
 8138 000c 06D0     		beq	.L647
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8139              		.loc 1 5337 0
 8140 000e 0368     		ldr	r3, [r0]
 8141 0010 0822     		movs	r2, #8
 8142 0012 DA61     		str	r2, [r3, #28]
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8143              		.loc 1 5340 0
 8144 0014 0023     		movs	r3, #0
 8145 0016 80F84030 		strb	r3, [r0, #64]
 8146              	.LVL669:
 8147              	.L641:
5342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8148              		.loc 1 5342 0
 8149 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8150              	.LVL670:
 8151              	.L647:
 8152 001c 0446     		mov	r4, r0
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 8153              		.loc 1 5267 0
 8154 001e 0368     		ldr	r3, [r0]
 8155 0020 9E69     		ldr	r6, [r3, #24]
 8156 0022 C6F30046 		ubfx	r6, r6, #16, #1
 8157              	.LVL671:
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8158              		.loc 1 5268 0
 8159 0026 9A69     		ldr	r2, [r3, #24]
 8160 0028 120C     		lsrs	r2, r2, #16
 8161 002a 02F0FE05 		and	r5, r2, #254
 8162              	.LVL672:
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8163              		.loc 1 5269 0
 8164 002e 9A68     		ldr	r2, [r3, #8]
 8165 0030 C2F30902 		ubfx	r2, r2, #0, #10
 8166              	.LVL673:
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8167              		.loc 1 5270 0
 8168 0034 DF68     		ldr	r7, [r3, #12]
 8169 0036 07F0FE07 		and	r7, r7, #254
 8170              	.LVL674:
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8171              		.loc 1 5273 0
 8172 003a C168     		ldr	r1, [r0, #12]
 8173              	.LVL675:
 8174 003c 0229     		cmp	r1, #2
ARM GAS  /tmp/ccbPnc67.s 			page 284


 8175 003e 22D1     		bne	.L643
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8176              		.loc 1 5275 0
 8177 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 8178              	.LVL676:
 8179 0044 15F0060F 		tst	r5, #6
 8180 0048 10D1     		bne	.L644
 8181              	.LVL677:
5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 8182              		.loc 1 5278 0
 8183 004a 816C     		ldr	r1, [r0, #72]
 8184 004c 0131     		adds	r1, r1, #1
 8185 004e 8164     		str	r1, [r0, #72]
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 8186              		.loc 1 5279 0
 8187 0050 816C     		ldr	r1, [r0, #72]
 8188 0052 0229     		cmp	r1, #2
 8189 0054 E1D1     		bne	.L641
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8190              		.loc 1 5282 0
 8191 0056 0021     		movs	r1, #0
 8192 0058 8164     		str	r1, [r0, #72]
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8193              		.loc 1 5285 0
 8194 005a 0820     		movs	r0, #8
 8195              	.LVL678:
 8196 005c D861     		str	r0, [r3, #28]
5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8197              		.loc 1 5288 0
 8198 005e 84F84010 		strb	r1, [r4, #64]
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8199              		.loc 1 5294 0
 8200 0062 3146     		mov	r1, r6
 8201 0064 2046     		mov	r0, r4
 8202 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8203              	.LVL679:
 8204 006a D6E7     		b	.L641
 8205              	.LVL680:
 8206              	.L644:
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8207              		.loc 1 5303 0
 8208 006c 4FF40041 		mov	r1, #32768
 8209 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 8210              	.LVL681:
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8211              		.loc 1 5306 0
 8212 0074 0023     		movs	r3, #0
 8213 0076 84F84030 		strb	r3, [r4, #64]
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8214              		.loc 1 5312 0
 8215 007a 3A46     		mov	r2, r7
 8216 007c 3146     		mov	r1, r6
 8217 007e 2046     		mov	r0, r4
 8218 0080 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8219              	.LVL682:
 8220 0084 C9E7     		b	.L641
 8221              	.LVL683:
ARM GAS  /tmp/ccbPnc67.s 			page 285


 8222              	.L643:
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8223              		.loc 1 5320 0
 8224 0086 4FF40041 		mov	r1, #32768
 8225 008a FFF7FEFF 		bl	I2C_Disable_IRQ
 8226              	.LVL684:
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8227              		.loc 1 5323 0
 8228 008e 0023     		movs	r3, #0
 8229 0090 84F84030 		strb	r3, [r4, #64]
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8230              		.loc 1 5329 0
 8231 0094 2A46     		mov	r2, r5
 8232 0096 3146     		mov	r1, r6
 8233 0098 2046     		mov	r0, r4
 8234 009a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8235              	.LVL685:
 8236 009e BCE7     		b	.L641
 8237              		.cfi_endproc
 8238              	.LFE196:
 8240              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8241              		.align	1
 8242              		.weak	HAL_I2C_ListenCpltCallback
 8243              		.syntax unified
 8244              		.thumb
 8245              		.thumb_func
 8246              		.fpu fpv5-d16
 8248              	HAL_I2C_ListenCpltCallback:
 8249              	.LFB182:
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8250              		.loc 1 4464 0
 8251              		.cfi_startproc
 8252              		@ args = 0, pretend = 0, frame = 0
 8253              		@ frame_needed = 0, uses_anonymous_args = 0
 8254              		@ link register save eliminated.
 8255              	.LVL686:
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8256              		.loc 1 4471 0
 8257 0000 7047     		bx	lr
 8258              		.cfi_endproc
 8259              	.LFE182:
 8261              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8262              		.align	1
 8263              		.syntax unified
 8264              		.thumb
 8265              		.thumb_func
 8266              		.fpu fpv5-d16
 8268              	I2C_ITListenCplt:
 8269              	.LFB201:
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
 8270              		.loc 1 5779 0
 8271              		.cfi_startproc
 8272              		@ args = 0, pretend = 0, frame = 0
 8273              		@ frame_needed = 0, uses_anonymous_args = 0
 8274              	.LVL687:
 8275 0000 10B5     		push	{r4, lr}
 8276              	.LCFI120:
ARM GAS  /tmp/ccbPnc67.s 			page 286


 8277              		.cfi_def_cfa_offset 8
 8278              		.cfi_offset 4, -8
 8279              		.cfi_offset 14, -4
 8280 0002 0446     		mov	r4, r0
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8281              		.loc 1 5781 0
 8282 0004 174B     		ldr	r3, .L652
 8283 0006 C362     		str	r3, [r0, #44]
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8284              		.loc 1 5782 0
 8285 0008 0023     		movs	r3, #0
 8286 000a 0363     		str	r3, [r0, #48]
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8287              		.loc 1 5783 0
 8288 000c 2022     		movs	r2, #32
 8289 000e 80F84120 		strb	r2, [r0, #65]
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8290              		.loc 1 5784 0
 8291 0012 80F84230 		strb	r3, [r0, #66]
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8292              		.loc 1 5785 0
 8293 0016 4363     		str	r3, [r0, #52]
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8294              		.loc 1 5788 0
 8295 0018 11F0040F 		tst	r1, #4
 8296 001c 12D0     		beq	.L650
5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8297              		.loc 1 5791 0
 8298 001e 0368     		ldr	r3, [r0]
 8299 0020 5A6A     		ldr	r2, [r3, #36]
 8300 0022 436A     		ldr	r3, [r0, #36]
 8301 0024 1A70     		strb	r2, [r3]
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8302              		.loc 1 5794 0
 8303 0026 436A     		ldr	r3, [r0, #36]
 8304 0028 0133     		adds	r3, r3, #1
 8305 002a 4362     		str	r3, [r0, #36]
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8306              		.loc 1 5796 0
 8307 002c 038D     		ldrh	r3, [r0, #40]
 8308 002e 4BB1     		cbz	r3, .L650
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 8309              		.loc 1 5798 0
 8310 0030 013B     		subs	r3, r3, #1
 8311 0032 0385     		strh	r3, [r0, #40]	@ movhi
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8312              		.loc 1 5799 0
 8313 0034 438D     		ldrh	r3, [r0, #42]
 8314 0036 013B     		subs	r3, r3, #1
 8315 0038 9BB2     		uxth	r3, r3
 8316 003a 4385     		strh	r3, [r0, #42]	@ movhi
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8317              		.loc 1 5802 0
 8318 003c 436C     		ldr	r3, [r0, #68]
 8319 003e 43F00403 		orr	r3, r3, #4
 8320 0042 4364     		str	r3, [r0, #68]
 8321              	.L650:
ARM GAS  /tmp/ccbPnc67.s 			page 287


5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8322              		.loc 1 5807 0
 8323 0044 48F20301 		movw	r1, #32771
 8324              	.LVL688:
 8325 0048 2046     		mov	r0, r4
 8326              	.LVL689:
 8327 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 8328              	.LVL690:
5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8329              		.loc 1 5810 0
 8330 004e 2368     		ldr	r3, [r4]
 8331 0050 1022     		movs	r2, #16
 8332 0052 DA61     		str	r2, [r3, #28]
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8333              		.loc 1 5813 0
 8334 0054 0023     		movs	r3, #0
 8335 0056 84F84030 		strb	r3, [r4, #64]
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8336              		.loc 1 5819 0
 8337 005a 2046     		mov	r0, r4
 8338 005c FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8339              	.LVL691:
5821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8340              		.loc 1 5821 0
 8341 0060 10BD     		pop	{r4, pc}
 8342              	.LVL692:
 8343              	.L653:
 8344 0062 00BF     		.align	2
 8345              	.L652:
 8346 0064 0000FFFF 		.word	-65536
 8347              		.cfi_endproc
 8348              	.LFE201:
 8350              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8351              		.align	1
 8352              		.weak	HAL_I2C_MemTxCpltCallback
 8353              		.syntax unified
 8354              		.thumb
 8355              		.thumb_func
 8356              		.fpu fpv5-d16
 8358              	HAL_I2C_MemTxCpltCallback:
 8359              	.LFB183:
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8360              		.loc 1 4480 0
 8361              		.cfi_startproc
 8362              		@ args = 0, pretend = 0, frame = 0
 8363              		@ frame_needed = 0, uses_anonymous_args = 0
 8364              		@ link register save eliminated.
 8365              	.LVL693:
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8366              		.loc 1 4487 0
 8367 0000 7047     		bx	lr
 8368              		.cfi_endproc
 8369              	.LFE183:
 8371              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8372              		.align	1
 8373              		.weak	HAL_I2C_MemRxCpltCallback
 8374              		.syntax unified
ARM GAS  /tmp/ccbPnc67.s 			page 288


 8375              		.thumb
 8376              		.thumb_func
 8377              		.fpu fpv5-d16
 8379              	HAL_I2C_MemRxCpltCallback:
 8380              	.LFB184:
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8381              		.loc 1 4496 0
 8382              		.cfi_startproc
 8383              		@ args = 0, pretend = 0, frame = 0
 8384              		@ frame_needed = 0, uses_anonymous_args = 0
 8385              		@ link register save eliminated.
 8386              	.LVL694:
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8387              		.loc 1 4503 0
 8388 0000 7047     		bx	lr
 8389              		.cfi_endproc
 8390              	.LFE184:
 8392              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8393              		.align	1
 8394              		.weak	HAL_I2C_ErrorCallback
 8395              		.syntax unified
 8396              		.thumb
 8397              		.thumb_func
 8398              		.fpu fpv5-d16
 8400              	HAL_I2C_ErrorCallback:
 8401              	.LFB185:
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8402              		.loc 1 4512 0
 8403              		.cfi_startproc
 8404              		@ args = 0, pretend = 0, frame = 0
 8405              		@ frame_needed = 0, uses_anonymous_args = 0
 8406              		@ link register save eliminated.
 8407              	.LVL695:
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8408              		.loc 1 4519 0
 8409 0000 7047     		bx	lr
 8410              		.cfi_endproc
 8411              	.LFE185:
 8413              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8414              		.align	1
 8415              		.weak	HAL_I2C_AbortCpltCallback
 8416              		.syntax unified
 8417              		.thumb
 8418              		.thumb_func
 8419              		.fpu fpv5-d16
 8421              	HAL_I2C_AbortCpltCallback:
 8422              	.LFB186:
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8423              		.loc 1 4528 0
 8424              		.cfi_startproc
 8425              		@ args = 0, pretend = 0, frame = 0
 8426              		@ frame_needed = 0, uses_anonymous_args = 0
 8427              		@ link register save eliminated.
 8428              	.LVL696:
4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8429              		.loc 1 4535 0
 8430 0000 7047     		bx	lr
ARM GAS  /tmp/ccbPnc67.s 			page 289


 8431              		.cfi_endproc
 8432              	.LFE186:
 8434              		.section	.text.I2C_TreatErrorCallback,"ax",%progbits
 8435              		.align	1
 8436              		.syntax unified
 8437              		.thumb
 8438              		.thumb_func
 8439              		.fpu fpv5-d16
 8441              	I2C_TreatErrorCallback:
 8442              	.LFB203:
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8443              		.loc 1 5940 0
 8444              		.cfi_startproc
 8445              		@ args = 0, pretend = 0, frame = 0
 8446              		@ frame_needed = 0, uses_anonymous_args = 0
 8447              	.LVL697:
 8448 0000 08B5     		push	{r3, lr}
 8449              	.LCFI121:
 8450              		.cfi_def_cfa_offset 8
 8451              		.cfi_offset 3, -8
 8452              		.cfi_offset 14, -4
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8453              		.loc 1 5941 0
 8454 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8455 0006 DBB2     		uxtb	r3, r3
 8456 0008 602B     		cmp	r3, #96
 8457 000a 06D0     		beq	.L662
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8458              		.loc 1 5958 0
 8459 000c 0023     		movs	r3, #0
 8460 000e 0363     		str	r3, [r0, #48]
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8461              		.loc 1 5961 0
 8462 0010 80F84030 		strb	r3, [r0, #64]
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8463              		.loc 1 5967 0
 8464 0014 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8465              	.LVL698:
 8466              	.L658:
5970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8467              		.loc 1 5970 0
 8468 0018 08BD     		pop	{r3, pc}
 8469              	.LVL699:
 8470              	.L662:
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8471              		.loc 1 5943 0
 8472 001a 2023     		movs	r3, #32
 8473 001c 80F84130 		strb	r3, [r0, #65]
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8474              		.loc 1 5944 0
 8475 0020 0023     		movs	r3, #0
 8476 0022 0363     		str	r3, [r0, #48]
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8477              		.loc 1 5947 0
 8478 0024 80F84030 		strb	r3, [r0, #64]
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8479              		.loc 1 5953 0
ARM GAS  /tmp/ccbPnc67.s 			page 290


 8480 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8481              	.LVL700:
 8482 002c F4E7     		b	.L658
 8483              		.cfi_endproc
 8484              	.LFE203:
 8486              		.section	.text.I2C_ITError,"ax",%progbits
 8487              		.align	1
 8488              		.syntax unified
 8489              		.thumb
 8490              		.thumb_func
 8491              		.fpu fpv5-d16
 8493              	I2C_ITError:
 8494              	.LFB202:
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8495              		.loc 1 5830 0
 8496              		.cfi_startproc
 8497              		@ args = 0, pretend = 0, frame = 0
 8498              		@ frame_needed = 0, uses_anonymous_args = 0
 8499              	.LVL701:
 8500 0000 10B5     		push	{r4, lr}
 8501              	.LCFI122:
 8502              		.cfi_def_cfa_offset 8
 8503              		.cfi_offset 4, -8
 8504              		.cfi_offset 14, -4
 8505 0002 0446     		mov	r4, r0
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
 8506              		.loc 1 5831 0
 8507 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8508              	.LVL702:
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8509              		.loc 1 5835 0
 8510 0008 0022     		movs	r2, #0
 8511 000a 80F84220 		strb	r2, [r0, #66]
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8512              		.loc 1 5836 0
 8513 000e 3B48     		ldr	r0, .L675
 8514              	.LVL703:
 8515 0010 E062     		str	r0, [r4, #44]
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8516              		.loc 1 5837 0
 8517 0012 6285     		strh	r2, [r4, #42]	@ movhi
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8518              		.loc 1 5840 0
 8519 0014 626C     		ldr	r2, [r4, #68]
 8520 0016 1143     		orrs	r1, r1, r2
 8521              	.LVL704:
 8522 0018 6164     		str	r1, [r4, #68]
5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8523              		.loc 1 5844 0
 8524 001a 283B     		subs	r3, r3, #40
 8525              	.LVL705:
 8526 001c DBB2     		uxtb	r3, r3
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8527              		.loc 1 5843 0
 8528 001e 022B     		cmp	r3, #2
 8529 0020 2DD8     		bhi	.L664
5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 291


 8530              		.loc 1 5848 0
 8531 0022 0321     		movs	r1, #3
 8532 0024 2046     		mov	r0, r4
 8533 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8534              	.LVL706:
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8535              		.loc 1 5851 0
 8536 002a 2823     		movs	r3, #40
 8537 002c 84F84130 		strb	r3, [r4, #65]
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8538              		.loc 1 5852 0
 8539 0030 334B     		ldr	r3, .L675+4
 8540 0032 6363     		str	r3, [r4, #52]
 8541              	.L665:
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || (tmppreviousstat
 8542              		.loc 1 5870 0
 8543 0034 236B     		ldr	r3, [r4, #48]
 8544              	.LVL707:
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8545              		.loc 1 5871 0
 8546 0036 A26B     		ldr	r2, [r4, #56]
 8547 0038 002A     		cmp	r2, #0
 8548 003a 34D0     		beq	.L667
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8549              		.loc 1 5871 0 is_stmt 0 discriminator 1
 8550 003c 212B     		cmp	r3, #33
 8551 003e 18BF     		it	ne
 8552 0040 112B     		cmpne	r3, #17
 8553 0042 30D1     		bne	.L667
5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8554              		.loc 1 5873 0 is_stmt 1
 8555 0044 2368     		ldr	r3, [r4]
 8556              	.LVL708:
 8557 0046 1A68     		ldr	r2, [r3]
 8558 0048 12F4804F 		tst	r2, #16384
 8559 004c 03D0     		beq	.L668
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8560              		.loc 1 5875 0
 8561 004e 1A68     		ldr	r2, [r3]
 8562 0050 22F48042 		bic	r2, r2, #16384
 8563 0054 1A60     		str	r2, [r3]
 8564              	.L668:
5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8565              		.loc 1 5878 0
 8566 0056 A06B     		ldr	r0, [r4, #56]
 8567 0058 FFF7FEFF 		bl	HAL_DMA_GetState
 8568              	.LVL709:
 8569 005c 0128     		cmp	r0, #1
 8570 005e 1ED0     		beq	.L669
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8571              		.loc 1 5882 0
 8572 0060 A36B     		ldr	r3, [r4, #56]
 8573 0062 284A     		ldr	r2, .L675+8
 8574 0064 1A65     		str	r2, [r3, #80]
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8575              		.loc 1 5885 0
 8576 0066 0023     		movs	r3, #0
ARM GAS  /tmp/ccbPnc67.s 			page 292


 8577 0068 84F84030 		strb	r3, [r4, #64]
5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8578              		.loc 1 5888 0
 8579 006c A06B     		ldr	r0, [r4, #56]
 8580 006e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8581              	.LVL710:
 8582 0072 0028     		cmp	r0, #0
 8583 0074 40D0     		beq	.L663
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8584              		.loc 1 5891 0
 8585 0076 A06B     		ldr	r0, [r4, #56]
 8586 0078 036D     		ldr	r3, [r0, #80]
 8587 007a 9847     		blx	r3
 8588              	.LVL711:
 8589 007c 3CE0     		b	.L663
 8590              	.L664:
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8591              		.loc 1 5857 0
 8592 007e 48F20301 		movw	r1, #32771
 8593 0082 2046     		mov	r0, r4
 8594 0084 FFF7FEFF 		bl	I2C_Disable_IRQ
 8595              	.LVL712:
5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8596              		.loc 1 5861 0
 8597 0088 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8598 008c DBB2     		uxtb	r3, r3
 8599 008e 602B     		cmp	r3, #96
 8600 0090 02D0     		beq	.L666
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8601              		.loc 1 5864 0
 8602 0092 2023     		movs	r3, #32
 8603 0094 84F84130 		strb	r3, [r4, #65]
 8604              	.L666:
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8605              		.loc 1 5866 0
 8606 0098 0023     		movs	r3, #0
 8607 009a 6363     		str	r3, [r4, #52]
 8608 009c CAE7     		b	.L665
 8609              	.L669:
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8610              		.loc 1 5896 0
 8611 009e 2046     		mov	r0, r4
 8612 00a0 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8613              	.LVL713:
 8614 00a4 28E0     		b	.L663
 8615              	.LVL714:
 8616              	.L667:
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8617              		.loc 1 5900 0
 8618 00a6 E26B     		ldr	r2, [r4, #60]
 8619 00a8 1AB3     		cbz	r2, .L671
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8620              		.loc 1 5900 0 is_stmt 0 discriminator 1
 8621 00aa 222B     		cmp	r3, #34
 8622 00ac 18BF     		it	ne
 8623 00ae 122B     		cmpne	r3, #18
 8624 00b0 1FD1     		bne	.L671
ARM GAS  /tmp/ccbPnc67.s 			page 293


5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8625              		.loc 1 5902 0 is_stmt 1
 8626 00b2 2368     		ldr	r3, [r4]
 8627              	.LVL715:
 8628 00b4 1A68     		ldr	r2, [r3]
 8629 00b6 12F4004F 		tst	r2, #32768
 8630 00ba 03D0     		beq	.L672
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8631              		.loc 1 5904 0
 8632 00bc 1A68     		ldr	r2, [r3]
 8633 00be 22F40042 		bic	r2, r2, #32768
 8634 00c2 1A60     		str	r2, [r3]
 8635              	.L672:
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8636              		.loc 1 5907 0
 8637 00c4 E06B     		ldr	r0, [r4, #60]
 8638 00c6 FFF7FEFF 		bl	HAL_DMA_GetState
 8639              	.LVL716:
 8640 00ca 0128     		cmp	r0, #1
 8641 00cc 0DD0     		beq	.L673
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8642              		.loc 1 5911 0
 8643 00ce E36B     		ldr	r3, [r4, #60]
 8644 00d0 0C4A     		ldr	r2, .L675+8
 8645 00d2 1A65     		str	r2, [r3, #80]
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8646              		.loc 1 5914 0
 8647 00d4 0023     		movs	r3, #0
 8648 00d6 84F84030 		strb	r3, [r4, #64]
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8649              		.loc 1 5917 0
 8650 00da E06B     		ldr	r0, [r4, #60]
 8651 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8652              	.LVL717:
 8653 00e0 50B1     		cbz	r0, .L663
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8654              		.loc 1 5920 0
 8655 00e2 E06B     		ldr	r0, [r4, #60]
 8656 00e4 036D     		ldr	r3, [r0, #80]
 8657 00e6 9847     		blx	r3
 8658              	.LVL718:
 8659 00e8 06E0     		b	.L663
 8660              	.L673:
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8661              		.loc 1 5925 0
 8662 00ea 2046     		mov	r0, r4
 8663 00ec FFF7FEFF 		bl	I2C_TreatErrorCallback
 8664              	.LVL719:
 8665 00f0 02E0     		b	.L663
 8666              	.LVL720:
 8667              	.L671:
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8668              		.loc 1 5930 0
 8669 00f2 2046     		mov	r0, r4
 8670 00f4 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8671              	.LVL721:
 8672              	.L663:
ARM GAS  /tmp/ccbPnc67.s 			page 294


5932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8673              		.loc 1 5932 0
 8674 00f8 10BD     		pop	{r4, pc}
 8675              	.LVL722:
 8676              	.L676:
 8677 00fa 00BF     		.align	2
 8678              	.L675:
 8679 00fc 0000FFFF 		.word	-65536
 8680 0100 00000000 		.word	I2C_Slave_ISR_IT
 8681 0104 00000000 		.word	I2C_DMAAbort
 8682              		.cfi_endproc
 8683              	.LFE202:
 8685              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8686              		.align	1
 8687              		.syntax unified
 8688              		.thumb
 8689              		.thumb_func
 8690              		.fpu fpv5-d16
 8692              	I2C_ITSlaveCplt:
 8693              	.LFB200:
5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8694              		.loc 1 5620 0
 8695              		.cfi_startproc
 8696              		@ args = 0, pretend = 0, frame = 0
 8697              		@ frame_needed = 0, uses_anonymous_args = 0
 8698              	.LVL723:
 8699 0000 70B5     		push	{r4, r5, r6, lr}
 8700              	.LCFI123:
 8701              		.cfi_def_cfa_offset 16
 8702              		.cfi_offset 4, -16
 8703              		.cfi_offset 5, -12
 8704              		.cfi_offset 6, -8
 8705              		.cfi_offset 14, -4
 8706 0002 0446     		mov	r4, r0
 8707 0004 0D46     		mov	r5, r1
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8708              		.loc 1 5621 0
 8709 0006 0268     		ldr	r2, [r0]
 8710 0008 1668     		ldr	r6, [r2]
 8711              	.LVL724:
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8712              		.loc 1 5623 0
 8713 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8714 000e DBB2     		uxtb	r3, r3
 8715              	.LVL725:
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8716              		.loc 1 5626 0
 8717 0010 2021     		movs	r1, #32
 8718              	.LVL726:
 8719 0012 D161     		str	r1, [r2, #28]
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8720              		.loc 1 5629 0
 8721 0014 292B     		cmp	r3, #41
 8722 0016 18BF     		it	ne
 8723 0018 212B     		cmpne	r3, #33
 8724 001a 57D0     		beq	.L695
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccbPnc67.s 			page 295


 8725              		.loc 1 5634 0
 8726 001c 2A2B     		cmp	r3, #42
 8727 001e 18BF     		it	ne
 8728 0020 222B     		cmpne	r3, #34
 8729 0022 5AD0     		beq	.L696
 8730              	.LVL727:
 8731              	.L679:
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8732              		.loc 1 5645 0
 8733 0024 2268     		ldr	r2, [r4]
 8734 0026 5368     		ldr	r3, [r2, #4]
 8735 0028 43F40043 		orr	r3, r3, #32768
 8736 002c 5360     		str	r3, [r2, #4]
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8737              		.loc 1 5648 0
 8738 002e 2268     		ldr	r2, [r4]
 8739 0030 5368     		ldr	r3, [r2, #4]
 8740 0032 23F0FF73 		bic	r3, r3, #33423360
 8741 0036 23F48B33 		bic	r3, r3, #71168
 8742 003a 23F4FF73 		bic	r3, r3, #510
 8743 003e 23F00103 		bic	r3, r3, #1
 8744 0042 5360     		str	r3, [r2, #4]
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8745              		.loc 1 5651 0
 8746 0044 2046     		mov	r0, r4
 8747 0046 FFF7FEFF 		bl	I2C_Flush_TXDR
 8748              	.LVL728:
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8749              		.loc 1 5654 0
 8750 004a 16F4804F 		tst	r6, #16384
 8751 004e 00F08480 		beq	.L680
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8752              		.loc 1 5657 0
 8753 0052 2268     		ldr	r2, [r4]
 8754 0054 1368     		ldr	r3, [r2]
 8755 0056 23F48043 		bic	r3, r3, #16384
 8756 005a 1360     		str	r3, [r2]
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8757              		.loc 1 5659 0
 8758 005c A36B     		ldr	r3, [r4, #56]
 8759 005e 002B     		cmp	r3, #0
 8760 0060 45D0     		beq	.L681
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8761              		.loc 1 5661 0
 8762 0062 1B68     		ldr	r3, [r3]
 8763 0064 7349     		ldr	r1, .L700
 8764 0066 744A     		ldr	r2, .L700+4
 8765 0068 9342     		cmp	r3, r2
 8766 006a 18BF     		it	ne
 8767 006c 8B42     		cmpne	r3, r1
 8768 006e 3BD0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8769              		.loc 1 5661 0 is_stmt 0 discriminator 2
 8770 0070 1832     		adds	r2, r2, #24
 8771 0072 9342     		cmp	r3, r2
 8772 0074 38D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccbPnc67.s 			page 296


 8773              		.loc 1 5661 0 discriminator 4
 8774 0076 1832     		adds	r2, r2, #24
 8775 0078 9342     		cmp	r3, r2
 8776 007a 35D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8777              		.loc 1 5661 0 discriminator 6
 8778 007c 1832     		adds	r2, r2, #24
 8779 007e 9342     		cmp	r3, r2
 8780 0080 32D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8781              		.loc 1 5661 0 discriminator 8
 8782 0082 1832     		adds	r2, r2, #24
 8783 0084 9342     		cmp	r3, r2
 8784 0086 2FD0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8785              		.loc 1 5661 0 discriminator 10
 8786 0088 1832     		adds	r2, r2, #24
 8787 008a 9342     		cmp	r3, r2
 8788 008c 2CD0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8789              		.loc 1 5661 0 discriminator 12
 8790 008e 1832     		adds	r2, r2, #24
 8791 0090 9342     		cmp	r3, r2
 8792 0092 29D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8793              		.loc 1 5661 0 discriminator 14
 8794 0094 02F55672 		add	r2, r2, #856
 8795 0098 9342     		cmp	r3, r2
 8796 009a 25D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8797              		.loc 1 5661 0 discriminator 16
 8798 009c 1832     		adds	r2, r2, #24
 8799 009e 9342     		cmp	r3, r2
 8800 00a0 22D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8801              		.loc 1 5661 0 discriminator 18
 8802 00a2 1832     		adds	r2, r2, #24
 8803 00a4 9342     		cmp	r3, r2
 8804 00a6 1FD0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8805              		.loc 1 5661 0 discriminator 20
 8806 00a8 1832     		adds	r2, r2, #24
 8807 00aa 9342     		cmp	r3, r2
 8808 00ac 1CD0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8809              		.loc 1 5661 0 discriminator 22
 8810 00ae 1832     		adds	r2, r2, #24
 8811 00b0 9342     		cmp	r3, r2
 8812 00b2 19D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8813              		.loc 1 5661 0 discriminator 24
 8814 00b4 1832     		adds	r2, r2, #24
 8815 00b6 9342     		cmp	r3, r2
 8816 00b8 16D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8817              		.loc 1 5661 0 discriminator 26
 8818 00ba 1832     		adds	r2, r2, #24
ARM GAS  /tmp/ccbPnc67.s 			page 297


 8819 00bc 9342     		cmp	r3, r2
 8820 00be 13D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8821              		.loc 1 5661 0 discriminator 28
 8822 00c0 1832     		adds	r2, r2, #24
 8823 00c2 9342     		cmp	r3, r2
 8824 00c4 10D0     		beq	.L682
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8825              		.loc 1 5661 0 discriminator 30
 8826 00c6 5B68     		ldr	r3, [r3, #4]
 8827 00c8 9BB2     		uxth	r3, r3
 8828 00ca 0FE0     		b	.L684
 8829              	.LVL729:
 8830              	.L695:
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8831              		.loc 1 5631 0 is_stmt 1
 8832 00cc 48F20101 		movw	r1, #32769
 8833 00d0 FFF7FEFF 		bl	I2C_Disable_IRQ
 8834              	.LVL730:
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8835              		.loc 1 5632 0
 8836 00d4 2123     		movs	r3, #33
 8837 00d6 2363     		str	r3, [r4, #48]
 8838 00d8 A4E7     		b	.L679
 8839              	.LVL731:
 8840              	.L696:
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8841              		.loc 1 5636 0
 8842 00da 48F20201 		movw	r1, #32770
 8843 00de FFF7FEFF 		bl	I2C_Disable_IRQ
 8844              	.LVL732:
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8845              		.loc 1 5637 0
 8846 00e2 2223     		movs	r3, #34
 8847 00e4 2363     		str	r3, [r4, #48]
 8848 00e6 9DE7     		b	.L679
 8849              	.L682:
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8850              		.loc 1 5661 0 discriminator 29
 8851 00e8 5B68     		ldr	r3, [r3, #4]
 8852 00ea 9BB2     		uxth	r3, r3
 8853              	.L684:
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8854              		.loc 1 5661 0 is_stmt 0 discriminator 32
 8855 00ec 6385     		strh	r3, [r4, #42]	@ movhi
 8856              	.L681:
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8857              		.loc 1 5680 0 is_stmt 1
 8858 00ee 15F0040F 		tst	r5, #4
 8859 00f2 10D0     		beq	.L688
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8860              		.loc 1 5683 0
 8861 00f4 25F00405 		bic	r5, r5, #4
 8862              	.LVL733:
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8863              		.loc 1 5686 0
 8864 00f8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccbPnc67.s 			page 298


 8865 00fa 5A6A     		ldr	r2, [r3, #36]
 8866 00fc 636A     		ldr	r3, [r4, #36]
 8867 00fe 1A70     		strb	r2, [r3]
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8868              		.loc 1 5689 0
 8869 0100 636A     		ldr	r3, [r4, #36]
 8870 0102 0133     		adds	r3, r3, #1
 8871 0104 6362     		str	r3, [r4, #36]
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8872              		.loc 1 5691 0
 8873 0106 238D     		ldrh	r3, [r4, #40]
 8874 0108 2BB1     		cbz	r3, .L688
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 8875              		.loc 1 5693 0
 8876 010a 013B     		subs	r3, r3, #1
 8877 010c 2385     		strh	r3, [r4, #40]	@ movhi
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8878              		.loc 1 5694 0
 8879 010e 638D     		ldrh	r3, [r4, #42]
 8880 0110 013B     		subs	r3, r3, #1
 8881 0112 9BB2     		uxth	r3, r3
 8882 0114 6385     		strh	r3, [r4, #42]	@ movhi
 8883              	.L688:
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8884              		.loc 1 5699 0
 8885 0116 638D     		ldrh	r3, [r4, #42]
 8886 0118 9BB2     		uxth	r3, r3
 8887 011a 1BB1     		cbz	r3, .L689
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8888              		.loc 1 5702 0
 8889 011c 636C     		ldr	r3, [r4, #68]
 8890 011e 43F00403 		orr	r3, r3, #4
 8891 0122 6364     		str	r3, [r4, #68]
 8892              	.L689:
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8893              		.loc 1 5705 0
 8894 0124 0023     		movs	r3, #0
 8895 0126 84F84230 		strb	r3, [r4, #66]
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8896              		.loc 1 5706 0
 8897 012a 6363     		str	r3, [r4, #52]
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8898              		.loc 1 5708 0
 8899 012c 636C     		ldr	r3, [r4, #68]
 8900 012e 002B     		cmp	r3, #0
 8901 0130 57D1     		bne	.L697
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8902              		.loc 1 5720 0
 8903 0132 E36A     		ldr	r3, [r4, #44]
 8904 0134 13F5803F 		cmn	r3, #65536
 8905 0138 61D1     		bne	.L698
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8906              		.loc 1 5740 0
 8907 013a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8908 013e DBB2     		uxtb	r3, r3
 8909 0140 222B     		cmp	r3, #34
 8910 0142 6CD0     		beq	.L699
ARM GAS  /tmp/ccbPnc67.s 			page 299


5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8911              		.loc 1 5757 0
 8912 0144 2023     		movs	r3, #32
 8913 0146 84F84130 		strb	r3, [r4, #65]
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8914              		.loc 1 5758 0
 8915 014a 0023     		movs	r3, #0
 8916 014c 2363     		str	r3, [r4, #48]
5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8917              		.loc 1 5761 0
 8918 014e 84F84030 		strb	r3, [r4, #64]
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8919              		.loc 1 5767 0
 8920 0152 2046     		mov	r0, r4
 8921 0154 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8922              	.LVL734:
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8923              		.loc 1 5770 0
 8924 0158 60E0     		b	.L677
 8925              	.LVL735:
 8926              	.L680:
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8927              		.loc 1 5664 0
 8928 015a 16F4004F 		tst	r6, #32768
 8929 015e C6D0     		beq	.L681
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8930              		.loc 1 5667 0
 8931 0160 2268     		ldr	r2, [r4]
 8932 0162 1368     		ldr	r3, [r2]
 8933 0164 23F40043 		bic	r3, r3, #32768
 8934 0168 1360     		str	r3, [r2]
5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8935              		.loc 1 5669 0
 8936 016a E36B     		ldr	r3, [r4, #60]
 8937 016c 002B     		cmp	r3, #0
 8938 016e BED0     		beq	.L681
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8939              		.loc 1 5671 0
 8940 0170 1B68     		ldr	r3, [r3]
 8941 0172 3049     		ldr	r1, .L700
 8942 0174 304A     		ldr	r2, .L700+4
 8943 0176 9342     		cmp	r3, r2
 8944 0178 18BF     		it	ne
 8945 017a 8B42     		cmpne	r3, r1
 8946 017c 2DD0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8947              		.loc 1 5671 0 is_stmt 0 discriminator 2
 8948 017e 1832     		adds	r2, r2, #24
 8949 0180 9342     		cmp	r3, r2
 8950 0182 2AD0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8951              		.loc 1 5671 0 discriminator 4
 8952 0184 1832     		adds	r2, r2, #24
 8953 0186 9342     		cmp	r3, r2
 8954 0188 27D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8955              		.loc 1 5671 0 discriminator 6
ARM GAS  /tmp/ccbPnc67.s 			page 300


 8956 018a 1832     		adds	r2, r2, #24
 8957 018c 9342     		cmp	r3, r2
 8958 018e 24D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8959              		.loc 1 5671 0 discriminator 8
 8960 0190 1832     		adds	r2, r2, #24
 8961 0192 9342     		cmp	r3, r2
 8962 0194 21D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8963              		.loc 1 5671 0 discriminator 10
 8964 0196 1832     		adds	r2, r2, #24
 8965 0198 9342     		cmp	r3, r2
 8966 019a 1ED0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8967              		.loc 1 5671 0 discriminator 12
 8968 019c 1832     		adds	r2, r2, #24
 8969 019e 9342     		cmp	r3, r2
 8970 01a0 1BD0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8971              		.loc 1 5671 0 discriminator 14
 8972 01a2 02F55672 		add	r2, r2, #856
 8973 01a6 9342     		cmp	r3, r2
 8974 01a8 17D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8975              		.loc 1 5671 0 discriminator 16
 8976 01aa 1832     		adds	r2, r2, #24
 8977 01ac 9342     		cmp	r3, r2
 8978 01ae 14D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8979              		.loc 1 5671 0 discriminator 18
 8980 01b0 1832     		adds	r2, r2, #24
 8981 01b2 9342     		cmp	r3, r2
 8982 01b4 11D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8983              		.loc 1 5671 0 discriminator 20
 8984 01b6 1832     		adds	r2, r2, #24
 8985 01b8 9342     		cmp	r3, r2
 8986 01ba 0ED0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8987              		.loc 1 5671 0 discriminator 22
 8988 01bc 1832     		adds	r2, r2, #24
 8989 01be 9342     		cmp	r3, r2
 8990 01c0 0BD0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8991              		.loc 1 5671 0 discriminator 24
 8992 01c2 1832     		adds	r2, r2, #24
 8993 01c4 9342     		cmp	r3, r2
 8994 01c6 08D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8995              		.loc 1 5671 0 discriminator 26
 8996 01c8 1832     		adds	r2, r2, #24
 8997 01ca 9342     		cmp	r3, r2
 8998 01cc 05D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8999              		.loc 1 5671 0 discriminator 28
 9000 01ce 1832     		adds	r2, r2, #24
 9001 01d0 9342     		cmp	r3, r2
ARM GAS  /tmp/ccbPnc67.s 			page 301


 9002 01d2 02D0     		beq	.L685
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9003              		.loc 1 5671 0 discriminator 30
 9004 01d4 5B68     		ldr	r3, [r3, #4]
 9005 01d6 9BB2     		uxth	r3, r3
 9006 01d8 01E0     		b	.L687
 9007              	.L685:
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9008              		.loc 1 5671 0 discriminator 29
 9009 01da 5B68     		ldr	r3, [r3, #4]
 9010 01dc 9BB2     		uxth	r3, r3
 9011              	.L687:
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9012              		.loc 1 5671 0 discriminator 32
 9013 01de 6385     		strh	r3, [r4, #42]	@ movhi
 9014 01e0 85E7     		b	.L681
 9015              	.LVL736:
 9016              	.L697:
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9017              		.loc 1 5711 0 is_stmt 1
 9018 01e2 616C     		ldr	r1, [r4, #68]
 9019 01e4 2046     		mov	r0, r4
 9020 01e6 FFF7FEFF 		bl	I2C_ITError
 9021              	.LVL737:
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9022              		.loc 1 5714 0
 9023 01ea 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9024 01ee DBB2     		uxtb	r3, r3
 9025 01f0 282B     		cmp	r3, #40
 9026 01f2 13D1     		bne	.L677
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9027              		.loc 1 5717 0
 9028 01f4 2946     		mov	r1, r5
 9029 01f6 2046     		mov	r0, r4
 9030 01f8 FFF7FEFF 		bl	I2C_ITListenCplt
 9031              	.LVL738:
 9032 01fc 0EE0     		b	.L677
 9033              	.L698:
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9034              		.loc 1 5723 0
 9035 01fe 2046     		mov	r0, r4
 9036 0200 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9037              	.LVL739:
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 9038              		.loc 1 5725 0
 9039 0204 0D4B     		ldr	r3, .L700+8
 9040 0206 E362     		str	r3, [r4, #44]
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9041              		.loc 1 5726 0
 9042 0208 2023     		movs	r3, #32
 9043 020a 84F84130 		strb	r3, [r4, #65]
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9044              		.loc 1 5727 0
 9045 020e 0023     		movs	r3, #0
 9046 0210 2363     		str	r3, [r4, #48]
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9047              		.loc 1 5730 0
ARM GAS  /tmp/ccbPnc67.s 			page 302


 9048 0212 84F84030 		strb	r3, [r4, #64]
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9049              		.loc 1 5736 0
 9050 0216 2046     		mov	r0, r4
 9051 0218 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 9052              	.LVL740:
 9053              	.L677:
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9054              		.loc 1 5770 0
 9055 021c 70BD     		pop	{r4, r5, r6, pc}
 9056              	.LVL741:
 9057              	.L699:
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9058              		.loc 1 5742 0
 9059 021e 2023     		movs	r3, #32
 9060 0220 84F84130 		strb	r3, [r4, #65]
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9061              		.loc 1 5743 0
 9062 0224 0023     		movs	r3, #0
 9063 0226 2363     		str	r3, [r4, #48]
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9064              		.loc 1 5746 0
 9065 0228 84F84030 		strb	r3, [r4, #64]
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9066              		.loc 1 5752 0
 9067 022c 2046     		mov	r0, r4
 9068 022e FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 9069              	.LVL742:
 9070 0232 F3E7     		b	.L677
 9071              	.L701:
 9072              		.align	2
 9073              	.L700:
 9074 0234 10000240 		.word	1073872912
 9075 0238 28000240 		.word	1073872936
 9076 023c 0000FFFF 		.word	-65536
 9077              		.cfi_endproc
 9078              	.LFE200:
 9080              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 9081              		.align	1
 9082              		.syntax unified
 9083              		.thumb
 9084              		.thumb_func
 9085              		.fpu fpv5-d16
 9087              	I2C_Slave_ISR_IT:
 9088              	.LFB191:
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9089              		.loc 1 4748 0
 9090              		.cfi_startproc
 9091              		@ args = 0, pretend = 0, frame = 0
 9092              		@ frame_needed = 0, uses_anonymous_args = 0
 9093              	.LVL743:
 9094 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9095              	.LCFI124:
 9096              		.cfi_def_cfa_offset 24
 9097              		.cfi_offset 3, -24
 9098              		.cfi_offset 4, -20
 9099              		.cfi_offset 5, -16
ARM GAS  /tmp/ccbPnc67.s 			page 303


 9100              		.cfi_offset 6, -12
 9101              		.cfi_offset 7, -8
 9102              		.cfi_offset 14, -4
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 9103              		.loc 1 4749 0
 9104 0002 C76A     		ldr	r7, [r0, #44]
 9105              	.LVL744:
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9106              		.loc 1 4753 0
 9107 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9108 0008 012B     		cmp	r3, #1
 9109 000a 00F0A380 		beq	.L714
 9110 000e 1646     		mov	r6, r2
 9111 0010 0D46     		mov	r5, r1
 9112 0012 0446     		mov	r4, r0
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9113              		.loc 1 4753 0 is_stmt 0 discriminator 2
 9114 0014 0123     		movs	r3, #1
 9115 0016 80F84030 		strb	r3, [r0, #64]
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9116              		.loc 1 4756 0 is_stmt 1 discriminator 2
 9117 001a 11F0200F 		tst	r1, #32
 9118 001e 02D0     		beq	.L704
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9119              		.loc 1 4756 0 is_stmt 0 discriminator 1
 9120 0020 12F0200F 		tst	r2, #32
 9121 0024 19D1     		bne	.L716
 9122              	.LVL745:
 9123              	.L704:
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9124              		.loc 1 4762 0 is_stmt 1
 9125 0026 15F0100F 		tst	r5, #16
 9126 002a 45D0     		beq	.L705
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9127              		.loc 1 4762 0 is_stmt 0 discriminator 1
 9128 002c 16F0100F 		tst	r6, #16
 9129 0030 42D0     		beq	.L705
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9130              		.loc 1 4768 0 is_stmt 1
 9131 0032 638D     		ldrh	r3, [r4, #42]
 9132 0034 9BB2     		uxth	r3, r3
 9133 0036 43BB     		cbnz	r3, .L706
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9134              		.loc 1 4770 0
 9135 0038 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9136 003c DBB2     		uxtb	r3, r3
 9137 003e 282B     		cmp	r3, #40
 9138 0040 0ED0     		beq	.L717
 9139              	.L707:
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9140              		.loc 1 4775 0
 9141 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9142 0046 DBB2     		uxtb	r3, r3
 9143 0048 292B     		cmp	r3, #41
 9144 004a 11D0     		beq	.L718
 9145              	.L709:
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  /tmp/ccbPnc67.s 			page 304


 9146              		.loc 1 4790 0
 9147 004c 2368     		ldr	r3, [r4]
 9148 004e 1022     		movs	r2, #16
 9149 0050 DA61     		str	r2, [r3, #28]
 9150              	.LVL746:
 9151              	.L708:
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9152              		.loc 1 4867 0
 9153 0052 0020     		movs	r0, #0
 9154 0054 84F84000 		strb	r0, [r4, #64]
 9155              	.LVL747:
 9156              	.L703:
4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9157              		.loc 1 4870 0
 9158 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9159              	.LVL748:
 9160              	.L716:
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9161              		.loc 1 4759 0
 9162 005a FFF7FEFF 		bl	I2C_ITSlaveCplt
 9163              	.LVL749:
 9164 005e E2E7     		b	.L704
 9165              	.L717:
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9166              		.loc 1 4770 0 discriminator 1
 9167 0060 B7F1007F 		cmp	r7, #33554432
 9168 0064 EDD1     		bne	.L707
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9169              		.loc 1 4773 0
 9170 0066 2946     		mov	r1, r5
 9171 0068 2046     		mov	r0, r4
 9172 006a FFF7FEFF 		bl	I2C_ITListenCplt
 9173              	.LVL750:
 9174 006e F0E7     		b	.L708
 9175              	.L718:
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9176              		.loc 1 4775 0 discriminator 1
 9177 0070 17F5803F 		cmn	r7, #65536
 9178 0074 EAD0     		beq	.L709
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9179              		.loc 1 4778 0
 9180 0076 2368     		ldr	r3, [r4]
 9181 0078 1022     		movs	r2, #16
 9182 007a DA61     		str	r2, [r3, #28]
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9183              		.loc 1 4781 0
 9184 007c 2046     		mov	r0, r4
 9185 007e FFF7FEFF 		bl	I2C_Flush_TXDR
 9186              	.LVL751:
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9187              		.loc 1 4785 0
 9188 0082 2046     		mov	r0, r4
 9189 0084 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9190              	.LVL752:
 9191 0088 E3E7     		b	.L708
 9192              	.L706:
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 305


 9193              		.loc 1 4797 0
 9194 008a 2368     		ldr	r3, [r4]
 9195 008c 1022     		movs	r2, #16
 9196 008e DA61     		str	r2, [r3, #28]
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9197              		.loc 1 4800 0
 9198 0090 636C     		ldr	r3, [r4, #68]
 9199 0092 43F00403 		orr	r3, r3, #4
 9200 0096 6364     		str	r3, [r4, #68]
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9201              		.loc 1 4802 0
 9202 0098 B7F1807F 		cmp	r7, #16777216
 9203 009c 14BF     		ite	ne
 9204 009e 0023     		movne	r3, #0
 9205 00a0 0123     		moveq	r3, #1
 9206 00a2 002F     		cmp	r7, #0
 9207 00a4 14BF     		ite	ne
 9208 00a6 1F46     		movne	r7, r3
 9209 00a8 0127     		moveq	r7, #1
 9210              	.LVL753:
 9211 00aa 002F     		cmp	r7, #0
 9212 00ac D1D0     		beq	.L708
4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9213              		.loc 1 4805 0
 9214 00ae 616C     		ldr	r1, [r4, #68]
 9215 00b0 2046     		mov	r0, r4
 9216 00b2 FFF7FEFF 		bl	I2C_ITError
 9217              	.LVL754:
 9218 00b6 CCE7     		b	.L708
 9219              	.LVL755:
 9220              	.L705:
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9221              		.loc 1 4809 0
 9222 00b8 15F0040F 		tst	r5, #4
 9223 00bc 1ED0     		beq	.L710
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9224              		.loc 1 4809 0 is_stmt 0 discriminator 1
 9225 00be 16F0040F 		tst	r6, #4
 9226 00c2 1BD0     		beq	.L710
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9227              		.loc 1 4811 0 is_stmt 1
 9228 00c4 638D     		ldrh	r3, [r4, #42]
 9229 00c6 9BB2     		uxth	r3, r3
 9230 00c8 6BB1     		cbz	r3, .L711
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9231              		.loc 1 4814 0
 9232 00ca 2368     		ldr	r3, [r4]
 9233 00cc 5A6A     		ldr	r2, [r3, #36]
 9234 00ce 636A     		ldr	r3, [r4, #36]
 9235 00d0 1A70     		strb	r2, [r3]
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9236              		.loc 1 4817 0
 9237 00d2 636A     		ldr	r3, [r4, #36]
 9238 00d4 0133     		adds	r3, r3, #1
 9239 00d6 6362     		str	r3, [r4, #36]
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 9240              		.loc 1 4819 0
ARM GAS  /tmp/ccbPnc67.s 			page 306


 9241 00d8 238D     		ldrh	r3, [r4, #40]
 9242 00da 013B     		subs	r3, r3, #1
 9243 00dc 2385     		strh	r3, [r4, #40]	@ movhi
4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9244              		.loc 1 4820 0
 9245 00de 638D     		ldrh	r3, [r4, #42]
 9246 00e0 013B     		subs	r3, r3, #1
 9247 00e2 9BB2     		uxth	r3, r3
 9248 00e4 6385     		strh	r3, [r4, #42]	@ movhi
 9249              	.L711:
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 9250              		.loc 1 4823 0
 9251 00e6 638D     		ldrh	r3, [r4, #42]
 9252 00e8 9BB2     		uxth	r3, r3
 9253 00ea 002B     		cmp	r3, #0
 9254 00ec B1D1     		bne	.L708
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 9255              		.loc 1 4823 0 is_stmt 0 discriminator 1
 9256 00ee 17F5803F 		cmn	r7, #65536
 9257 00f2 AED0     		beq	.L708
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9258              		.loc 1 4827 0 is_stmt 1
 9259 00f4 2046     		mov	r0, r4
 9260 00f6 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9261              	.LVL756:
 9262 00fa AAE7     		b	.L708
 9263              	.L710:
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9264              		.loc 1 4830 0
 9265 00fc 15F0080F 		tst	r5, #8
 9266 0100 02D0     		beq	.L712
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9267              		.loc 1 4830 0 is_stmt 0 discriminator 1
 9268 0102 16F0080F 		tst	r6, #8
 9269 0106 17D1     		bne	.L719
 9270              	.L712:
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9271              		.loc 1 4834 0 is_stmt 1
 9272 0108 15F0020F 		tst	r5, #2
 9273 010c A1D0     		beq	.L708
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9274              		.loc 1 4834 0 is_stmt 0 discriminator 1
 9275 010e 16F0020F 		tst	r6, #2
 9276 0112 9ED0     		beq	.L708
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9277              		.loc 1 4840 0 is_stmt 1
 9278 0114 638D     		ldrh	r3, [r4, #42]
 9279 0116 9BB2     		uxth	r3, r3
 9280 0118 9BB1     		cbz	r3, .L713
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9281              		.loc 1 4843 0
 9282 011a 626A     		ldr	r2, [r4, #36]
 9283 011c 2368     		ldr	r3, [r4]
 9284 011e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9285 0120 9A62     		str	r2, [r3, #40]
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9286              		.loc 1 4846 0
ARM GAS  /tmp/ccbPnc67.s 			page 307


 9287 0122 636A     		ldr	r3, [r4, #36]
 9288 0124 0133     		adds	r3, r3, #1
 9289 0126 6362     		str	r3, [r4, #36]
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 9290              		.loc 1 4848 0
 9291 0128 638D     		ldrh	r3, [r4, #42]
 9292 012a 013B     		subs	r3, r3, #1
 9293 012c 9BB2     		uxth	r3, r3
 9294 012e 6385     		strh	r3, [r4, #42]	@ movhi
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9295              		.loc 1 4849 0
 9296 0130 238D     		ldrh	r3, [r4, #40]
 9297 0132 013B     		subs	r3, r3, #1
 9298 0134 2385     		strh	r3, [r4, #40]	@ movhi
 9299 0136 8CE7     		b	.L708
 9300              	.L719:
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9301              		.loc 1 4832 0
 9302 0138 2946     		mov	r1, r5
 9303 013a 2046     		mov	r0, r4
 9304 013c FFF7FEFF 		bl	I2C_ITAddrCplt
 9305              	.LVL757:
 9306 0140 87E7     		b	.L708
 9307              	.L713:
4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9308              		.loc 1 4853 0
 9309 0142 002F     		cmp	r7, #0
 9310 0144 18BF     		it	ne
 9311 0146 B7F1807F 		cmpne	r7, #16777216
 9312 014a 82D1     		bne	.L708
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9313              		.loc 1 4857 0
 9314 014c 2046     		mov	r0, r4
 9315 014e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9316              	.LVL758:
 9317 0152 7EE7     		b	.L708
 9318              	.LVL759:
 9319              	.L714:
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9320              		.loc 1 4753 0
 9321 0154 0220     		movs	r0, #2
 9322              	.LVL760:
 9323 0156 7FE7     		b	.L703
 9324              		.cfi_endproc
 9325              	.LFE191:
 9327              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 9328              		.align	1
 9329              		.syntax unified
 9330              		.thumb
 9331              		.thumb_func
 9332              		.fpu fpv5-d16
 9334              	I2C_ITMasterCplt:
 9335              	.LFB199:
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
 9336              		.loc 1 5477 0
 9337              		.cfi_startproc
 9338              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccbPnc67.s 			page 308


 9339              		@ frame_needed = 0, uses_anonymous_args = 0
 9340              	.LVL761:
 9341 0000 30B5     		push	{r4, r5, lr}
 9342              	.LCFI125:
 9343              		.cfi_def_cfa_offset 12
 9344              		.cfi_offset 4, -12
 9345              		.cfi_offset 5, -8
 9346              		.cfi_offset 14, -4
 9347 0002 83B0     		sub	sp, sp, #12
 9348              	.LCFI126:
 9349              		.cfi_def_cfa_offset 24
 9350 0004 0446     		mov	r4, r0
 9351 0006 0D46     		mov	r5, r1
 9352              	.LVL762:
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9353              		.loc 1 5483 0
 9354 0008 0368     		ldr	r3, [r0]
 9355 000a 2022     		movs	r2, #32
 9356 000c DA61     		str	r2, [r3, #28]
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9357              		.loc 1 5486 0
 9358 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9359 0012 DBB2     		uxtb	r3, r3
 9360 0014 212B     		cmp	r3, #33
 9361 0016 4AD0     		beq	.L732
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9362              		.loc 1 5491 0
 9363 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9364 001c DBB2     		uxtb	r3, r3
 9365 001e 222B     		cmp	r3, #34
 9366 0020 4BD0     		beq	.L733
 9367              	.LVL763:
 9368              	.L722:
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9369              		.loc 1 5502 0
 9370 0022 2268     		ldr	r2, [r4]
 9371 0024 5368     		ldr	r3, [r2, #4]
 9372 0026 23F0FF73 		bic	r3, r3, #33423360
 9373 002a 23F48B33 		bic	r3, r3, #71168
 9374 002e 23F4FF73 		bic	r3, r3, #510
 9375 0032 23F00103 		bic	r3, r3, #1
 9376 0036 5360     		str	r3, [r2, #4]
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9377              		.loc 1 5505 0
 9378 0038 0023     		movs	r3, #0
 9379 003a 6363     		str	r3, [r4, #52]
5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9380              		.loc 1 5506 0
 9381 003c A3F58033 		sub	r3, r3, #65536
 9382 0040 E362     		str	r3, [r4, #44]
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9383              		.loc 1 5508 0
 9384 0042 15F0100F 		tst	r5, #16
 9385 0046 06D0     		beq	.L723
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9386              		.loc 1 5511 0
 9387 0048 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccbPnc67.s 			page 309


 9388 004a 1022     		movs	r2, #16
 9389 004c DA61     		str	r2, [r3, #28]
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9390              		.loc 1 5514 0
 9391 004e 636C     		ldr	r3, [r4, #68]
 9392 0050 43F00403 		orr	r3, r3, #4
 9393 0054 6364     		str	r3, [r4, #68]
 9394              	.L723:
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9395              		.loc 1 5518 0
 9396 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9397 005a DBB2     		uxtb	r3, r3
 9398 005c 602B     		cmp	r3, #96
 9399 005e 32D0     		beq	.L734
 9400              	.L724:
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9401              		.loc 1 5526 0
 9402 0060 2046     		mov	r0, r4
 9403 0062 FFF7FEFF 		bl	I2C_Flush_TXDR
 9404              	.LVL764:
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9405              		.loc 1 5529 0
 9406 0066 626C     		ldr	r2, [r4, #68]
 9407              	.LVL765:
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9408              		.loc 1 5532 0
 9409 0068 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9410 006c DBB2     		uxtb	r3, r3
 9411 006e 602B     		cmp	r3, #96
 9412 0070 32D0     		beq	.L725
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9413              		.loc 1 5532 0 is_stmt 0 discriminator 1
 9414 0072 8ABB     		cbnz	r2, .L725
5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9415              		.loc 1 5538 0 is_stmt 1
 9416 0074 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9417 0078 DBB2     		uxtb	r3, r3
 9418 007a 212B     		cmp	r3, #33
 9419 007c 32D0     		beq	.L735
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9420              		.loc 1 5573 0
 9421 007e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9422 0082 DBB2     		uxtb	r3, r3
 9423 0084 222B     		cmp	r3, #34
 9424 0086 2BD1     		bne	.L720
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9425              		.loc 1 5575 0
 9426 0088 2023     		movs	r3, #32
 9427 008a 84F84130 		strb	r3, [r4, #65]
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9428              		.loc 1 5576 0
 9429 008e 0023     		movs	r3, #0
 9430 0090 2363     		str	r3, [r4, #48]
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9431              		.loc 1 5578 0
 9432 0092 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9433 0096 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccbPnc67.s 			page 310


 9434 0098 402B     		cmp	r3, #64
 9435 009a 3FD0     		beq	.L736
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9436              		.loc 1 5594 0
 9437 009c 0023     		movs	r3, #0
 9438 009e 84F84230 		strb	r3, [r4, #66]
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9439              		.loc 1 5597 0
 9440 00a2 84F84030 		strb	r3, [r4, #64]
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9441              		.loc 1 5603 0
 9442 00a6 2046     		mov	r0, r4
 9443 00a8 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9444              	.LVL766:
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9445              		.loc 1 5611 0
 9446 00ac 18E0     		b	.L720
 9447              	.LVL767:
 9448              	.L732:
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 9449              		.loc 1 5488 0
 9450 00ae 0121     		movs	r1, #1
 9451              	.LVL768:
 9452 00b0 FFF7FEFF 		bl	I2C_Disable_IRQ
 9453              	.LVL769:
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9454              		.loc 1 5489 0
 9455 00b4 1123     		movs	r3, #17
 9456 00b6 2363     		str	r3, [r4, #48]
 9457 00b8 B3E7     		b	.L722
 9458              	.LVL770:
 9459              	.L733:
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 9460              		.loc 1 5493 0
 9461 00ba 0221     		movs	r1, #2
 9462              	.LVL771:
 9463 00bc FFF7FEFF 		bl	I2C_Disable_IRQ
 9464              	.LVL772:
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9465              		.loc 1 5494 0
 9466 00c0 1223     		movs	r3, #18
 9467 00c2 2363     		str	r3, [r4, #48]
 9468 00c4 ADE7     		b	.L722
 9469              	.L734:
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9470              		.loc 1 5518 0 discriminator 1
 9471 00c6 15F0040F 		tst	r5, #4
 9472 00ca C9D0     		beq	.L724
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     UNUSED(tmpreg);
 9473              		.loc 1 5521 0
 9474 00cc 2368     		ldr	r3, [r4]
 9475 00ce 5B6A     		ldr	r3, [r3, #36]
 9476 00d0 DBB2     		uxtb	r3, r3
 9477 00d2 0193     		str	r3, [sp, #4]
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9478              		.loc 1 5522 0
 9479 00d4 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccbPnc67.s 			page 311


 9480 00d6 C3E7     		b	.L724
 9481              	.LVL773:
 9482              	.L725:
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9483              		.loc 1 5535 0
 9484 00d8 616C     		ldr	r1, [r4, #68]
 9485 00da 2046     		mov	r0, r4
 9486 00dc FFF7FEFF 		bl	I2C_ITError
 9487              	.LVL774:
 9488              	.L720:
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9489              		.loc 1 5611 0
 9490 00e0 03B0     		add	sp, sp, #12
 9491              	.LCFI127:
 9492              		.cfi_remember_state
 9493              		.cfi_def_cfa_offset 12
 9494              		@ sp needed
 9495 00e2 30BD     		pop	{r4, r5, pc}
 9496              	.LVL775:
 9497              	.L735:
 9498              	.LCFI128:
 9499              		.cfi_restore_state
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9500              		.loc 1 5540 0
 9501 00e4 2023     		movs	r3, #32
 9502 00e6 84F84130 		strb	r3, [r4, #65]
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9503              		.loc 1 5541 0
 9504 00ea 0023     		movs	r3, #0
 9505 00ec 2363     		str	r3, [r4, #48]
5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9506              		.loc 1 5543 0
 9507 00ee 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9508 00f2 DBB2     		uxtb	r3, r3
 9509 00f4 402B     		cmp	r3, #64
 9510 00f6 08D0     		beq	.L737
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9511              		.loc 1 5559 0
 9512 00f8 0023     		movs	r3, #0
 9513 00fa 84F84230 		strb	r3, [r4, #66]
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9514              		.loc 1 5562 0
 9515 00fe 84F84030 		strb	r3, [r4, #64]
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9516              		.loc 1 5568 0
 9517 0102 2046     		mov	r0, r4
 9518 0104 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9519              	.LVL776:
 9520 0108 EAE7     		b	.L720
 9521              	.LVL777:
 9522              	.L737:
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9523              		.loc 1 5545 0
 9524 010a 0023     		movs	r3, #0
 9525 010c 84F84230 		strb	r3, [r4, #66]
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9526              		.loc 1 5548 0
ARM GAS  /tmp/ccbPnc67.s 			page 312


 9527 0110 84F84030 		strb	r3, [r4, #64]
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9528              		.loc 1 5554 0
 9529 0114 2046     		mov	r0, r4
 9530 0116 FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9531              	.LVL778:
 9532 011a E1E7     		b	.L720
 9533              	.LVL779:
 9534              	.L736:
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9535              		.loc 1 5580 0
 9536 011c 0023     		movs	r3, #0
 9537 011e 84F84230 		strb	r3, [r4, #66]
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9538              		.loc 1 5583 0
 9539 0122 84F84030 		strb	r3, [r4, #64]
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9540              		.loc 1 5589 0
 9541 0126 2046     		mov	r0, r4
 9542 0128 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9543              	.LVL780:
 9544 012c D8E7     		b	.L720
 9545              		.cfi_endproc
 9546              	.LFE199:
 9548              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9549              		.align	1
 9550              		.syntax unified
 9551              		.thumb
 9552              		.thumb_func
 9553              		.fpu fpv5-d16
 9555              	I2C_Master_ISR_IT:
 9556              	.LFB190:
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 9557              		.loc 1 4611 0
 9558              		.cfi_startproc
 9559              		@ args = 0, pretend = 0, frame = 0
 9560              		@ frame_needed = 0, uses_anonymous_args = 0
 9561              	.LVL781:
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9562              		.loc 1 4616 0
 9563 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9564 0004 012B     		cmp	r3, #1
 9565 0006 00F0B780 		beq	.L752
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 9566              		.loc 1 4611 0 discriminator 2
 9567 000a 70B5     		push	{r4, r5, r6, lr}
 9568              	.LCFI129:
 9569              		.cfi_def_cfa_offset 16
 9570              		.cfi_offset 4, -16
 9571              		.cfi_offset 5, -12
 9572              		.cfi_offset 6, -8
 9573              		.cfi_offset 14, -4
 9574 000c 82B0     		sub	sp, sp, #8
 9575              	.LCFI130:
 9576              		.cfi_def_cfa_offset 24
 9577 000e 0446     		mov	r4, r0
 9578 0010 0D46     		mov	r5, r1
ARM GAS  /tmp/ccbPnc67.s 			page 313


 9579 0012 1646     		mov	r6, r2
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9580              		.loc 1 4616 0 discriminator 2
 9581 0014 0123     		movs	r3, #1
 9582 0016 80F84030 		strb	r3, [r0, #64]
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9583              		.loc 1 4618 0 discriminator 2
 9584 001a 11F0100F 		tst	r1, #16
 9585 001e 02D0     		beq	.L740
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9586              		.loc 1 4618 0 is_stmt 0 discriminator 1
 9587 0020 12F0100F 		tst	r2, #16
 9588 0024 21D1     		bne	.L757
 9589              	.L740:
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9590              		.loc 1 4631 0 is_stmt 1
 9591 0026 15F0040F 		tst	r5, #4
 9592 002a 28D0     		beq	.L742
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9593              		.loc 1 4631 0 is_stmt 0 discriminator 1
 9594 002c 16F0040F 		tst	r6, #4
 9595 0030 25D0     		beq	.L742
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9596              		.loc 1 4634 0 is_stmt 1
 9597 0032 25F00405 		bic	r5, r5, #4
 9598              	.LVL782:
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9599              		.loc 1 4637 0
 9600 0036 2368     		ldr	r3, [r4]
 9601 0038 5A6A     		ldr	r2, [r3, #36]
 9602              	.LVL783:
 9603 003a 636A     		ldr	r3, [r4, #36]
 9604 003c 1A70     		strb	r2, [r3]
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9605              		.loc 1 4640 0
 9606 003e 636A     		ldr	r3, [r4, #36]
 9607 0040 0133     		adds	r3, r3, #1
 9608 0042 6362     		str	r3, [r4, #36]
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
 9609              		.loc 1 4642 0
 9610 0044 238D     		ldrh	r3, [r4, #40]
 9611 0046 013B     		subs	r3, r3, #1
 9612 0048 2385     		strh	r3, [r4, #40]	@ movhi
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9613              		.loc 1 4643 0
 9614 004a 638D     		ldrh	r3, [r4, #42]
 9615 004c 013B     		subs	r3, r3, #1
 9616 004e 9BB2     		uxth	r3, r3
 9617 0050 6385     		strh	r3, [r4, #42]	@ movhi
 9618              	.LVL784:
 9619              	.L741:
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9620              		.loc 1 4727 0
 9621 0052 15F0200F 		tst	r5, #32
 9622 0056 03D0     		beq	.L751
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9623              		.loc 1 4727 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccbPnc67.s 			page 314


 9624 0058 16F0200F 		tst	r6, #32
 9625 005c 40F08780 		bne	.L758
 9626              	.L751:
4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9627              		.loc 1 4734 0 is_stmt 1
 9628 0060 0020     		movs	r0, #0
 9629 0062 84F84000 		strb	r0, [r4, #64]
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9630              		.loc 1 4737 0
 9631 0066 02B0     		add	sp, sp, #8
 9632              	.LCFI131:
 9633              		.cfi_remember_state
 9634              		.cfi_def_cfa_offset 16
 9635              		@ sp needed
 9636 0068 70BD     		pop	{r4, r5, r6, pc}
 9637              	.LVL785:
 9638              	.L757:
 9639              	.LCFI132:
 9640              		.cfi_restore_state
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9641              		.loc 1 4621 0
 9642 006a 0368     		ldr	r3, [r0]
 9643 006c 1022     		movs	r2, #16
 9644              	.LVL786:
 9645 006e DA61     		str	r2, [r3, #28]
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9646              		.loc 1 4626 0
 9647 0070 436C     		ldr	r3, [r0, #68]
 9648 0072 43F00403 		orr	r3, r3, #4
 9649 0076 4364     		str	r3, [r0, #68]
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9650              		.loc 1 4629 0
 9651 0078 FFF7FEFF 		bl	I2C_Flush_TXDR
 9652              	.LVL787:
 9653 007c E9E7     		b	.L741
 9654              	.LVL788:
 9655              	.L742:
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9656              		.loc 1 4645 0
 9657 007e 15F0020F 		tst	r5, #2
 9658 0082 11D0     		beq	.L743
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9659              		.loc 1 4645 0 is_stmt 0 discriminator 1
 9660 0084 16F0020F 		tst	r6, #2
 9661 0088 0ED0     		beq	.L743
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9662              		.loc 1 4648 0 is_stmt 1
 9663 008a 626A     		ldr	r2, [r4, #36]
 9664              	.LVL789:
 9665 008c 2368     		ldr	r3, [r4]
 9666 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9667 0090 9A62     		str	r2, [r3, #40]
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9668              		.loc 1 4651 0
 9669 0092 636A     		ldr	r3, [r4, #36]
 9670 0094 0133     		adds	r3, r3, #1
 9671 0096 6362     		str	r3, [r4, #36]
ARM GAS  /tmp/ccbPnc67.s 			page 315


4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
 9672              		.loc 1 4653 0
 9673 0098 238D     		ldrh	r3, [r4, #40]
 9674 009a 013B     		subs	r3, r3, #1
 9675 009c 2385     		strh	r3, [r4, #40]	@ movhi
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9676              		.loc 1 4654 0
 9677 009e 638D     		ldrh	r3, [r4, #42]
 9678 00a0 013B     		subs	r3, r3, #1
 9679 00a2 9BB2     		uxth	r3, r3
 9680 00a4 6385     		strh	r3, [r4, #42]	@ movhi
 9681 00a6 D4E7     		b	.L741
 9682              	.LVL790:
 9683              	.L743:
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9684              		.loc 1 4656 0
 9685 00a8 15F0800F 		tst	r5, #128
 9686 00ac 3FD0     		beq	.L744
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9687              		.loc 1 4656 0 is_stmt 0 discriminator 1
 9688 00ae 16F0400F 		tst	r6, #64
 9689 00b2 3CD0     		beq	.L744
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9690              		.loc 1 4658 0 is_stmt 1
 9691 00b4 638D     		ldrh	r3, [r4, #42]
 9692 00b6 9BB2     		uxth	r3, r3
 9693 00b8 5BB3     		cbz	r3, .L745
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9694              		.loc 1 4658 0 is_stmt 0 discriminator 1
 9695 00ba 238D     		ldrh	r3, [r4, #40]
 9696 00bc 4BBB     		cbnz	r3, .L745
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9697              		.loc 1 4660 0 is_stmt 1
 9698 00be 2368     		ldr	r3, [r4]
 9699 00c0 5968     		ldr	r1, [r3, #4]
 9700              	.LVL791:
 9701 00c2 C1F30901 		ubfx	r1, r1, #0, #10
 9702              	.LVL792:
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9703              		.loc 1 4662 0
 9704 00c6 638D     		ldrh	r3, [r4, #42]
 9705 00c8 9BB2     		uxth	r3, r3
 9706 00ca FF2B     		cmp	r3, #255
 9707 00cc 0ED8     		bhi	.L759
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9708              		.loc 1 4669 0
 9709 00ce 628D     		ldrh	r2, [r4, #42]
 9710              	.LVL793:
 9711 00d0 92B2     		uxth	r2, r2
 9712 00d2 2285     		strh	r2, [r4, #40]	@ movhi
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9713              		.loc 1 4670 0
 9714 00d4 E36A     		ldr	r3, [r4, #44]
 9715 00d6 13F5803F 		cmn	r3, #65536
 9716 00da 11D0     		beq	.L747
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9717              		.loc 1 4672 0
ARM GAS  /tmp/ccbPnc67.s 			page 316


 9718 00dc E36A     		ldr	r3, [r4, #44]
 9719 00de 0020     		movs	r0, #0
 9720              	.LVL794:
 9721 00e0 0090     		str	r0, [sp]
 9722 00e2 D2B2     		uxtb	r2, r2
 9723 00e4 2046     		mov	r0, r4
 9724 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 9725              	.LVL795:
 9726 00ea B2E7     		b	.L741
 9727              	.LVL796:
 9728              	.L759:
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9729              		.loc 1 4664 0
 9730 00ec FF22     		movs	r2, #255
 9731              	.LVL797:
 9732 00ee 2285     		strh	r2, [r4, #40]	@ movhi
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9733              		.loc 1 4665 0
 9734 00f0 0023     		movs	r3, #0
 9735 00f2 0093     		str	r3, [sp]
 9736 00f4 4FF08073 		mov	r3, #16777216
 9737 00f8 2046     		mov	r0, r4
 9738              	.LVL798:
 9739 00fa FFF7FEFF 		bl	I2C_TransferConfig
 9740              	.LVL799:
 9741 00fe A8E7     		b	.L741
 9742              	.LVL800:
 9743              	.L747:
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9744              		.loc 1 4676 0
 9745 0100 0023     		movs	r3, #0
 9746 0102 0093     		str	r3, [sp]
 9747 0104 4FF00073 		mov	r3, #33554432
 9748 0108 D2B2     		uxtb	r2, r2
 9749 010a 2046     		mov	r0, r4
 9750              	.LVL801:
 9751 010c FFF7FEFF 		bl	I2C_TransferConfig
 9752              	.LVL802:
 9753 0110 9FE7     		b	.L741
 9754              	.LVL803:
 9755              	.L745:
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9756              		.loc 1 4683 0
 9757 0112 2368     		ldr	r3, [r4]
 9758 0114 5B68     		ldr	r3, [r3, #4]
 9759 0116 13F0007F 		tst	r3, #33554432
 9760 011a 03D1     		bne	.L748
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9761              		.loc 1 4686 0
 9762 011c 2046     		mov	r0, r4
 9763              	.LVL804:
 9764 011e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9765              	.LVL805:
 9766 0122 96E7     		b	.L741
 9767              	.LVL806:
 9768              	.L748:
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  /tmp/ccbPnc67.s 			page 317


 9769              		.loc 1 4692 0
 9770 0124 4021     		movs	r1, #64
 9771              	.LVL807:
 9772 0126 2046     		mov	r0, r4
 9773              	.LVL808:
 9774 0128 FFF7FEFF 		bl	I2C_ITError
 9775              	.LVL809:
 9776 012c 91E7     		b	.L741
 9777              	.LVL810:
 9778              	.L744:
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9779              		.loc 1 4696 0
 9780 012e 15F0400F 		tst	r5, #64
 9781 0132 8ED0     		beq	.L741
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9782              		.loc 1 4696 0 is_stmt 0 discriminator 1
 9783 0134 16F0400F 		tst	r6, #64
 9784 0138 8BD0     		beq	.L741
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9785              		.loc 1 4698 0 is_stmt 1
 9786 013a 638D     		ldrh	r3, [r4, #42]
 9787 013c 9BB2     		uxth	r3, r3
 9788 013e 8BB9     		cbnz	r3, .L749
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9789              		.loc 1 4700 0
 9790 0140 2368     		ldr	r3, [r4]
 9791 0142 5A68     		ldr	r2, [r3, #4]
 9792              	.LVL811:
 9793 0144 12F0007F 		tst	r2, #33554432
 9794 0148 83D1     		bne	.L741
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9795              		.loc 1 4703 0
 9796 014a E26A     		ldr	r2, [r4, #44]
 9797 014c 12F5803F 		cmn	r2, #65536
 9798 0150 04D1     		bne	.L750
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9799              		.loc 1 4706 0
 9800 0152 5A68     		ldr	r2, [r3, #4]
 9801 0154 42F48042 		orr	r2, r2, #16384
 9802 0158 5A60     		str	r2, [r3, #4]
 9803 015a 7AE7     		b	.L741
 9804              	.L750:
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9805              		.loc 1 4711 0
 9806 015c 2046     		mov	r0, r4
 9807              	.LVL812:
 9808 015e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9809              	.LVL813:
 9810 0162 76E7     		b	.L741
 9811              	.LVL814:
 9812              	.L749:
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9813              		.loc 1 4719 0
 9814 0164 4021     		movs	r1, #64
 9815              	.LVL815:
 9816 0166 2046     		mov	r0, r4
 9817              	.LVL816:
ARM GAS  /tmp/ccbPnc67.s 			page 318


 9818 0168 FFF7FEFF 		bl	I2C_ITError
 9819              	.LVL817:
 9820 016c 71E7     		b	.L741
 9821              	.LVL818:
 9822              	.L758:
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9823              		.loc 1 4730 0
 9824 016e 2946     		mov	r1, r5
 9825 0170 2046     		mov	r0, r4
 9826 0172 FFF7FEFF 		bl	I2C_ITMasterCplt
 9827              	.LVL819:
 9828 0176 73E7     		b	.L751
 9829              	.LVL820:
 9830              	.L752:
 9831              	.LCFI133:
 9832              		.cfi_def_cfa_offset 0
 9833              		.cfi_restore 4
 9834              		.cfi_restore 5
 9835              		.cfi_restore 6
 9836              		.cfi_restore 14
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9837              		.loc 1 4616 0
 9838 0178 0220     		movs	r0, #2
 9839              	.LVL821:
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9840              		.loc 1 4737 0
 9841 017a 7047     		bx	lr
 9842              		.cfi_endproc
 9843              	.LFE190:
 9845              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9846              		.align	1
 9847              		.syntax unified
 9848              		.thumb
 9849              		.thumb_func
 9850              		.fpu fpv5-d16
 9852              	I2C_Slave_ISR_DMA:
 9853              	.LFB193:
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9854              		.loc 1 5016 0
 9855              		.cfi_startproc
 9856              		@ args = 0, pretend = 0, frame = 0
 9857              		@ frame_needed = 0, uses_anonymous_args = 0
 9858              	.LVL822:
 9859 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9860              	.LCFI134:
 9861              		.cfi_def_cfa_offset 24
 9862              		.cfi_offset 3, -24
 9863              		.cfi_offset 4, -20
 9864              		.cfi_offset 5, -16
 9865              		.cfi_offset 6, -12
 9866              		.cfi_offset 7, -8
 9867              		.cfi_offset 14, -4
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9868              		.loc 1 5017 0
 9869 0002 C76A     		ldr	r7, [r0, #44]
 9870              	.LVL823:
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  /tmp/ccbPnc67.s 			page 319


 9871              		.loc 1 5022 0
 9872 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9873 0008 012B     		cmp	r3, #1
 9874 000a 00F00781 		beq	.L781
 9875 000e 1646     		mov	r6, r2
 9876 0010 0C46     		mov	r4, r1
 9877 0012 0546     		mov	r5, r0
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9878              		.loc 1 5022 0 is_stmt 0 discriminator 2
 9879 0014 0123     		movs	r3, #1
 9880 0016 80F84030 		strb	r3, [r0, #64]
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9881              		.loc 1 5025 0 is_stmt 1 discriminator 2
 9882 001a 11F0200F 		tst	r1, #32
 9883 001e 02D0     		beq	.L762
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9884              		.loc 1 5025 0 is_stmt 0 discriminator 1
 9885 0020 12F0200F 		tst	r2, #32
 9886 0024 4BD1     		bne	.L786
 9887              	.LVL824:
 9888              	.L762:
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9889              		.loc 1 5031 0 is_stmt 1
 9890 0026 14F0100F 		tst	r4, #16
 9891 002a 00F0E880 		beq	.L763
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9892              		.loc 1 5031 0 is_stmt 0 discriminator 1
 9893 002e 16F0100F 		tst	r6, #16
 9894 0032 00F0E480 		beq	.L763
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9895              		.loc 1 5037 0 is_stmt 1
 9896 0036 C6F38033 		ubfx	r3, r6, #14, #1
 9897 003a 1BB9     		cbnz	r3, .L764
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9898              		.loc 1 5037 0 is_stmt 0 discriminator 1
 9899 003c 16F4004F 		tst	r6, #32768
 9900 0040 00F0D980 		beq	.L765
 9901              	.L764:
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9902              		.loc 1 5041 0 is_stmt 1
 9903 0044 EA6B     		ldr	r2, [r5, #60]
 9904 0046 002A     		cmp	r2, #0
 9905 0048 44D0     		beq	.L782
5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9906              		.loc 1 5043 0
 9907 004a 16F4004F 		tst	r6, #32768
 9908 004e 43D0     		beq	.L783
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9909              		.loc 1 5045 0
 9910 0050 1268     		ldr	r2, [r2]
 9911 0052 7348     		ldr	r0, .L790
 9912 0054 7349     		ldr	r1, .L790+4
 9913 0056 8A42     		cmp	r2, r1
 9914 0058 18BF     		it	ne
 9915 005a 8242     		cmpne	r2, r0
 9916 005c 32D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccbPnc67.s 			page 320


 9917              		.loc 1 5045 0 is_stmt 0 discriminator 2
 9918 005e 1831     		adds	r1, r1, #24
 9919 0060 8A42     		cmp	r2, r1
 9920 0062 2FD0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9921              		.loc 1 5045 0 discriminator 4
 9922 0064 1831     		adds	r1, r1, #24
 9923 0066 8A42     		cmp	r2, r1
 9924 0068 2CD0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9925              		.loc 1 5045 0 discriminator 6
 9926 006a 1831     		adds	r1, r1, #24
 9927 006c 8A42     		cmp	r2, r1
 9928 006e 29D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9929              		.loc 1 5045 0 discriminator 8
 9930 0070 1831     		adds	r1, r1, #24
 9931 0072 8A42     		cmp	r2, r1
 9932 0074 26D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9933              		.loc 1 5045 0 discriminator 10
 9934 0076 1831     		adds	r1, r1, #24
 9935 0078 8A42     		cmp	r2, r1
 9936 007a 23D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9937              		.loc 1 5045 0 discriminator 12
 9938 007c 1831     		adds	r1, r1, #24
 9939 007e 8A42     		cmp	r2, r1
 9940 0080 20D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9941              		.loc 1 5045 0 discriminator 14
 9942 0082 01F55671 		add	r1, r1, #856
 9943 0086 8A42     		cmp	r2, r1
 9944 0088 1CD0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9945              		.loc 1 5045 0 discriminator 16
 9946 008a 1831     		adds	r1, r1, #24
 9947 008c 8A42     		cmp	r2, r1
 9948 008e 19D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9949              		.loc 1 5045 0 discriminator 18
 9950 0090 1831     		adds	r1, r1, #24
 9951 0092 8A42     		cmp	r2, r1
 9952 0094 16D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9953              		.loc 1 5045 0 discriminator 20
 9954 0096 1831     		adds	r1, r1, #24
 9955 0098 8A42     		cmp	r2, r1
 9956 009a 13D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9957              		.loc 1 5045 0 discriminator 22
 9958 009c 1831     		adds	r1, r1, #24
 9959 009e 8A42     		cmp	r2, r1
 9960 00a0 10D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9961              		.loc 1 5045 0 discriminator 24
 9962 00a2 1831     		adds	r1, r1, #24
ARM GAS  /tmp/ccbPnc67.s 			page 321


 9963 00a4 8A42     		cmp	r2, r1
 9964 00a6 0DD0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9965              		.loc 1 5045 0 discriminator 26
 9966 00a8 1831     		adds	r1, r1, #24
 9967 00aa 8A42     		cmp	r2, r1
 9968 00ac 0AD0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9969              		.loc 1 5045 0 discriminator 28
 9970 00ae 1831     		adds	r1, r1, #24
 9971 00b0 8A42     		cmp	r2, r1
 9972 00b2 07D0     		beq	.L767
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9973              		.loc 1 5045 0 discriminator 30
 9974 00b4 5268     		ldr	r2, [r2, #4]
 9975 00b6 B2FA82F2 		clz	r2, r2
 9976 00ba 5209     		lsrs	r2, r2, #5
 9977 00bc 06E0     		b	.L769
 9978              	.LVL825:
 9979              	.L786:
5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9980              		.loc 1 5028 0 is_stmt 1
 9981 00be FFF7FEFF 		bl	I2C_ITSlaveCplt
 9982              	.LVL826:
 9983 00c2 B0E7     		b	.L762
 9984              	.L767:
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9985              		.loc 1 5045 0 discriminator 29
 9986 00c4 5268     		ldr	r2, [r2, #4]
 9987 00c6 B2FA82F2 		clz	r2, r2
 9988 00ca 5209     		lsrs	r2, r2, #5
 9989              	.L769:
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9990              		.loc 1 5045 0 is_stmt 0 discriminator 32
 9991 00cc 002A     		cmp	r2, #0
 9992 00ce 40D1     		bne	.L784
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9993              		.loc 1 5018 0 is_stmt 1
 9994 00d0 0021     		movs	r1, #0
 9995 00d2 02E0     		b	.L766
 9996              	.L782:
 9997 00d4 0021     		movs	r1, #0
 9998 00d6 00E0     		b	.L766
 9999              	.L783:
 10000 00d8 0021     		movs	r1, #0
 10001              	.L766:
 10002              	.LVL827:
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10003              		.loc 1 5053 0
 10004 00da AA6B     		ldr	r2, [r5, #56]
 10005 00dc 002A     		cmp	r2, #0
 10006 00de 3FD0     		beq	.L770
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10007              		.loc 1 5055 0
 10008 00e0 002B     		cmp	r3, #0
 10009 00e2 3DD0     		beq	.L770
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
ARM GAS  /tmp/ccbPnc67.s 			page 322


 10010              		.loc 1 5057 0
 10011 00e4 1368     		ldr	r3, [r2]
 10012 00e6 4E48     		ldr	r0, .L790
 10013 00e8 4E4A     		ldr	r2, .L790+4
 10014 00ea 9342     		cmp	r3, r2
 10015 00ec 18BF     		it	ne
 10016 00ee 8342     		cmpne	r3, r0
 10017 00f0 31D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10018              		.loc 1 5057 0 is_stmt 0 discriminator 2
 10019 00f2 1832     		adds	r2, r2, #24
 10020 00f4 9342     		cmp	r3, r2
 10021 00f6 2ED0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10022              		.loc 1 5057 0 discriminator 4
 10023 00f8 1832     		adds	r2, r2, #24
 10024 00fa 9342     		cmp	r3, r2
 10025 00fc 2BD0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10026              		.loc 1 5057 0 discriminator 6
 10027 00fe 1832     		adds	r2, r2, #24
 10028 0100 9342     		cmp	r3, r2
 10029 0102 28D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10030              		.loc 1 5057 0 discriminator 8
 10031 0104 1832     		adds	r2, r2, #24
 10032 0106 9342     		cmp	r3, r2
 10033 0108 25D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10034              		.loc 1 5057 0 discriminator 10
 10035 010a 1832     		adds	r2, r2, #24
 10036 010c 9342     		cmp	r3, r2
 10037 010e 22D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10038              		.loc 1 5057 0 discriminator 12
 10039 0110 1832     		adds	r2, r2, #24
 10040 0112 9342     		cmp	r3, r2
 10041 0114 1FD0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10042              		.loc 1 5057 0 discriminator 14
 10043 0116 02F55672 		add	r2, r2, #856
 10044 011a 9342     		cmp	r3, r2
 10045 011c 1BD0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10046              		.loc 1 5057 0 discriminator 16
 10047 011e 1832     		adds	r2, r2, #24
 10048 0120 9342     		cmp	r3, r2
 10049 0122 18D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10050              		.loc 1 5057 0 discriminator 18
 10051 0124 1832     		adds	r2, r2, #24
 10052 0126 9342     		cmp	r3, r2
 10053 0128 15D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10054              		.loc 1 5057 0 discriminator 20
 10055 012a 1832     		adds	r2, r2, #24
 10056 012c 9342     		cmp	r3, r2
ARM GAS  /tmp/ccbPnc67.s 			page 323


 10057 012e 12D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10058              		.loc 1 5057 0 discriminator 22
 10059 0130 1832     		adds	r2, r2, #24
 10060 0132 9342     		cmp	r3, r2
 10061 0134 0FD0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10062              		.loc 1 5057 0 discriminator 24
 10063 0136 1832     		adds	r2, r2, #24
 10064 0138 9342     		cmp	r3, r2
 10065 013a 0CD0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10066              		.loc 1 5057 0 discriminator 26
 10067 013c 1832     		adds	r2, r2, #24
 10068 013e 9342     		cmp	r3, r2
 10069 0140 09D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10070              		.loc 1 5057 0 discriminator 28
 10071 0142 1832     		adds	r2, r2, #24
 10072 0144 9342     		cmp	r3, r2
 10073 0146 06D0     		beq	.L771
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10074              		.loc 1 5057 0 discriminator 30
 10075 0148 5B68     		ldr	r3, [r3, #4]
 10076 014a B3FA83F3 		clz	r3, r3
 10077 014e 5B09     		lsrs	r3, r3, #5
 10078 0150 05E0     		b	.L773
 10079              	.LVL828:
 10080              	.L784:
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 10081              		.loc 1 5047 0 is_stmt 1
 10082 0152 0121     		movs	r1, #1
 10083 0154 C1E7     		b	.L766
 10084              	.LVL829:
 10085              	.L771:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10086              		.loc 1 5057 0 discriminator 29
 10087 0156 5B68     		ldr	r3, [r3, #4]
 10088 0158 B3FA83F3 		clz	r3, r3
 10089 015c 5B09     		lsrs	r3, r3, #5
 10090              	.L773:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10091              		.loc 1 5057 0 is_stmt 0 discriminator 32
 10092 015e 03BB     		cbnz	r3, .L774
 10093              	.L770:
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10094              		.loc 1 5064 0 is_stmt 1
 10095 0160 F9B9     		cbnz	r1, .L774
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10096              		.loc 1 5093 0
 10097 0162 2B68     		ldr	r3, [r5]
 10098 0164 1022     		movs	r2, #16
 10099 0166 DA61     		str	r2, [r3, #28]
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10100              		.loc 1 5096 0
 10101 0168 6B6C     		ldr	r3, [r5, #68]
 10102 016a 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccbPnc67.s 			page 324


 10103 016e 6B64     		str	r3, [r5, #68]
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10104              		.loc 1 5099 0
 10105 0170 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 10106 0174 DBB2     		uxtb	r3, r3
 10107              	.LVL830:
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10108              		.loc 1 5101 0
 10109 0176 B7F1807F 		cmp	r7, #16777216
 10110 017a 14BF     		ite	ne
 10111 017c 0022     		movne	r2, #0
 10112 017e 0122     		moveq	r2, #1
 10113 0180 002F     		cmp	r7, #0
 10114 0182 14BF     		ite	ne
 10115 0184 1746     		movne	r7, r2
 10116 0186 0127     		moveq	r7, #1
 10117              	.LVL831:
 10118 0188 002F     		cmp	r7, #0
 10119 018a 3ED0     		beq	.L777
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10120              		.loc 1 5103 0
 10121 018c 292B     		cmp	r3, #41
 10122 018e 18BF     		it	ne
 10123 0190 212B     		cmpne	r3, #33
 10124 0192 29D1     		bne	.L779
5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 10125              		.loc 1 5105 0
 10126 0194 2123     		movs	r3, #33
 10127              	.LVL832:
 10128 0196 2B63     		str	r3, [r5, #48]
 10129              	.L780:
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10130              		.loc 1 5117 0
 10131 0198 696C     		ldr	r1, [r5, #68]
 10132              	.LVL833:
 10133 019a 2846     		mov	r0, r5
 10134 019c FFF7FEFF 		bl	I2C_ITError
 10135              	.LVL834:
 10136 01a0 33E0     		b	.L777
 10137              	.LVL835:
 10138              	.L774:
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10139              		.loc 1 5066 0
 10140 01a2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 10141 01a6 DBB2     		uxtb	r3, r3
 10142 01a8 282B     		cmp	r3, #40
 10143 01aa 08D0     		beq	.L787
 10144              	.L776:
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10145              		.loc 1 5071 0
 10146 01ac 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 10147 01b0 DBB2     		uxtb	r3, r3
 10148 01b2 292B     		cmp	r3, #41
 10149 01b4 0BD0     		beq	.L788
 10150              	.L778:
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10151              		.loc 1 5086 0
ARM GAS  /tmp/ccbPnc67.s 			page 325


 10152 01b6 2B68     		ldr	r3, [r5]
 10153 01b8 1022     		movs	r2, #16
 10154 01ba DA61     		str	r2, [r3, #28]
 10155 01bc 25E0     		b	.L777
 10156              	.L787:
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10157              		.loc 1 5066 0 discriminator 1
 10158 01be B7F1007F 		cmp	r7, #33554432
 10159 01c2 F3D1     		bne	.L776
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10160              		.loc 1 5069 0
 10161 01c4 2146     		mov	r1, r4
 10162              	.LVL836:
 10163 01c6 2846     		mov	r0, r5
 10164 01c8 FFF7FEFF 		bl	I2C_ITListenCplt
 10165              	.LVL837:
 10166 01cc 1DE0     		b	.L777
 10167              	.LVL838:
 10168              	.L788:
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10169              		.loc 1 5071 0 discriminator 1
 10170 01ce 17F5803F 		cmn	r7, #65536
 10171 01d2 F0D0     		beq	.L778
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10172              		.loc 1 5074 0
 10173 01d4 2B68     		ldr	r3, [r5]
 10174 01d6 1022     		movs	r2, #16
 10175 01d8 DA61     		str	r2, [r3, #28]
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10176              		.loc 1 5077 0
 10177 01da 2846     		mov	r0, r5
 10178 01dc FFF7FEFF 		bl	I2C_Flush_TXDR
 10179              	.LVL839:
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10180              		.loc 1 5081 0
 10181 01e0 2846     		mov	r0, r5
 10182 01e2 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 10183              	.LVL840:
 10184 01e6 10E0     		b	.L777
 10185              	.LVL841:
 10186              	.L779:
5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 10187              		.loc 1 5107 0
 10188 01e8 2A2B     		cmp	r3, #42
 10189 01ea 18BF     		it	ne
 10190 01ec 222B     		cmpne	r3, #34
 10191 01ee D3D1     		bne	.L780
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 10192              		.loc 1 5109 0
 10193 01f0 2223     		movs	r3, #34
 10194              	.LVL842:
 10195 01f2 2B63     		str	r3, [r5, #48]
 10196 01f4 D0E7     		b	.L780
 10197              	.LVL843:
 10198              	.L765:
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10199              		.loc 1 5124 0
ARM GAS  /tmp/ccbPnc67.s 			page 326


 10200 01f6 2B68     		ldr	r3, [r5]
 10201 01f8 1022     		movs	r2, #16
 10202 01fa DA61     		str	r2, [r3, #28]
 10203 01fc 05E0     		b	.L777
 10204              	.L763:
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10205              		.loc 1 5127 0
 10206 01fe 14F0080F 		tst	r4, #8
 10207 0202 02D0     		beq	.L777
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10208              		.loc 1 5127 0 is_stmt 0 discriminator 1
 10209 0204 16F0080F 		tst	r6, #8
 10210 0208 03D1     		bne	.L789
 10211              	.LVL844:
 10212              	.L777:
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10213              		.loc 1 5137 0 is_stmt 1
 10214 020a 0020     		movs	r0, #0
 10215 020c 85F84000 		strb	r0, [r5, #64]
 10216              	.LVL845:
 10217              	.L761:
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10218              		.loc 1 5140 0
 10219 0210 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10220              	.LVL846:
 10221              	.L789:
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10222              		.loc 1 5129 0
 10223 0212 2146     		mov	r1, r4
 10224 0214 2846     		mov	r0, r5
 10225 0216 FFF7FEFF 		bl	I2C_ITAddrCplt
 10226              	.LVL847:
 10227 021a F6E7     		b	.L777
 10228              	.LVL848:
 10229              	.L781:
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10230              		.loc 1 5022 0
 10231 021c 0220     		movs	r0, #2
 10232              	.LVL849:
 10233 021e F7E7     		b	.L761
 10234              	.L791:
 10235              		.align	2
 10236              	.L790:
 10237 0220 10000240 		.word	1073872912
 10238 0224 28000240 		.word	1073872936
 10239              		.cfi_endproc
 10240              	.LFE193:
 10242              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 10243              		.align	1
 10244              		.syntax unified
 10245              		.thumb
 10246              		.thumb_func
 10247              		.fpu fpv5-d16
 10249              	I2C_Master_ISR_DMA:
 10250              	.LFB192:
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 10251              		.loc 1 4881 0
ARM GAS  /tmp/ccbPnc67.s 			page 327


 10252              		.cfi_startproc
 10253              		@ args = 0, pretend = 0, frame = 0
 10254              		@ frame_needed = 0, uses_anonymous_args = 0
 10255              	.LVL850:
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10256              		.loc 1 4886 0
 10257 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 10258 0004 012B     		cmp	r3, #1
 10259 0006 00F09980 		beq	.L805
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 10260              		.loc 1 4881 0 discriminator 2
 10261 000a 10B5     		push	{r4, lr}
 10262              	.LCFI135:
 10263              		.cfi_def_cfa_offset 8
 10264              		.cfi_offset 4, -8
 10265              		.cfi_offset 14, -4
 10266 000c 82B0     		sub	sp, sp, #8
 10267              	.LCFI136:
 10268              		.cfi_def_cfa_offset 16
 10269 000e 0446     		mov	r4, r0
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10270              		.loc 1 4886 0 discriminator 2
 10271 0010 0123     		movs	r3, #1
 10272 0012 80F84030 		strb	r3, [r0, #64]
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10273              		.loc 1 4888 0 discriminator 2
 10274 0016 11F0100F 		tst	r1, #16
 10275 001a 02D0     		beq	.L794
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10276              		.loc 1 4888 0 is_stmt 0 discriminator 1
 10277 001c 12F0100F 		tst	r2, #16
 10278 0020 31D1     		bne	.L811
 10279              	.L794:
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10280              		.loc 1 4904 0 is_stmt 1
 10281 0022 11F0800F 		tst	r1, #128
 10282 0026 5FD0     		beq	.L796
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10283              		.loc 1 4904 0 is_stmt 0 discriminator 1
 10284 0028 12F0400F 		tst	r2, #64
 10285 002c 5CD0     		beq	.L796
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10286              		.loc 1 4907 0 is_stmt 1
 10287 002e 2268     		ldr	r2, [r4]
 10288              	.LVL851:
 10289 0030 1368     		ldr	r3, [r2]
 10290 0032 23F04003 		bic	r3, r3, #64
 10291 0036 1360     		str	r3, [r2]
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10292              		.loc 1 4909 0
 10293 0038 638D     		ldrh	r3, [r4, #42]
 10294 003a 9BB2     		uxth	r3, r3
 10295 003c 002B     		cmp	r3, #0
 10296 003e 45D0     		beq	.L797
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10297              		.loc 1 4912 0
 10298 0040 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccbPnc67.s 			page 328


 10299 0042 5968     		ldr	r1, [r3, #4]
 10300              	.LVL852:
 10301 0044 C1F30901 		ubfx	r1, r1, #0, #10
 10302              	.LVL853:
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10303              		.loc 1 4915 0
 10304 0048 638D     		ldrh	r3, [r4, #42]
 10305 004a 9BB2     		uxth	r3, r3
 10306 004c FF2B     		cmp	r3, #255
 10307 004e 2CD9     		bls	.L798
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 10308              		.loc 1 4917 0
 10309 0050 FF23     		movs	r3, #255
 10310 0052 2385     		strh	r3, [r4, #40]	@ movhi
 10311              	.LVL854:
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10312              		.loc 1 4918 0
 10313 0054 4FF08073 		mov	r3, #16777216
 10314              	.LVL855:
 10315              	.L799:
4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10316              		.loc 1 4934 0
 10317 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 10318 005c 0020     		movs	r0, #0
 10319              	.LVL856:
 10320 005e 0090     		str	r0, [sp]
 10321 0060 2046     		mov	r0, r4
 10322 0062 FFF7FEFF 		bl	I2C_TransferConfig
 10323              	.LVL857:
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10324              		.loc 1 4937 0
 10325 0066 638D     		ldrh	r3, [r4, #42]
 10326 0068 228D     		ldrh	r2, [r4, #40]
 10327 006a 9B1A     		subs	r3, r3, r2
 10328 006c 9BB2     		uxth	r3, r3
 10329 006e 6385     		strh	r3, [r4, #42]	@ movhi
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10330              		.loc 1 4940 0
 10331 0070 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 10332 0074 DBB2     		uxtb	r3, r3
 10333 0076 222B     		cmp	r3, #34
 10334 0078 22D0     		beq	.L812
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10335              		.loc 1 4946 0
 10336 007a 2268     		ldr	r2, [r4]
 10337 007c 1368     		ldr	r3, [r2]
 10338 007e 43F48043 		orr	r3, r3, #16384
 10339 0082 1360     		str	r3, [r2]
 10340 0084 0CE0     		b	.L795
 10341              	.LVL858:
 10342              	.L811:
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10343              		.loc 1 4891 0
 10344 0086 0368     		ldr	r3, [r0]
 10345 0088 1022     		movs	r2, #16
 10346              	.LVL859:
 10347 008a DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccbPnc67.s 			page 329


4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10348              		.loc 1 4894 0
 10349 008c 436C     		ldr	r3, [r0, #68]
 10350 008e 43F00403 		orr	r3, r3, #4
 10351 0092 4364     		str	r3, [r0, #68]
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10352              		.loc 1 4899 0
 10353 0094 2021     		movs	r1, #32
 10354              	.LVL860:
 10355 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 10356              	.LVL861:
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10357              		.loc 1 4902 0
 10358 009a 2046     		mov	r0, r4
 10359 009c FFF7FEFF 		bl	I2C_Flush_TXDR
 10360              	.LVL862:
 10361              	.L795:
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10362              		.loc 1 5002 0
 10363 00a0 0020     		movs	r0, #0
 10364 00a2 84F84000 		strb	r0, [r4, #64]
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10365              		.loc 1 5005 0
 10366 00a6 02B0     		add	sp, sp, #8
 10367              	.LCFI137:
 10368              		.cfi_remember_state
 10369              		.cfi_def_cfa_offset 8
 10370              		@ sp needed
 10371 00a8 10BD     		pop	{r4, pc}
 10372              	.LVL863:
 10373              	.L798:
 10374              	.LCFI138:
 10375              		.cfi_restore_state
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 10376              		.loc 1 4922 0
 10377 00aa 638D     		ldrh	r3, [r4, #42]
 10378 00ac 2385     		strh	r3, [r4, #40]	@ movhi
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10379              		.loc 1 4923 0
 10380 00ae E36A     		ldr	r3, [r4, #44]
 10381 00b0 13F5803F 		cmn	r3, #65536
 10382 00b4 01D0     		beq	.L806
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10383              		.loc 1 4925 0
 10384 00b6 E36A     		ldr	r3, [r4, #44]
 10385              	.LVL864:
 10386 00b8 CEE7     		b	.L799
 10387              	.LVL865:
 10388              	.L806:
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10389              		.loc 1 4929 0
 10390 00ba 4FF00073 		mov	r3, #33554432
 10391 00be CBE7     		b	.L799
 10392              	.LVL866:
 10393              	.L812:
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10394              		.loc 1 4942 0
ARM GAS  /tmp/ccbPnc67.s 			page 330


 10395 00c0 2268     		ldr	r2, [r4]
 10396 00c2 1368     		ldr	r3, [r2]
 10397 00c4 43F40043 		orr	r3, r3, #32768
 10398 00c8 1360     		str	r3, [r2]
 10399 00ca E9E7     		b	.L795
 10400              	.LVL867:
 10401              	.L797:
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10402              		.loc 1 4952 0
 10403 00cc 2368     		ldr	r3, [r4]
 10404 00ce 5B68     		ldr	r3, [r3, #4]
 10405 00d0 13F0007F 		tst	r3, #33554432
 10406 00d4 03D1     		bne	.L801
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10407              		.loc 1 4955 0
 10408 00d6 2046     		mov	r0, r4
 10409              	.LVL868:
 10410 00d8 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10411              	.LVL869:
 10412 00dc E0E7     		b	.L795
 10413              	.LVL870:
 10414              	.L801:
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10415              		.loc 1 4961 0
 10416 00de 4021     		movs	r1, #64
 10417              	.LVL871:
 10418 00e0 2046     		mov	r0, r4
 10419              	.LVL872:
 10420 00e2 FFF7FEFF 		bl	I2C_ITError
 10421              	.LVL873:
 10422 00e6 DBE7     		b	.L795
 10423              	.LVL874:
 10424              	.L796:
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10425              		.loc 1 4965 0
 10426 00e8 11F0400F 		tst	r1, #64
 10427 00ec 1CD0     		beq	.L802
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10428              		.loc 1 4965 0 is_stmt 0 discriminator 1
 10429 00ee 12F0400F 		tst	r2, #64
 10430 00f2 19D0     		beq	.L802
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10431              		.loc 1 4967 0 is_stmt 1
 10432 00f4 638D     		ldrh	r3, [r4, #42]
 10433 00f6 9BB2     		uxth	r3, r3
 10434 00f8 8BB9     		cbnz	r3, .L803
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10435              		.loc 1 4969 0
 10436 00fa 2368     		ldr	r3, [r4]
 10437 00fc 5A68     		ldr	r2, [r3, #4]
 10438              	.LVL875:
 10439 00fe 12F0007F 		tst	r2, #33554432
 10440 0102 CDD1     		bne	.L795
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10441              		.loc 1 4972 0
 10442 0104 E26A     		ldr	r2, [r4, #44]
 10443 0106 12F5803F 		cmn	r2, #65536
ARM GAS  /tmp/ccbPnc67.s 			page 331


 10444 010a 04D1     		bne	.L804
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10445              		.loc 1 4975 0
 10446 010c 5A68     		ldr	r2, [r3, #4]
 10447 010e 42F48042 		orr	r2, r2, #16384
 10448 0112 5A60     		str	r2, [r3, #4]
 10449 0114 C4E7     		b	.L795
 10450              	.L804:
4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10451              		.loc 1 4980 0
 10452 0116 2046     		mov	r0, r4
 10453              	.LVL876:
 10454 0118 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10455              	.LVL877:
 10456 011c C0E7     		b	.L795
 10457              	.LVL878:
 10458              	.L803:
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10459              		.loc 1 4988 0
 10460 011e 4021     		movs	r1, #64
 10461              	.LVL879:
 10462 0120 2046     		mov	r0, r4
 10463              	.LVL880:
 10464 0122 FFF7FEFF 		bl	I2C_ITError
 10465              	.LVL881:
 10466 0126 BBE7     		b	.L795
 10467              	.LVL882:
 10468              	.L802:
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10469              		.loc 1 4991 0
 10470 0128 11F0200F 		tst	r1, #32
 10471 012c B8D0     		beq	.L795
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10472              		.loc 1 4991 0 is_stmt 0 discriminator 1
 10473 012e 12F0200F 		tst	r2, #32
 10474 0132 B5D0     		beq	.L795
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10475              		.loc 1 4994 0 is_stmt 1
 10476 0134 2046     		mov	r0, r4
 10477              	.LVL883:
 10478 0136 FFF7FEFF 		bl	I2C_ITMasterCplt
 10479              	.LVL884:
 10480 013a B1E7     		b	.L795
 10481              	.LVL885:
 10482              	.L805:
 10483              	.LCFI139:
 10484              		.cfi_def_cfa_offset 0
 10485              		.cfi_restore 4
 10486              		.cfi_restore 14
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10487              		.loc 1 4886 0
 10488 013c 0220     		movs	r0, #2
 10489              	.LVL886:
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10490              		.loc 1 5005 0
 10491 013e 7047     		bx	lr
 10492              		.cfi_endproc
ARM GAS  /tmp/ccbPnc67.s 			page 332


 10493              	.LFE192:
 10495              		.section	.text.I2C_DMAError,"ax",%progbits
 10496              		.align	1
 10497              		.syntax unified
 10498              		.thumb
 10499              		.thumb_func
 10500              		.fpu fpv5-d16
 10502              	I2C_DMAError:
 10503              	.LFB209:
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 10504              		.loc 1 6149 0
 10505              		.cfi_startproc
 10506              		@ args = 0, pretend = 0, frame = 0
 10507              		@ frame_needed = 0, uses_anonymous_args = 0
 10508              	.LVL887:
 10509 0000 38B5     		push	{r3, r4, r5, lr}
 10510              	.LCFI140:
 10511              		.cfi_def_cfa_offset 16
 10512              		.cfi_offset 3, -16
 10513              		.cfi_offset 4, -12
 10514              		.cfi_offset 5, -8
 10515              		.cfi_offset 14, -4
 10516              	.LVL888:
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10517              		.loc 1 6151 0
 10518 0002 846B     		ldr	r4, [r0, #56]
 10519              	.LVL889:
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10520              		.loc 1 6153 0
 10521 0004 A36B     		ldr	r3, [r4, #56]
 10522 0006 002B     		cmp	r3, #0
 10523 0008 77D0     		beq	.L823
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10524              		.loc 1 6155 0
 10525 000a 1B68     		ldr	r3, [r3]
 10526 000c 4849     		ldr	r1, .L828
 10527 000e 494A     		ldr	r2, .L828+4
 10528 0010 9342     		cmp	r3, r2
 10529 0012 18BF     		it	ne
 10530 0014 8B42     		cmpne	r3, r1
 10531 0016 2FD0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10532              		.loc 1 6155 0 is_stmt 0 discriminator 2
 10533 0018 1832     		adds	r2, r2, #24
 10534 001a 9342     		cmp	r3, r2
 10535 001c 2CD0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10536              		.loc 1 6155 0 discriminator 4
 10537 001e 1832     		adds	r2, r2, #24
 10538 0020 9342     		cmp	r3, r2
 10539 0022 29D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10540              		.loc 1 6155 0 discriminator 6
 10541 0024 1832     		adds	r2, r2, #24
 10542 0026 9342     		cmp	r3, r2
 10543 0028 26D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccbPnc67.s 			page 333


 10544              		.loc 1 6155 0 discriminator 8
 10545 002a 1832     		adds	r2, r2, #24
 10546 002c 9342     		cmp	r3, r2
 10547 002e 23D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10548              		.loc 1 6155 0 discriminator 10
 10549 0030 1832     		adds	r2, r2, #24
 10550 0032 9342     		cmp	r3, r2
 10551 0034 20D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10552              		.loc 1 6155 0 discriminator 12
 10553 0036 1832     		adds	r2, r2, #24
 10554 0038 9342     		cmp	r3, r2
 10555 003a 1DD0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10556              		.loc 1 6155 0 discriminator 14
 10557 003c 02F55672 		add	r2, r2, #856
 10558 0040 9342     		cmp	r3, r2
 10559 0042 19D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10560              		.loc 1 6155 0 discriminator 16
 10561 0044 1832     		adds	r2, r2, #24
 10562 0046 9342     		cmp	r3, r2
 10563 0048 16D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10564              		.loc 1 6155 0 discriminator 18
 10565 004a 1832     		adds	r2, r2, #24
 10566 004c 9342     		cmp	r3, r2
 10567 004e 13D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10568              		.loc 1 6155 0 discriminator 20
 10569 0050 1832     		adds	r2, r2, #24
 10570 0052 9342     		cmp	r3, r2
 10571 0054 10D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10572              		.loc 1 6155 0 discriminator 22
 10573 0056 1832     		adds	r2, r2, #24
 10574 0058 9342     		cmp	r3, r2
 10575 005a 0DD0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10576              		.loc 1 6155 0 discriminator 24
 10577 005c 1832     		adds	r2, r2, #24
 10578 005e 9342     		cmp	r3, r2
 10579 0060 0AD0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10580              		.loc 1 6155 0 discriminator 26
 10581 0062 1832     		adds	r2, r2, #24
 10582 0064 9342     		cmp	r3, r2
 10583 0066 07D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10584              		.loc 1 6155 0 discriminator 28
 10585 0068 1832     		adds	r2, r2, #24
 10586 006a 9342     		cmp	r3, r2
 10587 006c 04D0     		beq	.L815
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10588              		.loc 1 6155 0 discriminator 30
 10589 006e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccbPnc67.s 			page 334


 10590 0070 B3FA83F3 		clz	r3, r3
 10591 0074 5B09     		lsrs	r3, r3, #5
 10592 0076 03E0     		b	.L817
 10593              	.L815:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10594              		.loc 1 6155 0 discriminator 29
 10595 0078 5B68     		ldr	r3, [r3, #4]
 10596 007a B3FA83F3 		clz	r3, r3
 10597 007e 5B09     		lsrs	r3, r3, #5
 10598              	.L817:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10599              		.loc 1 6155 0 discriminator 32
 10600 0080 002B     		cmp	r3, #0
 10601 0082 3CD1     		bne	.L824
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10602              		.loc 1 6150 0 is_stmt 1
 10603 0084 0025     		movs	r5, #0
 10604              	.L814:
 10605              	.LVL890:
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10606              		.loc 1 6161 0
 10607 0086 E36B     		ldr	r3, [r4, #60]
 10608 0088 002B     		cmp	r3, #0
 10609 008a 40D0     		beq	.L818
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10610              		.loc 1 6163 0
 10611 008c 1B68     		ldr	r3, [r3]
 10612 008e 2849     		ldr	r1, .L828
 10613 0090 284A     		ldr	r2, .L828+4
 10614 0092 9342     		cmp	r3, r2
 10615 0094 18BF     		it	ne
 10616 0096 8B42     		cmpne	r3, r1
 10617 0098 33D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10618              		.loc 1 6163 0 is_stmt 0 discriminator 2
 10619 009a 1832     		adds	r2, r2, #24
 10620 009c 9342     		cmp	r3, r2
 10621 009e 30D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10622              		.loc 1 6163 0 discriminator 4
 10623 00a0 1832     		adds	r2, r2, #24
 10624 00a2 9342     		cmp	r3, r2
 10625 00a4 2DD0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10626              		.loc 1 6163 0 discriminator 6
 10627 00a6 1832     		adds	r2, r2, #24
 10628 00a8 9342     		cmp	r3, r2
 10629 00aa 2AD0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10630              		.loc 1 6163 0 discriminator 8
 10631 00ac 1832     		adds	r2, r2, #24
 10632 00ae 9342     		cmp	r3, r2
 10633 00b0 27D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10634              		.loc 1 6163 0 discriminator 10
 10635 00b2 1832     		adds	r2, r2, #24
 10636 00b4 9342     		cmp	r3, r2
ARM GAS  /tmp/ccbPnc67.s 			page 335


 10637 00b6 24D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10638              		.loc 1 6163 0 discriminator 12
 10639 00b8 1832     		adds	r2, r2, #24
 10640 00ba 9342     		cmp	r3, r2
 10641 00bc 21D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10642              		.loc 1 6163 0 discriminator 14
 10643 00be 02F55672 		add	r2, r2, #856
 10644 00c2 9342     		cmp	r3, r2
 10645 00c4 1DD0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10646              		.loc 1 6163 0 discriminator 16
 10647 00c6 1832     		adds	r2, r2, #24
 10648 00c8 9342     		cmp	r3, r2
 10649 00ca 1AD0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10650              		.loc 1 6163 0 discriminator 18
 10651 00cc 1832     		adds	r2, r2, #24
 10652 00ce 9342     		cmp	r3, r2
 10653 00d0 17D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10654              		.loc 1 6163 0 discriminator 20
 10655 00d2 1832     		adds	r2, r2, #24
 10656 00d4 9342     		cmp	r3, r2
 10657 00d6 14D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10658              		.loc 1 6163 0 discriminator 22
 10659 00d8 1832     		adds	r2, r2, #24
 10660 00da 9342     		cmp	r3, r2
 10661 00dc 11D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10662              		.loc 1 6163 0 discriminator 24
 10663 00de 1832     		adds	r2, r2, #24
 10664 00e0 9342     		cmp	r3, r2
 10665 00e2 0ED0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10666              		.loc 1 6163 0 discriminator 26
 10667 00e4 1832     		adds	r2, r2, #24
 10668 00e6 9342     		cmp	r3, r2
 10669 00e8 0BD0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10670              		.loc 1 6163 0 discriminator 28
 10671 00ea 1832     		adds	r2, r2, #24
 10672 00ec 9342     		cmp	r3, r2
 10673 00ee 08D0     		beq	.L819
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10674              		.loc 1 6163 0 discriminator 30
 10675 00f0 5B68     		ldr	r3, [r3, #4]
 10676 00f2 B3FA83F3 		clz	r3, r3
 10677 00f6 5B09     		lsrs	r3, r3, #5
 10678 00f8 07E0     		b	.L821
 10679              	.LVL891:
 10680              	.L823:
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10681              		.loc 1 6150 0 is_stmt 1
 10682 00fa 0025     		movs	r5, #0
ARM GAS  /tmp/ccbPnc67.s 			page 336


 10683 00fc C3E7     		b	.L814
 10684              	.L824:
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10685              		.loc 1 6157 0
 10686 00fe 0125     		movs	r5, #1
 10687 0100 C1E7     		b	.L814
 10688              	.LVL892:
 10689              	.L819:
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10690              		.loc 1 6163 0 discriminator 29
 10691 0102 5B68     		ldr	r3, [r3, #4]
 10692 0104 B3FA83F3 		clz	r3, r3
 10693 0108 5B09     		lsrs	r3, r3, #5
 10694              	.L821:
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10695              		.loc 1 6163 0 is_stmt 0 discriminator 32
 10696 010a 03B1     		cbz	r3, .L818
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10697              		.loc 1 6165 0 is_stmt 1
 10698 010c 0125     		movs	r5, #1
 10699              	.LVL893:
 10700              	.L818:
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10701              		.loc 1 6170 0
 10702 010e FFF7FEFF 		bl	HAL_DMA_GetError
 10703              	.LVL894:
 10704 0112 0228     		cmp	r0, #2
 10705 0114 00D0     		beq	.L813
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10706              		.loc 1 6170 0 is_stmt 0 discriminator 1
 10707 0116 05B9     		cbnz	r5, .L827
 10708              	.L813:
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10709              		.loc 1 6178 0 is_stmt 1
 10710 0118 38BD     		pop	{r3, r4, r5, pc}
 10711              	.LVL895:
 10712              	.L827:
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10713              		.loc 1 6173 0
 10714 011a 2268     		ldr	r2, [r4]
 10715 011c 5368     		ldr	r3, [r2, #4]
 10716 011e 43F40043 		orr	r3, r3, #32768
 10717 0122 5360     		str	r3, [r2, #4]
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10718              		.loc 1 6176 0
 10719 0124 1021     		movs	r1, #16
 10720 0126 2046     		mov	r0, r4
 10721 0128 FFF7FEFF 		bl	I2C_ITError
 10722              	.LVL896:
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10723              		.loc 1 6178 0
 10724 012c F4E7     		b	.L813
 10725              	.L829:
 10726 012e 00BF     		.align	2
 10727              	.L828:
 10728 0130 10000240 		.word	1073872912
 10729 0134 28000240 		.word	1073872936
ARM GAS  /tmp/ccbPnc67.s 			page 337


 10730              		.cfi_endproc
 10731              	.LFE209:
 10733              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 10734              		.align	1
 10735              		.syntax unified
 10736              		.thumb
 10737              		.thumb_func
 10738              		.fpu fpv5-d16
 10740              	I2C_DMAMasterTransmitCplt:
 10741              	.LFB205:
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10742              		.loc 1 5999 0
 10743              		.cfi_startproc
 10744              		@ args = 0, pretend = 0, frame = 0
 10745              		@ frame_needed = 0, uses_anonymous_args = 0
 10746              	.LVL897:
 10747 0000 10B5     		push	{r4, lr}
 10748              	.LCFI141:
 10749              		.cfi_def_cfa_offset 8
 10750              		.cfi_offset 4, -8
 10751              		.cfi_offset 14, -4
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10752              		.loc 1 6000 0
 10753 0002 846B     		ldr	r4, [r0, #56]
 10754              	.LVL898:
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10755              		.loc 1 6003 0
 10756 0004 2268     		ldr	r2, [r4]
 10757 0006 1368     		ldr	r3, [r2]
 10758 0008 23F48043 		bic	r3, r3, #16384
 10759 000c 1360     		str	r3, [r2]
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10760              		.loc 1 6006 0
 10761 000e 638D     		ldrh	r3, [r4, #42]
 10762 0010 9BB2     		uxth	r3, r3
 10763 0012 ABB1     		cbz	r3, .L837
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10764              		.loc 1 6015 0
 10765 0014 238D     		ldrh	r3, [r4, #40]
 10766 0016 616A     		ldr	r1, [r4, #36]
 10767 0018 1944     		add	r1, r1, r3
 10768 001a 6162     		str	r1, [r4, #36]
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10769              		.loc 1 6018 0
 10770 001c 638D     		ldrh	r3, [r4, #42]
 10771 001e 9BB2     		uxth	r3, r3
 10772 0020 FF2B     		cmp	r3, #255
 10773 0022 12D9     		bls	.L833
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10774              		.loc 1 6020 0
 10775 0024 FF23     		movs	r3, #255
 10776 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10777              	.L834:
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10778              		.loc 1 6028 0
 10779 0028 2268     		ldr	r2, [r4]
 10780 002a 238D     		ldrh	r3, [r4, #40]
ARM GAS  /tmp/ccbPnc67.s 			page 338


 10781 002c 2832     		adds	r2, r2, #40
 10782 002e A06B     		ldr	r0, [r4, #56]
 10783              	.LVL899:
 10784 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10785              	.LVL900:
 10786 0034 60B9     		cbnz	r0, .L838
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10787              		.loc 1 6036 0
 10788 0036 4021     		movs	r1, #64
 10789 0038 2046     		mov	r0, r4
 10790 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10791              	.LVL901:
 10792              	.L830:
6039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10793              		.loc 1 6039 0
 10794 003e 10BD     		pop	{r4, pc}
 10795              	.LVL902:
 10796              	.L837:
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10797              		.loc 1 6009 0
 10798 0040 2021     		movs	r1, #32
 10799 0042 2046     		mov	r0, r4
 10800              	.LVL903:
 10801 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10802              	.LVL904:
 10803 0048 F9E7     		b	.L830
 10804              	.LVL905:
 10805              	.L833:
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10806              		.loc 1 6024 0
 10807 004a 638D     		ldrh	r3, [r4, #42]
 10808 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10809 004e EBE7     		b	.L834
 10810              	.LVL906:
 10811              	.L838:
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10812              		.loc 1 6031 0
 10813 0050 1021     		movs	r1, #16
 10814 0052 2046     		mov	r0, r4
 10815 0054 FFF7FEFF 		bl	I2C_ITError
 10816              	.LVL907:
 10817 0058 F1E7     		b	.L830
 10818              		.cfi_endproc
 10819              	.LFE205:
 10821              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10822              		.align	1
 10823              		.syntax unified
 10824              		.thumb
 10825              		.thumb_func
 10826              		.fpu fpv5-d16
 10828              	I2C_DMAMasterReceiveCplt:
 10829              	.LFB207:
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10830              		.loc 1 6074 0
 10831              		.cfi_startproc
 10832              		@ args = 0, pretend = 0, frame = 0
 10833              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccbPnc67.s 			page 339


 10834              	.LVL908:
 10835 0000 10B5     		push	{r4, lr}
 10836              	.LCFI142:
 10837              		.cfi_def_cfa_offset 8
 10838              		.cfi_offset 4, -8
 10839              		.cfi_offset 14, -4
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10840              		.loc 1 6075 0
 10841 0002 846B     		ldr	r4, [r0, #56]
 10842              	.LVL909:
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10843              		.loc 1 6078 0
 10844 0004 2268     		ldr	r2, [r4]
 10845 0006 1368     		ldr	r3, [r2]
 10846 0008 23F40043 		bic	r3, r3, #32768
 10847 000c 1360     		str	r3, [r2]
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10848              		.loc 1 6081 0
 10849 000e 638D     		ldrh	r3, [r4, #42]
 10850 0010 9BB2     		uxth	r3, r3
 10851 0012 ABB1     		cbz	r3, .L846
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10852              		.loc 1 6090 0
 10853 0014 238D     		ldrh	r3, [r4, #40]
 10854 0016 626A     		ldr	r2, [r4, #36]
 10855 0018 1A44     		add	r2, r2, r3
 10856 001a 6262     		str	r2, [r4, #36]
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10857              		.loc 1 6093 0
 10858 001c 638D     		ldrh	r3, [r4, #42]
 10859 001e 9BB2     		uxth	r3, r3
 10860 0020 FF2B     		cmp	r3, #255
 10861 0022 12D9     		bls	.L842
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10862              		.loc 1 6095 0
 10863 0024 FF23     		movs	r3, #255
 10864 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10865              	.L843:
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10866              		.loc 1 6103 0
 10867 0028 2168     		ldr	r1, [r4]
 10868 002a 238D     		ldrh	r3, [r4, #40]
 10869 002c 2431     		adds	r1, r1, #36
 10870 002e E06B     		ldr	r0, [r4, #60]
 10871              	.LVL910:
 10872 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10873              	.LVL911:
 10874 0034 60B9     		cbnz	r0, .L847
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10875              		.loc 1 6111 0
 10876 0036 4021     		movs	r1, #64
 10877 0038 2046     		mov	r0, r4
 10878 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10879              	.LVL912:
 10880              	.L839:
6114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10881              		.loc 1 6114 0
ARM GAS  /tmp/ccbPnc67.s 			page 340


 10882 003e 10BD     		pop	{r4, pc}
 10883              	.LVL913:
 10884              	.L846:
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10885              		.loc 1 6084 0
 10886 0040 2021     		movs	r1, #32
 10887 0042 2046     		mov	r0, r4
 10888              	.LVL914:
 10889 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10890              	.LVL915:
 10891 0048 F9E7     		b	.L839
 10892              	.LVL916:
 10893              	.L842:
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10894              		.loc 1 6099 0
 10895 004a 638D     		ldrh	r3, [r4, #42]
 10896 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10897 004e EBE7     		b	.L843
 10898              	.LVL917:
 10899              	.L847:
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10900              		.loc 1 6106 0
 10901 0050 1021     		movs	r1, #16
 10902 0052 2046     		mov	r0, r4
 10903 0054 FFF7FEFF 		bl	I2C_ITError
 10904              	.LVL918:
 10905 0058 F1E7     		b	.L839
 10906              		.cfi_endproc
 10907              	.LFE207:
 10909              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10910              		.align	1
 10911              		.global	HAL_I2C_ER_IRQHandler
 10912              		.syntax unified
 10913              		.thumb
 10914              		.thumb_func
 10915              		.fpu fpv5-d16
 10917              	HAL_I2C_ER_IRQHandler:
 10918              	.LFB176:
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10919              		.loc 1 4332 0
 10920              		.cfi_startproc
 10921              		@ args = 0, pretend = 0, frame = 0
 10922              		@ frame_needed = 0, uses_anonymous_args = 0
 10923              	.LVL919:
 10924 0000 10B5     		push	{r4, lr}
 10925              	.LCFI143:
 10926              		.cfi_def_cfa_offset 8
 10927              		.cfi_offset 4, -8
 10928              		.cfi_offset 14, -4
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10929              		.loc 1 4333 0
 10930 0002 0268     		ldr	r2, [r0]
 10931 0004 9369     		ldr	r3, [r2, #24]
 10932              	.LVL920:
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
 10933              		.loc 1 4334 0
 10934 0006 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccbPnc67.s 			page 341


 10935              	.LVL921:
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10936              		.loc 1 4338 0
 10937 0008 13F4807F 		tst	r3, #256
 10938 000c 09D0     		beq	.L849
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10939              		.loc 1 4338 0 is_stmt 0 discriminator 1
 10940 000e 11F0800F 		tst	r1, #128
 10941 0012 06D0     		beq	.L849
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10942              		.loc 1 4340 0 is_stmt 1
 10943 0014 446C     		ldr	r4, [r0, #68]
 10944 0016 44F00104 		orr	r4, r4, #1
 10945 001a 4464     		str	r4, [r0, #68]
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10946              		.loc 1 4343 0
 10947 001c 4FF48074 		mov	r4, #256
 10948 0020 D461     		str	r4, [r2, #28]
 10949              	.L849:
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10950              		.loc 1 4347 0
 10951 0022 13F4806F 		tst	r3, #1024
 10952 0026 0AD0     		beq	.L850
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10953              		.loc 1 4347 0 is_stmt 0 discriminator 1
 10954 0028 11F0800F 		tst	r1, #128
 10955 002c 07D0     		beq	.L850
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10956              		.loc 1 4349 0 is_stmt 1
 10957 002e 426C     		ldr	r2, [r0, #68]
 10958 0030 42F00802 		orr	r2, r2, #8
 10959 0034 4264     		str	r2, [r0, #68]
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10960              		.loc 1 4352 0
 10961 0036 0268     		ldr	r2, [r0]
 10962 0038 4FF48064 		mov	r4, #1024
 10963 003c D461     		str	r4, [r2, #28]
 10964              	.L850:
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10965              		.loc 1 4356 0
 10966 003e 13F4007F 		tst	r3, #512
 10967 0042 0AD0     		beq	.L851
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10968              		.loc 1 4356 0 is_stmt 0 discriminator 1
 10969 0044 11F0800F 		tst	r1, #128
 10970 0048 07D0     		beq	.L851
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10971              		.loc 1 4358 0 is_stmt 1
 10972 004a 436C     		ldr	r3, [r0, #68]
 10973              	.LVL922:
 10974 004c 43F00203 		orr	r3, r3, #2
 10975 0050 4364     		str	r3, [r0, #68]
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10976              		.loc 1 4361 0
 10977 0052 0368     		ldr	r3, [r0]
 10978 0054 4FF40072 		mov	r2, #512
 10979 0058 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccbPnc67.s 			page 342


 10980              	.L851:
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10981              		.loc 1 4365 0
 10982 005a 416C     		ldr	r1, [r0, #68]
 10983              	.LVL923:
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10984              		.loc 1 4368 0
 10985 005c 11F00B0F 		tst	r1, #11
 10986 0060 00D1     		bne	.L854
 10987              	.LVL924:
 10988              	.L848:
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10989              		.loc 1 4372 0
 10990 0062 10BD     		pop	{r4, pc}
 10991              	.LVL925:
 10992              	.L854:
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10993              		.loc 1 4370 0
 10994 0064 FFF7FEFF 		bl	I2C_ITError
 10995              	.LVL926:
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10996              		.loc 1 4372 0
 10997 0068 FBE7     		b	.L848
 10998              		.cfi_endproc
 10999              	.LFE176:
 11001              		.section	.text.I2C_DMAAbort,"ax",%progbits
 11002              		.align	1
 11003              		.syntax unified
 11004              		.thumb
 11005              		.thumb_func
 11006              		.fpu fpv5-d16
 11008              	I2C_DMAAbort:
 11009              	.LFB210:
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 11010              		.loc 1 6187 0
 11011              		.cfi_startproc
 11012              		@ args = 0, pretend = 0, frame = 0
 11013              		@ frame_needed = 0, uses_anonymous_args = 0
 11014              	.LVL927:
 11015 0000 08B5     		push	{r3, lr}
 11016              	.LCFI144:
 11017              		.cfi_def_cfa_offset 8
 11018              		.cfi_offset 3, -8
 11019              		.cfi_offset 14, -4
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 11020              		.loc 1 6188 0
 11021 0002 806B     		ldr	r0, [r0, #56]
 11022              	.LVL928:
6191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 11023              		.loc 1 6191 0
 11024 0004 836B     		ldr	r3, [r0, #56]
 11025 0006 0BB1     		cbz	r3, .L856
6193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 11026              		.loc 1 6193 0
 11027 0008 0022     		movs	r2, #0
 11028 000a 1A65     		str	r2, [r3, #80]
 11029              	.L856:
ARM GAS  /tmp/ccbPnc67.s 			page 343


6195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 11030              		.loc 1 6195 0
 11031 000c C36B     		ldr	r3, [r0, #60]
 11032 000e 0BB1     		cbz	r3, .L857
6197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 11033              		.loc 1 6197 0
 11034 0010 0022     		movs	r2, #0
 11035 0012 1A65     		str	r2, [r3, #80]
 11036              	.L857:
6200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 11037              		.loc 1 6200 0
 11038 0014 FFF7FEFF 		bl	I2C_TreatErrorCallback
 11039              	.LVL929:
6201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 11040              		.loc 1 6201 0
 11041 0018 08BD     		pop	{r3, pc}
 11042              		.cfi_endproc
 11043              	.LFE210:
 11045              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 11046              		.align	1
 11047              		.global	HAL_I2C_GetState
 11048              		.syntax unified
 11049              		.thumb
 11050              		.thumb_func
 11051              		.fpu fpv5-d16
 11053              	HAL_I2C_GetState:
 11054              	.LFB187:
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Return I2C handle state */
 11055              		.loc 1 4563 0
 11056              		.cfi_startproc
 11057              		@ args = 0, pretend = 0, frame = 0
 11058              		@ frame_needed = 0, uses_anonymous_args = 0
 11059              		@ link register save eliminated.
 11060              	.LVL930:
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 11061              		.loc 1 4565 0
 11062 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 11063              	.LVL931:
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 11064              		.loc 1 4566 0
 11065 0004 7047     		bx	lr
 11066              		.cfi_endproc
 11067              	.LFE187:
 11069              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 11070              		.align	1
 11071              		.global	HAL_I2C_GetMode
 11072              		.syntax unified
 11073              		.thumb
 11074              		.thumb_func
 11075              		.fpu fpv5-d16
 11077              	HAL_I2C_GetMode:
 11078              	.LFB188:
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->Mode;
 11079              		.loc 1 4575 0
 11080              		.cfi_startproc
 11081              		@ args = 0, pretend = 0, frame = 0
 11082              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccbPnc67.s 			page 344


 11083              		@ link register save eliminated.
 11084              	.LVL932:
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 11085              		.loc 1 4576 0
 11086 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 11087              	.LVL933:
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 11088              		.loc 1 4577 0
 11089 0004 7047     		bx	lr
 11090              		.cfi_endproc
 11091              	.LFE188:
 11093              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 11094              		.align	1
 11095              		.global	HAL_I2C_GetError
 11096              		.syntax unified
 11097              		.thumb
 11098              		.thumb_func
 11099              		.fpu fpv5-d16
 11101              	HAL_I2C_GetError:
 11102              	.LFB189:
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 11103              		.loc 1 4586 0
 11104              		.cfi_startproc
 11105              		@ args = 0, pretend = 0, frame = 0
 11106              		@ frame_needed = 0, uses_anonymous_args = 0
 11107              		@ link register save eliminated.
 11108              	.LVL934:
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 11109              		.loc 1 4587 0
 11110 0000 406C     		ldr	r0, [r0, #68]
 11111              	.LVL935:
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 11112              		.loc 1 4588 0
 11113 0002 7047     		bx	lr
 11114              		.cfi_endproc
 11115              	.LFE189:
 11117              		.text
 11118              	.Letext0:
 11119              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 11120              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 11121              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 11122              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 11123              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 11124              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 11125              		.file 8 "/usr/include/newlib/sys/lock.h"
 11126              		.file 9 "/usr/include/newlib/sys/_types.h"
 11127              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 11128              		.file 11 "/usr/include/newlib/sys/reent.h"
 11129              		.file 12 "/usr/include/newlib/math.h"
 11130              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 11131              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 11132              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 11133              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 11134              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccbPnc67.s 			page 345


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_i2c.c
     /tmp/ccbPnc67.s:17     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/ccbPnc67.s:23     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/ccbPnc67.s:57     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/ccbPnc67.s:63     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/ccbPnc67.s:109    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/ccbPnc67.s:115    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/ccbPnc67.s:219    .text.I2C_Enable_IRQ:000000000000006c $d
     /tmp/ccbPnc67.s:10249  .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/ccbPnc67.s:9852   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/ccbPnc67.s:225    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/ccbPnc67.s:231    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/ccbPnc67.s:392    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/ccbPnc67.s:398    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/ccbPnc67.s:432    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/ccbPnc67.s:438    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/ccbPnc67.s:543    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/ccbPnc67.s:549    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/ccbPnc67.s:623    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccbPnc67.s:629    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/ccbPnc67.s:699    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/ccbPnc67.s:705    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/ccbPnc67.s:802    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/ccbPnc67.s:807    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/ccbPnc67.s:813    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/ccbPnc67.s:910    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/ccbPnc67.s:915    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/ccbPnc67.s:921    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/ccbPnc67.s:992    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/ccbPnc67.s:998    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/ccbPnc67.s:1108   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/ccbPnc67.s:1115   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/ccbPnc67.s:1129   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/ccbPnc67.s:1136   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/ccbPnc67.s:1269   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/ccbPnc67.s:1274   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/ccbPnc67.s:1281   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/ccbPnc67.s:1295   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/ccbPnc67.s:1302   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/ccbPnc67.s:1357   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/ccbPnc67.s:1364   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/ccbPnc67.s:1617   .text.HAL_I2C_Master_Transmit:0000000000000178 $d
     /tmp/ccbPnc67.s:1622   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/ccbPnc67.s:1629   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/ccbPnc67.s:1882   .text.HAL_I2C_Master_Receive:0000000000000178 $d
     /tmp/ccbPnc67.s:1887   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/ccbPnc67.s:1894   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/ccbPnc67.s:2171   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/ccbPnc67.s:2178   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/ccbPnc67.s:2437   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:2444   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/ccbPnc67.s:2573   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/ccbPnc67.s:9555   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/ccbPnc67.s:2580   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:2587   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/ccbPnc67.s:2716   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
ARM GAS  /tmp/ccbPnc67.s 			page 346


     /tmp/ccbPnc67.s:2723   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:2730   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/ccbPnc67.s:2810   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/ccbPnc67.s:9087   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/ccbPnc67.s:2816   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:2823   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/ccbPnc67.s:2903   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/ccbPnc67.s:2909   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:2916   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/ccbPnc67.s:3150   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/ccbPnc67.s:10740  .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/ccbPnc67.s:10502  .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/ccbPnc67.s:3160   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:3167   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/ccbPnc67.s:3397   .text.HAL_I2C_Master_Receive_DMA:0000000000000138 $d
     /tmp/ccbPnc67.s:10828  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/ccbPnc67.s:3407   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:3414   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/ccbPnc67.s:3580   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000e8 $d
     /tmp/ccbPnc67.s:7921   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/ccbPnc67.s:3588   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:3595   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/ccbPnc67.s:3763   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e8 $d
     /tmp/ccbPnc67.s:7971   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/ccbPnc67.s:3771   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/ccbPnc67.s:3778   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/ccbPnc67.s:4070   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/ccbPnc67.s:4077   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/ccbPnc67.s:4370   .text.HAL_I2C_Mem_Read:00000000000001b4 $d
     /tmp/ccbPnc67.s:4375   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:4382   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/ccbPnc67.s:4554   .text.HAL_I2C_Mem_Write_IT:00000000000000e0 $d
     /tmp/ccbPnc67.s:4560   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:4567   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/ccbPnc67.s:4740   .text.HAL_I2C_Mem_Read_IT:00000000000000e0 $d
     /tmp/ccbPnc67.s:4747   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:4754   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/ccbPnc67.s:5001   .text.HAL_I2C_Mem_Write_DMA:000000000000015c $d
     /tmp/ccbPnc67.s:5009   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:5016   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/ccbPnc67.s:5264   .text.HAL_I2C_Mem_Read_DMA:0000000000000160 $d
     /tmp/ccbPnc67.s:5273   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/ccbPnc67.s:5280   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/ccbPnc67.s:5546   .text.HAL_I2C_IsDeviceReady:000000000000016c $d
     /tmp/ccbPnc67.s:5551   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:5558   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/ccbPnc67.s:5715   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/ccbPnc67.s:5721   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:5728   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/ccbPnc67.s:5989   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000158 $d
     /tmp/ccbPnc67.s:5998   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:6005   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/ccbPnc67.s:6162   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/ccbPnc67.s:6168   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:6175   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/ccbPnc67.s:6436   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000158 $d
     /tmp/ccbPnc67.s:6445   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/ccbPnc67.s 			page 347


     /tmp/ccbPnc67.s:6452   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/ccbPnc67.s:6609   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000d8 $d
     /tmp/ccbPnc67.s:11008  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/ccbPnc67.s:6615   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:6622   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/ccbPnc67.s:6897   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000194 $d
     /tmp/ccbPnc67.s:6905   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:6912   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/ccbPnc67.s:7069   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000d8 $d
     /tmp/ccbPnc67.s:7075   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:7082   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/ccbPnc67.s:7356   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000194 $d
     /tmp/ccbPnc67.s:7364   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:7371   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/ccbPnc67.s:7412   .text.HAL_I2C_EnableListen_IT:0000000000000028 $d
     /tmp/ccbPnc67.s:7417   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:7424   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/ccbPnc67.s:7478   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:7485   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/ccbPnc67.s:7602   .text.HAL_I2C_Master_Abort_IT:0000000000000080 $d
     /tmp/ccbPnc67.s:7607   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/ccbPnc67.s:7614   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/ccbPnc67.s:7646   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:7653   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/ccbPnc67.s:7667   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:7674   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccbPnc67.s:7688   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:7694   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/ccbPnc67.s:7765   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:7772   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/ccbPnc67.s:7786   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:7793   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/ccbPnc67.s:7807   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:7813   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/ccbPnc67.s:7915   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:7965   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:8085   .text.I2C_DMASlaveReceiveCplt:0000000000000098 $d
     /tmp/ccbPnc67.s:8091   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8098   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/ccbPnc67.s:8112   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:8118   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/ccbPnc67.s:8241   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8248   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/ccbPnc67.s:8262   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:8268   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/ccbPnc67.s:8346   .text.I2C_ITListenCplt:0000000000000064 $d
     /tmp/ccbPnc67.s:8351   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8358   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/ccbPnc67.s:8372   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8379   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccbPnc67.s:8393   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8400   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccbPnc67.s:8414   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8421   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/ccbPnc67.s:8435   .text.I2C_TreatErrorCallback:0000000000000000 $t
     /tmp/ccbPnc67.s:8441   .text.I2C_TreatErrorCallback:0000000000000000 I2C_TreatErrorCallback
     /tmp/ccbPnc67.s:8487   .text.I2C_ITError:0000000000000000 $t
ARM GAS  /tmp/ccbPnc67.s 			page 348


     /tmp/ccbPnc67.s:8493   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/ccbPnc67.s:8679   .text.I2C_ITError:00000000000000fc $d
     /tmp/ccbPnc67.s:8686   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:8692   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/ccbPnc67.s:9074   .text.I2C_ITSlaveCplt:0000000000000234 $d
     /tmp/ccbPnc67.s:9081   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:9328   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:9334   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/ccbPnc67.s:9549   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/ccbPnc67.s:9846   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:10237  .text.I2C_Slave_ISR_DMA:0000000000000220 $d
     /tmp/ccbPnc67.s:10243  .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/ccbPnc67.s:10496  .text.I2C_DMAError:0000000000000000 $t
     /tmp/ccbPnc67.s:10728  .text.I2C_DMAError:0000000000000130 $d
     /tmp/ccbPnc67.s:10734  .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:10822  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/ccbPnc67.s:10910  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/ccbPnc67.s:10917  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/ccbPnc67.s:11002  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/ccbPnc67.s:11046  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/ccbPnc67.s:11053  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/ccbPnc67.s:11070  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/ccbPnc67.s:11077  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/ccbPnc67.s:11094  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/ccbPnc67.s:11101  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetState
HAL_DMA_GetError
