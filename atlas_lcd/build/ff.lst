ARM GAS  /tmp/cc2OGbx6.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ff.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ld_word,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ld_word:
  24              	.LFB141:
  25              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - Generic FAT file system module  R0.12c                             /
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** /
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:Middlewares/Third_Party/FatFs/src/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / that the following condition is met:
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /
  11:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  13:Middlewares/Third_Party/FatFs/src/ff.c **** /
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /----------------------------------------------------------------------------*/
  19:Middlewares/Third_Party/FatFs/src/ff.c **** 
  20:Middlewares/Third_Party/FatFs/src/ff.c **** 
  21:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  22:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  23:Middlewares/Third_Party/FatFs/src/ff.c **** 
  24:Middlewares/Third_Party/FatFs/src/ff.c **** 
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
  26:Middlewares/Third_Party/FatFs/src/ff.c **** 
  27:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
  28:Middlewares/Third_Party/FatFs/src/ff.c **** 
  29:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
  30:Middlewares/Third_Party/FatFs/src/ff.c **** 
  31:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 68300	/* Revision ID */
  32:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
  33:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 2


  34:Middlewares/Third_Party/FatFs/src/ff.c **** 
  35:Middlewares/Third_Party/FatFs/src/ff.c **** 
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS upper conversion tables */
  37:Middlewares/Third_Party/FatFs/src/ff.c **** 
  38:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
  39:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
  40:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
  41:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
  42:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
  43:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
  44:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
  45:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
  46:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
  47:Middlewares/Third_Party/FatFs/src/ff.c **** 
  48:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
  49:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  50:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  51:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  52:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  53:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
  54:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  55:Middlewares/Third_Party/FatFs/src/ff.c **** 
  56:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
  57:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  58:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  59:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
  60:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
  61:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
  62:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
  63:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
  64:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
  65:Middlewares/Third_Party/FatFs/src/ff.c **** 
  66:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
  67:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
  68:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
  69:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
  70:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
  71:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
  72:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
  73:Middlewares/Third_Party/FatFs/src/ff.c **** 
  74:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. */
  75:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  76:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
  77:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  78:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  79:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
  80:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  81:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  82:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  83:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  84:Middlewares/Third_Party/FatFs/src/ff.c **** 
  85:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic */
  86:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  87:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  88:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
  89:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
  90:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
ARM GAS  /tmp/cc2OGbx6.s 			page 3


  91:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
  92:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
  93:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
  94:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
  95:Middlewares/Third_Party/FatFs/src/ff.c **** 
  96:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek */
  97:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
  98:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
  99:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 100:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 101:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 102:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 103:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 104:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 105:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 106:Middlewares/Third_Party/FatFs/src/ff.c **** 
 107:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 771	/* KBL */
 108:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 109:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 110:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 111:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 112:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 113:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 114:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 115:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 116:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 118:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic */
 119:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 120:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F, \
 121:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 122:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 123:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 124:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 126:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 127:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Latin 1 */
 130:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 131:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41, \
 132:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 134:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 136:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 137:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 138:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 */
 141:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F, \
 143:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 144:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 145:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 146:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 147:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
ARM GAS  /tmp/cc2OGbx6.s 			page 4


 148:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 149:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 150:Middlewares/Third_Party/FatFs/src/ff.c **** 
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic */
 152:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F, \
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 156:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 157:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 158:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 159:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 160:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 161:Middlewares/Third_Party/FatFs/src/ff.c **** 
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish */
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, \
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 167:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 168:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 169:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 170:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 171:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 172:Middlewares/Third_Party/FatFs/src/ff.c **** 
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 860	/* Portuguese */
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F, \
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 178:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 179:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 180:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 181:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 182:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 183:Middlewares/Third_Party/FatFs/src/ff.c **** 
 184:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 861	/* Icelandic */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 186:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F, \
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 188:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 189:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 193:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 198:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 199:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 200:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 201:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 202:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 203:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 204:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
ARM GAS  /tmp/cc2OGbx6.s 			page 5


 205:Middlewares/Third_Party/FatFs/src/ff.c **** 
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 863	/* Canadian-French */
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F, \
 209:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 210:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 211:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 213:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 214:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 215:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 216:Middlewares/Third_Party/FatFs/src/ff.c **** 
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 864	/* Arabic */
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 220:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 221:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 223:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 224:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 225:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 226:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 227:Middlewares/Third_Party/FatFs/src/ff.c **** 
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 865	/* Nordic */
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 230:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F, \
 231:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 232:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 233:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 238:Middlewares/Third_Party/FatFs/src/ff.c **** 
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian */
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 241:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 245:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 246:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 247:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 
 250:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 869	/* Greek 2 */
 251:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 253:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 254:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 259:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 260:Middlewares/Third_Party/FatFs/src/ff.c **** 
 261:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
ARM GAS  /tmp/cc2OGbx6.s 			page 6


 262:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 263:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot enable LFN without valid code page.
 264:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 265:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 266:Middlewares/Third_Party/FatFs/src/ff.c **** 
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 270:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 276:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 
 278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S != 0	/* Code page is DBCS */
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 283:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 284:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 
 286:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 290:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 
 292:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** 
 297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 300:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file attribute bits for internal use */
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #define	AM_VOL		0x08	/* Volume label */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 
 306:Middlewares/Third_Party/FatFs/src/ff.c **** /* Additional file access control and file status flags for internal use */
 307:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
 310:Middlewares/Third_Party/FatFs/src/ff.c **** 
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 
 312:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags in fn[] */
 313:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
 314:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 318:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
ARM GAS  /tmp/cc2OGbx6.s 			page 7


 319:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 320:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
 321:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_NONAME	0x80	/* Not followed */
 322:Middlewares/Third_Party/FatFs/src/ff.c **** 
 323:Middlewares/Third_Party/FatFs/src/ff.c **** 
 324:Middlewares/Third_Party/FatFs/src/ff.c **** /* Limits and boundaries */
 325:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
 326:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
 327:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but correct for real DOS/Windo
 328:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but correct for real DOS/Wind
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
 331:Middlewares/Third_Party/FatFs/src/ff.c **** 
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 
 333:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
 334:Middlewares/Third_Party/FatFs/src/ff.c **** / because the C structure is not binary compatible between different platforms */
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
 339:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
 340:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
 341:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
 342:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT12/16 [entry] (WORD) */
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 346:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size for int13h [sector] (WORD) */
 347:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 348:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 349:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres			37		/* Error flag (BYTE) */
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 353:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 354:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 355:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type string (8-byte) */
 356:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 360:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 361:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer32			42		/* FAT32: File system version (WORD) */
 362:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 363:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 367:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 368:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 369:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 370:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* FAT32: File system type string (8-byte) */
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** 
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 374:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 375:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
ARM GAS  /tmp/cc2OGbx6.s 			page 8


 376:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 377:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVerEx			104		/* exFAT: File system version (WORD) */
 383:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (BYTE) */
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ActFatEx		107		/* exFAT: Active FAT flags (BYTE) */
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 386:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 388:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 389:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 390:Middlewares/Third_Party/FatFs/src/ff.c **** #define	BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 392:Middlewares/Third_Party/FatFs/src/ff.c **** 
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11-byte) */
 394:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (BYTE) */
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (BYTE) */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (DWORD) */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_ModTime			22		/* Modified time (DWORD) */
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 402:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (DWORD) */
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN: Entry type (BYTE) */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 408:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 413:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 416:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 417:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_GenFlags		33		/* exFAT: General secondary flags (WORD) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 426:Middlewares/Third_Party/FatFs/src/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 427:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define	XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** 
 430:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZDIRE				32		/* Size of a directory entry */
 431:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 432:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
ARM GAS  /tmp/cc2OGbx6.s 			page 9


 433:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 434:Middlewares/Third_Party/FatFs/src/ff.c **** 
 435:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** 
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** 
 453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Post process after fatal error on file operation */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 456:Middlewares/Third_Party/FatFs/src/ff.c **** 
 457:Middlewares/Third_Party/FatFs/src/ff.c **** 
 458:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 469:Middlewares/Third_Party/FatFs/src/ff.c **** 
 470:Middlewares/Third_Party/FatFs/src/ff.c **** 
 471:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of volume - partition conversion */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
 473:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 479:Middlewares/Third_Party/FatFs/src/ff.c **** 
 480:Middlewares/Third_Party/FatFs/src/ff.c **** 
 481:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 10


 490:Middlewares/Third_Party/FatFs/src/ff.c **** 
 491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 492:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 495:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 496:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 497:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 498:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 499:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 500:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 501:Middlewares/Third_Party/FatFs/src/ff.c **** 
 502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock controls */
 504:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 505:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 506:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 508:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 509:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 510:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 513:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 514:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 515:Middlewares/Third_Party/FatFs/src/ff.c **** 
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** 
 518:Middlewares/Third_Party/FatFs/src/ff.c **** 
 519:Middlewares/Third_Party/FatFs/src/ff.c **** 
 520:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 521:Middlewares/Third_Party/FatFs/src/ff.c **** 
 522:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Work Area
 523:Middlewares/Third_Party/FatFs/src/ff.c **** 
 524:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 526:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 527:Middlewares/Third_Party/FatFs/src/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 528:Middlewares/Third_Party/FatFs/src/ff.c **** /  not compliance with C standard. */
 529:Middlewares/Third_Party/FatFs/src/ff.c **** 
 530:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 10
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 533:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 534:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
 537:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 541:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 543:Middlewares/Third_Party/FatFs/src/ff.c **** 
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0		/* Non-LFN configuration */
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 546:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
ARM GAS  /tmp/cc2OGbx6.s 			page 11


 547:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 548:Middlewares/Third_Party/FatFs/src/ff.c **** 
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #else					/* LFN configuration */
 550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 551:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN value
 552:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 553:Middlewares/Third_Party/FatFs/src/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1		/* LFN enabled with static working buffer */
 556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 557:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE	DirBuf[MAXDIRB(_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 559:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];	/* LFN enabled with static working buffer */
 560:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF
 561:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)
 562:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1]; BYTE dbuf[MAXDIRB(_MAX_LFN)];
 567:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 569:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR lbuf[_MAX_LFN+1];
 571:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 572:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()
 573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 574:Middlewares/Third_Party/FatFs/src/ff.c **** 
 575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 577:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 578:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2 + MAXDIRB(_MAX_LFN)); if (!lfn) LEAVE_FF
 579:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 580:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 581:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEF_NAMBUF		WCHAR *lfn;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH_C
 583:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_NAMBUF()	ff_memfree(lfn)
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 
 586:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 587:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 
 589:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* else _USE_LFN == 0 */
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 592:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 593:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for SBCS extended characters */
 594:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 595:Middlewares/Third_Party/FatFs/src/ff.c **** 
 596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 597:Middlewares/Third_Party/FatFs/src/ff.c **** 
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 
 601:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 602:Middlewares/Third_Party/FatFs/src/ff.c **** 
 603:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
ARM GAS  /tmp/cc2OGbx6.s 			page 12


 604:Middlewares/Third_Party/FatFs/src/ff.c **** 
 605:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 606:Middlewares/Third_Party/FatFs/src/ff.c **** 
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 
 608:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 609:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 610:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 612:Middlewares/Third_Party/FatFs/src/ff.c **** static
 613:Middlewares/Third_Party/FatFs/src/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 614:Middlewares/Third_Party/FatFs/src/ff.c **** {
  26              		.loc 1 614 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 615:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD rv;
 616:Middlewares/Third_Party/FatFs/src/ff.c **** 
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[1];
  32              		.loc 1 617 0
  33 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  34              	.LVL1:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  35              		.loc 1 618 0
  36 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  37              	.LVL2:
 619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 620:Middlewares/Third_Party/FatFs/src/ff.c **** }
  38              		.loc 1 620 0
  39 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  40              	.LVL3:
  41 0008 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE141:
  45              		.section	.text.ld_dword,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv5-d16
  52              	ld_dword:
  53              	.LFB142:
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** static
 623:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 624:Middlewares/Third_Party/FatFs/src/ff.c **** {
  54              		.loc 1 624 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL4:
 625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rv;
 626:Middlewares/Third_Party/FatFs/src/ff.c **** 
 627:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[3];
  60              		.loc 1 627 0
ARM GAS  /tmp/cc2OGbx6.s 			page 13


  61 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  62              	.LVL5:
 628:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
  63              		.loc 1 628 0
  64 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  65 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  66              	.LVL6:
 629:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
  67              		.loc 1 629 0
  68 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  69 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  70              	.LVL7:
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
  71              		.loc 1 630 0
  72 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  73              	.LVL8:
 631:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 632:Middlewares/Third_Party/FatFs/src/ff.c **** }
  74              		.loc 1 632 0
  75 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  76              	.LVL9:
  77 0014 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE142:
  81              		.section	.text.st_word,"ax",%progbits
  82              		.align	1
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-d16
  88              	st_word:
  89              	.LFB143:
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 
 634:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 635:Middlewares/Third_Party/FatFs/src/ff.c **** static
 636:Middlewares/Third_Party/FatFs/src/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 637:Middlewares/Third_Party/FatFs/src/ff.c **** {
 638:Middlewares/Third_Party/FatFs/src/ff.c **** 	QWORD rv;
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = ptr[7];
 641:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[6];
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[5];
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[4];
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[3];
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[2];
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[1];
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 	rv = rv << 8 | ptr[0];
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	return rv;
 649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 651:Middlewares/Third_Party/FatFs/src/ff.c **** 
 652:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 653:Middlewares/Third_Party/FatFs/src/ff.c **** static
 654:Middlewares/Third_Party/FatFs/src/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 655:Middlewares/Third_Party/FatFs/src/ff.c **** {
  90              		.loc 1 655 0
  91              		.cfi_startproc
ARM GAS  /tmp/cc2OGbx6.s 			page 14


  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL10:
 656:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  96              		.loc 1 656 0
  97 0000 0170     		strb	r1, [r0]
  98              	.LVL11:
 657:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
  99              		.loc 1 657 0
 100 0002 090A     		lsrs	r1, r1, #8
 101              	.LVL12:
 102 0004 4170     		strb	r1, [r0, #1]
 658:Middlewares/Third_Party/FatFs/src/ff.c **** }
 103              		.loc 1 658 0
 104 0006 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE143:
 108              		.section	.text.st_dword,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-d16
 115              	st_dword:
 116              	.LFB144:
 659:Middlewares/Third_Party/FatFs/src/ff.c **** 
 660:Middlewares/Third_Party/FatFs/src/ff.c **** static
 661:Middlewares/Third_Party/FatFs/src/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 662:Middlewares/Third_Party/FatFs/src/ff.c **** {
 117              		.loc 1 662 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL13:
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 123              		.loc 1 663 0
 124 0000 0170     		strb	r1, [r0]
 125              	.LVL14:
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 126              		.loc 1 664 0
 127 0002 C1F30723 		ubfx	r3, r1, #8, #8
 128 0006 4370     		strb	r3, [r0, #1]
 129              	.LVL15:
 665:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 130              		.loc 1 665 0
 131 0008 C1F30743 		ubfx	r3, r1, #16, #8
 132 000c 8370     		strb	r3, [r0, #2]
 133              	.LVL16:
 666:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 134              		.loc 1 666 0
 135 000e 090E     		lsrs	r1, r1, #24
 136              	.LVL17:
 137 0010 C170     		strb	r1, [r0, #3]
 667:Middlewares/Third_Party/FatFs/src/ff.c **** }
 138              		.loc 1 667 0
ARM GAS  /tmp/cc2OGbx6.s 			page 15


 139 0012 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE144:
 143              		.section	.text.mem_cpy,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	mem_cpy:
 151              	.LFB145:
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 670:Middlewares/Third_Party/FatFs/src/ff.c **** static
 671:Middlewares/Third_Party/FatFs/src/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** {
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 	*ptr++ = (BYTE)val;
 681:Middlewares/Third_Party/FatFs/src/ff.c **** }
 682:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 683:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
 684:Middlewares/Third_Party/FatFs/src/ff.c **** 
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 688:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 
 691:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 692:Middlewares/Third_Party/FatFs/src/ff.c **** static
 693:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
 152              		.loc 1 693 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL18:
 694:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cnt) {
 158              		.loc 1 697 0
 159 0000 1346     		mov	r3, r2
 160 0002 2AB1     		cbz	r2, .L5
 161              	.LVL19:
 162              	.L7:
 698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 			*d++ = *s++;
 163              		.loc 1 699 0 discriminator 1
 164 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 165 0006 0270     		strb	r2, [r0]
ARM GAS  /tmp/cc2OGbx6.s 			page 16


 166              	.LVL20:
 167 0008 0130     		adds	r0, r0, #1
 168              	.LVL21:
 169 000a 0131     		adds	r1, r1, #1
 170              	.LVL22:
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (--cnt);
 171              		.loc 1 700 0 discriminator 1
 172 000c 013B     		subs	r3, r3, #1
 173              	.LVL23:
 174 000e F9D1     		bne	.L7
 175              	.L5:
 701:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 702:Middlewares/Third_Party/FatFs/src/ff.c **** }
 176              		.loc 1 702 0
 177 0010 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE145:
 181              		.section	.text.mem_set,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv5-d16
 188              	mem_set:
 189              	.LFB146:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 
 704:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory block */
 705:Middlewares/Third_Party/FatFs/src/ff.c **** static
 706:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
 190              		.loc 1 706 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              	.LVL24:
 196              	.L9:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
 197              		.loc 1 710 0 discriminator 1
 198 0000 0170     		strb	r1, [r0]
 199              	.LVL25:
 200 0002 0130     		adds	r0, r0, #1
 201              	.LVL26:
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt);
 202              		.loc 1 711 0 discriminator 1
 203 0004 013A     		subs	r2, r2, #1
 204              	.LVL27:
 205 0006 FBD1     		bne	.L9
 712:Middlewares/Third_Party/FatFs/src/ff.c **** }
 206              		.loc 1 712 0
 207 0008 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE146:
 211              		.section	.text.mem_cmp,"ax",%progbits
 212              		.align	1
ARM GAS  /tmp/cc2OGbx6.s 			page 17


 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv5-d16
 218              	mem_cmp:
 219              	.LFB147:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 
 714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory block */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** static
 716:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 220              		.loc 1 716 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL28:
 226 0000 30B4     		push	{r4, r5}
 227              	.LCFI0:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 5, -4
 231              	.LVL29:
 232              	.L12:
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 		r = *d++ - *s++;
 233              		.loc 1 721 0 discriminator 2
 234 0002 451C     		adds	r5, r0, #1
 235              	.LVL30:
 236 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 237              	.LVL31:
 238 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 239 0008 1B1A     		subs	r3, r3, r0
 240              	.LVL32:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 241              		.loc 1 722 0 discriminator 2
 242 000a 013A     		subs	r2, r2, #1
 243              	.LVL33:
 244 000c 04D0     		beq	.L10
 245 000e 4C1C     		adds	r4, r1, #1
 246              	.LVL34:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--cnt && r == 0);
 247              		.loc 1 721 0 discriminator 1
 248 0010 2846     		mov	r0, r5
 249 0012 2146     		mov	r1, r4
 250              		.loc 1 722 0 discriminator 1
 251 0014 002B     		cmp	r3, #0
 252 0016 F4D0     		beq	.L12
 253              	.LVL35:
 254              	.L10:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 725:Middlewares/Third_Party/FatFs/src/ff.c **** }
 255              		.loc 1 725 0
 256 0018 1846     		mov	r0, r3
ARM GAS  /tmp/cc2OGbx6.s 			page 18


 257 001a 30BC     		pop	{r4, r5}
 258              	.LCFI1:
 259              		.cfi_restore 5
 260              		.cfi_restore 4
 261              		.cfi_def_cfa_offset 0
 262              	.LVL36:
 263 001c 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE147:
 267              		.section	.text.chk_chr,"ax",%progbits
 268              		.align	1
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv5-d16
 274              	chk_chr:
 275              	.LFB148:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** 
 727:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 728:Middlewares/Third_Party/FatFs/src/ff.c **** static
 729:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {	/* NZ:contained, ZR:not contained */
 276              		.loc 1 729 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL37:
 730:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 282              		.loc 1 730 0
 283 0000 00E0     		b	.L15
 284              	.L17:
 285              		.loc 1 730 0 is_stmt 0 discriminator 3
 286 0002 0130     		adds	r0, r0, #1
 287              	.LVL38:
 288              	.L15:
 289              		.loc 1 730 0 discriminator 1
 290 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 291 0006 0BB1     		cbz	r3, .L16
 292              		.loc 1 730 0 discriminator 2
 293 0008 8B42     		cmp	r3, r1
 294 000a FAD1     		bne	.L17
 295              	.L16:
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 732:Middlewares/Third_Party/FatFs/src/ff.c **** }
 296              		.loc 1 732 0 is_stmt 1
 297 000c 1846     		mov	r0, r3
 298              	.LVL39:
 299 000e 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE148:
 303              		.section	.text.chk_lock,"ax",%progbits
 304              		.align	1
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-d16
 310              	chk_lock:
ARM GAS  /tmp/cc2OGbx6.s 			page 19


 311              	.LFB149:
 733:Middlewares/Third_Party/FatFs/src/ff.c **** 
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 738:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 739:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 740:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 741:Middlewares/Third_Party/FatFs/src/ff.c **** static
 742:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** )
 745:Middlewares/Third_Party/FatFs/src/ff.c **** {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 747:Middlewares/Third_Party/FatFs/src/ff.c **** }
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 
 749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 750:Middlewares/Third_Party/FatFs/src/ff.c **** static
 751:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 752:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 753:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** )
 755:Middlewares/Third_Party/FatFs/src/ff.c **** {
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 759:Middlewares/Third_Party/FatFs/src/ff.c **** }
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 
 761:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 762:Middlewares/Third_Party/FatFs/src/ff.c **** 
 763:Middlewares/Third_Party/FatFs/src/ff.c **** 
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 766:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 767:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** 
 770:Middlewares/Third_Party/FatFs/src/ff.c **** static
 771:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 772:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 773:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 774:Middlewares/Third_Party/FatFs/src/ff.c **** )
 775:Middlewares/Third_Party/FatFs/src/ff.c **** {
 312              		.loc 1 775 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL40:
 318 0000 30B4     		push	{r4, r5}
 319              	.LCFI2:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 5, -4
 323              	.LVL41:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
ARM GAS  /tmp/cc2OGbx6.s 			page 20


 777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 324              		.loc 1 779 0
 325 0002 0025     		movs	r5, #0
 326 0004 2B46     		mov	r3, r5
 327 0006 01E0     		b	.L19
 328              	.LVL42:
 329              	.L25:
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matched with an open object */
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 330              		.loc 1 785 0
 331 0008 0125     		movs	r5, #1
 332              	.LVL43:
 333              	.L20:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 334              		.loc 1 779 0 discriminator 2
 335 000a 0133     		adds	r3, r3, #1
 336              	.LVL44:
 337              	.L19:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 338              		.loc 1 779 0 is_stmt 0 discriminator 1
 339 000c 012B     		cmp	r3, #1
 340 000e 15D8     		bhi	.L21
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 341              		.loc 1 780 0 is_stmt 1
 342 0010 1A01     		lsls	r2, r3, #4
 343 0012 174C     		ldr	r4, .L32
 344 0014 A258     		ldr	r2, [r4, r2]
 345 0016 002A     		cmp	r2, #0
 346 0018 F6D0     		beq	.L25
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 347              		.loc 1 781 0
 348 001a 0468     		ldr	r4, [r0]
 349 001c A242     		cmp	r2, r4
 350 001e F4D1     		bne	.L20
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
 351              		.loc 1 782 0 discriminator 1
 352 0020 134A     		ldr	r2, .L32
 353 0022 02EB0312 		add	r2, r2, r3, lsl #4
 354 0026 5468     		ldr	r4, [r2, #4]
 355 0028 8268     		ldr	r2, [r0, #8]
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 356              		.loc 1 781 0 discriminator 1
 357 002a 9442     		cmp	r4, r2
 358 002c EDD1     		bne	.L20
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 359              		.loc 1 783 0
 360 002e 104A     		ldr	r2, .L32
 361 0030 02EB0312 		add	r2, r2, r3, lsl #4
 362 0034 9468     		ldr	r4, [r2, #8]
 363 0036 4269     		ldr	r2, [r0, #20]
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].ofs == dp->dptr) break;
ARM GAS  /tmp/cc2OGbx6.s 			page 21


 364              		.loc 1 782 0
 365 0038 9442     		cmp	r4, r2
 366 003a E6D1     		bne	.L20
 367              	.L21:
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {	/* The object is not opened */
 368              		.loc 1 788 0
 369 003c 022B     		cmp	r3, #2
 370 003e 0AD0     		beq	.L30
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 371              		.loc 1 793 0
 372 0040 A1B9     		cbnz	r1, .L27
 373              		.loc 1 793 0 is_stmt 0 discriminator 2
 374 0042 0B4A     		ldr	r2, .L32
 375 0044 02EB0313 		add	r3, r2, r3, lsl #4
 376              	.LVL45:
 377 0048 9B89     		ldrh	r3, [r3, #12]
 378 004a B3F5807F 		cmp	r3, #256
 379 004e 09D0     		beq	.L31
 380              		.loc 1 793 0
 381 0050 0020     		movs	r0, #0
 382              	.LVL46:
 383              	.L24:
 794:Middlewares/Third_Party/FatFs/src/ff.c **** }
 384              		.loc 1 794 0 is_stmt 1
 385 0052 30BC     		pop	{r4, r5}
 386              	.LCFI3:
 387              		.cfi_remember_state
 388              		.cfi_restore 5
 389              		.cfi_restore 4
 390              		.cfi_def_cfa_offset 0
 391 0054 7047     		bx	lr
 392              	.LVL47:
 393              	.L30:
 394              	.LCFI4:
 395              		.cfi_restore_state
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 396              		.loc 1 789 0
 397 0056 0229     		cmp	r1, #2
 398 0058 08BF     		it	eq
 399 005a 45F00105 		orreq	r5, r5, #1
 400              	.LVL48:
 401 005e 1DB1     		cbz	r5, .L26
 402 0060 0020     		movs	r0, #0
 403              	.LVL49:
 404 0062 F6E7     		b	.L24
 405              	.LVL50:
 406              	.L31:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 407              		.loc 1 793 0
 408 0064 1020     		movs	r0, #16
 409              	.LVL51:
ARM GAS  /tmp/cc2OGbx6.s 			page 22


 410 0066 F4E7     		b	.L24
 411              	.LVL52:
 412              	.L26:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 413              		.loc 1 789 0
 414 0068 1220     		movs	r0, #18
 415              	.LVL53:
 416 006a F2E7     		b	.L24
 417              	.LVL54:
 418              	.L27:
 793:Middlewares/Third_Party/FatFs/src/ff.c **** }
 419              		.loc 1 793 0
 420 006c 1020     		movs	r0, #16
 421              	.LVL55:
 422 006e F0E7     		b	.L24
 423              	.L33:
 424              		.align	2
 425              	.L32:
 426 0070 00000000 		.word	.LANCHOR0
 427              		.cfi_endproc
 428              	.LFE149:
 430              		.section	.text.enq_lock,"ax",%progbits
 431              		.align	1
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv5-d16
 437              	enq_lock:
 438              	.LFB150:
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 797:Middlewares/Third_Party/FatFs/src/ff.c **** static
 798:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 799:Middlewares/Third_Party/FatFs/src/ff.c **** {
 439              		.loc 1 799 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL56:
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 801:Middlewares/Third_Party/FatFs/src/ff.c **** 
 802:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 445              		.loc 1 802 0
 446 0000 0020     		movs	r0, #0
 447 0002 00E0     		b	.L35
 448              	.LVL57:
 449              	.L37:
 450              		.loc 1 802 0 is_stmt 0 discriminator 4
 451 0004 0130     		adds	r0, r0, #1
 452              	.LVL58:
 453              	.L35:
 454              		.loc 1 802 0 discriminator 1
 455 0006 0128     		cmp	r0, #1
 456 0008 04D8     		bhi	.L36
 457              		.loc 1 802 0 discriminator 3
 458 000a 0301     		lsls	r3, r0, #4
ARM GAS  /tmp/cc2OGbx6.s 			page 23


 459 000c 034A     		ldr	r2, .L38
 460 000e D358     		ldr	r3, [r2, r3]
 461 0010 002B     		cmp	r3, #0
 462 0012 F7D1     		bne	.L37
 463              	.L36:
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 804:Middlewares/Third_Party/FatFs/src/ff.c **** }
 464              		.loc 1 804 0 is_stmt 1
 465 0014 0238     		subs	r0, r0, #2
 466              	.LVL59:
 467 0016 18BF     		it	ne
 468 0018 0120     		movne	r0, #1
 469              	.LVL60:
 470 001a 7047     		bx	lr
 471              	.L39:
 472              		.align	2
 473              	.L38:
 474 001c 00000000 		.word	.LANCHOR0
 475              		.cfi_endproc
 476              	.LFE150:
 478              		.section	.text.inc_lock,"ax",%progbits
 479              		.align	1
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv5-d16
 485              	inc_lock:
 486              	.LFB151:
 805:Middlewares/Third_Party/FatFs/src/ff.c **** 
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 
 807:Middlewares/Third_Party/FatFs/src/ff.c **** static
 808:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** )
 812:Middlewares/Third_Party/FatFs/src/ff.c **** {
 487              		.loc 1 812 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL61:
 493 0000 70B4     		push	{r4, r5, r6}
 494              	.LCFI5:
 495              		.cfi_def_cfa_offset 12
 496              		.cfi_offset 4, -12
 497              		.cfi_offset 5, -8
 498              		.cfi_offset 6, -4
 499              	.LVL62:
 813:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 500              		.loc 1 816 0
 501 0002 0023     		movs	r3, #0
 502 0004 00E0     		b	.L41
 503              	.LVL63:
ARM GAS  /tmp/cc2OGbx6.s 			page 24


 504              	.L42:
 505              		.loc 1 816 0 is_stmt 0 discriminator 2
 506 0006 0133     		adds	r3, r3, #1
 507              	.LVL64:
 508              	.L41:
 509              		.loc 1 816 0 discriminator 1
 510 0008 012B     		cmp	r3, #1
 511 000a 13D8     		bhi	.L43
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 512              		.loc 1 817 0 is_stmt 1
 513 000c 1A01     		lsls	r2, r3, #4
 514 000e 244C     		ldr	r4, .L58
 515 0010 A458     		ldr	r4, [r4, r2]
 516 0012 0268     		ldr	r2, [r0]
 517 0014 9442     		cmp	r4, r2
 518 0016 F6D1     		bne	.L42
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 519              		.loc 1 818 0 discriminator 1
 520 0018 214A     		ldr	r2, .L58
 521 001a 02EB0312 		add	r2, r2, r3, lsl #4
 522 001e 5468     		ldr	r4, [r2, #4]
 523 0020 8268     		ldr	r2, [r0, #8]
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 524              		.loc 1 817 0 discriminator 1
 525 0022 9442     		cmp	r4, r2
 526 0024 EFD1     		bne	.L42
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].ofs == dp->dptr) break;
 527              		.loc 1 819 0
 528 0026 1E4A     		ldr	r2, .L58
 529 0028 02EB0312 		add	r2, r2, r3, lsl #4
 530 002c 9468     		ldr	r4, [r2, #8]
 531 002e 4269     		ldr	r2, [r0, #20]
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 532              		.loc 1 818 0
 533 0030 9442     		cmp	r4, r2
 534 0032 E8D1     		bne	.L42
 535              	.L43:
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 536              		.loc 1 822 0
 537 0034 022B     		cmp	r3, #2
 538 0036 29D0     		beq	.L57
 539              	.LVL65:
 540              	.L46:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 829:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 830:Middlewares/Third_Party/FatFs/src/ff.c **** 
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 541              		.loc 1 831 0
 542 0038 21B1     		cbz	r1, .L50
 543              		.loc 1 831 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc2OGbx6.s 			page 25


 544 003a 194A     		ldr	r2, .L58
 545 003c 02EB0312 		add	r2, r2, r3, lsl #4
 546 0040 9289     		ldrh	r2, [r2, #12]
 547 0042 52BB     		cbnz	r2, .L54
 548              	.L50:
 832:Middlewares/Third_Party/FatFs/src/ff.c **** 
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 549              		.loc 1 833 0 is_stmt 1
 550 0044 21BB     		cbnz	r1, .L55
 551              		.loc 1 833 0 is_stmt 0 discriminator 1
 552 0046 164A     		ldr	r2, .L58
 553 0048 02EB0312 		add	r2, r2, r3, lsl #4
 554 004c 9189     		ldrh	r1, [r2, #12]
 555              	.LVL66:
 556 004e 0131     		adds	r1, r1, #1
 557 0050 89B2     		uxth	r1, r1
 558              	.L51:
 559              		.loc 1 833 0 discriminator 4
 560 0052 134A     		ldr	r2, .L58
 561 0054 02EB0312 		add	r2, r2, r3, lsl #4
 562 0058 9181     		strh	r1, [r2, #12]	@ movhi
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 
 835:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 563              		.loc 1 835 0 is_stmt 1 discriminator 4
 564 005a 581C     		adds	r0, r3, #1
 565              	.L40:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** }
 566              		.loc 1 836 0
 567 005c 70BC     		pop	{r4, r5, r6}
 568              	.LCFI6:
 569              		.cfi_remember_state
 570              		.cfi_restore 6
 571              		.cfi_restore 5
 572              		.cfi_restore 4
 573              		.cfi_def_cfa_offset 0
 574 005e 7047     		bx	lr
 575              	.LVL67:
 576              	.L48:
 577              	.LCFI7:
 578              		.cfi_restore_state
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 579              		.loc 1 823 0 discriminator 4
 580 0060 0133     		adds	r3, r3, #1
 581              	.LVL68:
 582              	.L45:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 583              		.loc 1 823 0 is_stmt 0 discriminator 1
 584 0062 012B     		cmp	r3, #1
 585 0064 04D8     		bhi	.L47
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 586              		.loc 1 823 0 discriminator 3
 587 0066 1A01     		lsls	r2, r3, #4
 588 0068 0D4C     		ldr	r4, .L58
 589 006a A258     		ldr	r2, [r4, r2]
 590 006c 002A     		cmp	r2, #0
 591 006e F7D1     		bne	.L48
 592              	.L47:
ARM GAS  /tmp/cc2OGbx6.s 			page 26


 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 593              		.loc 1 824 0 is_stmt 1
 594 0070 022B     		cmp	r3, #2
 595 0072 10D0     		beq	.L53
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->obj.sclust;
 596              		.loc 1 825 0
 597 0074 0668     		ldr	r6, [r0]
 598 0076 0A4D     		ldr	r5, .L58
 599 0078 1C01     		lsls	r4, r3, #4
 600 007a 2A19     		adds	r2, r5, r4
 601 007c 2E51     		str	r6, [r5, r4]
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ofs = dp->dptr;
 602              		.loc 1 826 0
 603 007e 8468     		ldr	r4, [r0, #8]
 604 0080 5460     		str	r4, [r2, #4]
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 605              		.loc 1 827 0
 606 0082 4069     		ldr	r0, [r0, #20]
 607              	.LVL69:
 608 0084 9060     		str	r0, [r2, #8]
 828:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 609              		.loc 1 828 0
 610 0086 0020     		movs	r0, #0
 611 0088 9081     		strh	r0, [r2, #12]	@ movhi
 612 008a D5E7     		b	.L46
 613              	.LVL70:
 614              	.L57:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 615              		.loc 1 823 0
 616 008c 0023     		movs	r3, #0
 617              	.LVL71:
 618 008e E8E7     		b	.L45
 619              	.LVL72:
 620              	.L55:
 833:Middlewares/Third_Party/FatFs/src/ff.c **** 
 621              		.loc 1 833 0
 622 0090 4FF48071 		mov	r1, #256
 623              	.LVL73:
 624 0094 DDE7     		b	.L51
 625              	.LVL74:
 626              	.L53:
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->obj.fs;
 627              		.loc 1 824 0
 628 0096 0020     		movs	r0, #0
 629              	.LVL75:
 630 0098 E0E7     		b	.L40
 631              	.L54:
 831:Middlewares/Third_Party/FatFs/src/ff.c **** 
 632              		.loc 1 831 0
 633 009a 0020     		movs	r0, #0
 634 009c DEE7     		b	.L40
 635              	.L59:
 636 009e 00BF     		.align	2
 637              	.L58:
 638 00a0 00000000 		.word	.LANCHOR0
 639              		.cfi_endproc
 640              	.LFE151:
ARM GAS  /tmp/cc2OGbx6.s 			page 27


 642              		.section	.text.dec_lock,"ax",%progbits
 643              		.align	1
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu fpv5-d16
 649              	dec_lock:
 650              	.LFB152:
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** static
 840:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 842:Middlewares/Third_Party/FatFs/src/ff.c **** )
 843:Middlewares/Third_Party/FatFs/src/ff.c **** {
 651              		.loc 1 843 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656              	.LVL76:
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 657              		.loc 1 848 0
 658 0000 0138     		subs	r0, r0, #1
 659              	.LVL77:
 660 0002 0128     		cmp	r0, #1
 661 0004 15D8     		bhi	.L63
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 662              		.loc 1 849 0
 663 0006 0D4B     		ldr	r3, .L66
 664 0008 03EB0013 		add	r3, r3, r0, lsl #4
 665 000c 9B89     		ldrh	r3, [r3, #12]
 666              	.LVL78:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 667              		.loc 1 850 0
 668 000e B3F5807F 		cmp	r3, #256
 669 0012 03D0     		beq	.L64
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
 670              		.loc 1 851 0
 671 0014 1BB1     		cbz	r3, .L62
 672              		.loc 1 851 0 is_stmt 0 discriminator 1
 673 0016 013B     		subs	r3, r3, #1
 674              	.LVL79:
 675 0018 9BB2     		uxth	r3, r3
 676              	.LVL80:
 677 001a 00E0     		b	.L62
 678              	.L64:
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 679              		.loc 1 850 0 is_stmt 1
 680 001c 0023     		movs	r3, #0
 681              	.LVL81:
 682              	.L62:
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
ARM GAS  /tmp/cc2OGbx6.s 			page 28


 683              		.loc 1 852 0
 684 001e 074A     		ldr	r2, .L66
 685 0020 02EB0012 		add	r2, r2, r0, lsl #4
 686 0024 9381     		strh	r3, [r2, #12]	@ movhi
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 687              		.loc 1 853 0
 688 0026 33B9     		cbnz	r3, .L65
 689              		.loc 1 853 0 is_stmt 0 discriminator 1
 690 0028 0301     		lsls	r3, r0, #4
 691              	.LVL82:
 692 002a 0020     		movs	r0, #0
 693              	.LVL83:
 694 002c 034A     		ldr	r2, .L66
 695              	.LVL84:
 696 002e D050     		str	r0, [r2, r3]
 697 0030 7047     		bx	lr
 698              	.LVL85:
 699              	.L63:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 700              		.loc 1 856 0 is_stmt 1
 701 0032 0220     		movs	r0, #2
 702              	.LVL86:
 703 0034 7047     		bx	lr
 704              	.LVL87:
 705              	.L65:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 706              		.loc 1 854 0
 707 0036 0020     		movs	r0, #0
 708              	.LVL88:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** }
 709              		.loc 1 859 0
 710 0038 7047     		bx	lr
 711              	.L67:
 712 003a 00BF     		.align	2
 713              	.L66:
 714 003c 00000000 		.word	.LANCHOR0
 715              		.cfi_endproc
 716              	.LFE152:
 718              		.section	.text.clear_lock,"ax",%progbits
 719              		.align	1
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv5-d16
 725              	clear_lock:
 726              	.LFB153:
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 
 862:Middlewares/Third_Party/FatFs/src/ff.c **** static
 863:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 865:Middlewares/Third_Party/FatFs/src/ff.c **** )
 866:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/cc2OGbx6.s 			page 29


 727              		.loc 1 866 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL89:
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 868:Middlewares/Third_Party/FatFs/src/ff.c **** 
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 733              		.loc 1 869 0
 734 0000 0023     		movs	r3, #0
 735 0002 03E0     		b	.L73
 736              	.LVL90:
 737              	.L80:
 738              	.LCFI8:
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 4, -4
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 871:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 741              		.loc 1 872 0
 742 0004 5DF8044B 		ldr	r4, [sp], #4
 743              	.LCFI9:
 744              		.cfi_restore 4
 745              		.cfi_def_cfa_offset 0
 746 0008 7047     		bx	lr
 747              	.L79:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 748              		.loc 1 869 0
 749 000a 0133     		adds	r3, r3, #1
 750              	.LVL91:
 751              	.L73:
 752 000c 012B     		cmp	r3, #1
 753 000e 11D8     		bhi	.L78
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 754              		.loc 1 870 0
 755 0010 1A01     		lsls	r2, r3, #4
 756 0012 0949     		ldr	r1, .L81
 757 0014 8A58     		ldr	r2, [r1, r2]
 758 0016 8242     		cmp	r2, r0
 759 0018 F7D1     		bne	.L79
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 760              		.loc 1 866 0
 761 001a 10B4     		push	{r4}
 762              	.LCFI10:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 4, -4
 765              	.L74:
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 766              		.loc 1 870 0 discriminator 1
 767 001c 1A01     		lsls	r2, r3, #4
 768 001e 0024     		movs	r4, #0
 769 0020 8C50     		str	r4, [r1, r2]
 770              	.L70:
 869:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 771              		.loc 1 869 0 discriminator 2
 772 0022 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 30


 773              	.LVL92:
 774 0024 012B     		cmp	r3, #1
 775 0026 EDD8     		bhi	.L80
 870:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 776              		.loc 1 870 0
 777 0028 1A01     		lsls	r2, r3, #4
 778 002a 0349     		ldr	r1, .L81
 779 002c 8A58     		ldr	r2, [r1, r2]
 780 002e 8242     		cmp	r2, r0
 781 0030 F7D1     		bne	.L70
 782 0032 F3E7     		b	.L74
 783              	.L78:
 784              	.LCFI11:
 785              		.cfi_def_cfa_offset 0
 786              		.cfi_restore 4
 787 0034 7047     		bx	lr
 788              	.L82:
 789 0036 00BF     		.align	2
 790              	.L81:
 791 0038 00000000 		.word	.LANCHOR0
 792              		.cfi_endproc
 793              	.LFE153:
 795              		.section	.text.clust2sect,"ax",%progbits
 796              		.align	1
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu fpv5-d16
 802              	clust2sect:
 803              	.LFB157:
 873:Middlewares/Third_Party/FatFs/src/ff.c **** 
 874:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_LOCK != 0 */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 
 876:Middlewares/Third_Party/FatFs/src/ff.c **** 
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 
 878:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 879:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 881:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 882:Middlewares/Third_Party/FatFs/src/ff.c **** static
 883:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs			/* File system object */
 885:Middlewares/Third_Party/FatFs/src/ff.c **** )
 886:Middlewares/Third_Party/FatFs/src/ff.c **** {
 887:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 888:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** 
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
ARM GAS  /tmp/cc2OGbx6.s 			page 31


 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 907:Middlewares/Third_Party/FatFs/src/ff.c **** }
 908:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 
 911:Middlewares/Third_Party/FatFs/src/ff.c **** static
 912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERROR */
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
 915:Middlewares/Third_Party/FatFs/src/ff.c **** )
 916:Middlewares/Third_Party/FatFs/src/ff.c **** {
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 921:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 933:Middlewares/Third_Party/FatFs/src/ff.c **** }
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 939:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 942:Middlewares/Third_Party/FatFs/src/ff.c **** 
 943:Middlewares/Third_Party/FatFs/src/ff.c **** static
 944:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK:succeeded, !=0:error */
 945:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 946:Middlewares/Third_Party/FatFs/src/ff.c **** )
 947:Middlewares/Third_Party/FatFs/src/ff.c **** {
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 
 950:Middlewares/Third_Party/FatFs/src/ff.c **** 
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win, 0, SS(fs));
ARM GAS  /tmp/cc2OGbx6.s 			page 32


 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 972:Middlewares/Third_Party/FatFs/src/ff.c **** }
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 974:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 
 978:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 979:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 980:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 
 982:Middlewares/Third_Party/FatFs/src/ff.c **** static
 983:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 986:Middlewares/Third_Party/FatFs/src/ff.c **** )
 987:Middlewares/Third_Party/FatFs/src/ff.c **** {
 804              		.loc 1 987 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL93:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 810              		.loc 1 988 0
 811 0000 0239     		subs	r1, r1, #2
 812              	.LVL94:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 813              		.loc 1 989 0
 814 0002 4369     		ldr	r3, [r0, #20]
 815 0004 023B     		subs	r3, r3, #2
 816 0006 8B42     		cmp	r3, r1
 817 0008 04D9     		bls	.L85
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 818              		.loc 1 990 0
 819 000a 4389     		ldrh	r3, [r0, #10]
 820 000c 806A     		ldr	r0, [r0, #40]
 821              	.LVL95:
 822 000e 01FB0300 		mla	r0, r1, r3, r0
 823 0012 7047     		bx	lr
 824              	.LVL96:
 825              	.L85:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
ARM GAS  /tmp/cc2OGbx6.s 			page 33


 826              		.loc 1 989 0
 827 0014 0020     		movs	r0, #0
 828              	.LVL97:
 991:Middlewares/Third_Party/FatFs/src/ff.c **** }
 829              		.loc 1 991 0
 830 0016 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE157:
 834              		.section	.text.clmt_clust,"ax",%progbits
 835              		.align	1
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv5-d16
 841              	clmt_clust:
 842              	.LFB162:
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 
 996:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 997:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 998:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 999:Middlewares/Third_Party/FatFs/src/ff.c **** 
1000:Middlewares/Third_Party/FatFs/src/ff.c **** static
1001:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Corresponding object */
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* Cluster number to get the value */
1004:Middlewares/Third_Party/FatFs/src/ff.c **** )
1005:Middlewares/Third_Party/FatFs/src/ff.c **** {
1006:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
1007:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1009:Middlewares/Third_Party/FatFs/src/ff.c **** 
1010:Middlewares/Third_Party/FatFs/src/ff.c **** 
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** 
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
ARM GAS  /tmp/cc2OGbx6.s 			page 34


1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1037:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->objsize) {
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 2) {	/* Is there no valid chain on the FAT? */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cofs <= clen) {
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* Generate the value */
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 						break;
1046:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = clst + 1; 	/* Generate the value */
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1052:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1053:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1058:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1059:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
1060:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1061:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1062:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* go to default */
1063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** }
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 
1075:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1076:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1077:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 
1080:Middlewares/Third_Party/FatFs/src/ff.c **** static
1081:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Corresponding file system object */
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val		/* New value to be set to the entry */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** )
1086:Middlewares/Third_Party/FatFs/src/ff.c **** {
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INT_ERR;
ARM GAS  /tmp/cc2OGbx6.s 			page 35


1090:Middlewares/Third_Party/FatFs/src/ff.c **** 
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :	/* WORD aligned items */
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1113:Middlewares/Third_Party/FatFs/src/ff.c **** 
1114:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :	/* DWORD aligned items */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_EXFAT :
1117:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1120:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1128:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1129:Middlewares/Third_Party/FatFs/src/ff.c **** }
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 
1131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 
1136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
1137:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1138:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1139:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 
1141:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1142:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find a contiguous free cluster block */
1143:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------*/
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** static
1146:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
ARM GAS  /tmp/cc2OGbx6.s 			page 36


1147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1149:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** )
1151:Middlewares/Third_Party/FatFs/src/ff.c **** {
1152:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm, bv;
1153:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val, scl, ctr;
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 
1156:Middlewares/Third_Party/FatFs/src/ff.c **** 
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	scl = val = clst; ctr = 0;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!bv) {	/* Is it a free cluster? */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm);
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1179:Middlewares/Third_Party/FatFs/src/ff.c **** }
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 
1182:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set/Clear a block of allocation bitmap */
1184:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------*/
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 
1186:Middlewares/Third_Party/FatFs/src/ff.c **** static
1187:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT change_bitmap (
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1192:Middlewares/Third_Party/FatFs/src/ff.c **** )
1193:Middlewares/Third_Party/FatFs/src/ff.c **** {
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE bm;
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1196:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect;
1197:Middlewares/Third_Party/FatFs/src/ff.c **** 
1198:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1201:Middlewares/Third_Party/FatFs/src/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
ARM GAS  /tmp/cc2OGbx6.s 			page 37


1204:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1208:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1210:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 			bm = 1;
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1215:Middlewares/Third_Party/FatFs/src/ff.c **** }
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 
1218:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1219:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the first fragment of the FAT chain    */
1220:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 
1222:Middlewares/Third_Party/FatFs/src/ff.c **** static
1223:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_first_frag (
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj	/* Pointer to the corresponding object */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** )
1226:Middlewares/Third_Party/FatFs/src/ff.c **** {
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, n;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 
1230:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented'? */
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1238:Middlewares/Third_Party/FatFs/src/ff.c **** }
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 
1241:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1242:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill the last fragment of the FAT chain     */
1243:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------*/
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 
1245:Middlewares/Third_Party/FatFs/src/ff.c **** static
1246:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT fill_last_frag (
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,	/* Pointer to the corresponding object */
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD lcl,	/* Last cluster of the fragment */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD term	/* Value to set the last FAT entry */
1250:Middlewares/Third_Party/FatFs/src/ff.c **** )
1251:Middlewares/Third_Party/FatFs/src/ff.c **** {
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (obj->n_frag > 0) {	/* Create the last chain on the FAT */
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->n_frag--;
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/cc2OGbx6.s 			page 38


1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
1262:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT && !_FS_READONLY */
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1269:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1270:Middlewares/Third_Party/FatFs/src/ff.c **** static
1271:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1272:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:an entire chain) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1280:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst;
1282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1283:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD rt[2];
1285:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (pclst && (!_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Remove the chain */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
1304:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1309:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** 			ecl = nxt;
1312:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* End of contiguous cluster block */
1313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) return res;
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/cc2OGbx6.s 			page 39


1318:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1319:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1320:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[0] = clust2sect(fs, scl);					/* Start sector */
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 			rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Inform device the block can be erased */
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1324:Middlewares/Third_Party/FatFs/src/ff.c **** 			scl = ecl = nxt;
1325:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = nxt;					/* Next cluster */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1329:Middlewares/Third_Party/FatFs/src/ff.c **** 
1330:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1332:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pclst == 0) {	/* Does the object have no chain? */
1333:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 0;		/* Change the object status 'initial' */
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Did the c
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 2;	/* Change the object status 'contiguous' */
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1340:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1342:Middlewares/Third_Party/FatFs/src/ff.c **** }
1343:Middlewares/Third_Party/FatFs/src/ff.c **** 
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** 
1347:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1348:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1350:Middlewares/Third_Party/FatFs/src/ff.c **** static
1351:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,			/* Corresponding object */
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1354:Middlewares/Third_Party/FatFs/src/ff.c **** )
1355:Middlewares/Third_Party/FatFs/src/ff.c **** {
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Stretch current chain */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 
1373:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
ARM GAS  /tmp/cc2OGbx6.s 			page 40


1375:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1377:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_INT_ERR) return 1;
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1382:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {									/* It is a stretched chain */
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* New fragment */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
1398:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = scl;	/* Start cluster */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl++;							/* Next cluster */
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
1406:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			cs = get_fat(obj, ncl);			/* Get the cluster status */
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
1411:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1416:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1417:Middlewares/Third_Party/FatFs/src/ff.c **** 
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1427:Middlewares/Third_Party/FatFs/src/ff.c **** }
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 
1429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 41


1432:Middlewares/Third_Party/FatFs/src/ff.c **** 
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 
1434:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1435:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1436:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1437:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1438:Middlewares/Third_Party/FatFs/src/ff.c **** 
1439:Middlewares/Third_Party/FatFs/src/ff.c **** static
1440:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1443:Middlewares/Third_Party/FatFs/src/ff.c **** )
1444:Middlewares/Third_Party/FatFs/src/ff.c **** {
 843              		.loc 1 1444 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848              	.LVL98:
1445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = fp->obj.fs;
 849              		.loc 1 1446 0
 850 0000 0268     		ldr	r2, [r0]
 851              	.LVL99:
1447:Middlewares/Third_Party/FatFs/src/ff.c **** 
1448:Middlewares/Third_Party/FatFs/src/ff.c **** 
1449:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 852              		.loc 1 1449 0
 853 0002 C36A     		ldr	r3, [r0, #44]
 854 0004 0433     		adds	r3, r3, #4
 855              	.LVL100:
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
 856              		.loc 1 1450 0
 857 0006 490A     		lsrs	r1, r1, #9
 858              	.LVL101:
 859 0008 5289     		ldrh	r2, [r2, #10]
 860              	.LVL102:
 861 000a B1FBF2F1 		udiv	r1, r1, r2
 862              	.LVL103:
 863              	.L89:
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 864              		.loc 1 1452 0
 865 000e 1868     		ldr	r0, [r3]
 866              	.LVL104:
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 867              		.loc 1 1453 0
 868 0010 30B1     		cbz	r0, .L86
1454:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 869              		.loc 1 1454 0
 870 0012 8142     		cmp	r1, r0
 871 0014 02D3     		bcc	.L88
1455:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 872              		.loc 1 1455 0
 873 0016 091A     		subs	r1, r1, r0
 874              	.LVL105:
 875 0018 0833     		adds	r3, r3, #8
ARM GAS  /tmp/cc2OGbx6.s 			page 42


 876              	.LVL106:
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
 877              		.loc 1 1452 0
 878 001a F8E7     		b	.L89
 879              	.LVL107:
 880              	.L88:
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 881              		.loc 1 1457 0
 882 001c 5868     		ldr	r0, [r3, #4]
 883              	.LVL108:
 884 001e 0844     		add	r0, r0, r1
 885              	.L86:
1458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 886              		.loc 1 1458 0
 887 0020 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE162:
 891              		.section	.text.ld_clust,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv5-d16
 898              	ld_clust:
 899              	.LFB166:
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 
1460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 
1465:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1466:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 
1469:Middlewares/Third_Party/FatFs/src/ff.c **** static
1470:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* Offset of directory table */
1473:Middlewares/Third_Party/FatFs/src/ff.c **** )
1474:Middlewares/Third_Party/FatFs/src/ff.c **** {
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE)
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
ARM GAS  /tmp/cc2OGbx6.s 			page 43


1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory in FAT32+) */
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = clust2sect(fs, clst);
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1507:Middlewares/Third_Party/FatFs/src/ff.c **** 
1508:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1509:Middlewares/Third_Party/FatFs/src/ff.c **** }
1510:Middlewares/Third_Party/FatFs/src/ff.c **** 
1511:Middlewares/Third_Party/FatFs/src/ff.c **** 
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 
1514:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1515:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1516:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1517:Middlewares/Third_Party/FatFs/src/ff.c **** 
1518:Middlewares/Third_Party/FatFs/src/ff.c **** static
1519:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1522:Middlewares/Third_Party/FatFs/src/ff.c **** )
1523:Middlewares/Third_Party/FatFs/src/ff.c **** {
1524:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
1525:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1526:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1527:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1541:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
ARM GAS  /tmp/cc2OGbx6.s 			page 44


1547:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1550:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_EXFAT) dp->obj.stat |= 4;			/* The directory needs to be updated */
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect -= n;							/* Restore window offset */
1564:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
1571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1578:Middlewares/Third_Party/FatFs/src/ff.c **** }
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** 
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 
1598:Middlewares/Third_Party/FatFs/src/ff.c **** 
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
ARM GAS  /tmp/cc2OGbx6.s 			page 45


1604:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1605:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1608:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** }
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 
1622:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 
1626:Middlewares/Third_Party/FatFs/src/ff.c **** 
1627:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1628:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1629:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 
1631:Middlewares/Third_Party/FatFs/src/ff.c **** static
1632:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1635:Middlewares/Third_Party/FatFs/src/ff.c **** )
1636:Middlewares/Third_Party/FatFs/src/ff.c **** {
 900              		.loc 1 1636 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              	.LVL109:
 905 0000 70B5     		push	{r4, r5, r6, lr}
 906              	.LCFI12:
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 4, -16
 909              		.cfi_offset 5, -12
 910              		.cfi_offset 6, -8
 911              		.cfi_offset 14, -4
 912 0002 0646     		mov	r6, r0
 913 0004 0D46     		mov	r5, r1
1637:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1638:Middlewares/Third_Party/FatFs/src/ff.c **** 
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 914              		.loc 1 1639 0
 915 0006 01F11A00 		add	r0, r1, #26
 916              	.LVL110:
 917 000a FFF7FEFF 		bl	ld_word
 918              	.LVL111:
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 919              		.loc 1 1640 0
ARM GAS  /tmp/cc2OGbx6.s 			page 46


 920 000e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 921 0010 032B     		cmp	r3, #3
 922 0012 00D0     		beq	.L93
 923              	.LVL112:
 924              	.L90:
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1643:Middlewares/Third_Party/FatFs/src/ff.c **** 
1644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 925              		.loc 1 1645 0
 926 0014 70BD     		pop	{r4, r5, r6, pc}
 927              	.LVL113:
 928              	.L93:
 929 0016 0446     		mov	r4, r0
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 930              		.loc 1 1641 0
 931 0018 05F11400 		add	r0, r5, #20
 932              	.LVL114:
 933 001c FFF7FEFF 		bl	ld_word
 934              	.LVL115:
 935 0020 44EA0040 		orr	r0, r4, r0, lsl #16
 936              	.LVL116:
1644:Middlewares/Third_Party/FatFs/src/ff.c **** }
 937              		.loc 1 1644 0
 938 0024 F6E7     		b	.L90
 939              		.cfi_endproc
 940              	.LFE166:
 942              		.section	.text.st_clust,"ax",%progbits
 943              		.align	1
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv5-d16
 949              	st_clust:
 950              	.LFB167:
1646:Middlewares/Third_Party/FatFs/src/ff.c **** 
1647:Middlewares/Third_Party/FatFs/src/ff.c **** 
1648:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1649:Middlewares/Third_Party/FatFs/src/ff.c **** static
1650:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1653:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** )
1655:Middlewares/Third_Party/FatFs/src/ff.c **** {
 951              		.loc 1 1655 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL117:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              	.LCFI13:
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 4, -16
 960              		.cfi_offset 5, -12
 961              		.cfi_offset 6, -8
ARM GAS  /tmp/cc2OGbx6.s 			page 47


 962              		.cfi_offset 14, -4
 963 0002 0646     		mov	r6, r0
 964 0004 0C46     		mov	r4, r1
 965 0006 1546     		mov	r5, r2
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 966              		.loc 1 1656 0
 967 0008 91B2     		uxth	r1, r2
 968              	.LVL118:
 969 000a 04F11A00 		add	r0, r4, #26
 970              	.LVL119:
 971 000e FFF7FEFF 		bl	st_word
 972              	.LVL120:
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 973              		.loc 1 1657 0
 974 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 975 0014 032B     		cmp	r3, #3
 976 0016 00D0     		beq	.L97
 977              	.L94:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1660:Middlewares/Third_Party/FatFs/src/ff.c **** }
 978              		.loc 1 1660 0
 979 0018 70BD     		pop	{r4, r5, r6, pc}
 980              	.LVL121:
 981              	.L97:
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 982              		.loc 1 1658 0
 983 001a 290C     		lsrs	r1, r5, #16
 984 001c 04F11400 		add	r0, r4, #20
 985 0020 FFF7FEFF 		bl	st_word
 986              	.LVL122:
 987              		.loc 1 1660 0
 988 0024 F8E7     		b	.L94
 989              		.cfi_endproc
 990              	.LFE167:
 992              		.section	.text.get_fileinfo,"ax",%progbits
 993              		.align	1
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv5-d16
 999              	get_fileinfo:
 1000              	.LFB172:
1661:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1666:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1667:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: LFN handling                                                  */
1668:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------------------*/
1669:Middlewares/Third_Party/FatFs/src/ff.c **** static
1670:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 
1673:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1674:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
ARM GAS  /tmp/cc2OGbx6.s 			page 48


1675:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------*/
1676:Middlewares/Third_Party/FatFs/src/ff.c **** static
1677:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1680:Middlewares/Third_Party/FatFs/src/ff.c **** )
1681:Middlewares/Third_Party/FatFs/src/ff.c **** {
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;					/* Not matched */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = uc;
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1698:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1700:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN matched */
1705:Middlewares/Third_Party/FatFs/src/ff.c **** }
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 
1707:Middlewares/Third_Party/FatFs/src/ff.c **** 
1708:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
1709:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1710:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1711:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------*/
1712:Middlewares/Third_Party/FatFs/src/ff.c **** static
1713:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1715:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1716:Middlewares/Third_Party/FatFs/src/ff.c **** )
1717:Middlewares/Third_Party/FatFs/src/ff.c **** {
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** 
1722:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** 
1724:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1725:Middlewares/Third_Party/FatFs/src/ff.c **** 
1726:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1731:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  /tmp/cc2OGbx6.s 			page 49


1732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;		/* The part of LFN is valid */
1742:Middlewares/Third_Party/FatFs/src/ff.c **** }
1743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 
1746:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1747:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1748:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1749:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------*/
1750:Middlewares/Third_Party/FatFs/src/ff.c **** static
1751:Middlewares/Third_Party/FatFs/src/ff.c **** void put_lfn (
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1756:Middlewares/Third_Party/FatFs/src/ff.c **** )
1757:Middlewares/Third_Party/FatFs/src/ff.c **** {
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1759:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 
1762:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1763:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1768:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1769:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1771:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1772:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1773:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** }
1777:Middlewares/Third_Party/FatFs/src/ff.c **** 
1778:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
1779:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 
1781:Middlewares/Third_Party/FatFs/src/ff.c **** 
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && !_FS_READONLY
1784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1785:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1786:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 
1788:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/cc2OGbx6.s 			page 50


1789:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1794:Middlewares/Third_Party/FatFs/src/ff.c **** )
1795:Middlewares/Third_Party/FatFs/src/ff.c **** {
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1797:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 
1802:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1803:Middlewares/Third_Party/FatFs/src/ff.c **** 
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1813:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1819:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)((seq % 16) + '0');
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1824:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1831:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1832:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1833:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1837:Middlewares/Third_Party/FatFs/src/ff.c **** }
1838:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 && !_FS_READONLY */
1839:Middlewares/Third_Party/FatFs/src/ff.c **** 
1840:Middlewares/Third_Party/FatFs/src/ff.c **** 
1841:Middlewares/Third_Party/FatFs/src/ff.c **** 
1842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
1843:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1844:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/cc2OGbx6.s 			page 51


1846:Middlewares/Third_Party/FatFs/src/ff.c **** 
1847:Middlewares/Third_Party/FatFs/src/ff.c **** static
1848:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1849:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1850:Middlewares/Third_Party/FatFs/src/ff.c **** )
1851:Middlewares/Third_Party/FatFs/src/ff.c **** {
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** 
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1856:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
1857:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--n);
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1859:Middlewares/Third_Party/FatFs/src/ff.c **** }
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 
1861:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_LFN != 0 */
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** 
1865:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
1866:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1867:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Checksum                                                       */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 
1870:Middlewares/Third_Party/FatFs/src/ff.c **** static
1871:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly block */
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
1873:Middlewares/Third_Party/FatFs/src/ff.c **** )
1874:Middlewares/Third_Party/FatFs/src/ff.c **** {
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, szblk;
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum;
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 			i++;
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1888:Middlewares/Third_Party/FatFs/src/ff.c **** }
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 
1892:Middlewares/Third_Party/FatFs/src/ff.c **** static
1893:Middlewares/Third_Party/FatFs/src/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* name	/* File name to be calculated */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** )
1896:Middlewares/Third_Party/FatFs/src/ff.c **** {
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD sum = 0;
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	while ((chr = *name++) != 0) {
1902:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = ff_wtoupper(chr);		/* File name needs to be ignored case */
ARM GAS  /tmp/cc2OGbx6.s 			page 52


1903:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1907:Middlewares/Third_Party/FatFs/src/ff.c **** }
1908:Middlewares/Third_Party/FatFs/src/ff.c **** 
1909:Middlewares/Third_Party/FatFs/src/ff.c **** 
1910:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _USE_MKFS
1911:Middlewares/Third_Party/FatFs/src/ff.c **** static
1912:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD xsum32 (
1913:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE  dat,	/* Data to be sumed */
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sum	/* Previous value */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** )
1916:Middlewares/Third_Party/FatFs/src/ff.c **** {
1917:Middlewares/Third_Party/FatFs/src/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
1918:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1919:Middlewares/Third_Party/FatFs/src/ff.c **** }
1920:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 
1923:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1924:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1925:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get object information from a directory block */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------*/
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 
1928:Middlewares/Third_Party/FatFs/src/ff.c **** static
1929:Middlewares/Third_Party/FatFs/src/ff.c **** void get_xdir_info (
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** )
1933:Middlewares/Third_Party/FatFs/src/ff.c **** {
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT di, si;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nc;
1938:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get file name */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** 	di = 0;
1942:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2; di < dirb[XDIR_NumName]; si += 2, di++) {
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ld_word(dirb + si);					/* Get a character */
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) { di = 0; break; }	/* Buffer overflow --> inaccessible object name */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di] = w;						/* Store it */
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = SZDIRE * 2, nc = 0; nc < dirb[XDIR_NumName]; si += 2, nc++) {
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(ld_word(dirb + si), 0);	/* Get a character and Unicode -> OEM */
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {				/* Is it a double byte char? (always false at SBCS cfg) */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[di++] = (char)(w >> 8);	/* Put 1st byte of the DBC */
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == 0 || di >= _MAX_LFN) { di = 0; break; }	/* Invalid char or buffer overflow --> inaccessi
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[di++] = (char)w;
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1959:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 53


1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
1961:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[di] = 0;						/* Terminate file name */
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[0] = 0;							/* No SFN */
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];					/* Attribute */
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** }
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 
1970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 
1973:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1974:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Get a directry entry block */
1975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------*/
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** static
1978:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the reading direcotry object pointing the 85 entry */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** )
1981:Middlewares/Third_Party/FatFs/src/ff.c **** {
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, sz_ent;
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load 85 entry */
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + 0, dp->dir, SZDIRE);
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C0 entry */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_next(dp, 0);
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
1999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;
2001:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dirb + SZDIRE, dp->dir, SZDIRE);
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Load C1 entries */
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SZDIRE * 2;	/* C1 offset */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < MAXDIRB(_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Sanity check (do it when accessible object name) */
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i <= MAXDIRB(_MAX_LFN)) {
ARM GAS  /tmp/cc2OGbx6.s 			page 54


2017:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2020:Middlewares/Third_Party/FatFs/src/ff.c **** }
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 
2023:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY || _FS_RPATH != 0
2024:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2025:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Load the object's directory entry block */
2026:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------*/
2027:Middlewares/Third_Party/FatFs/src/ff.c **** static
2028:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT load_obj_dir (
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 	const _FDID* obj	/* Object with its containing directory information */
2031:Middlewares/Third_Party/FatFs/src/ff.c **** )
2032:Middlewares/Third_Party/FatFs/src/ff.c **** {
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Open object containing directory */
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.fs = obj->fs;
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.sclust = obj->c_scl;
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2041:Middlewares/Third_Party/FatFs/src/ff.c **** 
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2047:Middlewares/Third_Party/FatFs/src/ff.c **** }
2048:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2052:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2053:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Store the directory block to the media */
2054:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------*/
2055:Middlewares/Third_Party/FatFs/src/ff.c **** static
2056:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT store_xdir (
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2058:Middlewares/Third_Party/FatFs/src/ff.c **** )
2059:Middlewares/Third_Party/FatFs/src/ff.c **** {
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2063:Middlewares/Third_Party/FatFs/src/ff.c **** 
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create set sum */
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Store the set of directory to the volume */
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (res == FR_OK) {
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
ARM GAS  /tmp/cc2OGbx6.s 			page 55


2074:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.fs->wflag = 1;
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (--nent == 0) break;
2076:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb += SZDIRE;
2077:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2079:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2080:Middlewares/Third_Party/FatFs/src/ff.c **** }
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 
2084:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2085:Middlewares/Third_Party/FatFs/src/ff.c **** /* exFAT: Create a new directory enrty block */
2086:Middlewares/Third_Party/FatFs/src/ff.c **** /*-------------------------------------------*/
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 
2088:Middlewares/Third_Party/FatFs/src/ff.c **** static
2089:Middlewares/Third_Party/FatFs/src/ff.c **** void create_xdir (
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn	/* Pointer to the nul terminated file name */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** )
2093:Middlewares/Third_Party/FatFs/src/ff.c **** {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE nb, nc;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create 85+C0 entry */
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type] = 0x85;
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_Type + SZDIRE] = 0xC0;
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create C1 entries */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	nc = 0; nb = 1; chr = 1; i = SZDIRE * 2;
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill name field */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chr && (chr = lfn[nc]) != 0) nc++;	/* Get a character if exist */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirb + i, chr); 		/* Store it */
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while ((i += 2) % SZDIRE != 0);
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb++;
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (lfn[nc]);	/* Fill next entry if any char follows */
2114:Middlewares/Third_Party/FatFs/src/ff.c **** 
2115:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumName] = nc;	/* Set name length */
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 	dirb[XDIR_NumSec] = nb;		/* Set block length */
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2118:Middlewares/Third_Party/FatFs/src/ff.c **** }
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
2121:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** 
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** 
2125:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 || _USE_LABEL || _FS_EXFAT
2126:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2127:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 
2130:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/cc2OGbx6.s 			page 56


2131:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2134:Middlewares/Third_Party/FatFs/src/ff.c **** )
2135:Middlewares/Third_Party/FatFs/src/ff.c **** {
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
2139:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2141:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2150:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_USE_LABEL && vol) {
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else
2165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 		{	/* On the FAT12/16/32 volume */
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check LFN validity and capture it */
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* An SFN entry is found */
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2182:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2183:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2184:Middlewares/Third_Party/FatFs/src/ff.c **** 					break;
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2186:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2187:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
ARM GAS  /tmp/cc2OGbx6.s 			page 57


2188:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2189:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2191:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** }
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 
2205:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2206:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
2207:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 
2209:Middlewares/Third_Party/FatFs/src/ff.c **** static
2210:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2212:Middlewares/Third_Party/FatFs/src/ff.c **** )
2213:Middlewares/Third_Party/FatFs/src/ff.c **** {
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
2217:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
2219:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
2223:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE nc;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT di, ni;
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2228:Middlewares/Third_Party/FatFs/src/ff.c **** 
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((res = dir_read(dp, 0)) == FR_OK) {	/* Read an item */
2230:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 255
2231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > _MAX_LFN) continue;			/* Skip comparison if inaccessible object n
2232:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2233:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2235:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2238:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return res;
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2242:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2243:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2244:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
ARM GAS  /tmp/cc2OGbx6.s 			page 58


2245:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2247:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
2251:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2252:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2266:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2271:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2272:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2273:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2275:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2276:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 
2280:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2281:Middlewares/Third_Party/FatFs/src/ff.c **** }
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 
2286:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2287:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2288:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
2289:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** static
2292:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2294:Middlewares/Third_Party/FatFs/src/ff.c **** )
2295:Middlewares/Third_Party/FatFs/src/ff.c **** {
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2298:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nlen, nent;
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], sum;
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 59


2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 
2306:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.sclust != 0 && (dp->obj.stat & 4)) {	/* Has the sub-directory been stretched? */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.objsize += (DWORD)fs->csize * SS(fs);	/* Increase the directory size by cluster size */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_first_frag(&dp->obj);				/* Fill first fragment on the FAT if needed */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if neede
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = load_obj_dir(&dj, &dp->obj);				/* Load the object status */
2322:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);		/* Update the allocation status */
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2325:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = store_xdir(&dj);							/* Store the object status */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* On the FAT12/16/32 volume */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create an SFN with/without LFNs. */
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dp->sect);
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
ARM GAS  /tmp/cc2OGbx6.s 			page 60


2359:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
2365:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
2368:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set SFN entry */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2378:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2384:Middlewares/Third_Party/FatFs/src/ff.c **** }
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 
2386:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 
2390:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE == 0
2391:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2392:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 
2395:Middlewares/Third_Party/FatFs/src/ff.c **** static
2396:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2398:Middlewares/Third_Party/FatFs/src/ff.c **** )
2399:Middlewares/Third_Party/FatFs/src/ff.c **** {
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2402:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD last = dp->dptr;
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 
2405:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, dp->sect);
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Mark an entry 'deleted' */
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* On the FAT12/16/32 volume */
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->dir[DIR_Name] = DDEM;
2415:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/cc2OGbx6.s 			page 61


2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
2417:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2418:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
2423:Middlewares/Third_Party/FatFs/src/ff.c **** 
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = move_window(fs, dp->sect);
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** 
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2432:Middlewares/Third_Party/FatFs/src/ff.c **** }
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY && _FS_MINIMIZE == 0 */
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
2439:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2442:Middlewares/Third_Party/FatFs/src/ff.c **** 
2443:Middlewares/Third_Party/FatFs/src/ff.c **** static
2444:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
2445:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1001              		.loc 1 2448 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL123:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c;
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, lfv;
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
2455:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 
2458:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[0] = 0;		/* Invaidate file info */
 1006              		.loc 1 2458 0
 1007 0000 0023     		movs	r3, #0
 1008 0002 4B72     		strb	r3, [r1, #9]
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 1009              		.loc 1 2459 0
 1010 0004 C369     		ldr	r3, [r0, #28]
 1011 0006 73B3     		cbz	r3, .L107
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
 1012              		.loc 1 2448 0
ARM GAS  /tmp/cc2OGbx6.s 			page 62


 1013 0008 70B5     		push	{r4, r5, r6, lr}
 1014              	.LCFI14:
 1015              		.cfi_def_cfa_offset 16
 1016              		.cfi_offset 4, -16
 1017              		.cfi_offset 5, -12
 1018              		.cfi_offset 6, -8
 1019              		.cfi_offset 14, -4
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2462:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2463:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_xdir_info(fs->dirbuf, fno);
2465:Middlewares/Third_Party/FatFs/src/ff.c **** 		return;
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2467:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = j = 0;
2471:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
2472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2473:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
2475:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100) {	/* Put 1st byte if it is a DBC (always false at SBCS cfg) */
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 					fno->fname[i++] = (char)(w >> 8);
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2478:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
2480:Middlewares/Third_Party/FatFs/src/ff.c **** 				fno->fname[i++] = (TCHAR)w;
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[i] = 0;	/* Terminate the LFN */
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfv = fno->fname[i];	/* LFN is exist if non-zero */
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2492:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) {						/* Insert a . if extension is exist */
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!lfv) fno->fname[j] = '.';
2494:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->altname[j++] = '.';
2495:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2496:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
2497:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dp->dir[i])) {
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = c << 8 | dp->dir[i++];
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
2502:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2503:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->altname[j] = c;
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!lfv) {
2505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno->fname[j] = c;
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cc2OGbx6.s 			page 63


2510:Middlewares/Third_Party/FatFs/src/ff.c **** 		j++;
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!lfv) {
2513:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j] = 0;
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is ex
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->altname[j] = 0;	/* Terminate the SFN */
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2519:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = j = 0;
 1020              		.loc 1 2519 0
 1021 000a 0022     		movs	r2, #0
 1022 000c 1346     		mov	r3, r2
 1023 000e 05E0     		b	.L100
 1024              	.LVL124:
 1025              	.L102:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (TCHAR)dp->dir[i++];
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1026              		.loc 1 2524 0
 1027 0010 092C     		cmp	r4, #9
 1028 0012 0ED0     		beq	.L110
 1029              	.L103:
 1030              	.LVL125:
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1031              		.loc 1 2525 0
 1032 0014 8D18     		adds	r5, r1, r2
 1033 0016 6B72     		strb	r3, [r5, #9]
 1034 0018 0132     		adds	r2, r2, #1
 1035              	.LVL126:
 1036              	.L101:
 1037 001a 2346     		mov	r3, r4
 1038              	.LVL127:
 1039              	.L100:
2520:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (i < 11) {		/* Copy name body and extension */
 1040              		.loc 1 2520 0
 1041 001c 0A2B     		cmp	r3, #10
 1042 001e 0DD8     		bhi	.L111
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == ' ') continue;				/* Skip padding spaces */
 1043              		.loc 1 2521 0
 1044 0020 056A     		ldr	r5, [r0, #32]
 1045 0022 5C1C     		adds	r4, r3, #1
 1046              	.LVL128:
 1047 0024 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 1048              	.LVL129:
2522:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 1049              		.loc 1 2522 0
 1050 0026 202B     		cmp	r3, #32
 1051 0028 F7D0     		beq	.L101
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 9) fno->fname[j++] = '.';	/* Insert a . if extension is exist */
 1052              		.loc 1 2523 0
 1053 002a 052B     		cmp	r3, #5
 1054 002c F0D1     		bne	.L102
 1055 002e E523     		movs	r3, #229
 1056              	.LVL130:
ARM GAS  /tmp/cc2OGbx6.s 			page 64


 1057 0030 EEE7     		b	.L102
 1058              	.LVL131:
 1059              	.L110:
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fname[j++] = c;
 1060              		.loc 1 2524 0 discriminator 1
 1061 0032 8D18     		adds	r5, r1, r2
 1062 0034 2E26     		movs	r6, #46
 1063 0036 6E72     		strb	r6, [r5, #9]
 1064 0038 0132     		adds	r2, r2, #1
 1065              	.LVL132:
 1066 003a EBE7     		b	.L103
 1067              	.LVL133:
 1068              	.L111:
 1069 003c 0D46     		mov	r5, r1
 1070 003e 0446     		mov	r4, r0
2526:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2527:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fname[j] = 0;
 1071              		.loc 1 2527 0
 1072 0040 0A44     		add	r2, r2, r1
 1073              	.LVL134:
 1074 0042 0023     		movs	r3, #0
 1075              	.LVL135:
 1076 0044 5372     		strb	r3, [r2, #9]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 1077              		.loc 1 2530 0
 1078 0046 036A     		ldr	r3, [r0, #32]
 1079 0048 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1080 004a 0B72     		strb	r3, [r1, #8]
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 1081              		.loc 1 2531 0
 1082 004c 006A     		ldr	r0, [r0, #32]
 1083              	.LVL136:
 1084 004e 1C30     		adds	r0, r0, #28
 1085 0050 FFF7FEFF 		bl	ld_dword
 1086              	.LVL137:
 1087 0054 2860     		str	r0, [r5]
2532:Middlewares/Third_Party/FatFs/src/ff.c **** 	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 1088              		.loc 1 2532 0
 1089 0056 206A     		ldr	r0, [r4, #32]
 1090 0058 1630     		adds	r0, r0, #22
 1091 005a FFF7FEFF 		bl	ld_dword
 1092              	.LVL138:
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 1093              		.loc 1 2533 0
 1094 005e E880     		strh	r0, [r5, #6]	@ movhi
 1095 0060 000C     		lsrs	r0, r0, #16
 1096              	.LVL139:
 1097 0062 A880     		strh	r0, [r5, #4]	@ movhi
2534:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1098              		.loc 1 2534 0
 1099 0064 70BD     		pop	{r4, r5, r6, pc}
 1100              	.LVL140:
 1101              	.L107:
 1102              	.LCFI15:
 1103              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc2OGbx6.s 			page 65


 1104              		.cfi_restore 4
 1105              		.cfi_restore 5
 1106              		.cfi_restore 6
 1107              		.cfi_restore 14
 1108 0066 7047     		bx	lr
 1109              		.cfi_endproc
 1110              	.LFE172:
 1112              		.section	.text.create_name,"ax",%progbits
 1113              		.align	1
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu fpv5-d16
 1119              	create_name:
 1120              	.LFB173:
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
2541:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2542:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
2543:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2544:Middlewares/Third_Party/FatFs/src/ff.c **** 
2545:Middlewares/Third_Party/FatFs/src/ff.c **** static
2546:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
2547:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
2548:Middlewares/Third_Party/FatFs/src/ff.c **** )
2549:Middlewares/Third_Party/FatFs/src/ff.c **** {
2550:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** 
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2556:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2557:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr)) {		/* Get DBC 2nd byte if needed */
2559:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
2563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2566:Middlewares/Third_Party/FatFs/src/ff.c **** }
2567:Middlewares/Third_Party/FatFs/src/ff.c **** 
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 
2569:Middlewares/Third_Party/FatFs/src/ff.c **** static
2570:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** )
2576:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/cc2OGbx6.s 			page 66


2577:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
2607:Middlewares/Third_Party/FatFs/src/ff.c **** }
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 
2609:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 
2613:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a top segment and create the object name in directory form       */
2615:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 
2617:Middlewares/Third_Party/FatFs/src/ff.c **** static
2618:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2620:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** )
2622:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1121              		.loc 1 2622 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125              	.LVL141:
 1126 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1127              	.LCFI16:
 1128              		.cfi_def_cfa_offset 40
 1129              		.cfi_offset 3, -40
 1130              		.cfi_offset 4, -36
 1131              		.cfi_offset 5, -32
ARM GAS  /tmp/cc2OGbx6.s 			page 67


 1132              		.cfi_offset 6, -28
 1133              		.cfi_offset 7, -24
 1134              		.cfi_offset 8, -20
 1135              		.cfi_offset 9, -16
 1136              		.cfi_offset 10, -12
 1137              		.cfi_offset 11, -8
 1138              		.cfi_offset 14, -4
 1139 0004 8246     		mov	r10, r0
 1140 0006 8B46     		mov	fp, r1
2623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
2630:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ') break;				/* Break if end of the path name */
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == '/' || w == '\\') {	/* Break if a separator is found */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
2640:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b)) return FR_INVALID_NAME;	/* Reject invalid sequence */
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
2648:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2649:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2654:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2655:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2656:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
2658:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)		/* Create dot name for SFN entry */
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2663:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2664:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
ARM GAS  /tmp/cc2OGbx6.s 			page 68


2671:Middlewares/Third_Party/FatFs/src/ff.c **** 
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = b = 0; ni = 8;
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2690:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
2697:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* Is this DBC? (always false at SBCS cfg) */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2717:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2718:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2724:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
ARM GAS  /tmp/cc2OGbx6.s 			page 69


2728:Middlewares/Third_Party/FatFs/src/ff.c **** 
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2730:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are com
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2734:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** 
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 
2741:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* _USE_LFN != 0 : Non-LFN configuration */
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, d, *sfn;
2743:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2745:Middlewares/Third_Party/FatFs/src/ff.c **** 
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = *path; sfn = dp->fn;
 1141              		.loc 1 2747 0
 1142 0008 D1F80080 		ldr	r8, [r1]
 1143              	.LVL142:
 1144 000c 00F12409 		add	r9, r0, #36
 1145              	.LVL143:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 1146              		.loc 1 2748 0
 1147 0010 0B22     		movs	r2, #11
 1148 0012 2021     		movs	r1, #32
 1149              	.LVL144:
 1150 0014 4846     		mov	r0, r9
 1151              	.LVL145:
 1152 0016 FFF7FEFF 		bl	mem_set
 1153              	.LVL146:
2749:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = 0; ni = 8;
 1154              		.loc 1 2749 0
 1155 001a 0025     		movs	r5, #0
 1156 001c 2B46     		mov	r3, r5
 1157 001e 0827     		movs	r7, #8
 1158 0020 29E0     		b	.L113
 1159              	.LVL147:
 1160              	.L117:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2754:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2755:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2757:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2759:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
ARM GAS  /tmp/cc2OGbx6.s 			page 70


2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1161              		.loc 1 2767 0 discriminator 2
 1162 0022 0136     		adds	r6, r6, #1
 1163              	.LVL148:
 1164              	.L115:
 1165              		.loc 1 2767 0 is_stmt 0 discriminator 1
 1166 0024 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 1167 0028 5C2B     		cmp	r3, #92
 1168 002a 18BF     		it	ne
 1169 002c 2F2B     		cmpne	r3, #47
 1170 002e F8D0     		beq	.L117
 1171              	.L114:
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or over size? */
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2776:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2778:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2779:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII only cfg) */
2781:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2782:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false at SBCS cfg.) */
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2793:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 1172              		.loc 1 2795 0 is_stmt 1
 1173 0030 4644     		add	r6, r6, r8
 1174              	.LVL149:
 1175 0032 CBF80060 		str	r6, [fp]
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 1176              		.loc 1 2796 0
 1177 0036 002D     		cmp	r5, #0
 1178 0038 45D0     		beq	.L127
2797:Middlewares/Third_Party/FatFs/src/ff.c **** 
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 1179              		.loc 1 2798 0
 1180 003a 9AF82430 		ldrb	r3, [r10, #36]	@ zero_extendqisi2
 1181 003e E52B     		cmp	r3, #229
 1182 0040 36D0     		beq	.L131
 1183              	.L123:
ARM GAS  /tmp/cc2OGbx6.s 			page 71


2799:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1184              		.loc 1 2799 0
 1185 0042 202C     		cmp	r4, #32
 1186 0044 38D8     		bhi	.L128
 1187 0046 0423     		movs	r3, #4
 1188              	.L124:
 1189              		.loc 1 2799 0 is_stmt 0 discriminator 4
 1190 0048 8AF82F30 		strb	r3, [r10, #47]
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 1191              		.loc 1 2801 0 is_stmt 1 discriminator 4
 1192 004c 0020     		movs	r0, #0
 1193 004e 36E0     		b	.L119
 1194              	.LVL150:
 1195              	.L118:
2775:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1196              		.loc 1 2775 0
 1197 0050 14F0800F 		tst	r4, #128
 1198 0054 28D1     		bne	.L132
 1199              	.L121:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1200              		.loc 1 2790 0
 1201 0056 2146     		mov	r1, r4
 1202 0058 1C48     		ldr	r0, .L133
 1203 005a FFF7FEFF 		bl	chk_chr
 1204              	.LVL151:
 1205 005e 80BB     		cbnz	r0, .L126
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1206              		.loc 1 2791 0
 1207 0060 A4F16103 		sub	r3, r4, #97
 1208 0064 DBB2     		uxtb	r3, r3
 1209 0066 192B     		cmp	r3, #25
 1210 0068 01D8     		bhi	.L122
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1211              		.loc 1 2791 0 is_stmt 0 discriminator 1
 1212 006a 203C     		subs	r4, r4, #32
 1213              	.LVL152:
 1214 006c E4B2     		uxtb	r4, r4
 1215              	.LVL153:
 1216              	.L122:
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1217              		.loc 1 2792 0 is_stmt 1
 1218 006e 09F80540 		strb	r4, [r9, r5]
 1219 0072 0135     		adds	r5, r5, #1
 1220              	.LVL154:
 1221              	.L120:
 1222 0074 3346     		mov	r3, r6
 1223              	.LVL155:
 1224              	.L113:
2764:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 1225              		.loc 1 2764 0
 1226 0076 5E1C     		adds	r6, r3, #1
 1227              	.LVL156:
 1228 0078 18F80340 		ldrb	r4, [r8, r3]	@ zero_extendqisi2
 1229              	.LVL157:
2765:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 1230              		.loc 1 2765 0
ARM GAS  /tmp/cc2OGbx6.s 			page 72


 1231 007c 202C     		cmp	r4, #32
 1232 007e D7D9     		bls	.L114
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 1233              		.loc 1 2766 0
 1234 0080 5C2C     		cmp	r4, #92
 1235 0082 18BF     		it	ne
 1236 0084 2F2C     		cmpne	r4, #47
 1237 0086 CDD0     		beq	.L115
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Over size or invalid dot */
 1238              		.loc 1 2770 0
 1239 0088 2E2C     		cmp	r4, #46
 1240 008a 18BF     		it	ne
 1241 008c AF42     		cmpne	r7, r5
 1242 008e DFD8     		bhi	.L118
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1243              		.loc 1 2771 0
 1244 0090 2E3C     		subs	r4, r4, #46
 1245              	.LVL158:
 1246 0092 18BF     		it	ne
 1247 0094 0124     		movne	r4, #1
 1248              	.LVL159:
 1249 0096 0B2F     		cmp	r7, #11
 1250 0098 14BF     		ite	ne
 1251 009a 2746     		movne	r7, r4
 1252 009c 44F00107 		orreq	r7, r4, #1
 1253              	.LVL160:
 1254 00a0 67B9     		cbnz	r7, .L125
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 1255              		.loc 1 2772 0
 1256 00a2 0825     		movs	r5, #8
 1257              	.LVL161:
 1258 00a4 0B27     		movs	r7, #11
 1259 00a6 E5E7     		b	.L120
 1260              	.LVL162:
 1261              	.L132:
2777:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1262              		.loc 1 2777 0
 1263 00a8 803C     		subs	r4, r4, #128
 1264              	.LVL163:
 1265 00aa 094B     		ldr	r3, .L133+4
 1266 00ac 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
 1267              	.LVL164:
 1268 00ae D2E7     		b	.L121
 1269              	.LVL165:
 1270              	.L131:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 1271              		.loc 1 2798 0 discriminator 1
 1272 00b0 0523     		movs	r3, #5
 1273 00b2 8AF82430 		strb	r3, [r10, #36]
 1274 00b6 C4E7     		b	.L123
 1275              	.L128:
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1276              		.loc 1 2799 0
 1277 00b8 0023     		movs	r3, #0
 1278 00ba C5E7     		b	.L124
 1279              	.LVL166:
 1280              	.L125:
ARM GAS  /tmp/cc2OGbx6.s 			page 73


2771:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;				/* Goto extension */
 1281              		.loc 1 2771 0
 1282 00bc 0620     		movs	r0, #6
 1283              	.LVL167:
 1284              	.L119:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LFN != 0 */
2803:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1285              		.loc 1 2803 0
 1286 00be BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1287              	.LVL168:
 1288              	.L126:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 1289              		.loc 1 2790 0
 1290 00c2 0620     		movs	r0, #6
 1291 00c4 FBE7     		b	.L119
 1292              	.LVL169:
 1293              	.L127:
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1294              		.loc 1 2796 0
 1295 00c6 0620     		movs	r0, #6
 1296 00c8 F9E7     		b	.L119
 1297              	.L134:
 1298 00ca 00BF     		.align	2
 1299              	.L133:
 1300 00cc 00000000 		.word	.LC0
 1301 00d0 00000000 		.word	.LANCHOR1
 1302              		.cfi_endproc
 1303              	.LFE173:
 1305              		.section	.text.get_ldnumber,"ax",%progbits
 1306              		.align	1
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv5-d16
 1312              	get_ldnumber:
 1313              	.LFB175:
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 
2806:Middlewares/Third_Party/FatFs/src/ff.c **** 
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 
2808:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2809:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2810:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 
2812:Middlewares/Third_Party/FatFs/src/ff.c **** static
2813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2815:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2816:Middlewares/Third_Party/FatFs/src/ff.c **** )
2817:Middlewares/Third_Party/FatFs/src/ff.c **** {
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns;
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj = &dp->obj;
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = obj->fs;
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
ARM GAS  /tmp/cc2OGbx6.s 			page 74


2825:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
2826:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = fs->cdir;				/* Start from current directory */
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
2828:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 	{										/* With heading separator */
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2833:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj->n_frag = 0;	/* Invalidate last fragment counter of the object */
2835:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
2836:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT && obj->sclust) {	/* Retrieve the sub-directory status if needed */
2837:Middlewares/Third_Party/FatFs/src/ff.c **** 		DIR dj;
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_scl = fs->cdc_scl;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_size = fs->cdc_size;
2841:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->c_ofs = fs->cdc_ofs;
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = load_obj_dir(&dj, obj);
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2846:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2847:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2848:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2862:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2877:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2878:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_scl = obj->sclust;
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
2881:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->c_ofs = dp->blk_ofs;
ARM GAS  /tmp/cc2OGbx6.s 			page 75


2882:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Open next directory */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
2886:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2894:Middlewares/Third_Party/FatFs/src/ff.c **** }
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 
2899:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2900:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2901:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 
2903:Middlewares/Third_Party/FatFs/src/ff.c **** static
2904:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** )
2907:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1314              		.loc 1 2907 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              		@ link register save eliminated.
 1319              	.LVL170:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2911:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const volid[] = {_VOLUME_STRS};
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2916:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1320              		.loc 1 2919 0
 1321 0000 0168     		ldr	r1, [r0]
 1322 0002 09B1     		cbz	r1, .L147
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1323              		.loc 1 2920 0
 1324 0004 0A46     		mov	r2, r1
 1325 0006 03E0     		b	.L136
 1326              	.L147:
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1327              		.loc 1 2910 0
 1328 0008 4FF0FF33 		mov	r3, #-1
 1329 000c 08E0     		b	.L144
 1330              	.LVL171:
ARM GAS  /tmp/cc2OGbx6.s 			page 76


 1331              	.L138:
 1332              		.loc 1 2920 0 discriminator 3
 1333 000e 0132     		adds	r2, r2, #1
 1334              	.LVL172:
 1335              	.L136:
 1336              		.loc 1 2920 0 is_stmt 0 discriminator 1
 1337 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1338 0012 3A2B     		cmp	r3, #58
 1339 0014 18BF     		it	ne
 1340 0016 202B     		cmpne	r3, #32
 1341 0018 F9D8     		bhi	.L138
2921:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1342              		.loc 1 2921 0 is_stmt 1
 1343 001a 3A2B     		cmp	r3, #58
 1344 001c 02D0     		beq	.L148
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0';
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2926:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2928:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2930:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = volid[i]; tp = *path;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2937:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2940:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2944:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2946:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2947:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2948:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0 && _VOLUMES >= 2
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1345              		.loc 1 2951 0
 1346 001e 0023     		movs	r3, #0
 1347              	.LVL173:
 1348              	.L144:
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2954:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2955:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1349              		.loc 1 2955 0
 1350 0020 1846     		mov	r0, r3
 1351              	.LVL174:
 1352 0022 7047     		bx	lr
ARM GAS  /tmp/cc2OGbx6.s 			page 77


 1353              	.LVL175:
 1354              	.L148:
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1355              		.loc 1 2907 0
 1356 0024 10B4     		push	{r4}
 1357              	.LCFI17:
 1358              		.cfi_def_cfa_offset 4
 1359              		.cfi_offset 4, -4
 1360              	.LVL176:
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1361              		.loc 1 2923 0
 1362 0026 4C1C     		adds	r4, r1, #1
 1363              	.LVL177:
 1364 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1365 002a 303B     		subs	r3, r3, #48
 1366              	.LVL178:
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1367              		.loc 1 2924 0
 1368 002c 092B     		cmp	r3, #9
 1369 002e 98BF     		it	ls
 1370 0030 A242     		cmpls	r2, r4
 1371 0032 06D1     		bne	.L141
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1372              		.loc 1 2925 0
 1373 0034 43B9     		cbnz	r3, .L142
 1374              	.LVL179:
2927:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1375              		.loc 1 2927 0
 1376 0036 0132     		adds	r2, r2, #1
 1377              	.LVL180:
 1378 0038 0260     		str	r2, [r0]
 1379              	.LVL181:
 1380              	.L135:
 1381              		.loc 1 2955 0
 1382 003a 1846     		mov	r0, r3
 1383              	.LVL182:
 1384 003c 5DF8044B 		ldr	r4, [sp], #4
 1385              	.LCFI18:
 1386              		.cfi_remember_state
 1387              		.cfi_restore 4
 1388              		.cfi_def_cfa_offset 0
 1389              	.LVL183:
 1390 0040 7047     		bx	lr
 1391              	.LVL184:
 1392              	.L141:
 1393              	.LCFI19:
 1394              		.cfi_restore_state
2910:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1395              		.loc 1 2910 0
 1396 0042 4FF0FF33 		mov	r3, #-1
 1397              	.LVL185:
 1398 0046 F8E7     		b	.L135
 1399              	.LVL186:
 1400              	.L142:
 1401 0048 4FF0FF33 		mov	r3, #-1
 1402              	.LVL187:
 1403 004c F5E7     		b	.L135
ARM GAS  /tmp/cc2OGbx6.s 			page 78


 1404              		.cfi_endproc
 1405              	.LFE175:
 1407              		.section	.text.putc_init,"ax",%progbits
 1408              		.align	1
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv5-d16
 1414              	putc_init:
 1415              	.LFB199:
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2961:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2962:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2963:Middlewares/Third_Party/FatFs/src/ff.c **** 
2964:Middlewares/Third_Party/FatFs/src/ff.c **** static
2965:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2967:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
2968:Middlewares/Third_Party/FatFs/src/ff.c **** )
2969:Middlewares/Third_Party/FatFs/src/ff.c **** {
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
2972:Middlewares/Third_Party/FatFs/src/ff.c **** 
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2979:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
2981:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 2;
2983:Middlewares/Third_Party/FatFs/src/ff.c **** }
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** 
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 
2988:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2989:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2990:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 
2992:Middlewares/Third_Party/FatFs/src/ff.c **** static
2993:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
2997:Middlewares/Third_Party/FatFs/src/ff.c **** )
2998:Middlewares/Third_Party/FatFs/src/ff.c **** {
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
ARM GAS  /tmp/cc2OGbx6.s 			page 79


3003:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
3019:Middlewares/Third_Party/FatFs/src/ff.c **** 
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
3023:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3043:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS					/* Get sector size (multiple sector size cfg only) */
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (SS(fs) > _MAX_SS || SS(fs) < _MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3056:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {							/* Find an FAT volume */
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
ARM GAS  /tmp/cc2OGbx6.s 			page 80


3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the file system object */
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 
3068:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1) {
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 		QWORD maxlba;
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3074:Middlewares/Third_Party/FatFs/src/ff.c **** 
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT revision (Mu
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 
3077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_NO_FILESYSTEM;
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3091:Middlewares/Third_Party/FatFs/src/ff.c **** 
3092:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3097:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;
3098:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3099:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3100:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3102:Middlewares/Third_Party/FatFs/src/ff.c **** 
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, clust2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3105:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
ARM GAS  /tmp/cc2OGbx6.s 			page 81


3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine the FAT sub type */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Boundaries and Limits */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3157:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3166:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get FSINFO if available */
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
3169:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
ARM GAS  /tmp/cc2OGbx6.s 			page 82


3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3181:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3182:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3184:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3187:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* (_FS_NOFSINFO & 3) != 3 */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* !_FS_READONLY */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3197:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3198:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3199:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
3200:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3201:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3202:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0			/* Clear file lock semaphores */
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3205:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3206:Middlewares/Third_Party/FatFs/src/ff.c **** }
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 
3211:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3212:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
3213:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 
3215:Middlewares/Third_Party/FatFs/src/ff.c **** static
3216:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
3219:Middlewares/Third_Party/FatFs/src/ff.c **** )
3220:Middlewares/Third_Party/FatFs/src/ff.c **** {
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
3225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3229:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3230:Middlewares/Third_Party/FatFs/src/ff.c **** 				unlock_fs(obj->fs, FR_OK);
ARM GAS  /tmp/cc2OGbx6.s 			page 83


3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_TIMEOUT;
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3235:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
3242:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3243:Middlewares/Third_Party/FatFs/src/ff.c **** }
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 
3247:Middlewares/Third_Party/FatFs/src/ff.c **** 
3248:Middlewares/Third_Party/FatFs/src/ff.c **** /*---------------------------------------------------------------------------
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions (FatFs API)
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
3252:Middlewares/Third_Party/FatFs/src/ff.c **** ----------------------------------------------------------------------------*/
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** 
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3264:Middlewares/Third_Party/FatFs/src/ff.c **** )
3265:Middlewares/Third_Party/FatFs/src/ff.c **** {
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
3278:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
3280:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3281:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3283:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
ARM GAS  /tmp/cc2OGbx6.s 			page 84


3288:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3291:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3299:Middlewares/Third_Party/FatFs/src/ff.c **** }
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 
3304:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3305:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
3306:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
3308:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3312:Middlewares/Third_Party/FatFs/src/ff.c **** )
3313:Middlewares/Third_Party/FatFs/src/ff.c **** {
3314:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3316:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3317:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3318:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs;
3320:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
3325:Middlewares/Third_Party/FatFs/src/ff.c **** 
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= _FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_A
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3332:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3342:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3344:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
ARM GAS  /tmp/cc2OGbx6.s 			page 85


3345:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
3348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3350:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3351:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
3352:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
3365:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get current allocation info */
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.fs = fs;
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.n_frag = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Initialize directory entry block */
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, dw);	/* Set created time */
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_CrtTime10] = 0;
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, dw);	/* Set modified time */
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_ModTime10] = 0;
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;				/* Reset attribute */
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, 0);		/* Reset file allocation info */
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_FileSize, 0);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_qword(fs->dirbuf + XDIR_ValidFileSize, 0);
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK && fp->obj.sclust) {		/* Remove the cluster chain if exist */
3385:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3386:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3387:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3388:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
3389:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3390:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean directory info */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, dw);	/* Set created time */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (cl) {							/* Remove the cluster chain if exist */
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
ARM GAS  /tmp/cc2OGbx6.s 			page 86


3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3408:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Following succeeded */
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* R/O violation */
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
3427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
3430:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3431:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3432:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* R/O configuration */
3433:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3437:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
3438:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
3439:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3440:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3442:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3445:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3454:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/cc2OGbx6.s 			page 87


3459:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
3468:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3469:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fp->buf, 0, _MAX_SS);	/* Clear sector buffer */
3471:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
3487:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_read(fs->drv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
3489:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3493:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3502:Middlewares/Third_Party/FatFs/src/ff.c **** }
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 
3507:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3508:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
3509:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 
3511:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,	/* Pointer to data buffer */
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,	/* Number of bytes to read */
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
ARM GAS  /tmp/cc2OGbx6.s 			page 88


3516:Middlewares/Third_Party/FatFs/src/ff.c **** )
3517:Middlewares/Third_Party/FatFs/src/ff.c **** {
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc, csect;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
3540:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
3541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3544:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3546:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3563:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
3564:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3568:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3572:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 89


3573:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3578:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
3579:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
3592:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3595:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3596:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3597:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3598:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3601:Middlewares/Third_Party/FatFs/src/ff.c **** }
3602:Middlewares/Third_Party/FatFs/src/ff.c **** 
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 
3606:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3607:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3608:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
3609:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** )
3617:Middlewares/Third_Party/FatFs/src/ff.c **** {
3618:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3620:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc, csect;
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 90


3630:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4GiB on FATxx) */
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((!_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* On the middle or end of the file */
3646:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl) {
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3650:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3661:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3663:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3667:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3668:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fs, fp->clust);	/* Get current sector */
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
3678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 0;
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3684:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
ARM GAS  /tmp/cc2OGbx6.s 			page 91


3687:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3690:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3694:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->winsect = sect;
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3699:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3705:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = sect;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
3710:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
3714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
3717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
3723:Middlewares/Third_Party/FatFs/src/ff.c **** }
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 
3728:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3729:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
3730:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 
3732:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3734:Middlewares/Third_Party/FatFs/src/ff.c **** )
3735:Middlewares/Third_Party/FatFs/src/ff.c **** {
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3739:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3740:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3741:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3743:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 92


3744:Middlewares/Third_Party/FatFs/src/ff.c **** 
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3747:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
3748:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3753:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 					INIT_NAMBUF(fs);
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = load_obj_dir(&dj, &fp->obj);	/* Load directory entry block */
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive bit */
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation info */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = sync_fs(fs);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 					FREE_NAMBUF();
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3782:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
3783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3784:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, fp->dir_sect);
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 93


3801:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3802:Middlewares/Third_Party/FatFs/src/ff.c **** }
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 
3804:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 
3806:Middlewares/Third_Party/FatFs/src/ff.c **** 
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 
3808:Middlewares/Third_Party/FatFs/src/ff.c **** 
3809:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3810:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 
3813:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** )
3816:Middlewares/Third_Party/FatFs/src/ff.c **** {
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 
3820:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3823:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3827:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->obj.lockid);	/* Decrement file open counter */
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
3830:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.fs = 0;			/* Invalidate file object */
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3834:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
3836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3840:Middlewares/Third_Party/FatFs/src/ff.c **** }
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 
3845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3847:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
3848:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 
3850:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3851:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
3853:Middlewares/Third_Party/FatFs/src/ff.c **** )
3854:Middlewares/Third_Party/FatFs/src/ff.c **** {
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 94


3858:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
3860:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3861:Middlewares/Third_Party/FatFs/src/ff.c **** 
3862:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
3865:Middlewares/Third_Party/FatFs/src/ff.c **** }
3866:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3867:Middlewares/Third_Party/FatFs/src/ff.c **** 
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 
3869:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3871:Middlewares/Third_Party/FatFs/src/ff.c **** )
3872:Middlewares/Third_Party/FatFs/src/ff.c **** {
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
3887:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_size = dj.obj.c_size;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
3896:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
3899:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3901:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
3902:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3907:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
3908:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3909:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3910:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3912:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cc2OGbx6.s 			page 95


3915:Middlewares/Third_Party/FatFs/src/ff.c **** 
3916:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3917:Middlewares/Third_Party/FatFs/src/ff.c **** }
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 
3920:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3921:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3923:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3924:Middlewares/Third_Party/FatFs/src/ff.c **** )
3925:Middlewares/Third_Party/FatFs/src/ff.c **** {
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 
3936:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root path)
3944:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3946:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(fs, dj.sect);
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(&dj, 0);
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {							/* Find the entry links to the child directory */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_read(&dj, 0);
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_next(&dj, 0);
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (res == FR_OK);
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < n + 3) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 				buff[--i] = '/';
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3970:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
ARM GAS  /tmp/cc2OGbx6.s 			page 96


3972:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3974:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3975:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3976:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3979:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3981:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3982:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 
3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3989:Middlewares/Third_Party/FatFs/src/ff.c **** }
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 
3996:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3997:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3998:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 
4001:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
4002:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
4004:Middlewares/Third_Party/FatFs/src/ff.c **** )
4005:Middlewares/Third_Party/FatFs/src/ff.c **** {
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect;
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t ifptr;
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
4017:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4018:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4020:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 
4023:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
ARM GAS  /tmp/cc2OGbx6.s 			page 97


4029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4059:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4060:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4066:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fs->drv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current sec
4067:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sect = dsc;
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4072:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4077:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4GiB-1 if at FATx
4079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->obj.objsize && (_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, cl
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
ARM GAS  /tmp/cc2OGbx6.s 			page 98


4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
4094:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4101:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
4107:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->obj.objsize = fp->fptr;
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 							fp->flag |= FA_MODIFIED;
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4118:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
4125:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
4131:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4132:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4133:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_READONLY && fp->fptr > fp->obj.objsize) {		/* Set file change flag if the file size is e
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
4139:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4140:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
ARM GAS  /tmp/cc2OGbx6.s 			page 99


4143:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cach
4147:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = nsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4153:Middlewares/Third_Party/FatFs/src/ff.c **** }
4154:Middlewares/Third_Party/FatFs/src/ff.c **** 
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 
4156:Middlewares/Third_Party/FatFs/src/ff.c **** 
4157:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
4158:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4159:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 
4162:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4165:Middlewares/Third_Party/FatFs/src/ff.c **** )
4166:Middlewares/Third_Party/FatFs/src/ff.c **** {
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID *obj;
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4176:Middlewares/Third_Party/FatFs/src/ff.c **** 	obj = &dp->obj;
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_scl = obj->sclust;							/* Get containing directory inforamation */
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_size = ((DWORD)obj->objsize & 0xFFFFFF00) | obj->stat;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->c_ofs = dp->blk_ofs;
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);	/* Get object allocation info */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4194:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* This object is a file */
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
ARM GAS  /tmp/cc2OGbx6.s 			page 100


4200:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj->id = fs->id;
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
4205:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = 0;	/* Root directory need not to be locked */
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4214:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4223:Middlewares/Third_Party/FatFs/src/ff.c **** }
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 
4228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4229:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 
4232:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4234:Middlewares/Third_Party/FatFs/src/ff.c **** )
4235:Middlewares/Third_Party/FatFs/src/ff.c **** {
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4242:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
4247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->obj.fs = 0;			/* Invalidate directory object */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4253:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4256:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/cc2OGbx6.s 			page 101


4257:Middlewares/Third_Party/FatFs/src/ff.c **** 
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 
4261:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4262:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
4263:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 
4265:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** )
4269:Middlewares/Third_Party/FatFs/src/ff.c **** {
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_NAMBUF(fs);
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_NAMBUF();
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4292:Middlewares/Third_Party/FatFs/src/ff.c **** }
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 
4296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
4297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find Next File                                                        */
4299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 
4301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** )
4305:Middlewares/Third_Party/FatFs/src/ff.c **** {
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0 && _USE_FIND == 2
ARM GAS  /tmp/cc2OGbx6.s 			page 102


4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4315:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4318:Middlewares/Third_Party/FatFs/src/ff.c **** }
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 
4322:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4323:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find First File                                                       */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** )
4332:Middlewares/Third_Party/FatFs/src/ff.c **** {
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** }
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 
4344:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 
4348:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
4349:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4350:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
4351:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 
4353:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4356:Middlewares/Third_Party/FatFs/src/ff.c **** )
4357:Middlewares/Third_Party/FatFs/src/ff.c **** {
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4361:Middlewares/Third_Party/FatFs/src/ff.c **** 
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
ARM GAS  /tmp/cc2OGbx6.s 			page 103


4371:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4379:Middlewares/Third_Party/FatFs/src/ff.c **** }
4380:Middlewares/Third_Party/FatFs/src/ff.c **** 
4381:Middlewares/Third_Party/FatFs/src/ff.c **** 
4382:Middlewares/Third_Party/FatFs/src/ff.c **** 
4383:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4384:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4385:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 
4388:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
4389:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
4392:Middlewares/Third_Party/FatFs/src/ff.c **** )
4393:Middlewares/Third_Party/FatFs/src/ff.c **** {
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nfree, clst, sect, stat;
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			nfree = 0;
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(&obj, clst);
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4421:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan bitmap table */
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 					BYTE bm;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 					UINT b;
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent - 2;
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 					sect = fs->database;
ARM GAS  /tmp/cc2OGbx6.s 			page 104


4428:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0;
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0 && (res = move_window(fs, sect++)) != FR_OK) break;
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!(bm & 1)) nfree++;
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 							bm >>= 1;
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = (i + 1) % SS(fs);
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (clst);
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 				{	/* FAT16/32: Sector alighed FAT entries */
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fs->n_fatent; sect = fs->fatbase;
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (i == 0) {
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_FAT16) {
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
4452:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							if ((ld_dword(p) & 0x0FFFFFFF) == 0) nfree++;
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
4455:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (--clst);
4457:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4466:Middlewares/Third_Party/FatFs/src/ff.c **** }
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 
4470:Middlewares/Third_Party/FatFs/src/ff.c **** 
4471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
4473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 
4475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** )
4478:Middlewares/Third_Party/FatFs/src/ff.c **** {
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
ARM GAS  /tmp/cc2OGbx6.s 			page 105


4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current R/W point */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
4503:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4511:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
4513:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4516:Middlewares/Third_Party/FatFs/src/ff.c **** }
4517:Middlewares/Third_Party/FatFs/src/ff.c **** 
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 
4521:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4522:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File/Directory                                               */
4523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 
4525:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4527:Middlewares/Third_Party/FatFs/src/ff.c **** )
4528:Middlewares/Third_Party/FatFs/src/ff.c **** {
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4530:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
4532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4533:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4534:Middlewares/Third_Party/FatFs/src/ff.c **** 	_FDID obj;
4535:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4536:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
ARM GAS  /tmp/cc2OGbx6.s 			page 106


4542:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4543:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4548:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_RDO) {
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4559:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 				obj.fs = fs;
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.sclust = dclst = ld_dword(fs->dirbuf + XDIR_FstClus);
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 					obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4567:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 					dclst = ld_clust(fs, dj.dir);
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == fs->cdir) {		 		/* Is it the current directory? */
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
4576:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.fs = fs;						/* Open the sub-directory */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
4580:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.objsize = obj.objsize;
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 							sdj.obj.stat = obj.stat;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 0);
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
4598:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/cc2OGbx6.s 			page 107


4599:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4600:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
4602:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4603:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4611:Middlewares/Third_Party/FatFs/src/ff.c **** }
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 
4616:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4617:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
4618:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4622:Middlewares/Third_Party/FatFs/src/ff.c **** )
4623:Middlewares/Third_Party/FatFs/src/ff.c **** {
4624:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4626:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
4629:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm;
4630:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
ARM GAS  /tmp/cc2OGbx6.s 			page 108


4656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4679:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag (contiguous) */
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = store_xdir(&dj);
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4689:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = dj.dir;
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4708:Middlewares/Third_Party/FatFs/src/ff.c **** }
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 109


4713:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4714:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename a File/Directory                                               */
4715:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 
4717:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4720:Middlewares/Third_Party/FatFs/src/ff.c **** )
4721:Middlewares/Third_Party/FatFs/src/ff.c **** {
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[_FS_EXFAT ? SZDIRE * 2 : 24], *dir;
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	get_ldnumber(&path_new);						/* Snip drive number of new name off */
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
4737:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4741:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
4743:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT */
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 				BYTE nf, nn;
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 				WORD nh;
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4749:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4750:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4751:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4752:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4753:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4754:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4755:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4756:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4757:Middlewares/Third_Party/FatFs/src/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4758:Middlewares/Third_Party/FatFs/src/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4759:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);
4760:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4761:Middlewares/Third_Party/FatFs/src/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4762:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4763:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = store_xdir(&djn);
4764:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4765:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4767:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4768:Middlewares/Third_Party/FatFs/src/ff.c **** 			{	/* At FAT12/FAT16/FAT32 */
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about the object except name */
ARM GAS  /tmp/cc2OGbx6.s 			page 110


4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4772:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4774:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
4786:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
4787:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(fs, dw);
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
4793:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
4794:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
4795:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4796:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4797:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4798:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
4802:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
4803:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4805:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of the critical section */
4806:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4807:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4808:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4809:Middlewares/Third_Party/FatFs/src/ff.c **** 
4810:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4811:Middlewares/Third_Party/FatFs/src/ff.c **** }
4812:Middlewares/Third_Party/FatFs/src/ff.c **** 
4813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4814:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
4815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
4816:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
4817:Middlewares/Third_Party/FatFs/src/ff.c **** 
4818:Middlewares/Third_Party/FatFs/src/ff.c **** 
4819:Middlewares/Third_Party/FatFs/src/ff.c **** 
4820:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_CHMOD && !_FS_READONLY
4821:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
4823:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4824:Middlewares/Third_Party/FatFs/src/ff.c **** 
4825:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
4826:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
ARM GAS  /tmp/cc2OGbx6.s 			page 111


4827:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
4828:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
4829:Middlewares/Third_Party/FatFs/src/ff.c **** )
4830:Middlewares/Third_Party/FatFs/src/ff.c **** {
4831:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4832:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4834:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4835:Middlewares/Third_Party/FatFs/src/ff.c **** 
4836:Middlewares/Third_Party/FatFs/src/ff.c **** 
4837:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
4838:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4839:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4840:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4841:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4842:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4844:Middlewares/Third_Party/FatFs/src/ff.c **** 			mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
4845:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4846:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4847:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->dirbuf[XDIR_Attr] = (attr & mask) | (fs->dirbuf[XDIR_Attr] & (BYTE)~mask);	/* Apply attribu
4848:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4849:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4850:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4851:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4852:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[DIR_Attr] = (attr & mask) | (dj.dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change 
4853:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4854:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4855:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4856:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4857:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4858:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4859:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4860:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4861:Middlewares/Third_Party/FatFs/src/ff.c **** 
4862:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4863:Middlewares/Third_Party/FatFs/src/ff.c **** }
4864:Middlewares/Third_Party/FatFs/src/ff.c **** 
4865:Middlewares/Third_Party/FatFs/src/ff.c **** 
4866:Middlewares/Third_Party/FatFs/src/ff.c **** 
4867:Middlewares/Third_Party/FatFs/src/ff.c **** 
4868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
4870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4871:Middlewares/Third_Party/FatFs/src/ff.c **** 
4872:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
4873:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
4874:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
4875:Middlewares/Third_Party/FatFs/src/ff.c **** )
4876:Middlewares/Third_Party/FatFs/src/ff.c **** {
4877:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4878:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4879:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4880:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEF_NAMBUF
4881:Middlewares/Third_Party/FatFs/src/ff.c **** 
4882:Middlewares/Third_Party/FatFs/src/ff.c **** 
4883:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
ARM GAS  /tmp/cc2OGbx6.s 			page 112


4884:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
4885:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4886:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
4887:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
4888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (dj.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check objec
4889:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4890:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4891:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4892:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(fs->dirbuf + XDIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4893:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = store_xdir(&dj);
4894:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else
4895:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4896:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
4897:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(dj.dir + DIR_ModTime, (DWORD)fno->fdate << 16 | fno->ftime);
4898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->wflag = 1;
4899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4900:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
4901:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fs);
4902:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4903:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4904:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_NAMBUF();
4905:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4906:Middlewares/Third_Party/FatFs/src/ff.c **** 
4907:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
4908:Middlewares/Third_Party/FatFs/src/ff.c **** }
4909:Middlewares/Third_Party/FatFs/src/ff.c **** 
4910:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_CHMOD && !_FS_READONLY */
4911:Middlewares/Third_Party/FatFs/src/ff.c **** 
4912:Middlewares/Third_Party/FatFs/src/ff.c **** 
4913:Middlewares/Third_Party/FatFs/src/ff.c **** 
4914:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
4915:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4916:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Volume Label                                                      */
4917:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4918:Middlewares/Third_Party/FatFs/src/ff.c **** 
4919:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
4920:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
4921:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
4922:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
4923:Middlewares/Third_Party/FatFs/src/ff.c **** )
4924:Middlewares/Third_Party/FatFs/src/ff.c **** {
4925:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4926:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
4927:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4928:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT si, di;
4929:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE || _FS_EXFAT
4930:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
4931:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4932:Middlewares/Third_Party/FatFs/src/ff.c **** 
4933:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
4934:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, 0);
4935:Middlewares/Third_Party/FatFs/src/ff.c **** 
4936:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
4937:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
4938:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs; dj.obj.sclust = 0;	/* Open root directory */
4939:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
4940:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
ARM GAS  /tmp/cc2OGbx6.s 			page 113


4941:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	res = dir_read(&dj, 1);			/* Find a volume label entry */
4942:Middlewares/Third_Party/FatFs/src/ff.c **** 		 	if (res == FR_OK) {
4943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
4944:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4945:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (si = di = 0; si < dj.dir[XDIR_NumLabel]; si++) {	/* Extract volume label from 83 entry */
4946:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ld_word(dj.dir + XDIR_Label + si * 2);
4947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4948:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = w;
4949:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4950:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = ff_convert(w, 0);	/* Unicode -> OEM */
4951:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (w == 0) w = '?';	/* Replace wrong character */
4952:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_DF1S && w >= 0x100) label[di++] = (char)(w >> 8);
4953:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = (char)w;
4954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4955:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4956:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[di] = 0;
4957:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else
4958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4959:Middlewares/Third_Party/FatFs/src/ff.c **** 				{
4960:Middlewares/Third_Party/FatFs/src/ff.c **** 					si = di = 0;		/* Extract volume label from AM_VOL entry with code comversion */
4961:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
4962:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
4963:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = (si < 11) ? dj.dir[si++] : ' ';
4964:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsDBCS1(w) && si < 11 && IsDBCS2(dj.dir[si])) {
4965:Middlewares/Third_Party/FatFs/src/ff.c **** 							w = w << 8 | dj.dir[si++];
4966:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
4967:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = ff_convert(w, 1);	/* OEM -> Unicode */
4968:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4969:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di++] = dj.dir[si++];
4970:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4971:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (di < 11);
4972:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {				/* Truncate trailing spaces */
4973:Middlewares/Third_Party/FatFs/src/ff.c **** 						label[di] = 0;
4974:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (di == 0) break;
4975:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (label[--di] == ' ');
4976:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4977:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4978:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4979:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {	/* No label entry and return nul string */
4980:Middlewares/Third_Party/FatFs/src/ff.c **** 			label[0] = 0;
4981:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
4982:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4983:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4984:Middlewares/Third_Party/FatFs/src/ff.c **** 
4985:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
4986:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
4987:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, fs->volbase);
4988:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
4989:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (fs->fs_type) {
4990:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_EXFAT:
4991:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BPB_VolIDEx; break;
4992:Middlewares/Third_Party/FatFs/src/ff.c **** 
4993:Middlewares/Third_Party/FatFs/src/ff.c **** 			case FS_FAT32:
4994:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID32; break;
4995:Middlewares/Third_Party/FatFs/src/ff.c **** 
4996:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
4997:Middlewares/Third_Party/FatFs/src/ff.c **** 				di = BS_VolID;
ARM GAS  /tmp/cc2OGbx6.s 			page 114


4998:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4999:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = ld_dword(fs->win + di);
5000:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5001:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5002:Middlewares/Third_Party/FatFs/src/ff.c **** 
5003:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5004:Middlewares/Third_Party/FatFs/src/ff.c **** }
5005:Middlewares/Third_Party/FatFs/src/ff.c **** 
5006:Middlewares/Third_Party/FatFs/src/ff.c **** 
5007:Middlewares/Third_Party/FatFs/src/ff.c **** 
5008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5009:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5010:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set Volume Label                                                      */
5011:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5012:Middlewares/Third_Party/FatFs/src/ff.c **** 
5013:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
5014:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
5015:Middlewares/Third_Party/FatFs/src/ff.c **** )
5016:Middlewares/Third_Party/FatFs/src/ff.c **** {
5017:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
5019:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5020:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE dirvn[22];
5021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, slen;
5022:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
5023:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char badchr[] = "\"*+,.:;<=>\?[]|\x7F";
5024:Middlewares/Third_Party/FatFs/src/ff.c **** 
5025:Middlewares/Third_Party/FatFs/src/ff.c **** 
5026:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive */
5027:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&label, &fs, FA_WRITE);
5028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
5029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
5030:Middlewares/Third_Party/FatFs/src/ff.c **** 
5031:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get length of given volume label */
5032:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (slen = 0; (UINT)label[slen] >= ' '; slen++) ;	/* Get name length */
5033:Middlewares/Third_Party/FatFs/src/ff.c **** 
5034:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5035:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
5036:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = j = 0; i < slen; ) {	/* Create volume label in directory form */
5037:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = label[i++];
5038:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
5039:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w)) {
5040:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5041:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5042:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 1);
5043:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w == 0 || chk_chr(badchr, w) || j == 22) {	/* Check validity check validity of the volume la
5045:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(fs, FR_INVALID_NAME);
5046:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5047:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(dirvn + j, w); j += 2;
5048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5049:Middlewares/Third_Party/FatFs/src/ff.c **** 		slen = j;
5050:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5051:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5052:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* On the FAT12/16/32 volume */
5053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for ( ; slen && label[slen - 1] == ' '; slen--) ;	/* Remove trailing spaces */
5054:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (slen) {		/* Is there a volume label to be set? */
ARM GAS  /tmp/cc2OGbx6.s 			page 115


5055:Middlewares/Third_Party/FatFs/src/ff.c **** 			dirvn[0] = 0; i = j = 0;	/* Create volume label in directory form */
5056:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {
5057:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5058:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(label[i++]), 0);
5059:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5060:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (BYTE)label[i++];
5061:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsDBCS1(w)) {
5062:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (j < 10 && i < slen && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
5063:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5064:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
5065:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
5066:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5067:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
5068:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
5069:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
5070:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5071:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
5072:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5073:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5074:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5075:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w == 0 || chk_chr(badchr, w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) {	/* Reject invalid ch
5076:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fs, FR_INVALID_NAME);
5077:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5078:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (w >= 0x100) dirvn[j++] = (BYTE)(w >> 8);
5079:Middlewares/Third_Party/FatFs/src/ff.c **** 				dirvn[j++] = (BYTE)w;
5080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (i < slen);
5081:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j < 11) dirvn[j++] = ' ';	/* Fill remaining name field */
5082:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dirvn[0] == DDEM) LEAVE_FF(fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
5083:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5084:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5085:Middlewares/Third_Party/FatFs/src/ff.c **** 
5086:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
5087:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.sclust = 0;		/* Open root directory */
5088:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
5089:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5090:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);	/* Get volume label entry */
5091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
5092:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
5093:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);	/* Change the volume label */
5094:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5095:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5096:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {
5097:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dj.dir, dirvn, 11);	/* Change the volume label */
5098:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5099:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Name] = DDEM;	/* Remove the volume label */
5100:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5101:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5102:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
5103:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(fs);
5104:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* No volume label entry is found or error */
5105:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
5106:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
5107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (slen) {	/* Create a volume label entry */
5108:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry */
5109:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
5110:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZDIRE);	/* Clear the entry */
5111:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fs->fs_type == FS_EXFAT) {
ARM GAS  /tmp/cc2OGbx6.s 			page 116


5112:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_Type] = 0x83;		/* Create 83 entry */
5113:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[XDIR_NumLabel] = (BYTE)(slen / 2);
5114:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir + XDIR_Label, dirvn, slen);
5115:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
5116:Middlewares/Third_Party/FatFs/src/ff.c **** 							dj.dir[DIR_Attr] = AM_VOL;		/* Create volume label entry */
5117:Middlewares/Third_Party/FatFs/src/ff.c **** 							mem_cpy(dj.dir, dirvn, 11);
5118:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
5119:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
5120:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(fs);
5121:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5122:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5123:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5124:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5125:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5126:Middlewares/Third_Party/FatFs/src/ff.c **** 
5127:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5128:Middlewares/Third_Party/FatFs/src/ff.c **** }
5129:Middlewares/Third_Party/FatFs/src/ff.c **** 
5130:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
5131:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
5132:Middlewares/Third_Party/FatFs/src/ff.c **** 
5133:Middlewares/Third_Party/FatFs/src/ff.c **** 
5134:Middlewares/Third_Party/FatFs/src/ff.c **** 
5135:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_EXPAND && !_FS_READONLY
5136:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5137:Middlewares/Third_Party/FatFs/src/ff.c **** /* Allocate a Contiguous Blocks to the File                              */
5138:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5139:Middlewares/Third_Party/FatFs/src/ff.c **** 
5140:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_expand (
5141:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
5142:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t fsz,	/* File size to be expanded to */
5143:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt		/* Operation mode 0:Find and prepare or 1:Find and allocate */
5144:Middlewares/Third_Party/FatFs/src/ff.c **** )
5145:Middlewares/Third_Party/FatFs/src/ff.c **** {
5146:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5147:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, stcl, scl, ncl, tcl, lclst;
5149:Middlewares/Third_Party/FatFs/src/ff.c **** 
5150:Middlewares/Third_Party/FatFs/src/ff.c **** 
5151:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5152:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5153:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fsz == 0 || fp->obj.objsize != 0 || !(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);
5154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5155:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type != FS_EXFAT && fsz >= 0x100000000) LEAVE_FF(fs, FR_DENIED);	/* Check if in size li
5156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5157:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (DWORD)fs->csize * SS(fs);	/* Cluster size */
5158:Middlewares/Third_Party/FatFs/src/ff.c **** 	tcl = (DWORD)(fsz / n) + ((fsz & (n - 1)) ? 1 : 0);	/* Number of clusters required */
5159:Middlewares/Third_Party/FatFs/src/ff.c **** 	stcl = fs->last_clst; lclst = 0;
5160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stcl < 2 || stcl >= fs->n_fatent) stcl = 2;
5161:Middlewares/Third_Party/FatFs/src/ff.c **** 
5162:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
5164:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = find_bitmap(fs, stcl, tcl);			/* Find a contiguous cluster block */
5165:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0) res = FR_DENIED;				/* No contiguous cluster block was found */
5166:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0xFFFFFFFF) res = FR_DISK_ERR;
5167:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
ARM GAS  /tmp/cc2OGbx6.s 			page 117


5169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = change_bitmap(fs, scl, tcl, 1);	/* Mark the cluster block 'in use' */
5170:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl + tcl - 1;
5171:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5172:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5173:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5174:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5175:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5177:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
5178:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst = stcl; ncl = 0;
5179:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {	/* Find a contiguous cluster block */
5180:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = get_fat(&fp->obj, clst);
5181:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (++clst >= fs->n_fatent) clst = 2;
5182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 1) { res = FR_INT_ERR; break; }
5183:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
5184:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (n == 0) {	/* Is it a free cluster? */
5185:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++ncl == tcl) break;	/* Break if a contiguous cluster block is found */
5186:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5187:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = clst; ncl = 0;		/* Not a free cluster */
5188:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5189:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == stcl) { res = FR_DENIED; break; }	/* No contiguous cluster? */
5190:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5191:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {	/* A contiguous free area is found */
5192:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (opt) {		/* Allocate it now */
5193:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (clst = scl, n = tcl; n; clst++, n--) {	/* Create a cluster chain on the FAT */
5194:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fs, clst, (n == 1) ? 0xFFFFFFFF : clst + 1);
5195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
5196:Middlewares/Third_Party/FatFs/src/ff.c **** 					lclst = clst;
5197:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5198:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {		/* Set it as suggested point for next allocation */
5199:Middlewares/Third_Party/FatFs/src/ff.c **** 				lclst = scl - 1;
5200:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5201:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5202:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5203:Middlewares/Third_Party/FatFs/src/ff.c **** 
5204:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
5205:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = lclst;		/* Set suggested start cluster to start next */
5206:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt) {	/* Is it allocated now? */
5207:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = scl;		/* Update object allocation information */
5208:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fsz;
5209:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (_FS_EXFAT) fp->obj.stat = 2;	/* Set status 'contiguous chain' */
5210:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
5211:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clst <= fs->n_fatent - 2) {	/* Update FSINFO */
5212:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clst -= tcl;
5213:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
5214:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5215:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5216:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5217:Middlewares/Third_Party/FatFs/src/ff.c **** 
5218:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
5219:Middlewares/Third_Party/FatFs/src/ff.c **** }
5220:Middlewares/Third_Party/FatFs/src/ff.c **** 
5221:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_EXPAND && !_FS_READONLY */
5222:Middlewares/Third_Party/FatFs/src/ff.c **** 
5223:Middlewares/Third_Party/FatFs/src/ff.c **** 
5224:Middlewares/Third_Party/FatFs/src/ff.c **** 
5225:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD
ARM GAS  /tmp/cc2OGbx6.s 			page 118


5226:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5227:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly                                   */
5228:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5229:Middlewares/Third_Party/FatFs/src/ff.c **** 
5230:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
5231:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
5232:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
5233:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
5234:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
5235:Middlewares/Third_Party/FatFs/src/ff.c **** )
5236:Middlewares/Third_Party/FatFs/src/ff.c **** {
5237:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
5238:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
5239:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
5240:Middlewares/Third_Party/FatFs/src/ff.c **** 	FSIZE_t remain;
5241:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, csect;
5242:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dbuf;
5243:Middlewares/Third_Party/FatFs/src/ff.c **** 
5244:Middlewares/Third_Party/FatFs/src/ff.c **** 
5245:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
5246:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
5247:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
5248:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
5249:Middlewares/Third_Party/FatFs/src/ff.c **** 
5250:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
5251:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
5252:Middlewares/Third_Party/FatFs/src/ff.c **** 
5253:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream goes busy */
5254:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
5255:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
5256:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {				/* On the sector boundary? */
5257:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {						/* On the cluster boundary? */
5258:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
5259:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust : get_fat(&fp->obj, fp->clust);
5260:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fs, FR_INT_ERR);
5261:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
5262:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
5263:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5264:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5265:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fs, fp->clust);			/* Get current data sector */
5266:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fs, FR_INT_ERR);
5267:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
5268:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
5269:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fs, sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window to the file dat
5270:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fs->win;
5271:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5272:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->sect != sect) {		/* Fill sector cache with file data */
5273:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5274:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
5275:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5276:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
5277:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5278:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
5280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5281:Middlewares/Third_Party/FatFs/src/ff.c **** 		dbuf = fp->buf;
5282:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 119


5283:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->sect = sect;
5284:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
5285:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;					/* Clip it by btr if needed */
5286:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(dbuf + ((UINT)fp->fptr % SS(fs)), rcnt);	/* Forward the file data */
5287:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fs, FR_INT_ERR);
5288:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5289:Middlewares/Third_Party/FatFs/src/ff.c **** 
5290:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, FR_OK);
5291:Middlewares/Third_Party/FatFs/src/ff.c **** }
5292:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
5293:Middlewares/Third_Party/FatFs/src/ff.c **** 
5294:Middlewares/Third_Party/FatFs/src/ff.c **** 
5295:Middlewares/Third_Party/FatFs/src/ff.c **** 
5296:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
5297:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5298:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create an FAT/exFAT volume                                            */
5299:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5300:Middlewares/Third_Party/FatFs/src/ff.c **** 
5301:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
5302:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
5303:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt,			/* Format option */
5304:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD au,			/* Size of allocation unit (cluster) [byte] */
5305:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work,			/* Pointer to working buffer */
5306:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len			/* Size of working buffer */
5307:Middlewares/Third_Party/FatFs/src/ff.c **** )
5308:Middlewares/Third_Party/FatFs/src/ff.c **** {
5309:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
5310:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_rootdir = 512;	/* Number of root directory entries for FAT12/16 volume */
5311:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {1, 4, 16, 64, 256, 512, 0};	/* Cluster size boundary for FAT12/16 volum
5312:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst32[] = {1, 2, 4, 8, 16, 32, 0};	/* Cluster size boundary for FAT32 volume (12
5313:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, sys, *buf, *pte, pdrv, part;
5314:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ss;
5315:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD szb_buf, sz_buf, sz_blk, n_clst, pau, sect, nsect, n;
5316:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_data;				/* Base LBA for volume, fat, data */
5317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_vol, sz_rsv, sz_fat, sz_dir;	/* Size for volume, fat, dir, data */
5318:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
5319:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
5320:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM || _FS_EXFAT
5322:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tbl[3];
5323:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5324:Middlewares/Third_Party/FatFs/src/ff.c **** 
5325:Middlewares/Third_Party/FatFs/src/ff.c **** 
5326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);					/* Get target logical drive */
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
5331:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
5332:Middlewares/Third_Party/FatFs/src/ff.c **** 
5333:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check physical drive status */
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5337:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
5338:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
5339:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &ss) != RES_OK) return FR_DISK_ERR;
ARM GAS  /tmp/cc2OGbx6.s 			page 120


5340:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ss > _MAX_SS || ss < _MIN_SS || (ss & (ss - 1))) return FR_DISK_ERR;
5341:Middlewares/Third_Party/FatFs/src/ff.c **** #else
5342:Middlewares/Third_Party/FatFs/src/ff.c **** 	ss = _MAX_SS;
5343:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((au != 0 && au < ss) || au > 0x1000000 || (au & (au - 1))) return FR_INVALID_PARAMETER;	/* Che
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
5346:Middlewares/Third_Party/FatFs/src/ff.c **** 
5347:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get working buffer */
5348:Middlewares/Third_Party/FatFs/src/ff.c **** 	buf = (BYTE*)work;		/* Working buffer */
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_buf = len / ss;		/* Size of working buffer (sector) */
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
5352:Middlewares/Third_Party/FatFs/src/ff.c **** 
5353:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine where the volume to be located (b_vol, sz_vol) */
5354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {
5355:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
5356:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Load MBR */
5357:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_word(buf + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;	/* Check if MBR is valid */
5358:Middlewares/Third_Party/FatFs/src/ff.c **** 		pte = buf + (MBR_Table + (part - 1) * SZ_PTE);
5359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!pte[PTE_System]) return FR_MKFS_ABORTED;	/* No partition? */
5360:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = ld_dword(pte + PTE_StLba);		/* Get volume start sector */
5361:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol = ld_dword(pte + PTE_SizLba);	/* Get volume size */
5362:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5363:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a single-partition in this function */
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_vol) != RES_OK) return FR_DISK_ERR;
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
5368:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sz_vol < 128) return FR_MKFS_ABORTED;	/* Check if volume size is >=128s */
5370:Middlewares/Third_Party/FatFs/src/ff.c **** 
5371:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-determine the FAT type */
5372:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
5373:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT && (opt & FM_EXFAT)) {	/* exFAT possible? */
5374:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_EXFAT || sz_vol >= 0x4000000 || au > 128) {	/* exFAT only, vol >= 64Ms 
5375:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_EXFAT; break;
5376:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (au > 128) return FR_INVALID_PARAMETER;	/* Too large au for FAT/FAT32 */
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
5382:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5383:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_FAT)) return FR_INVALID_PARAMETER;	/* no-FAT? */
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
5386:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
5387:Middlewares/Third_Party/FatFs/src/ff.c **** 
5388:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
5389:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_EXFAT) {	/* Create an exFAT volume */
5390:Middlewares/Third_Party/FatFs/src/ff.c **** 		DWORD szb_bit, szb_case, sum, nb, cl;
5391:Middlewares/Third_Party/FatFs/src/ff.c **** 		WCHAR ch, si;
5392:Middlewares/Third_Party/FatFs/src/ff.c **** 		UINT j, st;
5393:Middlewares/Third_Party/FatFs/src/ff.c **** 		BYTE b;
5394:Middlewares/Third_Party/FatFs/src/ff.c **** 
5395:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x1000) return FR_MKFS_ABORTED;	/* Too small volume? */
5396:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
ARM GAS  /tmp/cc2OGbx6.s 			page 121


5397:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area may be erased *
5398:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5399:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5400:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Determine FAT location, data location and number of clusters */
5401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!au) {	/* au auto-selection */
5402:Middlewares/Third_Party/FatFs/src/ff.c **** 			au = 8;
5403:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x80000) au = 64;		/* >= 512Ks */
5404:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x4000000) au = 256;	/* >= 64Ms */
5405:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5406:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat = b_vol + 32;										/* FAT start at offset 32 */
5407:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_fat = ((sz_vol / au + 2) * 4 + ss - 1) / ss;			/* Number of FAT sectors */
5408:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_data = (b_fat + sz_fat + sz_blk - 1) & ~(sz_blk - 1);	/* Align data area to the erase block bou
5409:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (b_data >= sz_vol / 2) return FR_MKFS_ABORTED;		/* Too small volume? */
5410:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_clst = (sz_vol - (b_data - b_vol)) / au;				/* Number of clusters */
5411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst <16) return FR_MKFS_ABORTED;					/* Too few clusters? */
5412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n_clst > MAX_EXFAT) return FR_MKFS_ABORTED;			/* Too many clusters? */
5413:Middlewares/Third_Party/FatFs/src/ff.c **** 
5414:Middlewares/Third_Party/FatFs/src/ff.c **** 		szb_bit = (n_clst + 7) / 8;						/* Size of allocation bitmap */
5415:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = (szb_bit + au * ss - 1) / (au * ss);	/* Number of allocation bitmap clusters */
5416:Middlewares/Third_Party/FatFs/src/ff.c **** 
5417:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a compressed up-case table */
5418:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * tbl[0];	/* Table start sector */
5419:Middlewares/Third_Party/FatFs/src/ff.c **** 		sum = 0;						/* Table checksum to be stored in the 82 entry */
5420:Middlewares/Third_Party/FatFs/src/ff.c **** 		st = si = i = j = szb_case = 0;
5421:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5422:Middlewares/Third_Party/FatFs/src/ff.c **** 			switch (st) {
5423:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 0:
5424:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = ff_wtoupper(si);	/* Get an up-case char */
5425:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ch != si) {
5426:Middlewares/Third_Party/FatFs/src/ff.c **** 					si++; break;		/* Store the up-case char if exist */
5427:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5428:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (j = 1; (WCHAR)(si + j) && (WCHAR)(si + j) == ff_wtoupper((WCHAR)(si + j)); j++) ;	/* Get r
5429:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (j >= 128) {
5430:Middlewares/Third_Party/FatFs/src/ff.c **** 					ch = 0xFFFF; st = 2; break;	/* Compress the no-case block if run is >= 128 */
5431:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5432:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 1;			/* Do not compress short run */
5433:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* go to next case */
5434:Middlewares/Third_Party/FatFs/src/ff.c **** 			case 1:
5435:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = si++;		/* Fill the short run */
5436:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (--j == 0) st = 0;
5437:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
5438:Middlewares/Third_Party/FatFs/src/ff.c **** 
5439:Middlewares/Third_Party/FatFs/src/ff.c **** 			default:
5440:Middlewares/Third_Party/FatFs/src/ff.c **** 				ch = (WCHAR)j; si += j;	/* Number of chars to skip */
5441:Middlewares/Third_Party/FatFs/src/ff.c **** 				st = 0;
5442:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5443:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 0] = (BYTE)ch, sum);		/* Put it into the write buffer */
5444:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = xsum32(buf[i + 1] = (BYTE)(ch >> 8), sum);
5445:Middlewares/Third_Party/FatFs/src/ff.c **** 			i += 2; szb_case += 2;
5446:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!si || i == szb_buf) {		/* Write buffered data when buffer full or end of process */
5447:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (i + ss - 1) / ss;
5448:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5449:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; i = 0;
5450:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5451:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (si);
5452:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[1] = (szb_case + au * ss - 1) / (au * ss);	/* Number of up-case table clusters */
5453:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[2] = 1;										/* Number of root dir clusters */
ARM GAS  /tmp/cc2OGbx6.s 			page 122


5454:Middlewares/Third_Party/FatFs/src/ff.c **** 
5455:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the allocation bitmap */
5456:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data; nsect = (szb_bit + ss - 1) / ss;	/* Start of bitmap and number of sectors */
5457:Middlewares/Third_Party/FatFs/src/ff.c **** 		nb = tbl[0] + tbl[1] + tbl[2];					/* Number of clusters in-use by system */
5458:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5459:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf);
5460:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; nb >= 8 && i < szb_buf; buf[i++] = 0xFF, nb -= 8) ;
5461:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (b = 1; nb && i < szb_buf; buf[i] |= b, b <<= 1, nb--) ;
5462:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;		/* Write the buffered data */
5463:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5464:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5465:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5466:Middlewares/Third_Party/FatFs/src/ff.c **** 
5467:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the FAT */
5468:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat; nsect = sz_fat;	/* Start of FAT and number of FAT sectors */
5469:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = nb = cl = 0;
5470:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5471:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, szb_buf); i = 0;	/* Clear work area and reset write index */
5472:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl == 0) {	/* Set entry 0 and 1 */
5473:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFF8); i += 4; cl++;
5474:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + i, 0xFFFFFFFF); i += 4; cl++;
5475:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5476:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {			/* Create chains of bitmap, up-case and root dir */
5477:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (nb && i < szb_buf) {			/* Create a chain */
5478:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(buf + i, (nb > 1) ? cl + 1 : 0xFFFFFFFF);
5479:Middlewares/Third_Party/FatFs/src/ff.c **** 					i += 4; cl++; nb--;
5480:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!nb && j < 3) nb = tbl[j++];	/* Next chain */
5482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nb && i < szb_buf);
5483:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;	/* Write the buffered data */
5484:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5485:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5486:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5487:Middlewares/Third_Party/FatFs/src/ff.c **** 
5488:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize the root directory */
5489:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, szb_buf);
5490:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 0 + 0] = 0x83;		/* 83 entry (volume label) */
5491:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 1 + 0] = 0x81;		/* 81 entry (allocation bitmap) */
5492:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 20, 2);
5493:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 1 + 24, szb_bit);
5494:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[SZDIRE * 2 + 0] = 0x82;		/* 82 entry (up-case table) */
5495:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 4, sum);
5496:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 20, 2 + tbl[0]);
5497:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + SZDIRE * 2 + 24, szb_case);
5498:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_data + au * (tbl[0] + tbl[1]);	nsect = au;	/* Start of the root directory and number of 
5499:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {	/* Fill root directory sectors */
5500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, n) != RES_OK) return FR_DISK_ERR;
5502:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5503:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5504:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5505:Middlewares/Third_Party/FatFs/src/ff.c **** 
5506:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create two set of the exFAT VBR blocks */
5507:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_vol;
5508:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; n < 2; n++) {
5509:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Main record (+0) */
5510:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
ARM GAS  /tmp/cc2OGbx6.s 			page 123


5511:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11);	/* Boot jump code (x86), OEM name */
5512:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolOfsEx, b_vol);					/* Volume offset in the physical drive [sector] */
5513:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSecEx, sz_vol);					/* Volume size [sector] */
5514:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatOfsEx, b_fat - b_vol);			/* FAT offset [sector] */
5515:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FatSzEx, sz_fat);					/* FAT size [sector] */
5516:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_DataOfsEx, b_data - b_vol);			/* Data offset [sector] */
5517:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_NumClusEx, n_clst);					/* Number of clusters */
5518:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClusEx, 2 + tbl[0] + tbl[1]);	/* Root dir cluster # */
5519:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_VolIDEx, GET_FATTIME());				/* VSN */
5520:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSVerEx, 0x100);						/* File system version (1.00) */
5521:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_BytsPerSecEx] = 0, i = ss; i >>= 1; buf[BPB_BytsPerSecEx]++) ;	/* Log2 of sector si
5522:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (buf[BPB_SecPerClusEx] = 0, i = au; i >>= 1; buf[BPB_SecPerClusEx]++) ;	/* Log2 of cluster s
5523:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_NumFATsEx] = 1;					/* Number of FATs */
5524:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BPB_DrvNumEx] = 0x80;				/* Drive number (for int13) */
5525:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_BootCodeEx, 0xFEEB);	/* Boot code (x86) */
5526:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);			/* Signature (placed here regardless of sector size) */
5527:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = sum = 0; i < ss; i++) {		/* VBR checksum */
5528:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i != BPB_VolFlagEx && i != BPB_VolFlagEx + 1 && i != BPB_PercInUseEx) sum = xsum32(buf[i], 
5529:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5530:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5531:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Extended bootstrap record (+1..+8) */
5532:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5533:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + ss - 2, 0xAA55);	/* Signature (placed at end of sector) */
5534:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 1; j < 9; j++) {
5535:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5536:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5537:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5538:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* OEM/Reserved record (+9..+10) */
5539:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5540:Middlewares/Third_Party/FatFs/src/ff.c **** 			for ( ; j < 11; j++) {
5541:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (i = 0; i < ss; sum = xsum32(buf[i++], sum)) ;	/* VBR checksum */
5542:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5543:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5544:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Sum record (+11) */
5545:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < ss; i += 4) st_dword(buf + i, sum);		/* Fill with checksum value */
5546:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect++, 1) != RES_OK) return FR_DISK_ERR;
5547:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5548:Middlewares/Third_Party/FatFs/src/ff.c **** 
5549:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
5550:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_EXFAT */
5551:Middlewares/Third_Party/FatFs/src/ff.c **** 	{	/* Create an FAT12/16/32 volume */
5552:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5553:Middlewares/Third_Party/FatFs/src/ff.c **** 			pau = au;
5554:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Pre-determine number of clusters and FAT sub-type */
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {	/* FAT32 volume */
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5559:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;	/* Number of clusters */
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
5565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
ARM GAS  /tmp/cc2OGbx6.s 			page 124


5568:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
5569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				n_clst = sz_vol / pau;
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
5573:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					fmt = FS_FAT12;
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
5576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n + ss - 1) / ss;		/* FAT size [sector] */
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
5580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_fat = b_vol + sz_rsv;						/* FAT base */
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
5583:Middlewares/Third_Party/FatFs/src/ff.c **** 
5584:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Align data base to erase block boundary (for flash memory media) */
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = ((b_data + sz_blk - 1) & ~(sz_blk - 1)) - b_data;	/* Next nearest erase block from current d
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
5588:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat += n / n_fats;
5590:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5591:Middlewares/Third_Party/FatFs/src/ff.c **** 
5592:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Determine number of clusters and final check of validity of the FAT sub-type */
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol < b_data + pau * 16 - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5599:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5600:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT16) {
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
5605:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((opt & FM_FAT32)) {
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
5608:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5611:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 				if  (n_clst <= MAX_FAT12) {	/* Too few clusters for FAT16 */
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
5615:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5616:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT12 && n_clst > MAX_FAT12) return FR_MKFS_ABORTED;	/* Too many clusters for FAT1
5618:Middlewares/Third_Party/FatFs/src/ff.c **** 
5619:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Ok, it is the valid cluster configuration */
5620:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
5621:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (1);
5622:Middlewares/Third_Party/FatFs/src/ff.c **** 
5623:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
5624:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[0] = b_vol; tbl[1] = b_vol + sz_vol - 1;	/* Inform the device the volume area can be erased *
ARM GAS  /tmp/cc2OGbx6.s 			page 125


5625:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, tbl);
5626:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5627:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FAT VBR */
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, ss);
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
5637:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_TotSec32, sz_vol);		/* Volume size in 32-bit LBA */
5639:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_Media] = 0xF8;							/* Media descriptor byte */
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
5653:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID, GET_FATTIME());	/* VSN */
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
5659:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BS_55AA, 0xAA55);					/* Signature (offset is fixed here regardless of sector size)
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
5662:Middlewares/Third_Party/FatFs/src/ff.c **** 
5663:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create FSINFO record if needed */
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
5674:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5675:Middlewares/Third_Party/FatFs/src/ff.c **** 
5676:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize FAT area */
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(buf, 0, (UINT)szb_buf);
5678:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < n_fats; i++) {			/* Initialize FATs each */
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
ARM GAS  /tmp/cc2OGbx6.s 			page 126


5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
5684:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, (fmt == FS_FAT12) ? 0xFFFFF8 : 0xFFFFFFF8);	/* Entry 0 and 1 */
5686:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5687:Middlewares/Third_Party/FatFs/src/ff.c **** 			nsect = sz_fat;		/* Number of FAT sectors */
5688:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {	/* Fill FAT sectors */
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = (nsect > sz_buf) ? sz_buf : nsect;
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
5694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5695:Middlewares/Third_Party/FatFs/src/ff.c **** 
5696:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Initialize root directory (fill with zero) */
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		nsect = (fmt == FS_FAT32) ? pau : sz_dir;	/* Number of root directory sectors */
5698:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (nsect > sz_buf) ? sz_buf : nsect;
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
5703:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5704:Middlewares/Third_Party/FatFs/src/ff.c **** 
5705:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
5706:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_EXFAT && fmt == FS_EXFAT) {
5707:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x07;			/* HPFS/NTFS/exFAT */
5708:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
5711:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (sz_vol >= 0x10000) {
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
5714:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = (fmt == FS_FAT16) ? 0x04 : 0x01;	/* FAT16 (<64KS) : FAT12 (<64KS) */
5716:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5717:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5719:Middlewares/Third_Party/FatFs/src/ff.c **** 
5720:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Update partition information */
5721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part != 0) {	/* Created in the existing partition */
5722:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
5723:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Read the MBR */
5724:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[MBR_Table + (part - 1) * SZ_PTE + PTE_System] = sys;		/* Set system ID */
5725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it back to the MBR */
5726:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Created as a new single partition */
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(opt & FM_SFD)) {	/* Create partition table if in FDISK format */
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
5730:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_Boot] = 0;					/* Boot indicator */
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
ARM GAS  /tmp/cc2OGbx6.s 			page 127


5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
5743:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5744:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5745:Middlewares/Third_Party/FatFs/src/ff.c **** 
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) return FR_DISK_ERR;
5747:Middlewares/Third_Party/FatFs/src/ff.c **** 
5748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
5749:Middlewares/Third_Party/FatFs/src/ff.c **** }
5750:Middlewares/Third_Party/FatFs/src/ff.c **** 
5751:Middlewares/Third_Party/FatFs/src/ff.c **** 
5752:Middlewares/Third_Party/FatFs/src/ff.c **** 
5753:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
5754:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5755:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
5756:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5757:Middlewares/Third_Party/FatFs/src/ff.c **** 
5758:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
5759:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
5760:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD* szt,	/* Pointer to the size table for each partitions */
5761:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
5762:Middlewares/Third_Party/FatFs/src/ff.c **** )
5763:Middlewares/Third_Party/FatFs/src/ff.c **** {
5764:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
5765:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
5766:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
5767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
5768:Middlewares/Third_Party/FatFs/src/ff.c **** 
5769:Middlewares/Third_Party/FatFs/src/ff.c **** 
5770:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
5771:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
5772:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
5773:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
5774:Middlewares/Third_Party/FatFs/src/ff.c **** 
5775:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the CHS without any consideration of the drive geometry */
5776:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
5777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
5778:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
5779:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
5780:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
5781:Middlewares/Third_Party/FatFs/src/ff.c **** 
5782:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
5783:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
5784:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
5785:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
5786:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;	/* Number of cylinder
5787:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
5788:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
5789:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
5790:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
5791:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
5792:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
5793:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
5794:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
5795:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cc2OGbx6.s 			page 128


5796:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;	/* End cylinder */
5797:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
5798:Middlewares/Third_Party/FatFs/src/ff.c **** 
5799:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
5800:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
5801:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
5802:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
5803:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x07;						/* System type (temporary setting) */
5804:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
5805:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
5806:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
5807:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 8, s_part);			/* Start sector in LBA */
5808:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(p + 12, sz_part);			/* Number of sectors */
5809:Middlewares/Third_Party/FatFs/src/ff.c **** 
5810:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
5811:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
5812:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5813:Middlewares/Third_Party/FatFs/src/ff.c **** 	st_word(p, 0xAA55);
5814:Middlewares/Third_Party/FatFs/src/ff.c **** 
5815:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
5816:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
5817:Middlewares/Third_Party/FatFs/src/ff.c **** }
5818:Middlewares/Third_Party/FatFs/src/ff.c **** 
5819:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
5820:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
5821:Middlewares/Third_Party/FatFs/src/ff.c **** 
5822:Middlewares/Third_Party/FatFs/src/ff.c **** 
5823:Middlewares/Third_Party/FatFs/src/ff.c **** 
5824:Middlewares/Third_Party/FatFs/src/ff.c **** 
5825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
5826:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5827:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
5828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5829:Middlewares/Third_Party/FatFs/src/ff.c **** 
5830:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
5831:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
5832:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
5833:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
5834:Middlewares/Third_Party/FatFs/src/ff.c **** )
5835:Middlewares/Third_Party/FatFs/src/ff.c **** {
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
5838:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
5839:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
5840:Middlewares/Third_Party/FatFs/src/ff.c **** 
5841:Middlewares/Third_Party/FatFs/src/ff.c **** 
5842:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
5843:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5844:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
5845:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5846:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5847:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5848:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
5849:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
5850:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence (0x80-0x7FF) */
5851:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
5852:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
ARM GAS  /tmp/cc2OGbx6.s 			page 129


5853:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
5854:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';	/* Reject invalid code range */
5855:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
5856:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence (0x800-0xFFFF) */
5857:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
5858:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
5859:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
5860:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';	/* Reject invalid code range */
5861:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
5862:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
5863:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
5864:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
5865:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5866:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
5867:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5868:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5869:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
5870:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
5871:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
5872:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
5873:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
5874:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
5875:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5876:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5877:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
5879:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
5880:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
5881:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
5882:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5883:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
5884:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
5885:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5886:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
5889:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
5890:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
5895:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
5897:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
5898:Middlewares/Third_Party/FatFs/src/ff.c **** }
5899:Middlewares/Third_Party/FatFs/src/ff.c **** 
5900:Middlewares/Third_Party/FatFs/src/ff.c **** 
5901:Middlewares/Third_Party/FatFs/src/ff.c **** 
5902:Middlewares/Third_Party/FatFs/src/ff.c **** 
5903:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
5904:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
5905:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5906:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
5907:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
5908:Middlewares/Third_Party/FatFs/src/ff.c **** 
5909:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
ARM GAS  /tmp/cc2OGbx6.s 			page 130


5910:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp;		/* Ptr to the writing file */
5911:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;	/* Write index of buf[] (-1:error), number of chars written */
5912:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];	/* Write buffer */
5913:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
5914:Middlewares/Third_Party/FatFs/src/ff.c **** 
5915:Middlewares/Third_Party/FatFs/src/ff.c **** 
5916:Middlewares/Third_Party/FatFs/src/ff.c **** static
5917:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (		/* Buffered write with code conversion */
5918:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5919:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
5920:Middlewares/Third_Party/FatFs/src/ff.c **** )
5921:Middlewares/Third_Party/FatFs/src/ff.c **** {
5922:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
5923:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
5924:Middlewares/Third_Party/FatFs/src/ff.c **** 
5925:Middlewares/Third_Party/FatFs/src/ff.c **** 
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n') {	 /* LF -> CRLF conversion */
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
5928:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5929:Middlewares/Third_Party/FatFs/src/ff.c **** 
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;		/* Write index of pb->buf[] */
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
5932:Middlewares/Third_Party/FatFs/src/ff.c **** 
5933:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
5934:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
5935:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
5936:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
5937:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
5938:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
5939:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
5940:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
5941:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
5942:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
5943:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
5944:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
5945:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
5946:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
5947:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5948:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5949:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
5950:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5951:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
5952:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
5953:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
5954:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
5955:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
5956:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
5957:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5958:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5959:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
5960:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
5961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
5962:Middlewares/Third_Party/FatFs/src/ff.c **** 
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
5966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cc2OGbx6.s 			page 131


5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
5968:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
5969:Middlewares/Third_Party/FatFs/src/ff.c **** }
5970:Middlewares/Third_Party/FatFs/src/ff.c **** 
5971:Middlewares/Third_Party/FatFs/src/ff.c **** 
5972:Middlewares/Third_Party/FatFs/src/ff.c **** static
5973:Middlewares/Third_Party/FatFs/src/ff.c **** int putc_flush (		/* Flush left characters in the buffer */
5974:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb
5975:Middlewares/Third_Party/FatFs/src/ff.c **** )
5976:Middlewares/Third_Party/FatFs/src/ff.c **** {
5977:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
5978:Middlewares/Third_Party/FatFs/src/ff.c **** 
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb->idx >= 0	/* Flush buffered characters to the file */
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
5982:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
5983:Middlewares/Third_Party/FatFs/src/ff.c **** }
5984:Middlewares/Third_Party/FatFs/src/ff.c **** 
5985:Middlewares/Third_Party/FatFs/src/ff.c **** 
5986:Middlewares/Third_Party/FatFs/src/ff.c **** static
5987:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_init (		/* Initialize write buffer */
5988:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
5989:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp
5990:Middlewares/Third_Party/FatFs/src/ff.c **** )
5991:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1416              		.loc 1 5991 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              		@ link register save eliminated.
 1421              	.LVL188:
5992:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->fp = fp;
 1422              		.loc 1 5992 0
 1423 0000 0160     		str	r1, [r0]
5993:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr = pb->idx = 0;
 1424              		.loc 1 5993 0
 1425 0002 0023     		movs	r3, #0
 1426 0004 4360     		str	r3, [r0, #4]
 1427 0006 8360     		str	r3, [r0, #8]
5994:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1428              		.loc 1 5994 0
 1429 0008 7047     		bx	lr
 1430              		.cfi_endproc
 1431              	.LFE199:
 1433              		.section	.text.validate,"ax",%progbits
 1434              		.align	1
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1438              		.fpu fpv5-d16
 1440              	validate:
 1441              	.LFB178:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 1442              		.loc 1 3220 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2OGbx6.s 			page 132


 1446              	.LVL189:
 1447 0000 38B5     		push	{r3, r4, r5, lr}
 1448              	.LCFI20:
 1449              		.cfi_def_cfa_offset 16
 1450              		.cfi_offset 3, -16
 1451              		.cfi_offset 4, -12
 1452              		.cfi_offset 5, -8
 1453              		.cfi_offset 14, -4
 1454 0002 0D46     		mov	r5, r1
 1455              	.LVL190:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1456              		.loc 1 3224 0
 1457 0004 A8B1     		cbz	r0, .L152
 1458 0006 0446     		mov	r4, r0
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1459              		.loc 1 3224 0 is_stmt 0 discriminator 1
 1460 0008 0368     		ldr	r3, [r0]
 1461 000a ABB1     		cbz	r3, .L153
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1462              		.loc 1 3224 0 discriminator 2
 1463 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1464 000e AAB1     		cbz	r2, .L154
3224:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 1465              		.loc 1 3224 0 discriminator 3
 1466 0010 8188     		ldrh	r1, [r0, #4]
 1467              	.LVL191:
 1468 0012 DA88     		ldrh	r2, [r3, #6]
 1469 0014 9142     		cmp	r1, r2
 1470 0016 03D0     		beq	.L158
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1471              		.loc 1 3221 0 is_stmt 1
 1472 0018 0920     		movs	r0, #9
 1473              	.LVL192:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1474              		.loc 1 3241 0
 1475 001a 0023     		movs	r3, #0
 1476              	.LVL193:
 1477              	.L151:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1478              		.loc 1 3241 0 is_stmt 0 discriminator 4
 1479 001c 2B60     		str	r3, [r5]
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1480              		.loc 1 3243 0 is_stmt 1 discriminator 4
 1481 001e 38BD     		pop	{r3, r4, r5, pc}
 1482              	.LVL194:
 1483              	.L158:
3236:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 1484              		.loc 1 3236 0
 1485 0020 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1486              	.LVL195:
 1487 0022 FFF7FEFF 		bl	disk_status
 1488              	.LVL196:
 1489 0026 10F0010F 		tst	r0, #1
 1490 002a 0AD1     		bne	.L156
 1491              	.LVL197:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1492              		.loc 1 3241 0
ARM GAS  /tmp/cc2OGbx6.s 			page 133


 1493 002c 2368     		ldr	r3, [r4]
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1494              		.loc 1 3237 0
 1495 002e 0020     		movs	r0, #0
 1496 0030 F4E7     		b	.L151
 1497              	.LVL198:
 1498              	.L152:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1499              		.loc 1 3221 0
 1500 0032 0920     		movs	r0, #9
 1501              	.LVL199:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1502              		.loc 1 3241 0
 1503 0034 0023     		movs	r3, #0
 1504 0036 F1E7     		b	.L151
 1505              	.LVL200:
 1506              	.L153:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1507              		.loc 1 3221 0
 1508 0038 0920     		movs	r0, #9
 1509              	.LVL201:
 1510 003a EFE7     		b	.L151
 1511              	.LVL202:
 1512              	.L154:
 1513 003c 0920     		movs	r0, #9
 1514              	.LVL203:
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1515              		.loc 1 3241 0
 1516 003e 0023     		movs	r3, #0
 1517 0040 ECE7     		b	.L151
 1518              	.LVL204:
 1519              	.L156:
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1520              		.loc 1 3221 0
 1521 0042 0920     		movs	r0, #9
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 1522              		.loc 1 3241 0
 1523 0044 0023     		movs	r3, #0
 1524 0046 E9E7     		b	.L151
 1525              		.cfi_endproc
 1526              	.LFE178:
 1528              		.section	.text.sync_window,"ax",%progbits
 1529              		.align	1
 1530              		.syntax unified
 1531              		.thumb
 1532              		.thumb_func
 1533              		.fpu fpv5-d16
 1535              	sync_window:
 1536              	.LFB154:
 886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1537              		.loc 1 886 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 0, uses_anonymous_args = 0
 1541              	.LVL205:
 1542 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1543              	.LCFI21:
ARM GAS  /tmp/cc2OGbx6.s 			page 134


 1544              		.cfi_def_cfa_offset 24
 1545              		.cfi_offset 3, -24
 1546              		.cfi_offset 4, -20
 1547              		.cfi_offset 5, -16
 1548              		.cfi_offset 6, -12
 1549              		.cfi_offset 7, -8
 1550              		.cfi_offset 14, -4
 1551              	.LVL206:
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1552              		.loc 1 892 0
 1553 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1554 0004 0BB9     		cbnz	r3, .L167
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1555              		.loc 1 889 0
 1556 0006 0020     		movs	r0, #0
 1557              	.LVL207:
 1558              	.L160:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1559              		.loc 1 907 0
 1560 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1561              	.LVL208:
 1562              	.L167:
 1563 000a 0446     		mov	r4, r0
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 1564              		.loc 1 893 0
 1565 000c C56A     		ldr	r5, [r0, #44]
 1566              	.LVL209:
 894:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1567              		.loc 1 894 0
 1568 000e 00F13007 		add	r7, r0, #48
 1569 0012 0123     		movs	r3, #1
 1570 0014 2A46     		mov	r2, r5
 1571 0016 3946     		mov	r1, r7
 1572 0018 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1573              	.LVL210:
 1574 001a FFF7FEFF 		bl	disk_write
 1575              	.LVL211:
 1576 001e A8B9     		cbnz	r0, .L164
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1577              		.loc 1 897 0
 1578 0020 0023     		movs	r3, #0
 1579 0022 E370     		strb	r3, [r4, #3]
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1580              		.loc 1 898 0
 1581 0024 236A     		ldr	r3, [r4, #32]
 1582 0026 EB1A     		subs	r3, r5, r3
 1583 0028 A269     		ldr	r2, [r4, #24]
 1584 002a 9342     		cmp	r3, r2
 1585 002c 10D2     		bcs	.L165
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1586              		.loc 1 899 0
 1587 002e A678     		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 1588              	.LVL212:
 1589              	.L161:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1590              		.loc 1 899 0 is_stmt 0 discriminator 1
 1591 0030 012E     		cmp	r6, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 135


 1592 0032 09D9     		bls	.L168
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1593              		.loc 1 900 0 is_stmt 1 discriminator 3
 1594 0034 A369     		ldr	r3, [r4, #24]
 1595 0036 1D44     		add	r5, r5, r3
 1596              	.LVL213:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1597              		.loc 1 901 0 discriminator 3
 1598 0038 0123     		movs	r3, #1
 1599 003a 2A46     		mov	r2, r5
 1600 003c 3946     		mov	r1, r7
 1601 003e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1602 0040 FFF7FEFF 		bl	disk_write
 1603              	.LVL214:
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1604              		.loc 1 899 0 discriminator 3
 1605 0044 013E     		subs	r6, r6, #1
 1606              	.LVL215:
 1607 0046 F3E7     		b	.L161
 1608              	.L168:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1609              		.loc 1 889 0
 1610 0048 0020     		movs	r0, #0
 1611 004a DDE7     		b	.L160
 1612              	.LVL216:
 1613              	.L164:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1614              		.loc 1 895 0
 1615 004c 0120     		movs	r0, #1
 1616 004e DBE7     		b	.L160
 1617              	.L165:
 889:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1618              		.loc 1 889 0
 1619 0050 0020     		movs	r0, #0
 1620 0052 D9E7     		b	.L160
 1621              		.cfi_endproc
 1622              	.LFE154:
 1624              		.section	.text.move_window,"ax",%progbits
 1625              		.align	1
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv5-d16
 1631              	move_window:
 1632              	.LFB155:
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1633              		.loc 1 916 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL217:
 1638 0000 70B5     		push	{r4, r5, r6, lr}
 1639              	.LCFI22:
 1640              		.cfi_def_cfa_offset 16
 1641              		.cfi_offset 4, -16
 1642              		.cfi_offset 5, -12
 1643              		.cfi_offset 6, -8
ARM GAS  /tmp/cc2OGbx6.s 			page 136


 1644              		.cfi_offset 14, -4
 1645              	.LVL218:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1646              		.loc 1 920 0
 1647 0002 C36A     		ldr	r3, [r0, #44]
 1648 0004 8B42     		cmp	r3, r1
 1649 0006 12D0     		beq	.L172
 1650 0008 0446     		mov	r4, r0
 1651 000a 0D46     		mov	r5, r1
 922:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1652              		.loc 1 922 0
 1653 000c FFF7FEFF 		bl	sync_window
 1654              	.LVL219:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 1655              		.loc 1 924 0
 1656 0010 0646     		mov	r6, r0
 1657 0012 68B9     		cbnz	r0, .L170
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1658              		.loc 1 925 0
 1659 0014 0123     		movs	r3, #1
 1660 0016 2A46     		mov	r2, r5
 1661 0018 04F13001 		add	r1, r4, #48
 1662 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1663              	.LVL220:
 1664 001e FFF7FEFF 		bl	disk_read
 1665              	.LVL221:
 1666 0022 10B1     		cbz	r0, .L171
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1667              		.loc 1 927 0
 1668 0024 0126     		movs	r6, #1
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1669              		.loc 1 926 0
 1670 0026 4FF0FF35 		mov	r5, #-1
 1671              	.LVL222:
 1672              	.L171:
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1673              		.loc 1 929 0
 1674 002a E562     		str	r5, [r4, #44]
 1675 002c 00E0     		b	.L170
 1676              	.LVL223:
 1677              	.L172:
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1678              		.loc 1 917 0
 1679 002e 0026     		movs	r6, #0
 1680              	.LVL224:
 1681              	.L170:
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1682              		.loc 1 933 0
 1683 0030 3046     		mov	r0, r6
 1684 0032 70BD     		pop	{r4, r5, r6, pc}
 1685              		.cfi_endproc
 1686              	.LFE155:
 1688              		.section	.text.check_fs,"ax",%progbits
 1689              		.align	1
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
ARM GAS  /tmp/cc2OGbx6.s 			page 137


 1693              		.fpu fpv5-d16
 1695              	check_fs:
 1696              	.LFB176:
2969:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1697              		.loc 1 2969 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              	.LVL225:
 1702 0000 10B5     		push	{r4, lr}
 1703              	.LCFI23:
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 4, -8
 1706              		.cfi_offset 14, -4
 1707 0002 0446     		mov	r4, r0
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1708              		.loc 1 2970 0
 1709 0004 0023     		movs	r3, #0
 1710 0006 C370     		strb	r3, [r0, #3]
 1711 0008 4FF0FF33 		mov	r3, #-1
 1712 000c C362     		str	r3, [r0, #44]
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1713              		.loc 1 2971 0
 1714 000e FFF7FEFF 		bl	move_window
 1715              	.LVL226:
 1716 0012 18BB     		cbnz	r0, .L178
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1717              		.loc 1 2973 0
 1718 0014 04F22E20 		addw	r0, r4, #558
 1719 0018 FFF7FEFF 		bl	ld_word
 1720              	.LVL227:
 1721 001c 4AF65523 		movw	r3, #43605
 1722 0020 9842     		cmp	r0, r3
 1723 0022 1DD1     		bne	.L179
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1724              		.loc 1 2975 0
 1725 0024 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1726 0028 E92B     		cmp	r3, #233
 1727 002a 05D0     		beq	.L177
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string *
 1728              		.loc 1 2975 0 is_stmt 0 discriminator 1
 1729 002c 236B     		ldr	r3, [r4, #48]
 1730 002e 03F0FF13 		and	r3, r3, #16711935
 1731 0032 0F4A     		ldr	r2, .L184
 1732 0034 9342     		cmp	r3, r2
 1733 0036 15D1     		bne	.L180
 1734              	.L177:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1735              		.loc 1 2976 0 is_stmt 1
 1736 0038 04F16600 		add	r0, r4, #102
 1737 003c FFF7FEFF 		bl	ld_dword
 1738              	.LVL228:
 1739 0040 20F07F40 		bic	r0, r0, #-16777216
 1740 0044 0B4B     		ldr	r3, .L184+4
 1741 0046 9842     		cmp	r0, r3
 1742 0048 0ED0     		beq	.L181
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cc2OGbx6.s 			page 138


 1743              		.loc 1 2977 0
 1744 004a 04F18200 		add	r0, r4, #130
 1745 004e FFF7FEFF 		bl	ld_dword
 1746              	.LVL229:
 1747 0052 094B     		ldr	r3, .L184+8
 1748 0054 9842     		cmp	r0, r3
 1749 0056 09D1     		bne	.L182
 1750 0058 0020     		movs	r0, #0
 1751 005a 02E0     		b	.L176
 1752              	.L178:
2971:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1753              		.loc 1 2971 0
 1754 005c 0420     		movs	r0, #4
 1755 005e 00E0     		b	.L176
 1756              	.L179:
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1757              		.loc 1 2973 0
 1758 0060 0320     		movs	r0, #3
 1759              	.L176:
2983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1760              		.loc 1 2983 0
 1761 0062 10BD     		pop	{r4, pc}
 1762              	.LVL230:
 1763              	.L180:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1764              		.loc 1 2982 0
 1765 0064 0220     		movs	r0, #2
 1766 0066 FCE7     		b	.L176
 1767              	.L181:
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 1768              		.loc 1 2976 0
 1769 0068 0020     		movs	r0, #0
 1770 006a FAE7     		b	.L176
 1771              	.L182:
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1772              		.loc 1 2982 0
 1773 006c 0220     		movs	r0, #2
 1774 006e F8E7     		b	.L176
 1775              	.L185:
 1776              		.align	2
 1777              	.L184:
 1778 0070 EB009000 		.word	9437419
 1779 0074 46415400 		.word	5521734
 1780 0078 46415433 		.word	861159750
 1781              		.cfi_endproc
 1782              	.LFE176:
 1784              		.section	.text.find_volume,"ax",%progbits
 1785              		.align	1
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1789              		.fpu fpv5-d16
 1791              	find_volume:
 1792              	.LFB177:
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1793              		.loc 1 2998 0
 1794              		.cfi_startproc
ARM GAS  /tmp/cc2OGbx6.s 			page 139


 1795              		@ args = 0, pretend = 0, frame = 16
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              	.LVL231:
 1798 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1799              	.LCFI24:
 1800              		.cfi_def_cfa_offset 32
 1801              		.cfi_offset 4, -32
 1802              		.cfi_offset 5, -28
 1803              		.cfi_offset 6, -24
 1804              		.cfi_offset 7, -20
 1805              		.cfi_offset 8, -16
 1806              		.cfi_offset 9, -12
 1807              		.cfi_offset 10, -8
 1808              		.cfi_offset 14, -4
 1809 0004 84B0     		sub	sp, sp, #16
 1810              	.LCFI25:
 1811              		.cfi_def_cfa_offset 48
 1812 0006 0F46     		mov	r7, r1
 1813 0008 1646     		mov	r6, r2
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1814              		.loc 1 3009 0
 1815 000a 0023     		movs	r3, #0
 1816 000c 0B60     		str	r3, [r1]
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1817              		.loc 1 3010 0
 1818 000e FFF7FEFF 		bl	get_ldnumber
 1819              	.LVL232:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1820              		.loc 1 3011 0
 1821 0012 051E     		subs	r5, r0, #0
 1822 0014 C0F24481 		blt	.L204
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1823              		.loc 1 3014 0
 1824 0018 B64B     		ldr	r3, .L235
 1825 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1826              	.LVL233:
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1827              		.loc 1 3015 0
 1828 001e 002C     		cmp	r4, #0
 1829 0020 00F04281 		beq	.L205
3018:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1830              		.loc 1 3018 0
 1831 0024 3C60     		str	r4, [r7]
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1832              		.loc 1 3020 0
 1833 0026 06F0FE06 		and	r6, r6, #254
 1834              	.LVL234:
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1835              		.loc 1 3021 0
 1836 002a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1837 002c 73B1     		cbz	r3, .L188
3022:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1838              		.loc 1 3022 0
 1839 002e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1840              	.LVL235:
 1841 0030 FFF7FEFF 		bl	disk_status
 1842              	.LVL236:
ARM GAS  /tmp/cc2OGbx6.s 			page 140


3023:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1843              		.loc 1 3023 0
 1844 0034 10F0010F 		tst	r0, #1
 1845 0038 08D1     		bne	.L188
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1846              		.loc 1 3024 0
 1847 003a 002E     		cmp	r6, #0
 1848 003c 00F03681 		beq	.L206
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1849              		.loc 1 3024 0 is_stmt 0 discriminator 1
 1850 0040 10F0040F 		tst	r0, #4
 1851 0044 40F03481 		bne	.L207
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1852              		.loc 1 3027 0 is_stmt 1
 1853 0048 0020     		movs	r0, #0
 1854              	.LVL237:
 1855 004a 2AE1     		b	.L187
 1856              	.L188:
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1857              		.loc 1 3034 0
 1858 004c 0023     		movs	r3, #0
 1859 004e 2370     		strb	r3, [r4]
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1860              		.loc 1 3035 0
 1861 0050 E8B2     		uxtb	r0, r5
 1862 0052 6070     		strb	r0, [r4, #1]
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1863              		.loc 1 3036 0
 1864 0054 FFF7FEFF 		bl	disk_initialize
 1865              	.LVL238:
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1866              		.loc 1 3037 0
 1867 0058 10F0010F 		tst	r0, #1
 1868 005c 40F02A81 		bne	.L208
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1869              		.loc 1 3040 0
 1870 0060 1EB1     		cbz	r6, .L189
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1871              		.loc 1 3040 0 is_stmt 0 discriminator 1
 1872 0062 10F0040F 		tst	r0, #4
 1873 0066 40F02781 		bne	.L209
 1874              	.L189:
 1875              	.LVL239:
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1876              		.loc 1 3050 0 is_stmt 1
 1877 006a 0021     		movs	r1, #0
 1878 006c 2046     		mov	r0, r4
 1879              	.LVL240:
 1880 006e FFF7FEFF 		bl	check_fs
 1881              	.LVL241:
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1882              		.loc 1 3051 0
 1883 0072 0228     		cmp	r0, #2
 1884 0074 00F0B680 		beq	.L210
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1885              		.loc 1 3049 0
 1886 0078 0026     		movs	r6, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 141


 1887              	.LVL242:
 1888              	.L191:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1889              		.loc 1 3063 0
 1890 007a 0428     		cmp	r0, #4
 1891 007c 00F01E81 		beq	.L213
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1892              		.loc 1 3064 0
 1893 0080 0128     		cmp	r0, #1
 1894 0082 00F21D81 		bhi	.L214
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1895              		.loc 1 3116 0
 1896 0086 04F13B00 		add	r0, r4, #59
 1897              	.LVL243:
 1898 008a FFF7FEFF 		bl	ld_word
 1899              	.LVL244:
 1900 008e B0F5007F 		cmp	r0, #512
 1901 0092 40F01781 		bne	.L215
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1902              		.loc 1 3118 0
 1903 0096 04F14600 		add	r0, r4, #70
 1904 009a FFF7FEFF 		bl	ld_word
 1905              	.LVL245:
 1906 009e 0746     		mov	r7, r0
 1907              	.LVL246:
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1908              		.loc 1 3119 0
 1909 00a0 20B9     		cbnz	r0, .L196
3119:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsize = fasize;
 1910              		.loc 1 3119 0 is_stmt 0 discriminator 1
 1911 00a2 04F15400 		add	r0, r4, #84
 1912              	.LVL247:
 1913 00a6 FFF7FEFF 		bl	ld_dword
 1914              	.LVL248:
 1915 00aa 0746     		mov	r7, r0
 1916              	.LVL249:
 1917              	.L196:
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1918              		.loc 1 3120 0 is_stmt 1
 1919 00ac A761     		str	r7, [r4, #24]
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1920              		.loc 1 3122 0
 1921 00ae 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 1922 00b2 A270     		strb	r2, [r4, #2]
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1923              		.loc 1 3123 0
 1924 00b4 531E     		subs	r3, r2, #1
 1925 00b6 DBB2     		uxtb	r3, r3
 1926 00b8 012B     		cmp	r3, #1
 1927 00ba 00F20581 		bhi	.L216
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1928              		.loc 1 3124 0
 1929 00be 07FB02F5 		mul	r5, r7, r2
 1930              	.LVL250:
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1931              		.loc 1 3126 0
 1932 00c2 94F83D80 		ldrb	r8, [r4, #61]	@ zero_extendqisi2
ARM GAS  /tmp/cc2OGbx6.s 			page 142


 1933 00c6 A4F80A80 		strh	r8, [r4, #10]	@ movhi
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1934              		.loc 1 3127 0
 1935 00ca B8F1000F 		cmp	r8, #0
 1936 00ce 00F0FD80 		beq	.L217
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1937              		.loc 1 3127 0 is_stmt 0 discriminator 2
 1938 00d2 08F1FF33 		add	r3, r8, #-1
 1939 00d6 18EA030F 		tst	r8, r3
 1940 00da 40F0F980 		bne	.L218
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1941              		.loc 1 3129 0 is_stmt 1
 1942 00de 04F14100 		add	r0, r4, #65
 1943 00e2 FFF7FEFF 		bl	ld_word
 1944              	.LVL251:
 1945 00e6 8246     		mov	r10, r0
 1946 00e8 2081     		strh	r0, [r4, #8]	@ movhi
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1947              		.loc 1 3130 0
 1948 00ea 10F00F0F 		tst	r0, #15
 1949 00ee 40F0F180 		bne	.L219
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1950              		.loc 1 3132 0
 1951 00f2 04F14300 		add	r0, r4, #67
 1952 00f6 FFF7FEFF 		bl	ld_word
 1953              	.LVL252:
 1954 00fa 8146     		mov	r9, r0
 1955              	.LVL253:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1956              		.loc 1 3133 0
 1957 00fc 20B9     		cbnz	r0, .L197
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1958              		.loc 1 3133 0 is_stmt 0 discriminator 1
 1959 00fe 04F15000 		add	r0, r4, #80
 1960              	.LVL254:
 1961 0102 FFF7FEFF 		bl	ld_dword
 1962              	.LVL255:
 1963 0106 8146     		mov	r9, r0
 1964              	.LVL256:
 1965              	.L197:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1966              		.loc 1 3135 0 is_stmt 1
 1967 0108 04F13E00 		add	r0, r4, #62
 1968              	.LVL257:
 1969 010c FFF7FEFF 		bl	ld_word
 1970              	.LVL258:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1971              		.loc 1 3136 0
 1972 0110 0146     		mov	r1, r0
 1973 0112 0028     		cmp	r0, #0
 1974 0114 00F0E080 		beq	.L220
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1975              		.loc 1 3139 0
 1976 0118 4219     		adds	r2, r0, r5
 1977 011a 02EB1A12 		add	r2, r2, r10, lsr #4
 1978              	.LVL259:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
ARM GAS  /tmp/cc2OGbx6.s 			page 143


 1979              		.loc 1 3140 0
 1980 011e 9145     		cmp	r9, r2
 1981 0120 C0F0DC80 		bcc	.L221
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1982              		.loc 1 3141 0
 1983 0124 A9EB0203 		sub	r3, r9, r2
 1984 0128 B3FBF8F3 		udiv	r3, r3, r8
 1985              	.LVL260:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 1986              		.loc 1 3142 0
 1987 012c 002B     		cmp	r3, #0
 1988 012e 00F0D780 		beq	.L222
 1989              	.LVL261:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1990              		.loc 1 3144 0
 1991 0132 4FF6F570 		movw	r0, #65525
 1992              	.LVL262:
 1993 0136 8342     		cmp	r3, r0
 1994 0138 6CD9     		bls	.L223
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1995              		.loc 1 3143 0
 1996 013a 4FF00309 		mov	r9, #3
 1997              	.LVL263:
 1998              	.L198:
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1999              		.loc 1 3145 0
 2000 013e 40F6F570 		movw	r0, #4085
 2001 0142 8342     		cmp	r3, r0
 2002 0144 01D8     		bhi	.L199
 2003 0146 4FF00109 		mov	r9, #1
 2004              	.LVL264:
 2005              	.L199:
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 2006              		.loc 1 3148 0
 2007 014a 03F10208 		add	r8, r3, #2
 2008 014e C4F81480 		str	r8, [r4, #20]
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 2009              		.loc 1 3149 0
 2010 0152 E661     		str	r6, [r4, #28]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 2011              		.loc 1 3150 0
 2012 0154 8B19     		adds	r3, r1, r6
 2013              	.LVL265:
 2014 0156 2362     		str	r3, [r4, #32]
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 2015              		.loc 1 3151 0
 2016 0158 3244     		add	r2, r2, r6
 2017              	.LVL266:
 2018 015a A262     		str	r2, [r4, #40]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 2019              		.loc 1 3152 0
 2020 015c B9F1030F 		cmp	r9, #3
 2021 0160 5BD0     		beq	.L230
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2022              		.loc 1 3158 0
 2023 0162 BAF1000F 		cmp	r10, #0
 2024 0166 00F0C180 		beq	.L227
ARM GAS  /tmp/cc2OGbx6.s 			page 144


3159:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 2025              		.loc 1 3159 0
 2026 016a 2B44     		add	r3, r3, r5
 2027 016c 6362     		str	r3, [r4, #36]
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2028              		.loc 1 3161 0
 2029 016e B9F1020F 		cmp	r9, #2
 2030 0172 63D0     		beq	.L231
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2031              		.loc 1 3161 0 is_stmt 0 discriminator 2
 2032 0174 08EB4802 		add	r2, r8, r8, lsl #1
 2033 0178 08F00103 		and	r3, r8, #1
 2034 017c 03EB5203 		add	r3, r3, r2, lsr #1
 2035              	.LVL267:
 2036              	.L201:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2037              		.loc 1 3163 0 is_stmt 1
 2038 0180 03F2FF13 		addw	r3, r3, #511
 2039              	.LVL268:
 2040 0184 B7EB532F 		cmp	r7, r3, lsr #9
 2041 0188 C0F0B280 		bcc	.L228
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0x80;
 2042              		.loc 1 3167 0
 2043 018c 4FF0FF33 		mov	r3, #-1
 2044              	.LVL269:
 2045 0190 2361     		str	r3, [r4, #16]
 2046 0192 E360     		str	r3, [r4, #12]
3168:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 2047              		.loc 1 3168 0
 2048 0194 8023     		movs	r3, #128
 2049 0196 2371     		strb	r3, [r4, #4]
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 2050              		.loc 1 3170 0
 2051 0198 B9F1030F 		cmp	r9, #3
 2052 019c 51D0     		beq	.L232
 2053              	.L203:
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;		/* File system mount ID */
 2054              		.loc 1 3191 0
 2055 019e 84F80090 		strb	r9, [r4]
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 2056              		.loc 1 3192 0
 2057 01a2 554A     		ldr	r2, .L235+4
 2058 01a4 1388     		ldrh	r3, [r2]
 2059 01a6 0133     		adds	r3, r3, #1
 2060 01a8 9BB2     		uxth	r3, r3
 2061 01aa 1380     		strh	r3, [r2]	@ movhi
 2062 01ac E380     		strh	r3, [r4, #6]	@ movhi
3203:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2063              		.loc 1 3203 0
 2064 01ae 2046     		mov	r0, r4
 2065 01b0 FFF7FEFF 		bl	clear_lock
 2066              	.LVL270:
3205:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2067              		.loc 1 3205 0
 2068 01b4 0020     		movs	r0, #0
 2069 01b6 74E0     		b	.L187
 2070              	.LVL271:
ARM GAS  /tmp/cc2OGbx6.s 			page 145


 2071              	.L211:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2072              		.loc 1 3054 0
 2073 01b8 0020     		movs	r0, #0
 2074              	.LVL272:
 2075              	.L192:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2076              		.loc 1 3054 0 is_stmt 0 discriminator 4
 2077 01ba 04AB     		add	r3, sp, #16
 2078 01bc 03EB8503 		add	r3, r3, r5, lsl #2
 2079 01c0 43F8100C 		str	r0, [r3, #-16]
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2080              		.loc 1 3052 0 is_stmt 1 discriminator 4
 2081 01c4 0135     		adds	r5, r5, #1
 2082              	.LVL273:
 2083              	.L190:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2084              		.loc 1 3052 0 is_stmt 0 discriminator 2
 2085 01c6 032D     		cmp	r5, #3
 2086 01c8 0ED8     		bhi	.L233
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 2087              		.loc 1 3053 0 is_stmt 1
 2088 01ca 04F13000 		add	r0, r4, #48
 2089 01ce 2B01     		lsls	r3, r5, #4
 2090 01d0 03F5DF73 		add	r3, r3, #446
 2091 01d4 1844     		add	r0, r0, r3
 2092              	.LVL274:
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2093              		.loc 1 3054 0
 2094 01d6 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2095 01d8 002B     		cmp	r3, #0
 2096 01da EDD0     		beq	.L211
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2097              		.loc 1 3054 0 is_stmt 0 discriminator 1
 2098 01dc 0830     		adds	r0, r0, #8
 2099              	.LVL275:
 2100 01de FFF7FEFF 		bl	ld_dword
 2101              	.LVL276:
 2102 01e2 EAE7     		b	.L192
 2103              	.LVL277:
 2104              	.L210:
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 2105              		.loc 1 3052 0 is_stmt 1
 2106 01e4 0025     		movs	r5, #0
 2107              	.LVL278:
 2108 01e6 EEE7     		b	.L190
 2109              	.LVL279:
 2110              	.L233:
 2111 01e8 0025     		movs	r5, #0
 2112              	.LVL280:
 2113 01ea 0AE0     		b	.L195
 2114              	.LVL281:
 2115              	.L234:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2116              		.loc 1 3060 0 discriminator 1
 2117 01ec 3146     		mov	r1, r6
 2118 01ee 2046     		mov	r0, r4
ARM GAS  /tmp/cc2OGbx6.s 			page 146


 2119 01f0 FFF7FEFF 		bl	check_fs
 2120              	.LVL282:
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2121              		.loc 1 3061 0 discriminator 1
 2122 01f4 0128     		cmp	r0, #1
 2123 01f6 7FF640AF 		bls	.L191
 2124              	.LVL283:
 2125              	.L194:
 2126 01fa 0135     		adds	r5, r5, #1
 2127              	.LVL284:
 2128 01fc 032D     		cmp	r5, #3
 2129 01fe 3FF63CAF 		bhi	.L191
 2130              	.LVL285:
 2131              	.L195:
3059:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 2132              		.loc 1 3059 0
 2133 0202 04AB     		add	r3, sp, #16
 2134 0204 03EB8503 		add	r3, r3, r5, lsl #2
 2135 0208 53F8106C 		ldr	r6, [r3, #-16]
 2136              	.LVL286:
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 2137              		.loc 1 3060 0
 2138 020c 002E     		cmp	r6, #0
 2139 020e EDD1     		bne	.L234
 2140 0210 0320     		movs	r0, #3
 2141 0212 F2E7     		b	.L194
 2142              	.LVL287:
 2143              	.L223:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 2144              		.loc 1 3144 0
 2145 0214 4FF00209 		mov	r9, #2
 2146              	.LVL288:
 2147 0218 91E7     		b	.L198
 2148              	.LVL289:
 2149              	.L230:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2150              		.loc 1 3153 0
 2151 021a 04F15A00 		add	r0, r4, #90
 2152 021e FFF7FEFF 		bl	ld_word
 2153              	.LVL290:
 2154 0222 0028     		cmp	r0, #0
 2155 0224 5ED1     		bne	.L225
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2156              		.loc 1 3154 0
 2157 0226 BAF1000F 		cmp	r10, #0
 2158 022a 5DD1     		bne	.L226
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 2159              		.loc 1 3155 0
 2160 022c 04F15C00 		add	r0, r4, #92
 2161 0230 FFF7FEFF 		bl	ld_dword
 2162              	.LVL291:
 2163 0234 6062     		str	r0, [r4, #36]
3156:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 2164              		.loc 1 3156 0
 2165 0236 4FEA8803 		lsl	r3, r8, #2
 2166              	.LVL292:
 2167 023a A1E7     		b	.L201
ARM GAS  /tmp/cc2OGbx6.s 			page 147


 2168              	.LVL293:
 2169              	.L231:
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2170              		.loc 1 3161 0 discriminator 1
 2171 023c 4FEA4803 		lsl	r3, r8, #1
 2172 0240 9EE7     		b	.L201
 2173              	.LVL294:
 2174              	.L232:
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 2175              		.loc 1 3171 0
 2176 0242 04F16000 		add	r0, r4, #96
 2177 0246 FFF7FEFF 		bl	ld_word
 2178              	.LVL295:
 2179 024a 0128     		cmp	r0, #1
 2180 024c A7D1     		bne	.L203
3172:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 2181              		.loc 1 3172 0
 2182 024e 711C     		adds	r1, r6, #1
 2183 0250 2046     		mov	r0, r4
 2184 0252 FFF7FEFF 		bl	move_window
 2185              	.LVL296:
 2186 0256 0028     		cmp	r0, #0
 2187 0258 A1D1     		bne	.L203
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2188              		.loc 1 3174 0
 2189 025a 0023     		movs	r3, #0
 2190 025c 2371     		strb	r3, [r4, #4]
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 2191              		.loc 1 3175 0
 2192 025e 04F22E20 		addw	r0, r4, #558
 2193 0262 FFF7FEFF 		bl	ld_word
 2194              	.LVL297:
 2195 0266 4AF65523 		movw	r3, #43605
 2196 026a 9842     		cmp	r0, r3
 2197 026c 97D1     		bne	.L203
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 2198              		.loc 1 3176 0
 2199 026e 04F13000 		add	r0, r4, #48
 2200 0272 FFF7FEFF 		bl	ld_dword
 2201              	.LVL298:
 2202 0276 214B     		ldr	r3, .L235+8
 2203 0278 9842     		cmp	r0, r3
 2204 027a 90D1     		bne	.L203
3177:Middlewares/Third_Party/FatFs/src/ff.c **** 			{
 2205              		.loc 1 3177 0
 2206 027c 04F50570 		add	r0, r4, #532
 2207 0280 FFF7FEFF 		bl	ld_dword
 2208              	.LVL299:
 2209 0284 1E4B     		ldr	r3, .L235+12
 2210 0286 9842     		cmp	r0, r3
 2211 0288 89D1     		bne	.L203
3180:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2212              		.loc 1 3180 0
 2213 028a 04F50670 		add	r0, r4, #536
 2214 028e FFF7FEFF 		bl	ld_dword
 2215              	.LVL300:
 2216 0292 2061     		str	r0, [r4, #16]
ARM GAS  /tmp/cc2OGbx6.s 			page 148


3183:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2217              		.loc 1 3183 0
 2218 0294 04F50770 		add	r0, r4, #540
 2219 0298 FFF7FEFF 		bl	ld_dword
 2220              	.LVL301:
 2221 029c E060     		str	r0, [r4, #12]
 2222 029e 7EE7     		b	.L203
 2223              	.LVL302:
 2224              	.L204:
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2225              		.loc 1 3011 0
 2226 02a0 0B20     		movs	r0, #11
 2227              	.LVL303:
 2228              	.L187:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2229              		.loc 1 3206 0
 2230 02a2 04B0     		add	sp, sp, #16
 2231              	.LCFI26:
 2232              		.cfi_remember_state
 2233              		.cfi_def_cfa_offset 32
 2234              		@ sp needed
 2235 02a4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2236              	.LVL304:
 2237              	.L205:
 2238              	.LCFI27:
 2239              		.cfi_restore_state
3015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2240              		.loc 1 3015 0
 2241 02a8 0C20     		movs	r0, #12
 2242              	.LVL305:
 2243 02aa FAE7     		b	.L187
 2244              	.LVL306:
 2245              	.L206:
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2246              		.loc 1 3027 0
 2247 02ac 0020     		movs	r0, #0
 2248              	.LVL307:
 2249 02ae F8E7     		b	.L187
 2250              	.LVL308:
 2251              	.L207:
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2252              		.loc 1 3025 0
 2253 02b0 0A20     		movs	r0, #10
 2254              	.LVL309:
 2255 02b2 F6E7     		b	.L187
 2256              	.LVL310:
 2257              	.L208:
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2258              		.loc 1 3038 0
 2259 02b4 0320     		movs	r0, #3
 2260              	.LVL311:
 2261 02b6 F4E7     		b	.L187
 2262              	.LVL312:
 2263              	.L209:
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2264              		.loc 1 3041 0
 2265 02b8 0A20     		movs	r0, #10
ARM GAS  /tmp/cc2OGbx6.s 			page 149


 2266              	.LVL313:
 2267 02ba F2E7     		b	.L187
 2268              	.LVL314:
 2269              	.L213:
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 2270              		.loc 1 3063 0
 2271 02bc 0120     		movs	r0, #1
 2272              	.LVL315:
 2273 02be F0E7     		b	.L187
 2274              	.LVL316:
 2275              	.L214:
3064:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2276              		.loc 1 3064 0
 2277 02c0 0D20     		movs	r0, #13
 2278              	.LVL317:
 2279 02c2 EEE7     		b	.L187
 2280              	.L215:
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2281              		.loc 1 3116 0
 2282 02c4 0D20     		movs	r0, #13
 2283 02c6 ECE7     		b	.L187
 2284              	.LVL318:
 2285              	.L216:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 2286              		.loc 1 3123 0
 2287 02c8 0D20     		movs	r0, #13
 2288              	.LVL319:
 2289 02ca EAE7     		b	.L187
 2290              	.LVL320:
 2291              	.L217:
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2292              		.loc 1 3127 0
 2293 02cc 0D20     		movs	r0, #13
 2294 02ce E8E7     		b	.L187
 2295              	.L218:
 2296 02d0 0D20     		movs	r0, #13
 2297 02d2 E6E7     		b	.L187
 2298              	.L219:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2299              		.loc 1 3130 0
 2300 02d4 0D20     		movs	r0, #13
 2301 02d6 E4E7     		b	.L187
 2302              	.LVL321:
 2303              	.L220:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2304              		.loc 1 3136 0
 2305 02d8 0D20     		movs	r0, #13
 2306              	.LVL322:
 2307 02da E2E7     		b	.L187
 2308              	.LVL323:
 2309              	.L221:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2310              		.loc 1 3140 0
 2311 02dc 0D20     		movs	r0, #13
 2312              	.LVL324:
 2313 02de E0E7     		b	.L187
 2314              	.LVL325:
ARM GAS  /tmp/cc2OGbx6.s 			page 150


 2315              	.L222:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT32;
 2316              		.loc 1 3142 0
 2317 02e0 0D20     		movs	r0, #13
 2318              	.LVL326:
 2319 02e2 DEE7     		b	.L187
 2320              	.LVL327:
 2321              	.L225:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->n_rootdir) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2322              		.loc 1 3153 0
 2323 02e4 0D20     		movs	r0, #13
 2324 02e6 DCE7     		b	.L187
 2325              	.L226:
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2326              		.loc 1 3154 0
 2327 02e8 0D20     		movs	r0, #13
 2328 02ea DAE7     		b	.L187
 2329              	.LVL328:
 2330              	.L227:
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2331              		.loc 1 3158 0
 2332 02ec 0D20     		movs	r0, #13
 2333 02ee D8E7     		b	.L187
 2334              	.LVL329:
 2335              	.L228:
3163:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2336              		.loc 1 3163 0
 2337 02f0 0D20     		movs	r0, #13
 2338 02f2 D6E7     		b	.L187
 2339              	.L236:
 2340              		.align	2
 2341              	.L235:
 2342 02f4 00000000 		.word	.LANCHOR2
 2343 02f8 00000000 		.word	.LANCHOR3
 2344 02fc 52526141 		.word	1096897106
 2345 0300 72724161 		.word	1631679090
 2346              		.cfi_endproc
 2347              	.LFE177:
 2349              		.section	.text.put_fat,"ax",%progbits
 2350              		.align	1
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv5-d16
 2356              	put_fat:
 2357              	.LFB159:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2358              		.loc 1 1086 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              	.LVL330:
 2363 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2364              	.LCFI28:
 2365              		.cfi_def_cfa_offset 32
 2366              		.cfi_offset 4, -32
 2367              		.cfi_offset 5, -28
ARM GAS  /tmp/cc2OGbx6.s 			page 151


 2368              		.cfi_offset 6, -24
 2369              		.cfi_offset 7, -20
 2370              		.cfi_offset 8, -16
 2371              		.cfi_offset 9, -12
 2372              		.cfi_offset 10, -8
 2373              		.cfi_offset 14, -4
 2374              	.LVL331:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2375              		.loc 1 1091 0
 2376 0004 0129     		cmp	r1, #1
 2377 0006 7AD9     		bls	.L246
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 2378              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2379 0008 4369     		ldr	r3, [r0, #20]
 2380 000a 8B42     		cmp	r3, r1
 2381 000c 79D9     		bls	.L247
 2382 000e 1746     		mov	r7, r2
 2383 0010 0C46     		mov	r4, r1
 2384 0012 0646     		mov	r6, r0
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :	/* Bitfield items */
 2385              		.loc 1 1092 0 is_stmt 1
 2386 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2387 0016 022B     		cmp	r3, #2
 2388 0018 43D0     		beq	.L239
 2389 001a 032B     		cmp	r3, #3
 2390 001c 54D0     		beq	.L240
 2391 001e 012B     		cmp	r3, #1
 2392 0020 01D0     		beq	.L251
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2393              		.loc 1 1089 0
 2394 0022 0225     		movs	r5, #2
 2395 0024 6EE0     		b	.L238
 2396              	.L251:
 2397              	.LVL332:
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2398              		.loc 1 1094 0
 2399 0026 01EB5108 		add	r8, r1, r1, lsr #1
 2400              	.LVL333:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2401              		.loc 1 1095 0
 2402 002a 016A     		ldr	r1, [r0, #32]
 2403              	.LVL334:
 2404 002c 01EB5821 		add	r1, r1, r8, lsr #9
 2405 0030 FFF7FEFF 		bl	move_window
 2406              	.LVL335:
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2407              		.loc 1 1096 0
 2408 0034 0546     		mov	r5, r0
 2409 0036 0028     		cmp	r0, #0
 2410 0038 64D1     		bne	.L238
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2411              		.loc 1 1097 0
 2412 003a 06F1300A 		add	r10, r6, #48
 2413 003e 08F10109 		add	r9, r8, #1
 2414              	.LVL336:
 2415 0042 C8F30808 		ubfx	r8, r8, #0, #9
 2416              	.LVL337:
ARM GAS  /tmp/cc2OGbx6.s 			page 152


1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2417              		.loc 1 1098 0
 2418 0046 14F00104 		ands	r4, r4, #1
 2419              	.LVL338:
 2420 004a 1FD0     		beq	.L242
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2421              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2422 004c 1AF90830 		ldrsb	r3, [r10, r8]
 2423 0050 03F00F03 		and	r3, r3, #15
 2424 0054 3A01     		lsls	r2, r7, #4
 2425 0056 02F47F62 		and	r2, r2, #4080
 2426 005a 1343     		orrs	r3, r3, r2
 2427 005c DBB2     		uxtb	r3, r3
 2428              	.L243:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2429              		.loc 1 1098 0 discriminator 4
 2430 005e 0AF80830 		strb	r3, [r10, r8]
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2431              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2432 0062 0123     		movs	r3, #1
 2433 0064 F370     		strb	r3, [r6, #3]
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2434              		.loc 1 1100 0 discriminator 4
 2435 0066 316A     		ldr	r1, [r6, #32]
 2436 0068 01EB5921 		add	r1, r1, r9, lsr #9
 2437 006c 3046     		mov	r0, r6
 2438              	.LVL339:
 2439 006e FFF7FEFF 		bl	move_window
 2440              	.LVL340:
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = fs->win + bc % SS(fs);
 2441              		.loc 1 1101 0 discriminator 4
 2442 0072 0546     		mov	r5, r0
 2443 0074 0028     		cmp	r0, #0
 2444 0076 45D1     		bne	.L238
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2445              		.loc 1 1102 0
 2446 0078 C9F30809 		ubfx	r9, r9, #0, #9
 2447              	.LVL341:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2448              		.loc 1 1103 0
 2449 007c 44B1     		cbz	r4, .L244
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2450              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2451 007e C7F30712 		ubfx	r2, r7, #4, #8
 2452              	.LVL342:
 2453              	.L245:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2454              		.loc 1 1103 0 discriminator 4
 2455 0082 0AF80920 		strb	r2, [r10, r9]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2456              		.loc 1 1104 0 is_stmt 1 discriminator 4
 2457 0086 0123     		movs	r3, #1
 2458 0088 F370     		strb	r3, [r6, #3]
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2459              		.loc 1 1105 0 discriminator 4
 2460 008a 3BE0     		b	.L238
 2461              	.LVL343:
ARM GAS  /tmp/cc2OGbx6.s 			page 153


 2462              	.L242:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2463              		.loc 1 1098 0 discriminator 2
 2464 008c FBB2     		uxtb	r3, r7
 2465 008e E6E7     		b	.L243
 2466              	.LVL344:
 2467              	.L244:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2468              		.loc 1 1103 0 discriminator 2
 2469 0090 1AF90920 		ldrsb	r2, [r10, r9]
 2470 0094 22F00F02 		bic	r2, r2, #15
 2471 0098 C7F30327 		ubfx	r7, r7, #8, #4
 2472              	.LVL345:
 2473 009c 3A43     		orrs	r2, r2, r7
 2474 009e D2B2     		uxtb	r2, r2
 2475 00a0 EFE7     		b	.L245
 2476              	.LVL346:
 2477              	.L239:
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2478              		.loc 1 1108 0
 2479 00a2 016A     		ldr	r1, [r0, #32]
 2480              	.LVL347:
 2481 00a4 01EB1421 		add	r1, r1, r4, lsr #8
 2482 00a8 FFF7FEFF 		bl	move_window
 2483              	.LVL348:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 2484              		.loc 1 1109 0
 2485 00ac 0546     		mov	r5, r0
 2486 00ae 48BB     		cbnz	r0, .L238
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2487              		.loc 1 1110 0
 2488 00b0 06F13000 		add	r0, r6, #48
 2489              	.LVL349:
 2490 00b4 6400     		lsls	r4, r4, #1
 2491              	.LVL350:
 2492 00b6 04F4FF74 		and	r4, r4, #510
 2493 00ba B9B2     		uxth	r1, r7
 2494 00bc 2044     		add	r0, r0, r4
 2495 00be FFF7FEFF 		bl	st_word
 2496              	.LVL351:
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2497              		.loc 1 1111 0
 2498 00c2 0123     		movs	r3, #1
 2499 00c4 F370     		strb	r3, [r6, #3]
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2500              		.loc 1 1112 0
 2501 00c6 1DE0     		b	.L238
 2502              	.LVL352:
 2503              	.L240:
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2504              		.loc 1 1118 0
 2505 00c8 016A     		ldr	r1, [r0, #32]
 2506              	.LVL353:
 2507 00ca 01EBD411 		add	r1, r1, r4, lsr #7
 2508 00ce FFF7FEFF 		bl	move_window
 2509              	.LVL354:
1119:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
ARM GAS  /tmp/cc2OGbx6.s 			page 154


 2510              		.loc 1 1119 0
 2511 00d2 0546     		mov	r5, r0
 2512 00d4 B0B9     		cbnz	r0, .L238
1121:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2513              		.loc 1 1121 0
 2514 00d6 27F07047 		bic	r7, r7, #-268435456
 2515              	.LVL355:
 2516 00da 06F13003 		add	r3, r6, #48
 2517 00de A100     		lsls	r1, r4, #2
 2518 00e0 01F4FE71 		and	r1, r1, #508
 2519 00e4 5C18     		adds	r4, r3, r1
 2520              	.LVL356:
 2521 00e6 2046     		mov	r0, r4
 2522              	.LVL357:
 2523 00e8 FFF7FEFF 		bl	ld_dword
 2524              	.LVL358:
 2525 00ec 00F07041 		and	r1, r0, #-268435456
 2526              	.LVL359:
1123:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2527              		.loc 1 1123 0
 2528 00f0 3943     		orrs	r1, r1, r7
 2529              	.LVL360:
 2530 00f2 2046     		mov	r0, r4
 2531 00f4 FFF7FEFF 		bl	st_dword
 2532              	.LVL361:
1124:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2533              		.loc 1 1124 0
 2534 00f8 0123     		movs	r3, #1
 2535 00fa F370     		strb	r3, [r6, #3]
1125:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2536              		.loc 1 1125 0
 2537 00fc 02E0     		b	.L238
 2538              	.LVL362:
 2539              	.L246:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2540              		.loc 1 1089 0
 2541 00fe 0225     		movs	r5, #2
 2542 0100 00E0     		b	.L238
 2543              	.L247:
 2544 0102 0225     		movs	r5, #2
 2545              	.LVL363:
 2546              	.L238:
1129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2547              		.loc 1 1129 0
 2548 0104 2846     		mov	r0, r5
 2549 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2550              		.cfi_endproc
 2551              	.LFE159:
 2553              		.section	.text.get_fat,"ax",%progbits
 2554              		.align	1
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2558              		.fpu fpv5-d16
 2560              	get_fat:
 2561              	.LFB158:
1005:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
ARM GAS  /tmp/cc2OGbx6.s 			page 155


 2562              		.loc 1 1005 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 0
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566              	.LVL364:
 2567 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2568              	.LCFI29:
 2569              		.cfi_def_cfa_offset 24
 2570              		.cfi_offset 3, -24
 2571              		.cfi_offset 4, -20
 2572              		.cfi_offset 5, -16
 2573              		.cfi_offset 6, -12
 2574              		.cfi_offset 7, -8
 2575              		.cfi_offset 14, -4
1008:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2576              		.loc 1 1008 0
 2577 0002 0668     		ldr	r6, [r0]
 2578              	.LVL365:
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2579              		.loc 1 1011 0
 2580 0004 0129     		cmp	r1, #1
 2581 0006 53D9     		bls	.L258
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2582              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2583 0008 7369     		ldr	r3, [r6, #20]
 2584 000a 8B42     		cmp	r3, r1
 2585 000c 52D9     		bls	.L259
 2586 000e 0C46     		mov	r4, r1
 2587              	.LVL366:
1017:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2588              		.loc 1 1017 0 is_stmt 1
 2589 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2590 0012 022B     		cmp	r3, #2
 2591 0014 2BD0     		beq	.L254
 2592 0016 032B     		cmp	r3, #3
 2593 0018 39D0     		beq	.L255
 2594 001a 012B     		cmp	r3, #1
 2595 001c 01D0     		beq	.L267
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2596              		.loc 1 1065 0
 2597 001e 0120     		movs	r0, #1
 2598              	.LVL367:
 2599 0020 47E0     		b	.L252
 2600              	.LVL368:
 2601              	.L267:
1019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2602              		.loc 1 1019 0
 2603 0022 01EB5105 		add	r5, r1, r1, lsr #1
 2604              	.LVL369:
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win[bc++ % SS(fs)];
 2605              		.loc 1 1020 0
 2606 0026 316A     		ldr	r1, [r6, #32]
 2607              	.LVL370:
 2608 0028 01EB5521 		add	r1, r1, r5, lsr #9
 2609 002c 3046     		mov	r0, r6
 2610              	.LVL371:
 2611 002e FFF7FEFF 		bl	move_window
ARM GAS  /tmp/cc2OGbx6.s 			page 156


 2612              	.LVL372:
 2613 0032 0028     		cmp	r0, #0
 2614 0034 40D1     		bne	.L261
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2615              		.loc 1 1021 0
 2616 0036 6F1C     		adds	r7, r5, #1
 2617              	.LVL373:
 2618 0038 C5F30805 		ubfx	r5, r5, #0, #9
 2619 003c 3544     		add	r5, r5, r6
 2620 003e 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2621              	.LVL374:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;
 2622              		.loc 1 1022 0
 2623 0042 316A     		ldr	r1, [r6, #32]
 2624 0044 01EB5721 		add	r1, r1, r7, lsr #9
 2625 0048 3046     		mov	r0, r6
 2626 004a FFF7FEFF 		bl	move_window
 2627              	.LVL375:
 2628 004e B0BB     		cbnz	r0, .L262
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2629              		.loc 1 1023 0
 2630 0050 C7F30803 		ubfx	r3, r7, #0, #9
 2631 0054 3344     		add	r3, r3, r6
 2632 0056 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2633 005a 45EA0020 		orr	r0, r5, r0, lsl #8
 2634              	.LVL376:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2635              		.loc 1 1024 0
 2636 005e 14F0010F 		tst	r4, #1
 2637 0062 01D0     		beq	.L257
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2638              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2639 0064 0009     		lsrs	r0, r0, #4
 2640              	.LVL377:
 2641 0066 24E0     		b	.L252
 2642              	.LVL378:
 2643              	.L257:
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2644              		.loc 1 1024 0 discriminator 2
 2645 0068 C0F30B00 		ubfx	r0, r0, #0, #12
 2646              	.LVL379:
 2647 006c 21E0     		b	.L252
 2648              	.LVL380:
 2649              	.L254:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));
 2650              		.loc 1 1028 0 is_stmt 1
 2651 006e 316A     		ldr	r1, [r6, #32]
 2652              	.LVL381:
 2653 0070 01EB1421 		add	r1, r1, r4, lsr #8
 2654 0074 3046     		mov	r0, r6
 2655              	.LVL382:
 2656 0076 FFF7FEFF 		bl	move_window
 2657              	.LVL383:
 2658 007a 18BB     		cbnz	r0, .L263
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2659              		.loc 1 1029 0
 2660 007c 06F13000 		add	r0, r6, #48
ARM GAS  /tmp/cc2OGbx6.s 			page 157


 2661 0080 6100     		lsls	r1, r4, #1
 2662 0082 01F4FF71 		and	r1, r1, #510
 2663 0086 0844     		add	r0, r0, r1
 2664 0088 FFF7FEFF 		bl	ld_word
 2665              	.LVL384:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2666              		.loc 1 1030 0
 2667 008c 11E0     		b	.L252
 2668              	.LVL385:
 2669              	.L255:
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 2670              		.loc 1 1033 0
 2671 008e 316A     		ldr	r1, [r6, #32]
 2672              	.LVL386:
 2673 0090 01EBD411 		add	r1, r1, r4, lsr #7
 2674 0094 3046     		mov	r0, r6
 2675              	.LVL387:
 2676 0096 FFF7FEFF 		bl	move_window
 2677              	.LVL388:
 2678 009a B0B9     		cbnz	r0, .L264
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2679              		.loc 1 1034 0
 2680 009c 3036     		adds	r6, r6, #48
 2681              	.LVL389:
 2682 009e A100     		lsls	r1, r4, #2
 2683 00a0 01F4FE70 		and	r0, r1, #508
 2684 00a4 3044     		add	r0, r0, r6
 2685 00a6 FFF7FEFF 		bl	ld_dword
 2686              	.LVL390:
 2687 00aa 20F07040 		bic	r0, r0, #-268435456
 2688              	.LVL391:
1035:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 2689              		.loc 1 1035 0
 2690 00ae 00E0     		b	.L252
 2691              	.LVL392:
 2692              	.L258:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2693              		.loc 1 1012 0
 2694 00b0 0120     		movs	r0, #1
 2695              	.LVL393:
 2696              	.L252:
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2697              		.loc 1 1070 0
 2698 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2699              	.LVL394:
 2700              	.L259:
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2701              		.loc 1 1012 0
 2702 00b4 0120     		movs	r0, #1
 2703              	.LVL395:
 2704 00b6 FCE7     		b	.L252
 2705              	.LVL396:
 2706              	.L261:
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2707              		.loc 1 1015 0
 2708 00b8 4FF0FF30 		mov	r0, #-1
 2709 00bc F9E7     		b	.L252
ARM GAS  /tmp/cc2OGbx6.s 			page 158


 2710              	.LVL397:
 2711              	.L262:
 2712 00be 4FF0FF30 		mov	r0, #-1
 2713 00c2 F6E7     		b	.L252
 2714              	.LVL398:
 2715              	.L263:
 2716 00c4 4FF0FF30 		mov	r0, #-1
 2717 00c8 F3E7     		b	.L252
 2718              	.L264:
 2719 00ca 4FF0FF30 		mov	r0, #-1
1069:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2720              		.loc 1 1069 0
 2721 00ce F0E7     		b	.L252
 2722              		.cfi_endproc
 2723              	.LFE158:
 2725              		.section	.text.dir_sdi,"ax",%progbits
 2726              		.align	1
 2727              		.syntax unified
 2728              		.thumb
 2729              		.thumb_func
 2730              		.fpu fpv5-d16
 2732              	dir_sdi:
 2733              	.LFB163:
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD csz, clst;
 2734              		.loc 1 1474 0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 0
 2737              		@ frame_needed = 0, uses_anonymous_args = 0
 2738              	.LVL399:
 2739 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2740              	.LCFI30:
 2741              		.cfi_def_cfa_offset 24
 2742              		.cfi_offset 4, -24
 2743              		.cfi_offset 5, -20
 2744              		.cfi_offset 6, -16
 2745              		.cfi_offset 7, -12
 2746              		.cfi_offset 8, -8
 2747              		.cfi_offset 14, -4
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2748              		.loc 1 1476 0
 2749 0004 0768     		ldr	r7, [r0]
 2750              	.LVL400:
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2751              		.loc 1 1479 0
 2752 0006 B1F5001F 		cmp	r1, #2097152
 2753 000a 3BD2     		bcs	.L275
 2754 000c 0646     		mov	r6, r0
 2755 000e 0D46     		mov	r5, r1
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2756              		.loc 1 1479 0 is_stmt 0 discriminator 1
 2757 0010 11F01F0F 		tst	r1, #31
 2758 0014 39D1     		bne	.L276
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2759              		.loc 1 1482 0 is_stmt 1
 2760 0016 7161     		str	r1, [r6, #20]
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2761              		.loc 1 1483 0
ARM GAS  /tmp/cc2OGbx6.s 			page 159


 2762 0018 8468     		ldr	r4, [r0, #8]
 2763              	.LVL401:
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2764              		.loc 1 1484 0
 2765 001a 1CB9     		cbnz	r4, .L270
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = fs->dirbase;
 2766              		.loc 1 1484 0 is_stmt 0 discriminator 1
 2767 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2768 001e 022B     		cmp	r3, #2
 2769 0020 00D9     		bls	.L270
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2770              		.loc 1 1485 0 is_stmt 1
 2771 0022 7C6A     		ldr	r4, [r7, #36]
 2772              	.LVL402:
 2773              	.L270:
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 2774              		.loc 1 1489 0
 2775 0024 94B9     		cbnz	r4, .L271
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2776              		.loc 1 1490 0
 2777 0026 3B89     		ldrh	r3, [r7, #8]
 2778 0028 B3EB551F 		cmp	r3, r5, lsr #5
 2779 002c 2FD9     		bls	.L277
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2780              		.loc 1 1491 0
 2781 002e 7B6A     		ldr	r3, [r7, #36]
 2782 0030 F361     		str	r3, [r6, #28]
 2783              	.LVL403:
 2784              	.L272:
1503:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect) return FR_INT_ERR;
 2785              		.loc 1 1503 0
 2786 0032 B461     		str	r4, [r6, #24]
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2787              		.loc 1 1504 0
 2788 0034 F369     		ldr	r3, [r6, #28]
 2789 0036 93B3     		cbz	r3, .L281
1505:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2790              		.loc 1 1505 0
 2791 0038 03EB5523 		add	r3, r3, r5, lsr #9
 2792 003c F361     		str	r3, [r6, #28]
1506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2793              		.loc 1 1506 0
 2794 003e 3037     		adds	r7, r7, #48
 2795              	.LVL404:
 2796 0040 C5F30805 		ubfx	r5, r5, #0, #9
 2797              	.LVL405:
 2798 0044 3D44     		add	r5, r5, r7
 2799 0046 3562     		str	r5, [r6, #32]
1508:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2800              		.loc 1 1508 0
 2801 0048 0020     		movs	r0, #0
 2802 004a 1CE0     		b	.L269
 2803              	.LVL406:
 2804              	.L271:
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2805              		.loc 1 1494 0
 2806 004c B7F80A80 		ldrh	r8, [r7, #10]
ARM GAS  /tmp/cc2OGbx6.s 			page 160


 2807 0050 4FEA4828 		lsl	r8, r8, #9
 2808              	.LVL407:
 2809              	.L273:
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2810              		.loc 1 1495 0
 2811 0054 4545     		cmp	r5, r8
 2812 0056 0FD3     		bcc	.L283
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2813              		.loc 1 1496 0
 2814 0058 2146     		mov	r1, r4
 2815 005a 3046     		mov	r0, r6
 2816 005c FFF7FEFF 		bl	get_fat
 2817              	.LVL408:
 2818 0060 0446     		mov	r4, r0
 2819              	.LVL409:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2820              		.loc 1 1497 0
 2821 0062 B0F1FF3F 		cmp	r0, #-1
 2822 0066 14D0     		beq	.L278
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2823              		.loc 1 1498 0
 2824 0068 0128     		cmp	r0, #1
 2825 006a 14D9     		bls	.L279
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2826              		.loc 1 1498 0 is_stmt 0 discriminator 2
 2827 006c 7B69     		ldr	r3, [r7, #20]
 2828 006e 8342     		cmp	r3, r0
 2829 0070 13D9     		bls	.L280
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2830              		.loc 1 1499 0 is_stmt 1
 2831 0072 A5EB0805 		sub	r5, r5, r8
 2832              	.LVL410:
 2833 0076 EDE7     		b	.L273
 2834              	.LVL411:
 2835              	.L283:
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2836              		.loc 1 1501 0
 2837 0078 2146     		mov	r1, r4
 2838 007a 3846     		mov	r0, r7
 2839 007c FFF7FEFF 		bl	clust2sect
 2840              	.LVL412:
 2841 0080 F061     		str	r0, [r6, #28]
 2842 0082 D6E7     		b	.L272
 2843              	.LVL413:
 2844              	.L275:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2845              		.loc 1 1480 0
 2846 0084 0220     		movs	r0, #2
 2847              	.LVL414:
 2848              	.L269:
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2849              		.loc 1 1509 0
 2850 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2851              	.LVL415:
 2852              	.L276:
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2853              		.loc 1 1480 0
ARM GAS  /tmp/cc2OGbx6.s 			page 161


 2854 008a 0220     		movs	r0, #2
 2855              	.LVL416:
 2856 008c FBE7     		b	.L269
 2857              	.LVL417:
 2858              	.L277:
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect = fs->dirbase;
 2859              		.loc 1 1490 0
 2860 008e 0220     		movs	r0, #2
 2861              	.LVL418:
 2862 0090 F9E7     		b	.L269
 2863              	.LVL419:
 2864              	.L278:
1497:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2865              		.loc 1 1497 0
 2866 0092 0120     		movs	r0, #1
 2867              	.LVL420:
 2868 0094 F7E7     		b	.L269
 2869              	.LVL421:
 2870              	.L279:
1498:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs -= csz;
 2871              		.loc 1 1498 0
 2872 0096 0220     		movs	r0, #2
 2873              	.LVL422:
 2874 0098 F5E7     		b	.L269
 2875              	.LVL423:
 2876              	.L280:
 2877 009a 0220     		movs	r0, #2
 2878              	.LVL424:
 2879 009c F3E7     		b	.L269
 2880              	.LVL425:
 2881              	.L281:
1504:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2882              		.loc 1 1504 0
 2883 009e 0220     		movs	r0, #2
 2884 00a0 F1E7     		b	.L269
 2885              		.cfi_endproc
 2886              	.LFE163:
 2888              		.section	.text.create_chain,"ax",%progbits
 2889              		.align	1
 2890              		.syntax unified
 2891              		.thumb
 2892              		.thumb_func
 2893              		.fpu fpv5-d16
 2895              	create_chain:
 2896              	.LFB161:
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2897              		.loc 1 1355 0
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 0
 2900              		@ frame_needed = 0, uses_anonymous_args = 0
 2901              	.LVL426:
 2902 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2903              	.LCFI31:
 2904              		.cfi_def_cfa_offset 24
 2905              		.cfi_offset 4, -24
 2906              		.cfi_offset 5, -20
 2907              		.cfi_offset 6, -16
ARM GAS  /tmp/cc2OGbx6.s 			page 162


 2908              		.cfi_offset 7, -12
 2909              		.cfi_offset 8, -8
 2910              		.cfi_offset 14, -4
 2911 0004 0746     		mov	r7, r0
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2912              		.loc 1 1358 0
 2913 0006 0668     		ldr	r6, [r0]
 2914              	.LVL427:
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clst;				/* Get suggested cluster to start from */
 2915              		.loc 1 1361 0
 2916 0008 8846     		mov	r8, r1
 2917 000a 31B9     		cbnz	r1, .L285
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2918              		.loc 1 1362 0
 2919 000c F568     		ldr	r5, [r6, #12]
 2920              	.LVL428:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2921              		.loc 1 1363 0
 2922 000e 8DB1     		cbz	r5, .L294
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2923              		.loc 1 1363 0 is_stmt 0 discriminator 2
 2924 0010 7369     		ldr	r3, [r6, #20]
 2925 0012 AB42     		cmp	r3, r5
 2926 0014 0FD8     		bhi	.L286
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2927              		.loc 1 1363 0
 2928 0016 0125     		movs	r5, #1
 2929              	.LVL429:
 2930 0018 0DE0     		b	.L286
 2931              	.LVL430:
 2932              	.L285:
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;				/* Invalid FAT value */
 2933              		.loc 1 1366 0 is_stmt 1
 2934 001a FFF7FEFF 		bl	get_fat
 2935              	.LVL431:
 2936 001e 0346     		mov	r3, r0
 2937              	.LVL432:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2938              		.loc 1 1367 0
 2939 0020 0128     		cmp	r0, #1
 2940 0022 4CD9     		bls	.L296
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2941              		.loc 1 1368 0
 2942 0024 B0F1FF3F 		cmp	r0, #-1
 2943 0028 4ED0     		beq	.L284
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2944              		.loc 1 1369 0
 2945 002a 7269     		ldr	r2, [r6, #20]
 2946 002c 8242     		cmp	r2, r0
 2947 002e 4BD8     		bhi	.L284
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2948              		.loc 1 1370 0
 2949 0030 4546     		mov	r5, r8
 2950 0032 00E0     		b	.L286
 2951              	.LVL433:
 2952              	.L294:
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cc2OGbx6.s 			page 163


 2953              		.loc 1 1363 0
 2954 0034 0125     		movs	r5, #1
 2955              	.LVL434:
 2956              	.L286:
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
 2957              		.loc 1 1400 0
 2958 0036 2C46     		mov	r4, r5
 2959 0038 0CE0     		b	.L290
 2960              	.LVL435:
 2961              	.L288:
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 0) break;				/* Found a free cluster */
 2962              		.loc 1 1407 0
 2963 003a 2146     		mov	r1, r4
 2964 003c 3846     		mov	r0, r7
 2965 003e FFF7FEFF 		bl	get_fat
 2966              	.LVL436:
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 2967              		.loc 1 1408 0
 2968 0042 0346     		mov	r3, r0
 2969 0044 70B1     		cbz	r0, .L289
1409:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == scl) return 0;		/* No free cluster */
 2970              		.loc 1 1409 0
 2971 0046 B0F1FF3F 		cmp	r0, #-1
 2972 004a 18BF     		it	ne
 2973 004c 0128     		cmpne	r0, #1
 2974 004e 3BD0     		beq	.L284
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2975              		.loc 1 1410 0
 2976 0050 AC42     		cmp	r4, r5
 2977 0052 38D0     		beq	.L301
 2978              	.LVL437:
 2979              	.L290:
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2980              		.loc 1 1402 0
 2981 0054 0134     		adds	r4, r4, #1
 2982              	.LVL438:
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = 2;
 2983              		.loc 1 1403 0
 2984 0056 7369     		ldr	r3, [r6, #20]
 2985 0058 A342     		cmp	r3, r4
 2986 005a EED8     		bhi	.L288
 2987              	.LVL439:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2988              		.loc 1 1405 0
 2989 005c 012D     		cmp	r5, #1
 2990 005e 30D9     		bls	.L297
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl > scl) return 0;	/* No free cluster */
 2991              		.loc 1 1404 0
 2992 0060 0224     		movs	r4, #2
 2993 0062 EAE7     		b	.L288
 2994              	.LVL440:
 2995              	.L289:
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && clst != 0) {
 2996              		.loc 1 1412 0
 2997 0064 4FF0FF32 		mov	r2, #-1
 2998 0068 2146     		mov	r1, r4
 2999 006a 3046     		mov	r0, r6
ARM GAS  /tmp/cc2OGbx6.s 			page 164


 3000              	.LVL441:
 3001 006c FFF7FEFF 		bl	put_fat
 3002              	.LVL442:
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 3003              		.loc 1 1413 0
 3004 0070 0246     		mov	r2, r0
 3005 0072 18F10003 		adds	r3, r8, #0
 3006 0076 18BF     		it	ne
 3007 0078 0123     		movne	r3, #1
 3008 007a 0028     		cmp	r0, #0
 3009 007c 0CBF     		ite	eq
 3010 007e 1846     		moveq	r0, r3
 3011 0080 0020     		movne	r0, #0
 3012              	.LVL443:
 3013 0082 70B9     		cbnz	r0, .L302
 3014              	.L291:
 3015              	.LVL444:
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clst = ncl;
 3016              		.loc 1 1418 0
 3017 0084 A2B9     		cbnz	r2, .L292
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 3018              		.loc 1 1419 0
 3019 0086 F460     		str	r4, [r6, #12]
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3020              		.loc 1 1420 0
 3021 0088 3269     		ldr	r2, [r6, #16]
 3022              	.LVL445:
 3023 008a 7369     		ldr	r3, [r6, #20]
 3024 008c 023B     		subs	r3, r3, #2
 3025 008e 9A42     		cmp	r2, r3
 3026 0090 01D8     		bhi	.L293
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag |= 1;
 3027              		.loc 1 1420 0 is_stmt 0 discriminator 1
 3028 0092 013A     		subs	r2, r2, #1
 3029 0094 3261     		str	r2, [r6, #16]
 3030              	.L293:
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 3031              		.loc 1 1421 0 is_stmt 1
 3032 0096 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 3033 0098 43F00103 		orr	r3, r3, #1
 3034 009c 3371     		strb	r3, [r6, #4]
 3035 009e 2346     		mov	r3, r4
 3036 00a0 12E0     		b	.L284
 3037              	.L302:
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3038              		.loc 1 1414 0
 3039 00a2 2246     		mov	r2, r4
 3040 00a4 4146     		mov	r1, r8
 3041 00a6 3046     		mov	r0, r6
 3042 00a8 FFF7FEFF 		bl	put_fat
 3043              	.LVL446:
 3044 00ac 0246     		mov	r2, r0
 3045              	.LVL447:
 3046 00ae E9E7     		b	.L291
 3047              	.L292:
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3048              		.loc 1 1423 0
ARM GAS  /tmp/cc2OGbx6.s 			page 165


 3049 00b0 012A     		cmp	r2, #1
 3050 00b2 01D0     		beq	.L303
 3051 00b4 0123     		movs	r3, #1
 3052 00b6 07E0     		b	.L284
 3053              	.L303:
 3054 00b8 4FF0FF33 		mov	r3, #-1
 3055 00bc 04E0     		b	.L284
 3056              	.LVL448:
 3057              	.L296:
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3058              		.loc 1 1367 0
 3059 00be 0123     		movs	r3, #1
 3060 00c0 02E0     		b	.L284
 3061              	.LVL449:
 3062              	.L297:
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3063              		.loc 1 1405 0
 3064 00c2 0023     		movs	r3, #0
 3065 00c4 00E0     		b	.L284
 3066              	.LVL450:
 3067              	.L301:
1410:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3068              		.loc 1 1410 0
 3069 00c6 0023     		movs	r3, #0
 3070              	.LVL451:
 3071              	.L284:
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3072              		.loc 1 1427 0
 3073 00c8 1846     		mov	r0, r3
 3074 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3075              		.cfi_endproc
 3076              	.LFE161:
 3078              		.section	.text.remove_chain,"ax",%progbits
 3079              		.align	1
 3080              		.syntax unified
 3081              		.thumb
 3082              		.thumb_func
 3083              		.fpu fpv5-d16
 3085              	remove_chain:
 3086              	.LFB160:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 3087              		.loc 1 1276 0
 3088              		.cfi_startproc
 3089              		@ args = 0, pretend = 0, frame = 0
 3090              		@ frame_needed = 0, uses_anonymous_args = 0
 3091              	.LVL452:
 3092 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3093              	.LCFI32:
 3094              		.cfi_def_cfa_offset 24
 3095              		.cfi_offset 3, -24
 3096              		.cfi_offset 4, -20
 3097              		.cfi_offset 5, -16
 3098              		.cfi_offset 6, -12
 3099              		.cfi_offset 7, -8
 3100              		.cfi_offset 14, -4
 3101 0002 0E46     		mov	r6, r1
 3102              	.LVL453:
ARM GAS  /tmp/cc2OGbx6.s 			page 166


1279:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT || _USE_TRIM
 3103              		.loc 1 1279 0
 3104 0004 0568     		ldr	r5, [r0]
 3105              	.LVL454:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3106              		.loc 1 1287 0
 3107 0006 0129     		cmp	r1, #1
 3108 0008 2ED9     		bls	.L309
 3109 000a 0746     		mov	r7, r0
 3110 000c 1146     		mov	r1, r2
 3111              	.LVL455:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3112              		.loc 1 1287 0 is_stmt 0 discriminator 2
 3113 000e 6B69     		ldr	r3, [r5, #20]
 3114 0010 B342     		cmp	r3, r6
 3115 0012 2CD9     		bls	.L310
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3116              		.loc 1 1290 0 is_stmt 1
 3117 0014 52B1     		cbz	r2, .L308
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) return res;
 3118              		.loc 1 1291 0
 3119 0016 4FF0FF32 		mov	r2, #-1
 3120              	.LVL456:
 3121 001a 2846     		mov	r0, r5
 3122              	.LVL457:
 3123 001c FFF7FEFF 		bl	put_fat
 3124              	.LVL458:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3125              		.loc 1 1292 0
 3126 0020 8446     		mov	ip, r0
 3127 0022 18B1     		cbz	r0, .L308
 3128 0024 25E0     		b	.L305
 3129              	.LVL459:
 3130              	.L307:
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3131              		.loc 1 1327 0
 3132 0026 2646     		mov	r6, r4
1328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3133              		.loc 1 1328 0
 3134 0028 A242     		cmp	r2, r4
 3135 002a 22D9     		bls	.L305
 3136              	.LVL460:
 3137              	.L308:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3138              		.loc 1 1297 0
 3139 002c 3146     		mov	r1, r6
 3140 002e 3846     		mov	r0, r7
 3141 0030 FFF7FEFF 		bl	get_fat
 3142              	.LVL461:
1298:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3143              		.loc 1 1298 0
 3144 0034 0446     		mov	r4, r0
 3145 0036 F0B1     		cbz	r0, .L311
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3146              		.loc 1 1299 0
 3147 0038 0128     		cmp	r0, #1
 3148 003a 1FD0     		beq	.L312
ARM GAS  /tmp/cc2OGbx6.s 			page 167


1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3149              		.loc 1 1300 0
 3150 003c B0F1FF3F 		cmp	r0, #-1
 3151 0040 1FD0     		beq	.L313
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) return res;
 3152              		.loc 1 1302 0
 3153 0042 0022     		movs	r2, #0
 3154 0044 3146     		mov	r1, r6
 3155 0046 2846     		mov	r0, r5
 3156              	.LVL462:
 3157 0048 FFF7FEFF 		bl	put_fat
 3158              	.LVL463:
1303:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3159              		.loc 1 1303 0
 3160 004c 8446     		mov	ip, r0
 3161 004e 80B9     		cbnz	r0, .L305
1305:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst++;
 3162              		.loc 1 1305 0
 3163 0050 2B69     		ldr	r3, [r5, #16]
 3164 0052 6A69     		ldr	r2, [r5, #20]
 3165 0054 911E     		subs	r1, r2, #2
 3166 0056 8B42     		cmp	r3, r1
 3167 0058 E5D2     		bcs	.L307
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3168              		.loc 1 1306 0
 3169 005a 0133     		adds	r3, r3, #1
 3170 005c 2B61     		str	r3, [r5, #16]
1307:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3171              		.loc 1 1307 0
 3172 005e 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3173 0060 43F00103 		orr	r3, r3, #1
 3174 0064 2B71     		strb	r3, [r5, #4]
 3175 0066 DEE7     		b	.L307
 3176              	.LVL464:
 3177              	.L309:
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3178              		.loc 1 1287 0
 3179 0068 4FF0020C 		mov	ip, #2
 3180 006c 01E0     		b	.L305
 3181              	.LVL465:
 3182              	.L310:
 3183 006e 4FF0020C 		mov	ip, #2
 3184              	.LVL466:
 3185              	.L305:
1342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3186              		.loc 1 1342 0
 3187 0072 6046     		mov	r0, ip
 3188 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3189              	.LVL467:
 3190              	.L311:
1341:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3191              		.loc 1 1341 0
 3192 0076 4FF0000C 		mov	ip, #0
 3193 007a FAE7     		b	.L305
 3194              	.L312:
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3195              		.loc 1 1299 0
ARM GAS  /tmp/cc2OGbx6.s 			page 168


 3196 007c 4FF0020C 		mov	ip, #2
 3197 0080 F7E7     		b	.L305
 3198              	.L313:
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3199              		.loc 1 1300 0
 3200 0082 4FF0010C 		mov	ip, #1
 3201 0086 F4E7     		b	.L305
 3202              		.cfi_endproc
 3203              	.LFE160:
 3205              		.section	.text.dir_remove,"ax",%progbits
 3206              		.align	1
 3207              		.syntax unified
 3208              		.thumb
 3209              		.thumb_func
 3210              		.fpu fpv5-d16
 3212              	dir_remove:
 3213              	.LFB171:
2399:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3214              		.loc 1 2399 0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 0
 3217              		@ frame_needed = 0, uses_anonymous_args = 0
 3218              	.LVL468:
 3219 0000 38B5     		push	{r3, r4, r5, lr}
 3220              	.LCFI33:
 3221              		.cfi_def_cfa_offset 16
 3222              		.cfi_offset 3, -16
 3223              		.cfi_offset 4, -12
 3224              		.cfi_offset 5, -8
 3225              		.cfi_offset 14, -4
 3226 0002 0446     		mov	r4, r0
2401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3227              		.loc 1 2401 0
 3228 0004 0568     		ldr	r5, [r0]
 3229              	.LVL469:
2424:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3230              		.loc 1 2424 0
 3231 0006 C169     		ldr	r1, [r0, #28]
 3232 0008 2846     		mov	r0, r5
 3233              	.LVL470:
 3234 000a FFF7FEFF 		bl	move_window
 3235              	.LVL471:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir[DIR_Name] = DDEM;
 3236              		.loc 1 2425 0
 3237 000e 0346     		mov	r3, r0
 3238 0010 20B9     		cbnz	r0, .L316
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->wflag = 1;
 3239              		.loc 1 2426 0
 3240 0012 226A     		ldr	r2, [r4, #32]
 3241 0014 E521     		movs	r1, #229
 3242 0016 1170     		strb	r1, [r2]
2427:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3243              		.loc 1 2427 0
 3244 0018 0122     		movs	r2, #1
 3245 001a EA70     		strb	r2, [r5, #3]
 3246              	.L316:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 169


 3247              		.loc 1 2432 0
 3248 001c 1846     		mov	r0, r3
 3249              	.LVL472:
 3250 001e 38BD     		pop	{r3, r4, r5, pc}
 3251              		.cfi_endproc
 3252              	.LFE171:
 3254              		.section	.text.dir_next,"ax",%progbits
 3255              		.align	1
 3256              		.syntax unified
 3257              		.thumb
 3258              		.thumb_func
 3259              		.fpu fpv5-d16
 3261              	dir_next:
 3262              	.LFB164:
1523:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs, clst;
 3263              		.loc 1 1523 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              	.LVL473:
 3268 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3269              	.LCFI34:
 3270              		.cfi_def_cfa_offset 32
 3271              		.cfi_offset 3, -32
 3272              		.cfi_offset 4, -28
 3273              		.cfi_offset 5, -24
 3274              		.cfi_offset 6, -20
 3275              		.cfi_offset 7, -16
 3276              		.cfi_offset 8, -12
 3277              		.cfi_offset 9, -8
 3278              		.cfi_offset 14, -4
1525:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3279              		.loc 1 1525 0
 3280 0004 0668     		ldr	r6, [r0]
 3281              	.LVL474:
1530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) re
 3282              		.loc 1 1530 0
 3283 0006 4569     		ldr	r5, [r0, #20]
 3284              	.LVL475:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3285              		.loc 1 1531 0
 3286 0008 C369     		ldr	r3, [r0, #28]
 3287 000a 002B     		cmp	r3, #0
 3288 000c 6ED0     		beq	.L326
 3289 000e 2035     		adds	r5, r5, #32
 3290              	.LVL476:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3291              		.loc 1 1531 0 is_stmt 0 discriminator 2
 3292 0010 B5F5001F 		cmp	r5, #2097152
 3293 0014 6CD2     		bcs	.L327
 3294 0016 8846     		mov	r8, r1
 3295 0018 0446     		mov	r4, r0
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;				/* Next sector */
 3296              		.loc 1 1533 0 is_stmt 1
 3297 001a C5F30807 		ubfx	r7, r5, #0, #9
 3298 001e 3FB9     		cbnz	r7, .L320
1534:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 170


 3299              		.loc 1 1534 0
 3300 0020 0133     		adds	r3, r3, #1
 3301 0022 C361     		str	r3, [r0, #28]
1536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3302              		.loc 1 1536 0
 3303 0024 8169     		ldr	r1, [r0, #24]
 3304              	.LVL477:
 3305 0026 79B9     		cbnz	r1, .L321
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3306              		.loc 1 1537 0
 3307 0028 3389     		ldrh	r3, [r6, #8]
 3308 002a B3EB551F 		cmp	r3, r5, lsr #5
 3309 002e 07D9     		bls	.L336
 3310              	.LVL478:
 3311              	.L320:
1574:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3312              		.loc 1 1574 0
 3313 0030 6561     		str	r5, [r4, #20]
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3314              		.loc 1 1575 0
 3315 0032 06F13003 		add	r3, r6, #48
 3316 0036 3B44     		add	r3, r3, r7
 3317 0038 2362     		str	r3, [r4, #32]
1577:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3318              		.loc 1 1577 0
 3319 003a 0020     		movs	r0, #0
 3320              	.LVL479:
 3321              	.L319:
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3322              		.loc 1 1578 0
 3323 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3324              	.LVL480:
 3325              	.L336:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3326              		.loc 1 1538 0
 3327 0040 0023     		movs	r3, #0
 3328 0042 C361     		str	r3, [r0, #28]
 3329 0044 0420     		movs	r0, #4
 3330              	.LVL481:
 3331 0046 F9E7     		b	.L319
 3332              	.LVL482:
 3333              	.L321:
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 3334              		.loc 1 1542 0
 3335 0048 7389     		ldrh	r3, [r6, #10]
 3336 004a 013B     		subs	r3, r3, #1
 3337 004c 13EA5523 		ands	r3, r3, r5, lsr #9
 3338 0050 EED1     		bne	.L320
1543:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 3339              		.loc 1 1543 0
 3340 0052 FFF7FEFF 		bl	get_fat
 3341              	.LVL483:
 3342 0056 8146     		mov	r9, r0
 3343              	.LVL484:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3344              		.loc 1 1544 0
 3345 0058 0128     		cmp	r0, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 171


 3346 005a 4BD9     		bls	.L328
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3347              		.loc 1 1545 0
 3348 005c B0F1FF3F 		cmp	r0, #-1
 3349 0060 4AD0     		beq	.L329
1546:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3350              		.loc 1 1546 0
 3351 0062 7369     		ldr	r3, [r6, #20]
 3352 0064 8342     		cmp	r3, r0
 3353 0066 39D8     		bhi	.L322
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3354              		.loc 1 1548 0
 3355 0068 B8F1000F 		cmp	r8, #0
 3356 006c 11D0     		beq	.L337
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3357              		.loc 1 1551 0
 3358 006e A169     		ldr	r1, [r4, #24]
 3359 0070 2046     		mov	r0, r4
 3360              	.LVL485:
 3361 0072 FFF7FEFF 		bl	create_chain
 3362              	.LVL486:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3363              		.loc 1 1552 0
 3364 0076 8146     		mov	r9, r0
 3365 0078 0028     		cmp	r0, #0
 3366 007a 3FD0     		beq	.L330
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3367              		.loc 1 1553 0
 3368 007c 0128     		cmp	r0, #1
 3369 007e 3FD0     		beq	.L331
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3370              		.loc 1 1554 0
 3371 0080 B0F1FF3F 		cmp	r0, #-1
 3372 0084 3ED0     		beq	.L332
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 3373              		.loc 1 1557 0
 3374 0086 3046     		mov	r0, r6
 3375              	.LVL487:
 3376 0088 FFF7FEFF 		bl	sync_window
 3377              	.LVL488:
 3378 008c 28B1     		cbz	r0, .L338
 3379 008e 0120     		movs	r0, #1
 3380 0090 D4E7     		b	.L319
 3381              	.LVL489:
 3382              	.L337:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3383              		.loc 1 1549 0
 3384 0092 0023     		movs	r3, #0
 3385 0094 E361     		str	r3, [r4, #28]
 3386 0096 0420     		movs	r0, #4
 3387              	.LVL490:
 3388 0098 D0E7     		b	.L319
 3389              	.L338:
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill t
 3390              		.loc 1 1558 0
 3391 009a 4FF40072 		mov	r2, #512
 3392 009e 0021     		movs	r1, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 172


 3393 00a0 06F13000 		add	r0, r6, #48
 3394 00a4 FFF7FEFF 		bl	mem_set
 3395              	.LVL491:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3396              		.loc 1 1559 0
 3397 00a8 4946     		mov	r1, r9
 3398 00aa 3046     		mov	r0, r6
 3399 00ac FFF7FEFF 		bl	clust2sect
 3400              	.LVL492:
 3401 00b0 F062     		str	r0, [r6, #44]
 3402 00b2 4FF00008 		mov	r8, #0
 3403              	.LVL493:
 3404              	.L324:
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3405              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3406 00b6 7389     		ldrh	r3, [r6, #10]
 3407 00b8 9845     		cmp	r8, r3
 3408 00ba 0BD2     		bcs	.L339
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 3409              		.loc 1 1560 0 is_stmt 1
 3410 00bc 0123     		movs	r3, #1
 3411 00be F370     		strb	r3, [r6, #3]
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3412              		.loc 1 1561 0
 3413 00c0 3046     		mov	r0, r6
 3414 00c2 FFF7FEFF 		bl	sync_window
 3415              	.LVL494:
 3416 00c6 F8B9     		cbnz	r0, .L334
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 3417              		.loc 1 1559 0 discriminator 2
 3418 00c8 08F10108 		add	r8, r8, #1
 3419              	.LVL495:
 3420 00cc F36A     		ldr	r3, [r6, #44]
 3421 00ce 0133     		adds	r3, r3, #1
 3422 00d0 F362     		str	r3, [r6, #44]
 3423 00d2 F0E7     		b	.L324
 3424              	.L339:
1563:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3425              		.loc 1 1563 0
 3426 00d4 F36A     		ldr	r3, [r6, #44]
 3427 00d6 A3EB0803 		sub	r3, r3, r8
 3428 00da F362     		str	r3, [r6, #44]
 3429              	.LVL496:
 3430              	.L322:
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(fs, clst);
 3431              		.loc 1 1569 0
 3432 00dc C4F81890 		str	r9, [r4, #24]
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3433              		.loc 1 1570 0
 3434 00e0 4946     		mov	r1, r9
 3435 00e2 3046     		mov	r0, r6
 3436 00e4 FFF7FEFF 		bl	clust2sect
 3437              	.LVL497:
 3438 00e8 E061     		str	r0, [r4, #28]
 3439 00ea A1E7     		b	.L320
 3440              	.LVL498:
 3441              	.L326:
ARM GAS  /tmp/cc2OGbx6.s 			page 173


1531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3442              		.loc 1 1531 0
 3443 00ec 0420     		movs	r0, #4
 3444              	.LVL499:
 3445 00ee A5E7     		b	.L319
 3446              	.LVL500:
 3447              	.L327:
 3448 00f0 0420     		movs	r0, #4
 3449              	.LVL501:
 3450 00f2 A3E7     		b	.L319
 3451              	.LVL502:
 3452              	.L328:
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 3453              		.loc 1 1544 0
 3454 00f4 0220     		movs	r0, #2
 3455              	.LVL503:
 3456 00f6 A1E7     		b	.L319
 3457              	.LVL504:
 3458              	.L329:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 3459              		.loc 1 1545 0
 3460 00f8 0120     		movs	r0, #1
 3461              	.LVL505:
 3462 00fa 9FE7     		b	.L319
 3463              	.LVL506:
 3464              	.L330:
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3465              		.loc 1 1552 0
 3466 00fc 0720     		movs	r0, #7
 3467              	.LVL507:
 3468 00fe 9DE7     		b	.L319
 3469              	.LVL508:
 3470              	.L331:
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3471              		.loc 1 1553 0
 3472 0100 0220     		movs	r0, #2
 3473              	.LVL509:
 3474 0102 9BE7     		b	.L319
 3475              	.LVL510:
 3476              	.L332:
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up the stretched table */
 3477              		.loc 1 1554 0
 3478 0104 0120     		movs	r0, #1
 3479              	.LVL511:
 3480 0106 99E7     		b	.L319
 3481              	.LVL512:
 3482              	.L334:
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3483              		.loc 1 1561 0
 3484 0108 0120     		movs	r0, #1
 3485 010a 97E7     		b	.L319
 3486              		.cfi_endproc
 3487              	.LFE164:
 3489              		.section	.text.dir_find,"ax",%progbits
 3490              		.align	1
 3491              		.syntax unified
 3492              		.thumb
ARM GAS  /tmp/cc2OGbx6.s 			page 174


 3493              		.thumb_func
 3494              		.fpu fpv5-d16
 3496              	dir_find:
 3497              	.LFB169:
2213:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3498              		.loc 1 2213 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 0
 3501              		@ frame_needed = 0, uses_anonymous_args = 0
 3502              	.LVL513:
 3503 0000 70B5     		push	{r4, r5, r6, lr}
 3504              	.LCFI35:
 3505              		.cfi_def_cfa_offset 16
 3506              		.cfi_offset 4, -16
 3507              		.cfi_offset 5, -12
 3508              		.cfi_offset 6, -8
 3509              		.cfi_offset 14, -4
 3510 0002 0446     		mov	r4, r0
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c;
 3511              		.loc 1 2215 0
 3512 0004 0668     		ldr	r6, [r0]
 3513              	.LVL514:
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3514              		.loc 1 2221 0
 3515 0006 0021     		movs	r1, #0
 3516 0008 FFF7FEFF 		bl	dir_sdi
 3517              	.LVL515:
2222:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3518              		.loc 1 2222 0
 3519 000c 0546     		mov	r5, r0
 3520 000e 40B1     		cbz	r0, .L343
 3521              	.LVL516:
 3522              	.L341:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3523              		.loc 1 2281 0
 3524 0010 2846     		mov	r0, r5
 3525 0012 70BD     		pop	{r4, r5, r6, pc}
 3526              	.LVL517:
 3527              	.L342:
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3528              		.loc 1 2277 0
 3529 0014 0021     		movs	r1, #0
 3530 0016 2046     		mov	r0, r4
 3531 0018 FFF7FEFF 		bl	dir_next
 3532              	.LVL518:
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3533              		.loc 1 2278 0
 3534 001c 0546     		mov	r5, r0
 3535 001e 0028     		cmp	r0, #0
 3536 0020 F6D1     		bne	.L341
 3537              	.L343:
2248:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3538              		.loc 1 2248 0
 3539 0022 E169     		ldr	r1, [r4, #28]
 3540 0024 3046     		mov	r0, r6
 3541              	.LVL519:
 3542 0026 FFF7FEFF 		bl	move_window
ARM GAS  /tmp/cc2OGbx6.s 			page 175


 3543              	.LVL520:
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];
 3544              		.loc 1 2249 0
 3545 002a 0546     		mov	r5, r0
 3546 002c 0028     		cmp	r0, #0
 3547 002e EFD1     		bne	.L341
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3548              		.loc 1 2250 0
 3549 0030 206A     		ldr	r0, [r4, #32]
 3550              	.LVL521:
 3551 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3552              	.LVL522:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3553              		.loc 1 2251 0
 3554 0034 7BB1     		cbz	r3, .L344
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3555              		.loc 1 2274 0
 3556 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3557              	.LVL523:
 3558 0038 03F03F03 		and	r3, r3, #63
 3559 003c A371     		strb	r3, [r4, #6]
 3560              	.LVL524:
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3561              		.loc 1 2275 0
 3562 003e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3563 0040 13F0080F 		tst	r3, #8
 3564 0044 E6D1     		bne	.L342
2275:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3565              		.loc 1 2275 0 is_stmt 0 discriminator 1
 3566 0046 0B22     		movs	r2, #11
 3567 0048 04F12401 		add	r1, r4, #36
 3568 004c FFF7FEFF 		bl	mem_cmp
 3569              	.LVL525:
 3570 0050 0028     		cmp	r0, #0
 3571 0052 DFD1     		bne	.L342
 3572 0054 DCE7     		b	.L341
 3573              	.LVL526:
 3574              	.L344:
2251:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3575              		.loc 1 2251 0 is_stmt 1
 3576 0056 0425     		movs	r5, #4
 3577 0058 DAE7     		b	.L341
 3578              		.cfi_endproc
 3579              	.LFE169:
 3581              		.section	.text.follow_path,"ax",%progbits
 3582              		.align	1
 3583              		.syntax unified
 3584              		.thumb
 3585              		.thumb_func
 3586              		.fpu fpv5-d16
 3588              	follow_path:
 3589              	.LFB174:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3590              		.loc 1 2817 0
 3591              		.cfi_startproc
 3592              		@ args = 0, pretend = 0, frame = 8
 3593              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2OGbx6.s 			page 176


 3594              	.LVL527:
 3595 0000 30B5     		push	{r4, r5, lr}
 3596              	.LCFI36:
 3597              		.cfi_def_cfa_offset 12
 3598              		.cfi_offset 4, -12
 3599              		.cfi_offset 5, -8
 3600              		.cfi_offset 14, -4
 3601 0002 83B0     		sub	sp, sp, #12
 3602              	.LCFI37:
 3603              		.cfi_def_cfa_offset 24
 3604 0004 0446     		mov	r4, r0
 3605 0006 0191     		str	r1, [sp, #4]
 3606              	.LVL528:
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3607              		.loc 1 2821 0
 3608 0008 0568     		ldr	r5, [r0]
 3609              	.LVL529:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3610              		.loc 1 2830 0
 3611 000a 01E0     		b	.L347
 3612              	.L348:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3613              		.loc 1 2830 0 is_stmt 0 discriminator 2
 3614 000c 0133     		adds	r3, r3, #1
 3615 000e 0193     		str	r3, [sp, #4]
 3616              	.L347:
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->sclust = 0;					/* Start from root directory */
 3617              		.loc 1 2830 0 discriminator 1
 3618 0010 019B     		ldr	r3, [sp, #4]
 3619 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3620 0014 5C2A     		cmp	r2, #92
 3621 0016 18BF     		it	ne
 3622 0018 2F2A     		cmpne	r2, #47
 3623 001a F7D0     		beq	.L348
2831:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3624              		.loc 1 2831 0 is_stmt 1
 3625 001c 0022     		movs	r2, #0
 3626 001e A260     		str	r2, [r4, #8]
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3627              		.loc 1 2850 0
 3628 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3629 0022 1F2B     		cmp	r3, #31
 3630 0024 1ED9     		bls	.L355
 3631              	.LVL530:
 3632              	.L349:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3633              		.loc 1 2856 0
 3634 0026 01A9     		add	r1, sp, #4
 3635 0028 2046     		mov	r0, r4
 3636 002a FFF7FEFF 		bl	create_name
 3637              	.LVL531:
2857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3638              		.loc 1 2857 0
 3639 002e 0346     		mov	r3, r0
 3640 0030 00BB     		cbnz	r0, .L350
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3641              		.loc 1 2858 0
ARM GAS  /tmp/cc2OGbx6.s 			page 177


 3642 0032 2046     		mov	r0, r4
 3643              	.LVL532:
 3644 0034 FFF7FEFF 		bl	dir_find
 3645              	.LVL533:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3646              		.loc 1 2859 0
 3647 0038 94F82F20 		ldrb	r2, [r4, #47]	@ zero_extendqisi2
 3648              	.LVL534:
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3649              		.loc 1 2860 0
 3650 003c 0346     		mov	r3, r0
 3651 003e E0B9     		cbnz	r0, .L356
2872:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get into the sub-directory */
 3652              		.loc 1 2872 0
 3653 0040 12F0040F 		tst	r2, #4
 3654 0044 16D1     		bne	.L350
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3655              		.loc 1 2874 0
 3656 0046 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3657 0048 13F0100F 		tst	r3, #16
 3658 004c 1CD0     		beq	.L353
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3659              		.loc 1 2888 0
 3660 004e 05F13001 		add	r1, r5, #48
 3661 0052 6369     		ldr	r3, [r4, #20]
 3662 0054 C3F30803 		ubfx	r3, r3, #0, #9
 3663 0058 1944     		add	r1, r1, r3
 3664 005a 2846     		mov	r0, r5
 3665              	.LVL535:
 3666 005c FFF7FEFF 		bl	ld_clust
 3667              	.LVL536:
 3668 0060 A060     		str	r0, [r4, #8]
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3669              		.loc 1 2856 0
 3670 0062 E0E7     		b	.L349
 3671              	.LVL537:
 3672              	.L355:
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3673              		.loc 1 2851 0
 3674 0064 8023     		movs	r3, #128
 3675 0066 84F82F30 		strb	r3, [r4, #47]
2852:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3676              		.loc 1 2852 0
 3677 006a 1146     		mov	r1, r2
 3678              	.LVL538:
 3679 006c 2046     		mov	r0, r4
 3680              	.LVL539:
 3681 006e FFF7FEFF 		bl	dir_sdi
 3682              	.LVL540:
 3683 0072 0346     		mov	r3, r0
 3684              	.LVL541:
 3685              	.L350:
2894:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3686              		.loc 1 2894 0
 3687 0074 1846     		mov	r0, r3
 3688 0076 03B0     		add	sp, sp, #12
 3689              	.LCFI38:
ARM GAS  /tmp/cc2OGbx6.s 			page 178


 3690              		.cfi_remember_state
 3691              		.cfi_def_cfa_offset 12
 3692              		@ sp needed
 3693 0078 30BD     		pop	{r4, r5, pc}
 3694              	.LVL542:
 3695              	.L356:
 3696              	.LCFI39:
 3697              		.cfi_restore_state
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3698              		.loc 1 2861 0
 3699 007a 0428     		cmp	r0, #4
 3700 007c FAD1     		bne	.L350
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3701              		.loc 1 2867 0
 3702 007e 12F0040F 		tst	r2, #4
 3703 0082 F7D1     		bne	.L350
 3704 0084 0523     		movs	r3, #5
 3705 0086 F5E7     		b	.L350
 3706              	.L353:
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3707              		.loc 1 2875 0
 3708 0088 0523     		movs	r3, #5
 3709 008a F3E7     		b	.L350
 3710              		.cfi_endproc
 3711              	.LFE174:
 3713              		.section	.text.dir_alloc,"ax",%progbits
 3714              		.align	1
 3715              		.syntax unified
 3716              		.thumb
 3717              		.thumb_func
 3718              		.fpu fpv5-d16
 3720              	dir_alloc:
 3721              	.LFB165:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3722              		.loc 1 1593 0
 3723              		.cfi_startproc
 3724              		@ args = 0, pretend = 0, frame = 0
 3725              		@ frame_needed = 0, uses_anonymous_args = 0
 3726              	.LVL543:
 3727 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3728              	.LCFI40:
 3729              		.cfi_def_cfa_offset 24
 3730              		.cfi_offset 3, -24
 3731              		.cfi_offset 4, -20
 3732              		.cfi_offset 5, -16
 3733              		.cfi_offset 6, -12
 3734              		.cfi_offset 7, -8
 3735              		.cfi_offset 14, -4
 3736 0002 0446     		mov	r4, r0
 3737 0004 0F46     		mov	r7, r1
1596:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3738              		.loc 1 1596 0
 3739 0006 0668     		ldr	r6, [r0]
 3740              	.LVL544:
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3741              		.loc 1 1599 0
 3742 0008 0021     		movs	r1, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 179


 3743              	.LVL545:
 3744 000a FFF7FEFF 		bl	dir_sdi
 3745              	.LVL546:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3746              		.loc 1 1600 0
 3747 000e 0246     		mov	r2, r0
 3748 0010 B8B9     		cbnz	r0, .L358
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 3749              		.loc 1 1601 0
 3750 0012 0025     		movs	r5, #0
 3751 0014 06E0     		b	.L360
 3752              	.LVL547:
 3753              	.L362:
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3754              		.loc 1 1612 0
 3755 0016 0025     		movs	r5, #0
 3756              	.LVL548:
 3757              	.L359:
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3758              		.loc 1 1614 0
 3759 0018 0121     		movs	r1, #1
 3760 001a 2046     		mov	r0, r4
 3761              	.LVL549:
 3762 001c FFF7FEFF 		bl	dir_next
 3763              	.LVL550:
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3764              		.loc 1 1615 0
 3765 0020 0246     		mov	r2, r0
 3766 0022 70B9     		cbnz	r0, .L358
 3767              	.LVL551:
 3768              	.L360:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3769              		.loc 1 1603 0
 3770 0024 E169     		ldr	r1, [r4, #28]
 3771 0026 3046     		mov	r0, r6
 3772              	.LVL552:
 3773 0028 FFF7FEFF 		bl	move_window
 3774              	.LVL553:
1604:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 3775              		.loc 1 1604 0
 3776 002c 0246     		mov	r2, r0
 3777 002e 40B9     		cbnz	r0, .L358
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3778              		.loc 1 1608 0
 3779 0030 236A     		ldr	r3, [r4, #32]
 3780 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 0034 002B     		cmp	r3, #0
 3782 0036 18BF     		it	ne
 3783 0038 E52B     		cmpne	r3, #229
 3784 003a ECD1     		bne	.L362
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3785              		.loc 1 1610 0
 3786 003c 0135     		adds	r5, r5, #1
 3787              	.LVL554:
 3788 003e BD42     		cmp	r5, r7
 3789 0040 EAD1     		bne	.L359
 3790              	.LVL555:
ARM GAS  /tmp/cc2OGbx6.s 			page 180


 3791              	.L358:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3792              		.loc 1 1618 0
 3793 0042 042A     		cmp	r2, #4
 3794 0044 01D0     		beq	.L365
 3795              	.LVL556:
 3796              	.L361:
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3797              		.loc 1 1620 0
 3798 0046 1046     		mov	r0, r2
 3799 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3800              	.LVL557:
 3801              	.L365:
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3802              		.loc 1 1618 0
 3803 004a 0722     		movs	r2, #7
 3804              	.LVL558:
 3805 004c FBE7     		b	.L361
 3806              		.cfi_endproc
 3807              	.LFE165:
 3809              		.section	.text.dir_register,"ax",%progbits
 3810              		.align	1
 3811              		.syntax unified
 3812              		.thumb
 3813              		.thumb_func
 3814              		.fpu fpv5-d16
 3816              	dir_register:
 3817              	.LFB170:
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3818              		.loc 1 2295 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 0
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              	.LVL559:
 3823 0000 70B5     		push	{r4, r5, r6, lr}
 3824              	.LCFI41:
 3825              		.cfi_def_cfa_offset 16
 3826              		.cfi_offset 4, -16
 3827              		.cfi_offset 5, -12
 3828              		.cfi_offset 6, -8
 3829              		.cfi_offset 14, -4
 3830 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3831              		.loc 1 2297 0
 3832 0004 0668     		ldr	r6, [r0]
 3833              	.LVL560:
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3834              		.loc 1 2366 0
 3835 0006 0121     		movs	r1, #1
 3836 0008 FFF7FEFF 		bl	dir_alloc
 3837              	.LVL561:
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3838              		.loc 1 2371 0
 3839 000c 0546     		mov	r5, r0
 3840 000e 08B1     		cbz	r0, .L369
 3841              	.LVL562:
 3842              	.L367:
ARM GAS  /tmp/cc2OGbx6.s 			page 181


2384:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3843              		.loc 1 2384 0
 3844 0010 2846     		mov	r0, r5
 3845 0012 70BD     		pop	{r4, r5, r6, pc}
 3846              	.LVL563:
 3847              	.L369:
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3848              		.loc 1 2372 0
 3849 0014 E169     		ldr	r1, [r4, #28]
 3850 0016 3046     		mov	r0, r6
 3851              	.LVL564:
 3852 0018 FFF7FEFF 		bl	move_window
 3853              	.LVL565:
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3854              		.loc 1 2373 0
 3855 001c 0546     		mov	r5, r0
 3856 001e 0028     		cmp	r0, #0
 3857 0020 F6D1     		bne	.L367
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3858              		.loc 1 2374 0
 3859 0022 2022     		movs	r2, #32
 3860 0024 0021     		movs	r1, #0
 3861 0026 206A     		ldr	r0, [r4, #32]
 3862              	.LVL566:
 3863 0028 FFF7FEFF 		bl	mem_set
 3864              	.LVL567:
2375:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0
 3865              		.loc 1 2375 0
 3866 002c 0B22     		movs	r2, #11
 3867 002e 04F12401 		add	r1, r4, #36
 3868 0032 206A     		ldr	r0, [r4, #32]
 3869 0034 FFF7FEFF 		bl	mem_cpy
 3870              	.LVL568:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3871              		.loc 1 2379 0
 3872 0038 0123     		movs	r3, #1
 3873 003a F370     		strb	r3, [r6, #3]
 3874 003c E8E7     		b	.L367
 3875              		.cfi_endproc
 3876              	.LFE170:
 3878              		.section	.text.dir_read,"ax",%progbits
 3879              		.align	1
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3883              		.fpu fpv5-d16
 3885              	dir_read:
 3886              	.LFB168:
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_NO_FILE;
 3887              		.loc 1 2135 0
 3888              		.cfi_startproc
 3889              		@ args = 0, pretend = 0, frame = 0
 3890              		@ frame_needed = 0, uses_anonymous_args = 0
 3891              	.LVL569:
 3892 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3893              	.LCFI42:
 3894              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc2OGbx6.s 			page 182


 3895              		.cfi_offset 3, -24
 3896              		.cfi_offset 4, -20
 3897              		.cfi_offset 5, -16
 3898              		.cfi_offset 6, -12
 3899              		.cfi_offset 7, -8
 3900              		.cfi_offset 14, -4
 3901 0002 0446     		mov	r4, r0
 3902 0004 0E46     		mov	r6, r1
 3903              	.LVL570:
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c;
 3904              		.loc 1 2137 0
 3905 0006 0568     		ldr	r5, [r0]
 3906              	.LVL571:
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs = dp->obj.fs;
 3907              		.loc 1 2136 0
 3908 0008 0427     		movs	r7, #4
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3909              		.loc 1 2143 0
 3910 000a 05E0     		b	.L371
 3911              	.LVL572:
 3912              	.L373:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3913              		.loc 1 2193 0
 3914 000c 0021     		movs	r1, #0
 3915 000e 2046     		mov	r0, r4
 3916              	.LVL573:
 3917 0010 FFF7FEFF 		bl	dir_next
 3918              	.LVL574:
2194:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3919              		.loc 1 2194 0
 3920 0014 0746     		mov	r7, r0
 3921 0016 E8B9     		cbnz	r0, .L372
 3922              	.LVL575:
 3923              	.L371:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(fs, dp->sect);
 3924              		.loc 1 2143 0
 3925 0018 E169     		ldr	r1, [r4, #28]
 3926 001a D9B1     		cbz	r1, .L372
2144:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3927              		.loc 1 2144 0
 3928 001c 2846     		mov	r0, r5
 3929 001e FFF7FEFF 		bl	move_window
 3930              	.LVL576:
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3931              		.loc 1 2145 0
 3932 0022 0746     		mov	r7, r0
 3933 0024 B0B9     		cbnz	r0, .L372
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) {
 3934              		.loc 1 2146 0
 3935 0026 236A     		ldr	r3, [r4, #32]
 3936 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3937              	.LVL577:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3938              		.loc 1 2147 0
 3939 002a 92B1     		cbz	r2, .L376
2167:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN != 0	/* LFN configuration */
 3940              		.loc 1 2167 0
ARM GAS  /tmp/cc2OGbx6.s 			page 183


 3941 002c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3942 002e 03F03F03 		and	r3, r3, #63
 3943              	.LVL578:
 3944 0032 A371     		strb	r3, [r4, #6]
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3945              		.loc 1 2188 0
 3946 0034 E52A     		cmp	r2, #229
 3947 0036 18BF     		it	ne
 3948 0038 2E2A     		cmpne	r2, #46
 3949 003a E7D0     		beq	.L373
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3950              		.loc 1 2188 0 is_stmt 0 discriminator 1
 3951 003c 0F2B     		cmp	r3, #15
 3952 003e E5D0     		beq	.L373
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
 3953              		.loc 1 2188 0 discriminator 2
 3954 0040 23F02003 		bic	r3, r3, #32
 3955              	.LVL579:
 3956 0044 082B     		cmp	r3, #8
 3957 0046 14BF     		ite	ne
 3958 0048 0023     		movne	r3, #0
 3959 004a 0123     		moveq	r3, #1
 3960 004c B342     		cmp	r3, r6
 3961 004e DDD1     		bne	.L373
 3962 0050 00E0     		b	.L372
 3963              	.LVL580:
 3964              	.L376:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3965              		.loc 1 2148 0 is_stmt 1
 3966 0052 0427     		movs	r7, #4
 3967              	.LVL581:
 3968              	.L372:
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3969              		.loc 1 2197 0
 3970 0054 0FB1     		cbz	r7, .L375
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3971              		.loc 1 2197 0 is_stmt 0 discriminator 1
 3972 0056 0023     		movs	r3, #0
 3973 0058 E361     		str	r3, [r4, #28]
 3974              	.L375:
2199:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3975              		.loc 1 2199 0 is_stmt 1
 3976 005a 3846     		mov	r0, r7
 3977 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3978              		.cfi_endproc
 3979              	.LFE168:
 3981              		.section	.text.sync_fs,"ax",%progbits
 3982              		.align	1
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu fpv5-d16
 3988              	sync_fs:
 3989              	.LFB156:
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3990              		.loc 1 947 0
 3991              		.cfi_startproc
ARM GAS  /tmp/cc2OGbx6.s 			page 184


 3992              		@ args = 0, pretend = 0, frame = 0
 3993              		@ frame_needed = 0, uses_anonymous_args = 0
 3994              	.LVL582:
 3995 0000 70B5     		push	{r4, r5, r6, lr}
 3996              	.LCFI43:
 3997              		.cfi_def_cfa_offset 16
 3998              		.cfi_offset 4, -16
 3999              		.cfi_offset 5, -12
 4000              		.cfi_offset 6, -8
 4001              		.cfi_offset 14, -4
 4002 0002 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4003              		.loc 1 951 0
 4004 0004 FFF7FEFF 		bl	sync_window
 4005              	.LVL583:
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSInfo sector if needed */
 4006              		.loc 1 952 0
 4007 0008 0546     		mov	r5, r0
 4008 000a 48B9     		cbnz	r0, .L379
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4009              		.loc 1 954 0
 4010 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4011 000e 032B     		cmp	r3, #3
 4012 0010 08D0     		beq	.L383
 4013              	.LVL584:
 4014              	.L380:
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4015              		.loc 1 968 0
 4016 0012 0022     		movs	r2, #0
 4017 0014 1146     		mov	r1, r2
 4018 0016 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4019 0018 FFF7FEFF 		bl	disk_ioctl
 4020              	.LVL585:
 4021 001c 00B1     		cbz	r0, .L379
 4022 001e 0125     		movs	r5, #1
 4023              	.L379:
 4024              	.LVL586:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4025              		.loc 1 972 0
 4026 0020 2846     		mov	r0, r5
 4027 0022 70BD     		pop	{r4, r5, r6, pc}
 4028              	.LVL587:
 4029              	.L383:
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSInfo structure */
 4030              		.loc 1 954 0 discriminator 1
 4031 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4032 0026 012B     		cmp	r3, #1
 4033 0028 F3D1     		bne	.L380
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4034              		.loc 1 956 0
 4035 002a 04F13006 		add	r6, r4, #48
 4036 002e 4FF40072 		mov	r2, #512
 4037 0032 0021     		movs	r1, #0
 4038 0034 3046     		mov	r0, r6
 4039              	.LVL588:
 4040 0036 FFF7FEFF 		bl	mem_set
 4041              	.LVL589:
ARM GAS  /tmp/cc2OGbx6.s 			page 185


 957:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4042              		.loc 1 957 0
 4043 003a 4AF65521 		movw	r1, #43605
 4044 003e 04F22E20 		addw	r0, r4, #558
 4045 0042 FFF7FEFF 		bl	st_word
 4046              	.LVL590:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 4047              		.loc 1 958 0
 4048 0046 0F49     		ldr	r1, .L384
 4049 0048 3046     		mov	r0, r6
 4050 004a FFF7FEFF 		bl	st_dword
 4051              	.LVL591:
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4052              		.loc 1 959 0
 4053 004e 0E49     		ldr	r1, .L384+4
 4054 0050 04F50570 		add	r0, r4, #532
 4055 0054 FFF7FEFF 		bl	st_dword
 4056              	.LVL592:
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4057              		.loc 1 960 0
 4058 0058 2169     		ldr	r1, [r4, #16]
 4059 005a 04F50670 		add	r0, r4, #536
 4060 005e FFF7FEFF 		bl	st_dword
 4061              	.LVL593:
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSInfo sector */
 4062              		.loc 1 961 0
 4063 0062 E168     		ldr	r1, [r4, #12]
 4064 0064 04F50770 		add	r0, r4, #540
 4065 0068 FFF7FEFF 		bl	st_dword
 4066              	.LVL594:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win, fs->winsect, 1);
 4067              		.loc 1 963 0
 4068 006c E269     		ldr	r2, [r4, #28]
 4069 006e 0132     		adds	r2, r2, #1
 4070 0070 E262     		str	r2, [r4, #44]
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 4071              		.loc 1 964 0
 4072 0072 0123     		movs	r3, #1
 4073 0074 3146     		mov	r1, r6
 4074 0076 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 4075 0078 FFF7FEFF 		bl	disk_write
 4076              	.LVL595:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4077              		.loc 1 965 0
 4078 007c 0023     		movs	r3, #0
 4079 007e 2371     		strb	r3, [r4, #4]
 4080 0080 C7E7     		b	.L380
 4081              	.L385:
 4082 0082 00BF     		.align	2
 4083              	.L384:
 4084 0084 52526141 		.word	1096897106
 4085 0088 72724161 		.word	1631679090
 4086              		.cfi_endproc
 4087              	.LFE156:
 4089              		.section	.text.f_mount,"ax",%progbits
 4090              		.align	1
 4091              		.global	f_mount
ARM GAS  /tmp/cc2OGbx6.s 			page 186


 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4095              		.fpu fpv5-d16
 4097              	f_mount:
 4098              	.LFB179:
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
 4099              		.loc 1 3265 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 16
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103              	.LVL596:
 4104 0000 70B5     		push	{r4, r5, r6, lr}
 4105              	.LCFI44:
 4106              		.cfi_def_cfa_offset 16
 4107              		.cfi_offset 4, -16
 4108              		.cfi_offset 5, -12
 4109              		.cfi_offset 6, -8
 4110              		.cfi_offset 14, -4
 4111 0002 84B0     		sub	sp, sp, #16
 4112              	.LCFI45:
 4113              		.cfi_def_cfa_offset 32
 4114 0004 0190     		str	r0, [sp, #4]
 4115 0006 0091     		str	r1, [sp]
 4116 0008 1446     		mov	r4, r2
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4117              		.loc 1 3269 0
 4118 000a 04A8     		add	r0, sp, #16
 4119              	.LVL597:
 4120 000c 40F8041D 		str	r1, [r0, #-4]!
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4121              		.loc 1 3273 0
 4122 0010 FFF7FEFF 		bl	get_ldnumber
 4123              	.LVL598:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4124              		.loc 1 3274 0
 4125 0014 051E     		subs	r5, r0, #0
 4126 0016 21DB     		blt	.L390
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4127              		.loc 1 3275 0
 4128 0018 114B     		ldr	r3, .L394
 4129 001a 53F82560 		ldr	r6, [r3, r5, lsl #2]
 4130              	.LVL599:
3277:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4131              		.loc 1 3277 0
 4132 001e 26B1     		cbz	r6, .L388
3279:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4133              		.loc 1 3279 0
 4134 0020 3046     		mov	r0, r6
 4135              	.LVL600:
 4136 0022 FFF7FEFF 		bl	clear_lock
 4137              	.LVL601:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4138              		.loc 1 3284 0
 4139 0026 0023     		movs	r3, #0
 4140 0028 3370     		strb	r3, [r6]
 4141              	.L388:
ARM GAS  /tmp/cc2OGbx6.s 			page 187


3287:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4142              		.loc 1 3287 0
 4143 002a 019B     		ldr	r3, [sp, #4]
 4144 002c 0BB1     		cbz	r3, .L389
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
 4145              		.loc 1 3288 0
 4146 002e 0022     		movs	r2, #0
 4147 0030 1A70     		strb	r2, [r3]
 4148              	.L389:
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4149              		.loc 1 3293 0
 4150 0032 019B     		ldr	r3, [sp, #4]
 4151 0034 0A4A     		ldr	r2, .L394
 4152 0036 42F82530 		str	r3, [r2, r5, lsl #2]
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4153              		.loc 1 3295 0
 4154 003a 14F1FF34 		adds	r4, r4, #-1
 4155 003e 18BF     		it	ne
 4156 0040 0124     		movne	r4, #1
 4157 0042 002B     		cmp	r3, #0
 4158 0044 08BF     		it	eq
 4159 0046 0124     		moveq	r4, #1
 4160 0048 14B1     		cbz	r4, .L393
 4161 004a 0020     		movs	r0, #0
 4162              	.LVL602:
 4163              	.L387:
3299:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4164              		.loc 1 3299 0
 4165 004c 04B0     		add	sp, sp, #16
 4166              	.LCFI46:
 4167              		.cfi_remember_state
 4168              		.cfi_def_cfa_offset 16
 4169              		@ sp needed
 4170 004e 70BD     		pop	{r4, r5, r6, pc}
 4171              	.LVL603:
 4172              	.L393:
 4173              	.LCFI47:
 4174              		.cfi_restore_state
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 4175              		.loc 1 3297 0
 4176 0050 0022     		movs	r2, #0
 4177 0052 01A9     		add	r1, sp, #4
 4178 0054 6846     		mov	r0, sp
 4179 0056 FFF7FEFF 		bl	find_volume
 4180              	.LVL604:
3298:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4181              		.loc 1 3298 0
 4182 005a F7E7     		b	.L387
 4183              	.LVL605:
 4184              	.L390:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4185              		.loc 1 3274 0
 4186 005c 0B20     		movs	r0, #11
 4187              	.LVL606:
 4188 005e F5E7     		b	.L387
 4189              	.L395:
 4190              		.align	2
ARM GAS  /tmp/cc2OGbx6.s 			page 188


 4191              	.L394:
 4192 0060 00000000 		.word	.LANCHOR2
 4193              		.cfi_endproc
 4194              	.LFE179:
 4196              		.section	.text.f_open,"ax",%progbits
 4197              		.align	1
 4198              		.global	f_open
 4199              		.syntax unified
 4200              		.thumb
 4201              		.thumb_func
 4202              		.fpu fpv5-d16
 4204              	f_open:
 4205              	.LFB180:
3313:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4206              		.loc 1 3313 0
 4207              		.cfi_startproc
 4208              		@ args = 0, pretend = 0, frame = 64
 4209              		@ frame_needed = 0, uses_anonymous_args = 0
 4210              	.LVL607:
 4211 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4212              	.LCFI48:
 4213              		.cfi_def_cfa_offset 28
 4214              		.cfi_offset 4, -28
 4215              		.cfi_offset 5, -24
 4216              		.cfi_offset 6, -20
 4217              		.cfi_offset 7, -16
 4218              		.cfi_offset 8, -12
 4219              		.cfi_offset 9, -8
 4220              		.cfi_offset 14, -4
 4221 0004 91B0     		sub	sp, sp, #68
 4222              	.LCFI49:
 4223              		.cfi_def_cfa_offset 96
 4224 0006 0191     		str	r1, [sp, #4]
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4225              		.loc 1 3324 0
 4226 0008 0028     		cmp	r0, #0
 4227 000a 00F01581 		beq	.L412
 4228 000e 0546     		mov	r5, r0
 4229 0010 1646     		mov	r6, r2
3327:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path, &fs, mode);
 4230              		.loc 1 3327 0
 4231 0012 02F03F07 		and	r7, r2, #63
 4232              	.LVL608:
3328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4233              		.loc 1 3328 0
 4234 0016 3A46     		mov	r2, r7
 4235 0018 03A9     		add	r1, sp, #12
 4236              	.LVL609:
 4237 001a 01A8     		add	r0, sp, #4
 4238              	.LVL610:
 4239 001c FFF7FEFF 		bl	find_volume
 4240              	.LVL611:
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.obj.fs = fs;
 4241              		.loc 1 3329 0
 4242 0020 0446     		mov	r4, r0
 4243 0022 30B1     		cbz	r0, .L425
 4244              	.LVL612:
ARM GAS  /tmp/cc2OGbx6.s 			page 189


 4245              	.L398:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4246              		.loc 1 3499 0
 4247 0024 0CB1     		cbz	r4, .L397
 4248              	.LVL613:
 4249              	.L411:
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4250              		.loc 1 3499 0 is_stmt 0 discriminator 1
 4251 0026 0023     		movs	r3, #0
 4252 0028 2B60     		str	r3, [r5]
 4253              	.LVL614:
 4254              	.L397:
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4255              		.loc 1 3502 0 is_stmt 1
 4256 002a 2046     		mov	r0, r4
 4257 002c 11B0     		add	sp, sp, #68
 4258              	.LCFI50:
 4259              		.cfi_remember_state
 4260              		.cfi_def_cfa_offset 28
 4261              		@ sp needed
 4262 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4263              	.LVL615:
 4264              	.L425:
 4265              	.LCFI51:
 4266              		.cfi_restore_state
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 4267              		.loc 1 3330 0
 4268 0032 039B     		ldr	r3, [sp, #12]
 4269 0034 0493     		str	r3, [sp, #16]
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4270              		.loc 1 3332 0
 4271 0036 0199     		ldr	r1, [sp, #4]
 4272 0038 04A8     		add	r0, sp, #16
 4273              	.LVL616:
 4274 003a FFF7FEFF 		bl	follow_path
 4275              	.LVL617:
3334:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4276              		.loc 1 3334 0
 4277 003e 0446     		mov	r4, r0
 4278 0040 60B9     		cbnz	r0, .L399
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4279              		.loc 1 3335 0
 4280 0042 9DF93F30 		ldrsb	r3, [sp, #63]
 4281 0046 002B     		cmp	r3, #0
 4282 0048 51DB     		blt	.L413
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4283              		.loc 1 3340 0
 4284 004a 37F00103 		bics	r3, r7, #1
 4285 004e 14BF     		ite	ne
 4286 0050 0121     		movne	r1, #1
 4287 0052 0021     		moveq	r1, #0
 4288 0054 04A8     		add	r0, sp, #16
 4289              	.LVL618:
 4290 0056 FFF7FEFF 		bl	chk_lock
 4291              	.LVL619:
 4292 005a 0446     		mov	r4, r0
 4293              	.LVL620:
ARM GAS  /tmp/cc2OGbx6.s 			page 190


 4294              	.L399:
3345:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4295              		.loc 1 3345 0
 4296 005c 16F01C0F 		tst	r6, #28
 4297 0060 5BD0     		beq	.L400
3346:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4298              		.loc 1 3346 0
 4299 0062 002C     		cmp	r4, #0
 4300 0064 4FD0     		beq	.L401
3347:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4301              		.loc 1 3347 0
 4302 0066 042C     		cmp	r4, #4
 4303 0068 43D0     		beq	.L426
 4304              	.LVL621:
 4305              	.L402:
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4306              		.loc 1 3354 0
 4307 006a 47F00807 		orr	r7, r7, #8
 4308              	.LVL622:
 4309              	.L403:
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4310              		.loc 1 3363 0
 4311 006e 002C     		cmp	r4, #0
 4312 0070 62D1     		bne	.L404
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();
 4313              		.loc 1 3363 0 is_stmt 0 discriminator 1
 4314 0072 17F0080F 		tst	r7, #8
 4315 0076 5FD0     		beq	.L404
3364:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 4316              		.loc 1 3364 0 is_stmt 1
 4317 0078 FFF7FEFF 		bl	get_fattime
 4318              	.LVL623:
 4319 007c 0646     		mov	r6, r0
 4320              	.LVL624:
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_ModTime, dw);	/* Set modified time */
 4321              		.loc 1 3392 0
 4322 007e 0146     		mov	r1, r0
 4323 0080 0C98     		ldr	r0, [sp, #48]
 4324              	.LVL625:
 4325 0082 0E30     		adds	r0, r0, #14
 4326 0084 FFF7FEFF 		bl	st_dword
 4327              	.LVL626:
3393:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4328              		.loc 1 3393 0
 4329 0088 3146     		mov	r1, r6
 4330 008a 0C98     		ldr	r0, [sp, #48]
 4331 008c 1630     		adds	r0, r0, #22
 4332 008e FFF7FEFF 		bl	st_dword
 4333              	.LVL627:
3394:Middlewares/Third_Party/FatFs/src/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get cluster chain */
 4334              		.loc 1 3394 0
 4335 0092 0C9B     		ldr	r3, [sp, #48]
 4336 0094 2022     		movs	r2, #32
 4337 0096 DA72     		strb	r2, [r3, #11]
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4338              		.loc 1 3395 0
 4339 0098 039E     		ldr	r6, [sp, #12]
ARM GAS  /tmp/cc2OGbx6.s 			page 191


 4340              	.LVL628:
 4341 009a DDF83080 		ldr	r8, [sp, #48]
 4342 009e 4146     		mov	r1, r8
 4343 00a0 3046     		mov	r0, r6
 4344 00a2 FFF7FEFF 		bl	ld_clust
 4345              	.LVL629:
 4346 00a6 8146     		mov	r9, r0
 4347              	.LVL630:
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4348              		.loc 1 3396 0
 4349 00a8 0022     		movs	r2, #0
 4350 00aa 4146     		mov	r1, r8
 4351 00ac 3046     		mov	r0, r6
 4352              	.LVL631:
 4353 00ae FFF7FEFF 		bl	st_clust
 4354              	.LVL632:
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 4355              		.loc 1 3397 0
 4356 00b2 0021     		movs	r1, #0
 4357 00b4 0C98     		ldr	r0, [sp, #48]
 4358 00b6 1C30     		adds	r0, r0, #28
 4359 00b8 FFF7FEFF 		bl	st_dword
 4360              	.LVL633:
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4361              		.loc 1 3398 0
 4362 00bc 039B     		ldr	r3, [sp, #12]
 4363 00be 0122     		movs	r2, #1
 4364 00c0 DA70     		strb	r2, [r3, #3]
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 						dw = fs->winsect;
 4365              		.loc 1 3400 0
 4366 00c2 B9F1000F 		cmp	r9, #0
 4367 00c6 37D0     		beq	.L404
3401:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4368              		.loc 1 3401 0
 4369 00c8 039B     		ldr	r3, [sp, #12]
 4370 00ca DE6A     		ldr	r6, [r3, #44]
 4371              	.LVL634:
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 4372              		.loc 1 3402 0
 4373 00cc 0022     		movs	r2, #0
 4374 00ce 4946     		mov	r1, r9
 4375 00d0 04A8     		add	r0, sp, #16
 4376 00d2 FFF7FEFF 		bl	remove_chain
 4377              	.LVL635:
3403:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, dw);
 4378              		.loc 1 3403 0
 4379 00d6 0446     		mov	r4, r0
 4380 00d8 70BB     		cbnz	r0, .L404
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4381              		.loc 1 3404 0
 4382 00da 3146     		mov	r1, r6
 4383 00dc 0398     		ldr	r0, [sp, #12]
 4384              	.LVL636:
 4385 00de FFF7FEFF 		bl	move_window
 4386              	.LVL637:
 4387 00e2 0446     		mov	r4, r0
 4388              	.LVL638:
ARM GAS  /tmp/cc2OGbx6.s 			page 192


3405:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 4389              		.loc 1 3405 0
 4390 00e4 09F1FF33 		add	r3, r9, #-1
 4391 00e8 039A     		ldr	r2, [sp, #12]
 4392 00ea D360     		str	r3, [r2, #12]
 4393 00ec 24E0     		b	.L404
 4394              	.LVL639:
 4395              	.L413:
3336:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4396              		.loc 1 3336 0
 4397 00ee 0624     		movs	r4, #6
 4398 00f0 B4E7     		b	.L399
 4399              	.LVL640:
 4400              	.L426:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4401              		.loc 1 3349 0
 4402 00f2 FFF7FEFF 		bl	enq_lock
 4403              	.LVL641:
 4404 00f6 08B9     		cbnz	r0, .L427
 4405 00f8 1224     		movs	r4, #18
 4406              	.LVL642:
 4407 00fa B6E7     		b	.L402
 4408              	.LVL643:
 4409              	.L427:
3349:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4410              		.loc 1 3349 0 is_stmt 0 discriminator 1
 4411 00fc 04A8     		add	r0, sp, #16
 4412 00fe FFF7FEFF 		bl	dir_register
 4413              	.LVL644:
 4414 0102 0446     		mov	r4, r0
 4415              	.LVL645:
 4416 0104 B1E7     		b	.L402
 4417              	.LVL646:
 4418              	.L401:
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4419              		.loc 1 3357 0 is_stmt 1
 4420 0106 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4421 010a 13F0110F 		tst	r3, #17
 4422 010e 12D1     		bne	.L415
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4423              		.loc 1 3360 0
 4424 0110 16F0040F 		tst	r6, #4
 4425 0114 ABD0     		beq	.L403
 4426 0116 0824     		movs	r4, #8
 4427              	.LVL647:
 4428 0118 0EE0     		b	.L404
 4429              	.LVL648:
 4430              	.L400:
3412:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* It is a directory */
 4431              		.loc 1 3412 0
 4432 011a 6CB9     		cbnz	r4, .L404
3413:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4433              		.loc 1 3413 0
 4434 011c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 4435 0120 13F0100F 		tst	r3, #16
 4436 0124 4ED1     		bne	.L417
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
ARM GAS  /tmp/cc2OGbx6.s 			page 193


 4437              		.loc 1 3416 0
 4438 0126 16F0020F 		tst	r6, #2
 4439 012a 05D0     		beq	.L404
3416:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4440              		.loc 1 3416 0 is_stmt 0 discriminator 1
 4441 012c 13F0010F 		tst	r3, #1
 4442 0130 02D0     		beq	.L404
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4443              		.loc 1 3417 0 is_stmt 1
 4444 0132 0724     		movs	r4, #7
 4445              	.LVL649:
 4446 0134 16E0     		b	.L405
 4447              	.LVL650:
 4448              	.L415:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4449              		.loc 1 3358 0
 4450 0136 0724     		movs	r4, #7
 4451              	.LVL651:
 4452              	.L404:
3422:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4453              		.loc 1 3422 0
 4454 0138 A4B9     		cbnz	r4, .L405
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_MODIFIED;
 4455              		.loc 1 3423 0
 4456 013a 17F0080F 		tst	r7, #8
 4457 013e 01D0     		beq	.L406
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4458              		.loc 1 3424 0
 4459 0140 47F04007 		orr	r7, r7, #64
 4460              	.LVL652:
 4461              	.L406:
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dj.dir;
 4462              		.loc 1 3425 0
 4463 0144 039B     		ldr	r3, [sp, #12]
 4464 0146 DB6A     		ldr	r3, [r3, #44]
 4465 0148 6B62     		str	r3, [r5, #36]
3426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 4466              		.loc 1 3426 0
 4467 014a 0C9B     		ldr	r3, [sp, #48]
 4468 014c AB62     		str	r3, [r5, #40]
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->obj.lockid) res = FR_INT_ERR;
 4469              		.loc 1 3428 0
 4470 014e 37F00103 		bics	r3, r7, #1
 4471 0152 14BF     		ite	ne
 4472 0154 0121     		movne	r1, #1
 4473 0156 0021     		moveq	r1, #0
 4474 0158 04A8     		add	r0, sp, #16
 4475 015a FFF7FEFF 		bl	inc_lock
 4476              	.LVL653:
 4477 015e 2861     		str	r0, [r5, #16]
3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4478              		.loc 1 3429 0
 4479 0160 0028     		cmp	r0, #0
 4480 0162 67D0     		beq	.L419
 4481              	.LVL654:
 4482              	.L405:
3444:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/cc2OGbx6.s 			page 194


 4483              		.loc 1 3444 0
 4484 0164 002C     		cmp	r4, #0
 4485 0166 7FF45DAF 		bne	.L398
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4486              		.loc 1 3456 0
 4487 016a 039E     		ldr	r6, [sp, #12]
 4488 016c DDF83080 		ldr	r8, [sp, #48]
 4489 0170 4146     		mov	r1, r8
 4490 0172 3046     		mov	r0, r6
 4491 0174 FFF7FEFF 		bl	ld_clust
 4492              	.LVL655:
 4493 0178 A860     		str	r0, [r5, #8]
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4494              		.loc 1 3457 0
 4495 017a 08F11C00 		add	r0, r8, #28
 4496 017e FFF7FEFF 		bl	ld_dword
 4497              	.LVL656:
 4498 0182 E860     		str	r0, [r5, #12]
3460:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4499              		.loc 1 3460 0
 4500 0184 0021     		movs	r1, #0
 4501 0186 E962     		str	r1, [r5, #44]
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.id = fs->id;
 4502              		.loc 1 3462 0
 4503 0188 2E60     		str	r6, [r5]
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4504              		.loc 1 3463 0
 4505 018a F388     		ldrh	r3, [r6, #6]
 4506 018c AB80     		strh	r3, [r5, #4]	@ movhi
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4507              		.loc 1 3464 0
 4508 018e 2F75     		strb	r7, [r5, #20]
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4509              		.loc 1 3465 0
 4510 0190 6975     		strb	r1, [r5, #21]
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4511              		.loc 1 3466 0
 4512 0192 2962     		str	r1, [r5, #32]
3467:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4513              		.loc 1 3467 0
 4514 0194 A961     		str	r1, [r5, #24]
3470:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4515              		.loc 1 3470 0
 4516 0196 05F13006 		add	r6, r5, #48
 4517 019a 4FF40072 		mov	r2, #512
 4518 019e 3046     		mov	r0, r6
 4519 01a0 FFF7FEFF 		bl	mem_set
 4520              	.LVL657:
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4521              		.loc 1 3472 0
 4522 01a4 17F0200F 		tst	r7, #32
 4523 01a8 3FF43CAF 		beq	.L398
3472:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4524              		.loc 1 3472 0 is_stmt 0 discriminator 1
 4525 01ac EF68     		ldr	r7, [r5, #12]
 4526              	.LVL658:
 4527 01ae 002F     		cmp	r7, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 195


 4528 01b0 3FF438AF 		beq	.L398
3473:Middlewares/Third_Party/FatFs/src/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4529              		.loc 1 3473 0 is_stmt 1
 4530 01b4 AF61     		str	r7, [r5, #24]
3474:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4531              		.loc 1 3474 0
 4532 01b6 039B     		ldr	r3, [sp, #12]
 4533 01b8 B3F80A80 		ldrh	r8, [r3, #10]
 4534 01bc 4FEA4828 		lsl	r8, r8, #9
 4535              	.LVL659:
3475:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4536              		.loc 1 3475 0
 4537 01c0 A968     		ldr	r1, [r5, #8]
 4538              	.LVL660:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4539              		.loc 1 3476 0
 4540 01c2 06E0     		b	.L407
 4541              	.LVL661:
 4542              	.L417:
3414:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4543              		.loc 1 3414 0
 4544 01c4 0424     		movs	r4, #4
 4545              	.LVL662:
 4546 01c6 CDE7     		b	.L405
 4547              	.LVL663:
 4548              	.L408:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4549              		.loc 1 3479 0
 4550 01c8 B1F1FF3F 		cmp	r1, #-1
 4551 01cc 11D0     		beq	.L428
 4552              	.LVL664:
 4553              	.L409:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4554              		.loc 1 3476 0 discriminator 2
 4555 01ce A7EB0807 		sub	r7, r7, r8
 4556              	.LVL665:
 4557              	.L407:
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4558              		.loc 1 3476 0 is_stmt 0 discriminator 1
 4559 01d2 4745     		cmp	r7, r8
 4560 01d4 94BF     		ite	ls
 4561 01d6 0023     		movls	r3, #0
 4562 01d8 0123     		movhi	r3, #1
 4563 01da 002C     		cmp	r4, #0
 4564 01dc 18BF     		it	ne
 4565 01de 0023     		movne	r3, #0
 4566 01e0 4BB1     		cbz	r3, .L429
3477:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4567              		.loc 1 3477 0 is_stmt 1
 4568 01e2 2846     		mov	r0, r5
 4569 01e4 FFF7FEFF 		bl	get_fat
 4570              	.LVL666:
 4571 01e8 0146     		mov	r1, r0
 4572              	.LVL667:
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4573              		.loc 1 3478 0
 4574 01ea 0128     		cmp	r0, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 196


 4575 01ec ECD8     		bhi	.L408
 4576 01ee 0224     		movs	r4, #2
 4577              	.LVL668:
 4578 01f0 EAE7     		b	.L408
 4579              	.LVL669:
 4580              	.L428:
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4581              		.loc 1 3479 0
 4582 01f2 0124     		movs	r4, #1
 4583              	.LVL670:
 4584 01f4 EBE7     		b	.L409
 4585              	.LVL671:
 4586              	.L429:
3481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4587              		.loc 1 3481 0
 4588 01f6 E961     		str	r1, [r5, #28]
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4589              		.loc 1 3482 0
 4590 01f8 002C     		cmp	r4, #0
 4591 01fa 7FF413AF 		bne	.L398
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((sc = clust2sect(fs, clst)) == 0) {
 4592              		.loc 1 3482 0 is_stmt 0 discriminator 1
 4593 01fe C7F30803 		ubfx	r3, r7, #0, #9
 4594 0202 002B     		cmp	r3, #0
 4595 0204 3FF40EAF 		beq	.L398
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_INT_ERR;
 4596              		.loc 1 3483 0 is_stmt 1
 4597 0208 DDF80C80 		ldr	r8, [sp, #12]
 4598              	.LVL672:
 4599 020c 4046     		mov	r0, r8
 4600 020e FFF7FEFF 		bl	clust2sect
 4601              	.LVL673:
 4602 0212 08B9     		cbnz	r0, .L430
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 4603              		.loc 1 3484 0
 4604 0214 0224     		movs	r4, #2
 4605              	.LVL674:
 4606 0216 06E7     		b	.L411
 4607              	.LVL675:
 4608              	.L430:
3486:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 4609              		.loc 1 3486 0
 4610 0218 00EB5722 		add	r2, r0, r7, lsr #9
 4611 021c 2A62     		str	r2, [r5, #32]
3488:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4612              		.loc 1 3488 0
 4613 021e 0123     		movs	r3, #1
 4614 0220 3146     		mov	r1, r6
 4615 0222 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 4616              	.LVL676:
 4617 0226 FFF7FEFF 		bl	disk_read
 4618              	.LVL677:
 4619 022a 0028     		cmp	r0, #0
 4620 022c 3FF4FAAE 		beq	.L398
 4621 0230 0124     		movs	r4, #1
 4622              	.LVL678:
 4623 0232 F8E6     		b	.L411
ARM GAS  /tmp/cc2OGbx6.s 			page 197


 4624              	.LVL679:
 4625              	.L419:
3429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4626              		.loc 1 3429 0
 4627 0234 0224     		movs	r4, #2
 4628              	.LVL680:
 4629 0236 F5E6     		b	.L398
 4630              	.LVL681:
 4631              	.L412:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4632              		.loc 1 3324 0
 4633 0238 0924     		movs	r4, #9
 4634 023a F6E6     		b	.L397
 4635              		.cfi_endproc
 4636              	.LFE180:
 4638              		.section	.text.f_read,"ax",%progbits
 4639              		.align	1
 4640              		.global	f_read
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4644              		.fpu fpv5-d16
 4646              	f_read:
 4647              	.LFB181:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4648              		.loc 1 3517 0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 16
 4651              		@ frame_needed = 0, uses_anonymous_args = 0
 4652              	.LVL682:
 4653 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4654              	.LCFI52:
 4655              		.cfi_def_cfa_offset 36
 4656              		.cfi_offset 4, -36
 4657              		.cfi_offset 5, -32
 4658              		.cfi_offset 6, -28
 4659              		.cfi_offset 7, -24
 4660              		.cfi_offset 8, -20
 4661              		.cfi_offset 9, -16
 4662              		.cfi_offset 10, -12
 4663              		.cfi_offset 11, -8
 4664              		.cfi_offset 14, -4
 4665 0004 85B0     		sub	sp, sp, #20
 4666              	.LCFI53:
 4667              		.cfi_def_cfa_offset 56
 4668 0006 0446     		mov	r4, r0
 4669 0008 8946     		mov	r9, r1
 4670 000a 1746     		mov	r7, r2
 4671 000c 9846     		mov	r8, r3
 4672              	.LVL683:
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4673              		.loc 1 3526 0
 4674 000e 0023     		movs	r3, #0
 4675              	.LVL684:
 4676 0010 C8F80030 		str	r3, [r8]
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4677              		.loc 1 3527 0
ARM GAS  /tmp/cc2OGbx6.s 			page 198


 4678 0014 0090     		str	r0, [sp]
 4679 0016 03A9     		add	r1, sp, #12
 4680              	.LVL685:
 4681 0018 FFF7FEFF 		bl	validate
 4682              	.LVL686:
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4683              		.loc 1 3528 0
 4684 001c 0646     		mov	r6, r0
 4685 001e 0028     		cmp	r0, #0
 4686 0020 40F09B80 		bne	.L432
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4687              		.loc 1 3528 0 is_stmt 0 discriminator 2
 4688 0024 667D     		ldrb	r6, [r4, #21]	@ zero_extendqisi2
 4689              	.LVL687:
 4690 0026 002E     		cmp	r6, #0
 4691 0028 40F09780 		bne	.L432
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4692              		.loc 1 3529 0 is_stmt 1
 4693 002c 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4694 002e 13F0010F 		tst	r3, #1
 4695 0032 00F0A980 		beq	.L454
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4696              		.loc 1 3530 0
 4697 0036 E568     		ldr	r5, [r4, #12]
 4698 0038 A369     		ldr	r3, [r4, #24]
 4699 003a ED1A     		subs	r5, r5, r3
 4700              	.LVL688:
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4701              		.loc 1 3531 0
 4702 003c BD42     		cmp	r5, r7
 4703 003e 56D3     		bcc	.L452
 4704 0040 3D46     		mov	r5, r7
 4705              	.LVL689:
 4706 0042 54E0     		b	.L452
 4707              	.LVL690:
 4708              	.L437:
3542:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4709              		.loc 1 3542 0
 4710 0044 E36A     		ldr	r3, [r4, #44]
 4711 0046 1BB1     		cbz	r3, .L439
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 4712              		.loc 1 3543 0
 4713 0048 2046     		mov	r0, r4
 4714 004a FFF7FEFF 		bl	clmt_clust
 4715              	.LVL691:
 4716 004e 5EE0     		b	.L438
 4717              	.LVL692:
 4718              	.L439:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4719              		.loc 1 3547 0
 4720 0050 E169     		ldr	r1, [r4, #28]
 4721 0052 0098     		ldr	r0, [sp]
 4722 0054 FFF7FEFF 		bl	get_fat
 4723              	.LVL693:
 4724 0058 59E0     		b	.L438
 4725              	.L461:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
ARM GAS  /tmp/cc2OGbx6.s 			page 199


 4726              		.loc 1 3550 0 discriminator 1
 4727 005a 0226     		movs	r6, #2
 4728              	.LVL694:
 4729 005c 6675     		strb	r6, [r4, #21]
 4730 005e 7CE0     		b	.L432
 4731              	.LVL695:
 4732              	.L462:
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4733              		.loc 1 3551 0 discriminator 1
 4734 0060 0126     		movs	r6, #1
 4735              	.LVL696:
 4736 0062 6675     		strb	r6, [r4, #21]
 4737 0064 79E0     		b	.L432
 4738              	.LVL697:
 4739              	.L463:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4740              		.loc 1 3555 0 discriminator 1
 4741 0066 0226     		movs	r6, #2
 4742              	.LVL698:
 4743 0068 6675     		strb	r6, [r4, #21]
 4744 006a 76E0     		b	.L432
 4745              	.LVL699:
 4746              	.L445:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4747              		.loc 1 3569 0
 4748 006c 94F91430 		ldrsb	r3, [r4, #20]
 4749 0070 002B     		cmp	r3, #0
 4750 0072 02DB     		blt	.L458
 4751              	.L446:
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4752              		.loc 1 3574 0
 4753 0074 4FEA4B27 		lsl	r7, fp, #9
 4754              	.LVL700:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4755              		.loc 1 3575 0
 4756 0078 2FE0     		b	.L447
 4757              	.LVL701:
 4758              	.L458:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4759              		.loc 1 3569 0 discriminator 1
 4760 007a 206A     		ldr	r0, [r4, #32]
 4761 007c A0EB0A00 		sub	r0, r0, r10
 4762 0080 5845     		cmp	r0, fp
 4763 0082 F7D2     		bcs	.L446
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4764              		.loc 1 3570 0
 4765 0084 4FF40072 		mov	r2, #512
 4766 0088 04F13001 		add	r1, r4, #48
 4767 008c 09EB4020 		add	r0, r9, r0, lsl #9
 4768 0090 FFF7FEFF 		bl	mem_cpy
 4769              	.LVL702:
 4770 0094 EEE7     		b	.L446
 4771              	.L443:
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4772              		.loc 1 3578 0
 4773 0096 226A     		ldr	r2, [r4, #32]
 4774 0098 5245     		cmp	r2, r10
ARM GAS  /tmp/cc2OGbx6.s 			page 200


 4775 009a 0DD0     		beq	.L448
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4776              		.loc 1 3580 0
 4777 009c 94F91430 		ldrsb	r3, [r4, #20]
 4778 00a0 002B     		cmp	r3, #0
 4779 00a2 5EDB     		blt	.L459
 4780              	.L449:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4781              		.loc 1 3585 0
 4782 00a4 0123     		movs	r3, #1
 4783 00a6 5246     		mov	r2, r10
 4784 00a8 04F13001 		add	r1, r4, #48
 4785 00ac 0398     		ldr	r0, [sp, #12]
 4786 00ae 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4787 00b0 FFF7FEFF 		bl	disk_read
 4788              	.LVL703:
 4789 00b4 0028     		cmp	r0, #0
 4790 00b6 64D1     		bne	.L460
 4791              	.L448:
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4792              		.loc 1 3588 0
 4793 00b8 C4F820A0 		str	r10, [r4, #32]
 4794              	.LVL704:
 4795              	.L435:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4796              		.loc 1 3590 0
 4797 00bc A369     		ldr	r3, [r4, #24]
 4798 00be C3F30803 		ubfx	r3, r3, #0, #9
 4799 00c2 C3F50077 		rsb	r7, r3, #512
 4800              	.LVL705:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4801              		.loc 1 3591 0
 4802 00c6 BD42     		cmp	r5, r7
 4803 00c8 00D2     		bcs	.L451
 4804 00ca 2F46     		mov	r7, r5
 4805              	.LVL706:
 4806              	.L451:
3596:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4807              		.loc 1 3596 0
 4808 00cc 04F13001 		add	r1, r4, #48
 4809 00d0 3A46     		mov	r2, r7
 4810 00d2 1944     		add	r1, r1, r3
 4811 00d4 4846     		mov	r0, r9
 4812 00d6 FFF7FEFF 		bl	mem_cpy
 4813              	.LVL707:
 4814              	.L447:
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4815              		.loc 1 3534 0
 4816 00da B944     		add	r9, r9, r7
 4817              	.LVL708:
 4818 00dc A369     		ldr	r3, [r4, #24]
 4819 00de 3B44     		add	r3, r3, r7
 4820 00e0 A361     		str	r3, [r4, #24]
 4821 00e2 D8F80030 		ldr	r3, [r8]
 4822 00e6 3B44     		add	r3, r3, r7
 4823 00e8 C8F80030 		str	r3, [r8]
 4824 00ec ED1B     		subs	r5, r5, r7
ARM GAS  /tmp/cc2OGbx6.s 			page 201


 4825              	.LVL709:
 4826              	.L452:
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4827              		.loc 1 3533 0
 4828 00ee 002D     		cmp	r5, #0
 4829 00f0 33D0     		beq	.L432
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4830              		.loc 1 3535 0
 4831 00f2 A169     		ldr	r1, [r4, #24]
 4832 00f4 C1F30803 		ubfx	r3, r1, #0, #9
 4833 00f8 002B     		cmp	r3, #0
 4834 00fa DFD1     		bne	.L435
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4835              		.loc 1 3536 0
 4836 00fc 039B     		ldr	r3, [sp, #12]
 4837 00fe 5F89     		ldrh	r7, [r3, #10]
 4838 0100 013F     		subs	r7, r7, #1
 4839              	.LVL710:
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4840              		.loc 1 3537 0
 4841 0102 17EA5127 		ands	r7, r7, r1, lsr #9
 4842              	.LVL711:
 4843 0106 08D1     		bne	.L436
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4844              		.loc 1 3538 0
 4845 0108 0029     		cmp	r1, #0
 4846 010a 9BD1     		bne	.L437
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4847              		.loc 1 3539 0
 4848 010c A068     		ldr	r0, [r4, #8]
 4849              	.LVL712:
 4850              	.L438:
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4851              		.loc 1 3550 0
 4852 010e 0128     		cmp	r0, #1
 4853 0110 A3D9     		bls	.L461
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4854              		.loc 1 3551 0
 4855 0112 B0F1FF3F 		cmp	r0, #-1
 4856 0116 A3D0     		beq	.L462
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4857              		.loc 1 3552 0
 4858 0118 E061     		str	r0, [r4, #28]
 4859              	.LVL713:
 4860              	.L436:
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 4861              		.loc 1 3554 0
 4862 011a 039B     		ldr	r3, [sp, #12]
 4863 011c 0193     		str	r3, [sp, #4]
 4864 011e E169     		ldr	r1, [r4, #28]
 4865 0120 1846     		mov	r0, r3
 4866 0122 FFF7FEFF 		bl	clust2sect
 4867              	.LVL714:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4868              		.loc 1 3555 0
 4869 0126 8246     		mov	r10, r0
 4870 0128 0028     		cmp	r0, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 202


 4871 012a 9CD0     		beq	.L463
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 4872              		.loc 1 3556 0
 4873 012c BA44     		add	r10, r10, r7
 4874              	.LVL715:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4875              		.loc 1 3558 0
 4876 012e 5FEA552B 		lsrs	fp, r5, #9
 4877              	.LVL716:
 4878 0132 B0D0     		beq	.L443
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 4879              		.loc 1 3559 0
 4880 0134 07EB0B03 		add	r3, r7, fp
 4881 0138 019A     		ldr	r2, [sp, #4]
 4882 013a 5289     		ldrh	r2, [r2, #10]
 4883 013c 9342     		cmp	r3, r2
 4884 013e 01D9     		bls	.L444
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4885              		.loc 1 3560 0
 4886 0140 A2EB070B 		sub	fp, r2, r7
 4887              	.LVL717:
 4888              	.L444:
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4889              		.loc 1 3562 0
 4890 0144 5B46     		mov	r3, fp
 4891 0146 5246     		mov	r2, r10
 4892 0148 4946     		mov	r1, r9
 4893 014a 0198     		ldr	r0, [sp, #4]
 4894 014c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4895 014e FFF7FEFF 		bl	disk_read
 4896              	.LVL718:
 4897 0152 0028     		cmp	r0, #0
 4898 0154 8AD0     		beq	.L445
3562:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4899              		.loc 1 3562 0 is_stmt 0 discriminator 1
 4900 0156 0126     		movs	r6, #1
 4901              	.LVL719:
 4902 0158 6675     		strb	r6, [r4, #21]
 4903              	.LVL720:
 4904              	.L432:
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4905              		.loc 1 3601 0 is_stmt 1
 4906 015a 3046     		mov	r0, r6
 4907 015c 05B0     		add	sp, sp, #20
 4908              	.LCFI54:
 4909              		.cfi_remember_state
 4910              		.cfi_def_cfa_offset 36
 4911              		@ sp needed
 4912 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4913              	.LVL721:
 4914              	.L459:
 4915              	.LCFI55:
 4916              		.cfi_restore_state
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4917              		.loc 1 3581 0
 4918 0162 0123     		movs	r3, #1
 4919 0164 04F13001 		add	r1, r4, #48
ARM GAS  /tmp/cc2OGbx6.s 			page 203


 4920 0168 0198     		ldr	r0, [sp, #4]
 4921 016a 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4922 016c FFF7FEFF 		bl	disk_write
 4923              	.LVL722:
 4924 0170 20B9     		cbnz	r0, .L464
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4925              		.loc 1 3582 0
 4926 0172 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 4927 0174 03F07F03 		and	r3, r3, #127
 4928 0178 2375     		strb	r3, [r4, #20]
 4929 017a 93E7     		b	.L449
 4930              	.L464:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4931              		.loc 1 3581 0 discriminator 1
 4932 017c 0126     		movs	r6, #1
 4933              	.LVL723:
 4934 017e 6675     		strb	r6, [r4, #21]
 4935 0180 EBE7     		b	.L432
 4936              	.LVL724:
 4937              	.L460:
3585:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4938              		.loc 1 3585 0 discriminator 1
 4939 0182 0126     		movs	r6, #1
 4940              	.LVL725:
 4941 0184 6675     		strb	r6, [r4, #21]
 4942 0186 E8E7     		b	.L432
 4943              	.LVL726:
 4944              	.L454:
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4945              		.loc 1 3529 0
 4946 0188 0726     		movs	r6, #7
 4947              	.LVL727:
 4948 018a E6E7     		b	.L432
 4949              		.cfi_endproc
 4950              	.LFE181:
 4952              		.section	.text.f_write,"ax",%progbits
 4953              		.align	1
 4954              		.global	f_write
 4955              		.syntax unified
 4956              		.thumb
 4957              		.thumb_func
 4958              		.fpu fpv5-d16
 4960              	f_write:
 4961              	.LFB182:
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4962              		.loc 1 3617 0
 4963              		.cfi_startproc
 4964              		@ args = 0, pretend = 0, frame = 16
 4965              		@ frame_needed = 0, uses_anonymous_args = 0
 4966              	.LVL728:
 4967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4968              	.LCFI56:
 4969              		.cfi_def_cfa_offset 36
 4970              		.cfi_offset 4, -36
 4971              		.cfi_offset 5, -32
 4972              		.cfi_offset 6, -28
 4973              		.cfi_offset 7, -24
ARM GAS  /tmp/cc2OGbx6.s 			page 204


 4974              		.cfi_offset 8, -20
 4975              		.cfi_offset 9, -16
 4976              		.cfi_offset 10, -12
 4977              		.cfi_offset 11, -8
 4978              		.cfi_offset 14, -4
 4979 0004 85B0     		sub	sp, sp, #20
 4980              	.LCFI57:
 4981              		.cfi_def_cfa_offset 56
 4982 0006 0446     		mov	r4, r0
 4983 0008 8846     		mov	r8, r1
 4984 000a 1546     		mov	r5, r2
 4985 000c 9946     		mov	r9, r3
 4986              	.LVL729:
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4987              		.loc 1 3625 0
 4988 000e 0023     		movs	r3, #0
 4989              	.LVL730:
 4990 0010 C9F80030 		str	r3, [r9]
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4991              		.loc 1 3626 0
 4992 0014 0090     		str	r0, [sp]
 4993 0016 03A9     		add	r1, sp, #12
 4994              	.LVL731:
 4995 0018 FFF7FEFF 		bl	validate
 4996              	.LVL732:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4997              		.loc 1 3627 0
 4998 001c 0746     		mov	r7, r0
 4999 001e 0028     		cmp	r0, #0
 5000 0020 42D1     		bne	.L466
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5001              		.loc 1 3627 0 is_stmt 0 discriminator 2
 5002 0022 677D     		ldrb	r7, [r4, #21]	@ zero_extendqisi2
 5003              	.LVL733:
 5004 0024 002F     		cmp	r7, #0
 5005 0026 3FD1     		bne	.L466
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5006              		.loc 1 3628 0 is_stmt 1
 5007 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5008 002a 13F0020F 		tst	r3, #2
 5009 002e 00F0C880 		beq	.L488
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5010              		.loc 1 3631 0
 5011 0032 A369     		ldr	r3, [r4, #24]
 5012 0034 EB42     		cmn	r3, r5
 5013 0036 C0F09A80 		bcc	.L486
3632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5014              		.loc 1 3632 0
 5015 003a DD43     		mvns	r5, r3
 5016              	.LVL734:
 5017 003c 97E0     		b	.L486
 5018              	.LVL735:
 5019              	.L470:
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5020              		.loc 1 3647 0
 5021 003e E36A     		ldr	r3, [r4, #44]
 5022 0040 002B     		cmp	r3, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 205


 5023 0042 35D0     		beq	.L472
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
 5024              		.loc 1 3648 0
 5025 0044 2046     		mov	r0, r4
 5026 0046 FFF7FEFF 		bl	clmt_clust
 5027              	.LVL736:
 5028              	.L471:
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5029              		.loc 1 3655 0
 5030 004a 0028     		cmp	r0, #0
 5031 004c 00F0B480 		beq	.L473
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5032              		.loc 1 3656 0
 5033 0050 0128     		cmp	r0, #1
 5034 0052 32D0     		beq	.L491
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5035              		.loc 1 3657 0
 5036 0054 B0F1FF3F 		cmp	r0, #-1
 5037 0058 32D0     		beq	.L492
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5038              		.loc 1 3658 0
 5039 005a E061     		str	r0, [r4, #28]
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5040              		.loc 1 3659 0
 5041 005c A368     		ldr	r3, [r4, #8]
 5042 005e 03B9     		cbnz	r3, .L469
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5043              		.loc 1 3659 0 is_stmt 0 discriminator 1
 5044 0060 A060     		str	r0, [r4, #8]
 5045              	.LVL737:
 5046              	.L469:
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5047              		.loc 1 3664 0 is_stmt 1
 5048 0062 94F91430 		ldrsb	r3, [r4, #20]
 5049 0066 002B     		cmp	r3, #0
 5050 0068 2DDB     		blt	.L493
 5051              	.L476:
3669:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fs, FR_INT_ERR);
 5052              		.loc 1 3669 0
 5053 006a 039B     		ldr	r3, [sp, #12]
 5054 006c 0193     		str	r3, [sp, #4]
 5055 006e E169     		ldr	r1, [r4, #28]
 5056 0070 1846     		mov	r0, r3
 5057 0072 FFF7FEFF 		bl	clust2sect
 5058              	.LVL738:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5059              		.loc 1 3670 0
 5060 0076 8246     		mov	r10, r0
 5061 0078 0028     		cmp	r0, #0
 5062 007a 35D0     		beq	.L494
3671:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5063              		.loc 1 3671 0
 5064 007c B244     		add	r10, r10, r6
 5065              	.LVL739:
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5066              		.loc 1 3673 0
 5067 007e 5FEA552B 		lsrs	fp, r5, #9
ARM GAS  /tmp/cc2OGbx6.s 			page 206


 5068              	.LVL740:
 5069 0082 49D0     		beq	.L479
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fs->csize - csect;
 5070              		.loc 1 3674 0
 5071 0084 06EB0B03 		add	r3, r6, fp
 5072 0088 019A     		ldr	r2, [sp, #4]
 5073 008a 5289     		ldrh	r2, [r2, #10]
 5074 008c 9342     		cmp	r3, r2
 5075 008e 01D9     		bls	.L480
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5076              		.loc 1 3675 0
 5077 0090 A2EB060B 		sub	fp, r2, r6
 5078              	.LVL741:
 5079              	.L480:
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5080              		.loc 1 3677 0
 5081 0094 5B46     		mov	r3, fp
 5082 0096 5246     		mov	r2, r10
 5083 0098 4146     		mov	r1, r8
 5084 009a 0198     		ldr	r0, [sp, #4]
 5085 009c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5086 009e FFF7FEFF 		bl	disk_write
 5087              	.LVL742:
 5088 00a2 20B3     		cbz	r0, .L481
3677:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5089              		.loc 1 3677 0 is_stmt 0 discriminator 1
 5090 00a4 0127     		movs	r7, #1
 5091              	.LVL743:
 5092 00a6 6775     		strb	r7, [r4, #21]
 5093              	.LVL744:
 5094              	.L466:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5095              		.loc 1 3723 0 is_stmt 1
 5096 00a8 3846     		mov	r0, r7
 5097 00aa 05B0     		add	sp, sp, #20
 5098              	.LCFI58:
 5099              		.cfi_remember_state
 5100              		.cfi_def_cfa_offset 36
 5101              		@ sp needed
 5102 00ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5103              	.LVL745:
 5104              	.L472:
 5105              	.LCFI59:
 5106              		.cfi_restore_state
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5107              		.loc 1 3652 0
 5108 00b0 E169     		ldr	r1, [r4, #28]
 5109 00b2 0098     		ldr	r0, [sp]
 5110 00b4 FFF7FEFF 		bl	create_chain
 5111              	.LVL746:
 5112 00b8 C7E7     		b	.L471
 5113              	.L491:
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5114              		.loc 1 3656 0 discriminator 1
 5115 00ba 0227     		movs	r7, #2
 5116              	.LVL747:
 5117 00bc 6775     		strb	r7, [r4, #21]
ARM GAS  /tmp/cc2OGbx6.s 			page 207


 5118 00be F3E7     		b	.L466
 5119              	.LVL748:
 5120              	.L492:
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5121              		.loc 1 3657 0 discriminator 1
 5122 00c0 0127     		movs	r7, #1
 5123              	.LVL749:
 5124 00c2 6775     		strb	r7, [r4, #21]
 5125 00c4 F0E7     		b	.L466
 5126              	.LVL750:
 5127              	.L493:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5128              		.loc 1 3665 0
 5129 00c6 0123     		movs	r3, #1
 5130 00c8 226A     		ldr	r2, [r4, #32]
 5131 00ca 04F13001 		add	r1, r4, #48
 5132 00ce 0398     		ldr	r0, [sp, #12]
 5133 00d0 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5134 00d2 FFF7FEFF 		bl	disk_write
 5135              	.LVL751:
 5136 00d6 20B9     		cbnz	r0, .L495
3666:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5137              		.loc 1 3666 0
 5138 00d8 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5139 00da 03F07F03 		and	r3, r3, #127
 5140 00de 2375     		strb	r3, [r4, #20]
 5141 00e0 C3E7     		b	.L476
 5142              	.L495:
3665:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5143              		.loc 1 3665 0 discriminator 1
 5144 00e2 0127     		movs	r7, #1
 5145              	.LVL752:
 5146 00e4 6775     		strb	r7, [r4, #21]
 5147 00e6 DFE7     		b	.L466
 5148              	.LVL753:
 5149              	.L494:
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5150              		.loc 1 3670 0 discriminator 1
 5151 00e8 0227     		movs	r7, #2
 5152              	.LVL754:
 5153 00ea 6775     		strb	r7, [r4, #21]
 5154 00ec DCE7     		b	.L466
 5155              	.LVL755:
 5156              	.L481:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5157              		.loc 1 3685 0
 5158 00ee 216A     		ldr	r1, [r4, #32]
 5159 00f0 A1EB0A01 		sub	r1, r1, r10
 5160 00f4 5945     		cmp	r1, fp
 5161 00f6 02D3     		bcc	.L496
 5162              	.L482:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5163              		.loc 1 3691 0
 5164 00f8 4FEA4B26 		lsl	r6, fp, #9
 5165              	.LVL756:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5166              		.loc 1 3692 0
ARM GAS  /tmp/cc2OGbx6.s 			page 208


 5167 00fc 28E0     		b	.L483
 5168              	.LVL757:
 5169              	.L496:
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5170              		.loc 1 3686 0
 5171 00fe 4FF40072 		mov	r2, #512
 5172 0102 08EB4121 		add	r1, r8, r1, lsl #9
 5173 0106 04F13000 		add	r0, r4, #48
 5174 010a FFF7FEFF 		bl	mem_cpy
 5175              	.LVL758:
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5176              		.loc 1 3687 0
 5177 010e 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5178 0110 03F07F03 		and	r3, r3, #127
 5179 0114 2375     		strb	r3, [r4, #20]
 5180 0116 EFE7     		b	.L482
 5181              	.L479:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5182              		.loc 1 3700 0
 5183 0118 236A     		ldr	r3, [r4, #32]
 5184 011a 5345     		cmp	r3, r10
 5185 011c 03D0     		beq	.L484
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5186              		.loc 1 3701 0 discriminator 1
 5187 011e A269     		ldr	r2, [r4, #24]
 5188 0120 E368     		ldr	r3, [r4, #12]
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5189              		.loc 1 3700 0 discriminator 1
 5190 0122 9A42     		cmp	r2, r3
 5191 0124 3BD3     		bcc	.L497
 5192              	.L484:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5193              		.loc 1 3706 0
 5194 0126 C4F820A0 		str	r10, [r4, #32]
 5195              	.LVL759:
 5196              	.L468:
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 5197              		.loc 1 3708 0
 5198 012a A369     		ldr	r3, [r4, #24]
 5199 012c C3F30803 		ubfx	r3, r3, #0, #9
 5200 0130 C3F50076 		rsb	r6, r3, #512
 5201              	.LVL760:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5202              		.loc 1 3709 0
 5203 0134 B542     		cmp	r5, r6
 5204 0136 00D2     		bcs	.L485
 5205 0138 2E46     		mov	r6, r5
 5206              	.LVL761:
 5207              	.L485:
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_DIRTY;
 5208              		.loc 1 3715 0
 5209 013a 04F13000 		add	r0, r4, #48
 5210 013e 3246     		mov	r2, r6
 5211 0140 4146     		mov	r1, r8
 5212 0142 1844     		add	r0, r0, r3
 5213 0144 FFF7FEFF 		bl	mem_cpy
 5214              	.LVL762:
ARM GAS  /tmp/cc2OGbx6.s 			page 209


3716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5215              		.loc 1 3716 0
 5216 0148 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5217 014a 63F07F03 		orn	r3, r3, #127
 5218 014e 2375     		strb	r3, [r4, #20]
 5219              	.L483:
3636:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5220              		.loc 1 3636 0
 5221 0150 B044     		add	r8, r8, r6
 5222              	.LVL763:
 5223 0152 A369     		ldr	r3, [r4, #24]
 5224 0154 3344     		add	r3, r3, r6
 5225 0156 A361     		str	r3, [r4, #24]
 5226 0158 E268     		ldr	r2, [r4, #12]
 5227 015a 9342     		cmp	r3, r2
 5228 015c 38BF     		it	cc
 5229 015e 1346     		movcc	r3, r2
 5230 0160 E360     		str	r3, [r4, #12]
 5231 0162 D9F80030 		ldr	r3, [r9]
 5232 0166 3344     		add	r3, r3, r6
 5233 0168 C9F80030 		str	r3, [r9]
 5234 016c AD1B     		subs	r5, r5, r6
 5235              	.LVL764:
 5236              	.L486:
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->
 5237              		.loc 1 3635 0
 5238 016e 1DB3     		cbz	r5, .L473
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5239              		.loc 1 3637 0
 5240 0170 A169     		ldr	r1, [r4, #24]
 5241 0172 C1F30803 		ubfx	r3, r1, #0, #9
 5242 0176 002B     		cmp	r3, #0
 5243 0178 D7D1     		bne	.L468
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5244              		.loc 1 3638 0
 5245 017a 039B     		ldr	r3, [sp, #12]
 5246 017c 5E89     		ldrh	r6, [r3, #10]
 5247 017e 013E     		subs	r6, r6, #1
 5248              	.LVL765:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5249              		.loc 1 3639 0
 5250 0180 16EA5126 		ands	r6, r6, r1, lsr #9
 5251              	.LVL766:
 5252 0184 7FF46DAF 		bne	.L469
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5253              		.loc 1 3640 0
 5254 0188 0029     		cmp	r1, #0
 5255 018a 7FF458AF 		bne	.L470
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5256              		.loc 1 3641 0
 5257 018e A068     		ldr	r0, [r4, #8]
 5258              	.LVL767:
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5259              		.loc 1 3642 0
 5260 0190 0028     		cmp	r0, #0
 5261 0192 7FF45AAF 		bne	.L471
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
ARM GAS  /tmp/cc2OGbx6.s 			page 210


 5262              		.loc 1 3643 0
 5263 0196 0098     		ldr	r0, [sp]
 5264              	.LVL768:
 5265 0198 FFF7FEFF 		bl	create_chain
 5266              	.LVL769:
 5267 019c 55E7     		b	.L471
 5268              	.LVL770:
 5269              	.L497:
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5270              		.loc 1 3702 0
 5271 019e 0123     		movs	r3, #1
 5272 01a0 5246     		mov	r2, r10
 5273 01a2 04F13001 		add	r1, r4, #48
 5274 01a6 0198     		ldr	r0, [sp, #4]
 5275 01a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5276 01aa FFF7FEFF 		bl	disk_read
 5277              	.LVL771:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_read(fs->drv, fp->buf, sect, 1) != RES_OK) {
 5278              		.loc 1 3701 0
 5279 01ae 0028     		cmp	r0, #0
 5280 01b0 B9D0     		beq	.L484
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5281              		.loc 1 3703 0
 5282 01b2 0127     		movs	r7, #1
 5283              	.LVL772:
 5284 01b4 6775     		strb	r7, [r4, #21]
 5285 01b6 77E7     		b	.L466
 5286              	.LVL773:
 5287              	.L473:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5288              		.loc 1 3720 0
 5289 01b8 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5290 01ba 43F04003 		orr	r3, r3, #64
 5291 01be 2375     		strb	r3, [r4, #20]
3722:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5292              		.loc 1 3722 0
 5293 01c0 72E7     		b	.L466
 5294              	.LVL774:
 5295              	.L488:
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5296              		.loc 1 3628 0
 5297 01c2 0727     		movs	r7, #7
 5298              	.LVL775:
 5299 01c4 70E7     		b	.L466
 5300              		.cfi_endproc
 5301              	.LFE182:
 5303              		.section	.text.putc_bfd,"ax",%progbits
 5304              		.align	1
 5305              		.syntax unified
 5306              		.thumb
 5307              		.thumb_func
 5308              		.fpu fpv5-d16
 5310              	putc_bfd:
 5311              	.LFB197:
5921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
 5312              		.loc 1 5921 0
 5313              		.cfi_startproc
ARM GAS  /tmp/cc2OGbx6.s 			page 211


 5314              		@ args = 0, pretend = 0, frame = 8
 5315              		@ frame_needed = 0, uses_anonymous_args = 0
 5316              	.LVL776:
 5317 0000 70B5     		push	{r4, r5, r6, lr}
 5318              	.LCFI60:
 5319              		.cfi_def_cfa_offset 16
 5320              		.cfi_offset 4, -16
 5321              		.cfi_offset 5, -12
 5322              		.cfi_offset 6, -8
 5323              		.cfi_offset 14, -4
 5324 0002 82B0     		sub	sp, sp, #8
 5325              	.LCFI61:
 5326              		.cfi_def_cfa_offset 24
 5327 0004 0446     		mov	r4, r0
 5328 0006 0D46     		mov	r5, r1
5926:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
 5329              		.loc 1 5926 0
 5330 0008 0A29     		cmp	r1, #10
 5331 000a 0DD0     		beq	.L505
 5332              	.LVL777:
 5333              	.L499:
5930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5334              		.loc 1 5930 0
 5335 000c 6368     		ldr	r3, [r4, #4]
 5336              	.LVL778:
5931:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5337              		.loc 1 5931 0
 5338 000e 002B     		cmp	r3, #0
 5339 0010 08DB     		blt	.L498
5960:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5340              		.loc 1 5960 0
 5341 0012 5E1C     		adds	r6, r3, #1
 5342              	.LVL779:
 5343 0014 2344     		add	r3, r3, r4
 5344 0016 1D73     		strb	r5, [r3, #12]
5963:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
 5345              		.loc 1 5963 0
 5346 0018 3C2E     		cmp	r6, #60
 5347 001a 09DC     		bgt	.L506
 5348              	.LVL780:
 5349              	.L501:
5967:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5350              		.loc 1 5967 0
 5351 001c 6660     		str	r6, [r4, #4]
5968:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5352              		.loc 1 5968 0
 5353 001e A368     		ldr	r3, [r4, #8]
 5354 0020 0133     		adds	r3, r3, #1
 5355 0022 A360     		str	r3, [r4, #8]
 5356              	.LVL781:
 5357              	.L498:
5969:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5358              		.loc 1 5969 0
 5359 0024 02B0     		add	sp, sp, #8
 5360              	.LCFI62:
 5361              		.cfi_remember_state
 5362              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc2OGbx6.s 			page 212


 5363              		@ sp needed
 5364 0026 70BD     		pop	{r4, r5, r6, pc}
 5365              	.LVL782:
 5366              	.L505:
 5367              	.LCFI63:
 5368              		.cfi_restore_state
5927:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5369              		.loc 1 5927 0
 5370 0028 0D21     		movs	r1, #13
 5371              	.LVL783:
 5372 002a FFF7E9FF 		bl	putc_bfd
 5373              	.LVL784:
 5374 002e EDE7     		b	.L499
 5375              	.LVL785:
 5376              	.L506:
5964:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5377              		.loc 1 5964 0
 5378 0030 01AB     		add	r3, sp, #4
 5379 0032 3246     		mov	r2, r6
 5380 0034 04F10C01 		add	r1, r4, #12
 5381 0038 2068     		ldr	r0, [r4]
 5382 003a FFF7FEFF 		bl	f_write
 5383              	.LVL786:
5965:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5384              		.loc 1 5965 0
 5385 003e 019B     		ldr	r3, [sp, #4]
 5386 0040 9E42     		cmp	r6, r3
 5387 0042 02D0     		beq	.L507
 5388 0044 4FF0FF36 		mov	r6, #-1
 5389              	.LVL787:
 5390 0048 E8E7     		b	.L501
 5391              	.LVL788:
 5392              	.L507:
 5393 004a 0026     		movs	r6, #0
 5394              	.LVL789:
 5395 004c E6E7     		b	.L501
 5396              		.cfi_endproc
 5397              	.LFE197:
 5399              		.section	.text.putc_flush,"ax",%progbits
 5400              		.align	1
 5401              		.syntax unified
 5402              		.thumb
 5403              		.thumb_func
 5404              		.fpu fpv5-d16
 5406              	putc_flush:
 5407              	.LFB198:
5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5408              		.loc 1 5976 0
 5409              		.cfi_startproc
 5410              		@ args = 0, pretend = 0, frame = 8
 5411              		@ frame_needed = 0, uses_anonymous_args = 0
 5412              	.LVL790:
5979:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb->fp, pb->buf, (UINT)pb->idx, &nw) == FR_OK
 5413              		.loc 1 5979 0
 5414 0000 4268     		ldr	r2, [r0, #4]
 5415 0002 002A     		cmp	r2, #0
 5416 0004 10DB     		blt	.L510
ARM GAS  /tmp/cc2OGbx6.s 			page 213


5976:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
 5417              		.loc 1 5976 0
 5418 0006 10B5     		push	{r4, lr}
 5419              	.LCFI64:
 5420              		.cfi_def_cfa_offset 8
 5421              		.cfi_offset 4, -8
 5422              		.cfi_offset 14, -4
 5423 0008 82B0     		sub	sp, sp, #8
 5424              	.LCFI65:
 5425              		.cfi_def_cfa_offset 16
 5426 000a 0446     		mov	r4, r0
5980:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb->idx == nw) return pb->nchr;
 5427              		.loc 1 5980 0
 5428 000c 01AB     		add	r3, sp, #4
 5429 000e 00F10C01 		add	r1, r0, #12
 5430 0012 0068     		ldr	r0, [r0]
 5431              	.LVL791:
 5432 0014 FFF7FEFF 		bl	f_write
 5433              	.LVL792:
 5434 0018 48B9     		cbnz	r0, .L511
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5435              		.loc 1 5981 0
 5436 001a 6268     		ldr	r2, [r4, #4]
 5437 001c 019B     		ldr	r3, [sp, #4]
 5438 001e 9A42     		cmp	r2, r3
 5439 0020 08D1     		bne	.L512
5981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 5440              		.loc 1 5981 0 is_stmt 0 discriminator 1
 5441 0022 A068     		ldr	r0, [r4, #8]
 5442              	.L508:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5443              		.loc 1 5983 0 is_stmt 1
 5444 0024 02B0     		add	sp, sp, #8
 5445              	.LCFI66:
 5446              		.cfi_def_cfa_offset 8
 5447              		@ sp needed
 5448 0026 10BD     		pop	{r4, pc}
 5449              	.LVL793:
 5450              	.L510:
 5451              	.LCFI67:
 5452              		.cfi_def_cfa_offset 0
 5453              		.cfi_restore 4
 5454              		.cfi_restore 14
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5455              		.loc 1 5982 0
 5456 0028 4FF0FF30 		mov	r0, #-1
 5457              	.LVL794:
5983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5458              		.loc 1 5983 0
 5459 002c 7047     		bx	lr
 5460              	.LVL795:
 5461              	.L511:
 5462              	.LCFI68:
 5463              		.cfi_def_cfa_offset 16
 5464              		.cfi_offset 4, -8
 5465              		.cfi_offset 14, -4
5982:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/cc2OGbx6.s 			page 214


 5466              		.loc 1 5982 0
 5467 002e 4FF0FF30 		mov	r0, #-1
 5468 0032 F7E7     		b	.L508
 5469              	.L512:
 5470 0034 4FF0FF30 		mov	r0, #-1
 5471 0038 F4E7     		b	.L508
 5472              		.cfi_endproc
 5473              	.LFE198:
 5475              		.section	.text.f_sync,"ax",%progbits
 5476              		.align	1
 5477              		.global	f_sync
 5478              		.syntax unified
 5479              		.thumb
 5480              		.thumb_func
 5481              		.fpu fpv5-d16
 5483              	f_sync:
 5484              	.LFB183:
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5485              		.loc 1 3735 0
 5486              		.cfi_startproc
 5487              		@ args = 0, pretend = 0, frame = 8
 5488              		@ frame_needed = 0, uses_anonymous_args = 0
 5489              	.LVL796:
 5490 0000 70B5     		push	{r4, r5, r6, lr}
 5491              	.LCFI69:
 5492              		.cfi_def_cfa_offset 16
 5493              		.cfi_offset 4, -16
 5494              		.cfi_offset 5, -12
 5495              		.cfi_offset 6, -8
 5496              		.cfi_offset 14, -4
 5497 0002 82B0     		sub	sp, sp, #8
 5498              	.LCFI70:
 5499              		.cfi_def_cfa_offset 24
 5500 0004 0446     		mov	r4, r0
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5501              		.loc 1 3745 0
 5502 0006 01A9     		add	r1, sp, #4
 5503 0008 FFF7FEFF 		bl	validate
 5504              	.LVL797:
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5505              		.loc 1 3746 0
 5506 000c 0346     		mov	r3, r0
 5507 000e 78B9     		cbnz	r0, .L518
3747:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5508              		.loc 1 3747 0
 5509 0010 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5510 0012 12F0400F 		tst	r2, #64
 5511 0016 0BD0     		beq	.L518
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5512              		.loc 1 3749 0
 5513 0018 12F0800F 		tst	r2, #128
 5514 001c 0BD1     		bne	.L522
 5515              	.LVL798:
 5516              	.L519:
3755:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 5517              		.loc 1 3755 0
 5518 001e FFF7FEFF 		bl	get_fattime
ARM GAS  /tmp/cc2OGbx6.s 			page 215


 5519              	.LVL799:
 5520 0022 0646     		mov	r6, r0
 5521              	.LVL800:
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 5522              		.loc 1 3785 0
 5523 0024 616A     		ldr	r1, [r4, #36]
 5524 0026 0198     		ldr	r0, [sp, #4]
 5525              	.LVL801:
 5526 0028 FFF7FEFF 		bl	move_window
 5527              	.LVL802:
3786:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir = fp->dir_ptr;
 5528              		.loc 1 3786 0
 5529 002c 0346     		mov	r3, r0
 5530 002e 80B1     		cbz	r0, .L523
 5531              	.LVL803:
 5532              	.L518:
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5533              		.loc 1 3802 0
 5534 0030 1846     		mov	r0, r3
 5535 0032 02B0     		add	sp, sp, #8
 5536              	.LCFI71:
 5537              		.cfi_remember_state
 5538              		.cfi_def_cfa_offset 16
 5539              		@ sp needed
 5540 0034 70BD     		pop	{r4, r5, r6, pc}
 5541              	.LVL804:
 5542              	.L522:
 5543              	.LCFI72:
 5544              		.cfi_restore_state
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5545              		.loc 1 3750 0
 5546 0036 0123     		movs	r3, #1
 5547 0038 226A     		ldr	r2, [r4, #32]
 5548 003a 04F13001 		add	r1, r4, #48
 5549 003e 0198     		ldr	r0, [sp, #4]
 5550              	.LVL805:
 5551 0040 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5552 0042 FFF7FEFF 		bl	disk_write
 5553              	.LVL806:
 5554 0046 48BB     		cbnz	r0, .L520
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5555              		.loc 1 3751 0
 5556 0048 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5557 004a 03F07F03 		and	r3, r3, #127
 5558 004e 2375     		strb	r3, [r4, #20]
 5559 0050 E5E7     		b	.L519
 5560              	.LVL807:
 5561              	.L523:
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive bit */
 5562              		.loc 1 3787 0
 5563 0052 A56A     		ldr	r5, [r4, #40]
 5564              	.LVL808:
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation info  */
 5565              		.loc 1 3788 0
 5566 0054 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5567 0056 43F02003 		orr	r3, r3, #32
 5568 005a EB72     		strb	r3, [r5, #11]
ARM GAS  /tmp/cc2OGbx6.s 			page 216


3789:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5569              		.loc 1 3789 0
 5570 005c A268     		ldr	r2, [r4, #8]
 5571 005e 2946     		mov	r1, r5
 5572 0060 2068     		ldr	r0, [r4]
 5573              	.LVL809:
 5574 0062 FFF7FEFF 		bl	st_clust
 5575              	.LVL810:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5576              		.loc 1 3790 0
 5577 0066 E168     		ldr	r1, [r4, #12]
 5578 0068 05F11C00 		add	r0, r5, #28
 5579 006c FFF7FEFF 		bl	st_dword
 5580              	.LVL811:
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5581              		.loc 1 3791 0
 5582 0070 3146     		mov	r1, r6
 5583 0072 05F11600 		add	r0, r5, #22
 5584 0076 FFF7FEFF 		bl	st_dword
 5585              	.LVL812:
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 5586              		.loc 1 3792 0
 5587 007a 0021     		movs	r1, #0
 5588 007c 05F11200 		add	r0, r5, #18
 5589 0080 FFF7FEFF 		bl	st_word
 5590              	.LVL813:
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5591              		.loc 1 3793 0
 5592 0084 019B     		ldr	r3, [sp, #4]
 5593 0086 0122     		movs	r2, #1
 5594 0088 DA70     		strb	r2, [r3, #3]
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5595              		.loc 1 3794 0
 5596 008a 0198     		ldr	r0, [sp, #4]
 5597 008c FFF7FEFF 		bl	sync_fs
 5598              	.LVL814:
 5599 0090 0346     		mov	r3, r0
 5600              	.LVL815:
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5601              		.loc 1 3795 0
 5602 0092 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5603 0094 22F04002 		bic	r2, r2, #64
 5604 0098 2275     		strb	r2, [r4, #20]
 5605 009a C9E7     		b	.L518
 5606              	.LVL816:
 5607              	.L520:
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5608              		.loc 1 3750 0
 5609 009c 0123     		movs	r3, #1
 5610 009e C7E7     		b	.L518
 5611              		.cfi_endproc
 5612              	.LFE183:
 5614              		.section	.text.f_close,"ax",%progbits
 5615              		.align	1
 5616              		.global	f_close
 5617              		.syntax unified
 5618              		.thumb
ARM GAS  /tmp/cc2OGbx6.s 			page 217


 5619              		.thumb_func
 5620              		.fpu fpv5-d16
 5622              	f_close:
 5623              	.LFB184:
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5624              		.loc 1 3816 0
 5625              		.cfi_startproc
 5626              		@ args = 0, pretend = 0, frame = 8
 5627              		@ frame_needed = 0, uses_anonymous_args = 0
 5628              	.LVL817:
 5629 0000 10B5     		push	{r4, lr}
 5630              	.LCFI73:
 5631              		.cfi_def_cfa_offset 8
 5632              		.cfi_offset 4, -8
 5633              		.cfi_offset 14, -4
 5634 0002 82B0     		sub	sp, sp, #8
 5635              	.LCFI74:
 5636              		.cfi_def_cfa_offset 16
 5637 0004 0446     		mov	r4, r0
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5638              		.loc 1 3821 0
 5639 0006 FFF7FEFF 		bl	f_sync
 5640              	.LVL818:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5641              		.loc 1 3822 0
 5642 000a 0346     		mov	r3, r0
 5643 000c 10B1     		cbz	r0, .L527
 5644              	.L525:
 5645              	.LVL819:
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5646              		.loc 1 3840 0
 5647 000e 1846     		mov	r0, r3
 5648 0010 02B0     		add	sp, sp, #8
 5649              	.LCFI75:
 5650              		.cfi_remember_state
 5651              		.cfi_def_cfa_offset 8
 5652              		@ sp needed
 5653 0012 10BD     		pop	{r4, pc}
 5654              	.LVL820:
 5655              	.L527:
 5656              	.LCFI76:
 5657              		.cfi_restore_state
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5658              		.loc 1 3825 0
 5659 0014 01A9     		add	r1, sp, #4
 5660 0016 2046     		mov	r0, r4
 5661              	.LVL821:
 5662 0018 FFF7FEFF 		bl	validate
 5663              	.LVL822:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 5664              		.loc 1 3826 0
 5665 001c 0346     		mov	r3, r0
 5666 001e 0028     		cmp	r0, #0
 5667 0020 F5D1     		bne	.L525
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5668              		.loc 1 3828 0
 5669 0022 2069     		ldr	r0, [r4, #16]
ARM GAS  /tmp/cc2OGbx6.s 			page 218


 5670              	.LVL823:
 5671 0024 FFF7FEFF 		bl	dec_lock
 5672              	.LVL824:
3829:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5673              		.loc 1 3829 0
 5674 0028 0346     		mov	r3, r0
 5675 002a 0028     		cmp	r0, #0
 5676 002c EFD1     		bne	.L525
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5677              		.loc 1 3832 0
 5678 002e 0022     		movs	r2, #0
 5679 0030 2260     		str	r2, [r4]
 5680 0032 ECE7     		b	.L525
 5681              		.cfi_endproc
 5682              	.LFE184:
 5684              		.section	.text.f_lseek,"ax",%progbits
 5685              		.align	1
 5686              		.global	f_lseek
 5687              		.syntax unified
 5688              		.thumb
 5689              		.thumb_func
 5690              		.fpu fpv5-d16
 5692              	f_lseek:
 5693              	.LFB185:
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5694              		.loc 1 4005 0
 5695              		.cfi_startproc
 5696              		@ args = 0, pretend = 0, frame = 16
 5697              		@ frame_needed = 0, uses_anonymous_args = 0
 5698              	.LVL825:
 5699 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5700              	.LCFI77:
 5701              		.cfi_def_cfa_offset 36
 5702              		.cfi_offset 4, -36
 5703              		.cfi_offset 5, -32
 5704              		.cfi_offset 6, -28
 5705              		.cfi_offset 7, -24
 5706              		.cfi_offset 8, -20
 5707              		.cfi_offset 9, -16
 5708              		.cfi_offset 10, -12
 5709              		.cfi_offset 11, -8
 5710              		.cfi_offset 14, -4
 5711 0004 85B0     		sub	sp, sp, #20
 5712              	.LCFI78:
 5713              		.cfi_def_cfa_offset 56
 5714 0006 0446     		mov	r4, r0
 5715 0008 0F46     		mov	r7, r1
4014:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5716              		.loc 1 4014 0
 5717 000a 0646     		mov	r6, r0
 5718 000c 03A9     		add	r1, sp, #12
 5719              	.LVL826:
 5720 000e FFF7FEFF 		bl	validate
 5721              	.LVL827:
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5722              		.loc 1 4015 0
 5723 0012 0546     		mov	r5, r0
ARM GAS  /tmp/cc2OGbx6.s 			page 219


 5724 0014 00B9     		cbnz	r0, .L529
4015:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT && !_FS_READONLY
 5725              		.loc 1 4015 0 is_stmt 0 discriminator 1
 5726 0016 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 5727              	.LVL828:
 5728              	.L529:
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5729              		.loc 1 4021 0 is_stmt 1
 5730 0018 6DB9     		cbnz	r5, .L530
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5731              		.loc 1 4024 0
 5732 001a E36A     		ldr	r3, [r4, #44]
 5733 001c 002B     		cmp	r3, #0
 5734 001e 00F08D80 		beq	.L531
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5735              		.loc 1 4025 0
 5736 0022 B7F1FF3F 		cmp	r7, #-1
 5737 0026 0AD0     		beq	.L572
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
 5738              		.loc 1 4051 0
 5739 0028 E668     		ldr	r6, [r4, #12]
 5740 002a BE42     		cmp	r6, r7
 5741 002c 00D3     		bcc	.L539
 5742 002e 3E46     		mov	r6, r7
 5743              	.L539:
 5744              	.LVL829:
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5745              		.loc 1 4052 0
 5746 0030 A661     		str	r6, [r4, #24]
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5747              		.loc 1 4053 0
 5748 0032 002E     		cmp	r6, #0
 5749 0034 43D1     		bne	.L573
 5750              	.LVL830:
 5751              	.L530:
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5752              		.loc 1 4153 0
 5753 0036 2846     		mov	r0, r5
 5754 0038 05B0     		add	sp, sp, #20
 5755              	.LCFI79:
 5756              		.cfi_remember_state
 5757              		.cfi_def_cfa_offset 36
 5758              		@ sp needed
 5759 003a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5760              	.LVL831:
 5761              	.L572:
 5762              	.LCFI80:
 5763              		.cfi_restore_state
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5764              		.loc 1 4027 0
 5765 003e 1A1D     		adds	r2, r3, #4
 5766 0040 0192     		str	r2, [sp, #4]
 5767              	.LVL832:
 5768 0042 D3F800B0 		ldr	fp, [r3]
 5769              	.LVL833:
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5770              		.loc 1 4028 0
ARM GAS  /tmp/cc2OGbx6.s 			page 220


 5771 0046 D4F808A0 		ldr	r10, [r4, #8]
 5772              	.LVL834:
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5773              		.loc 1 4029 0
 5774 004a BAF1000F 		cmp	r10, #0
 5775 004e 2AD0     		beq	.L564
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5776              		.loc 1 4027 0
 5777 0050 4FF00209 		mov	r9, #2
 5778              	.LVL835:
 5779              	.L538:
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5780              		.loc 1 4032 0
 5781 0054 09F10209 		add	r9, r9, #2
 5782              	.LVL836:
 5783 0058 5746     		mov	r7, r10
 5784 005a 4FF00008 		mov	r8, #0
 5785              	.LVL837:
 5786              	.L536:
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(&fp->obj, cl);
 5787              		.loc 1 4034 0
 5788 005e 08F10108 		add	r8, r8, #1
 5789              	.LVL838:
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5790              		.loc 1 4035 0
 5791 0062 3946     		mov	r1, r7
 5792 0064 3046     		mov	r0, r6
 5793 0066 FFF7FEFF 		bl	get_fat
 5794              	.LVL839:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5795              		.loc 1 4036 0
 5796 006a 0128     		cmp	r0, #1
 5797 006c 15D9     		bls	.L574
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5798              		.loc 1 4037 0
 5799 006e B0F1FF3F 		cmp	r0, #-1
 5800 0072 15D0     		beq	.L575
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5801              		.loc 1 4038 0
 5802 0074 7B1C     		adds	r3, r7, #1
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5803              		.loc 1 4035 0
 5804 0076 0746     		mov	r7, r0
 5805              	.LVL840:
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5806              		.loc 1 4038 0
 5807 0078 8342     		cmp	r3, r0
 5808 007a F0D0     		beq	.L536
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5809              		.loc 1 4039 0
 5810 007c CB45     		cmp	fp, r9
 5811 007e 06D3     		bcc	.L537
 5812              	.LVL841:
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5813              		.loc 1 4040 0
 5814 0080 019A     		ldr	r2, [sp, #4]
 5815 0082 1346     		mov	r3, r2
ARM GAS  /tmp/cc2OGbx6.s 			page 221


 5816              	.LVL842:
 5817 0084 43F8088B 		str	r8, [r3], #8
 5818              	.LVL843:
 5819 0088 C2F804A0 		str	r10, [r2, #4]
 5820 008c 0193     		str	r3, [sp, #4]
 5821              	.LVL844:
 5822              	.L537:
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5823              		.loc 1 4042 0
 5824 008e 039B     		ldr	r3, [sp, #12]
 5825 0090 5B69     		ldr	r3, [r3, #20]
 5826 0092 8342     		cmp	r3, r0
 5827 0094 09D9     		bls	.L533
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
 5828              		.loc 1 4035 0
 5829 0096 8246     		mov	r10, r0
 5830              	.LVL845:
 5831 0098 DCE7     		b	.L538
 5832              	.LVL846:
 5833              	.L574:
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5834              		.loc 1 4036 0 discriminator 1
 5835 009a 0225     		movs	r5, #2
 5836              	.LVL847:
 5837 009c 6575     		strb	r5, [r4, #21]
 5838 009e CAE7     		b	.L530
 5839              	.LVL848:
 5840              	.L575:
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5841              		.loc 1 4037 0 discriminator 1
 5842 00a0 0125     		movs	r5, #1
 5843              	.LVL849:
 5844 00a2 6575     		strb	r5, [r4, #21]
 5845 00a4 C7E7     		b	.L530
 5846              	.LVL850:
 5847              	.L564:
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
 5848              		.loc 1 4027 0
 5849 00a6 4FF00209 		mov	r9, #2
 5850              	.LVL851:
 5851              	.L533:
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen) {
 5852              		.loc 1 4044 0
 5853 00aa E36A     		ldr	r3, [r4, #44]
 5854 00ac C3F80090 		str	r9, [r3]
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5855              		.loc 1 4045 0
 5856 00b0 D945     		cmp	r9, fp
 5857 00b2 00F2F880 		bhi	.L566
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 5858              		.loc 1 4046 0
 5859 00b6 0023     		movs	r3, #0
 5860 00b8 019A     		ldr	r2, [sp, #4]
 5861 00ba 1360     		str	r3, [r2]
 5862 00bc BBE7     		b	.L530
 5863              	.LVL852:
 5864              	.L573:
ARM GAS  /tmp/cc2OGbx6.s 			page 222


4054:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, fp->clust);
 5865              		.loc 1 4054 0
 5866 00be 06F1FF39 		add	r9, r6, #-1
 5867 00c2 4946     		mov	r1, r9
 5868 00c4 2046     		mov	r0, r4
 5869 00c6 FFF7FEFF 		bl	clmt_clust
 5870              	.LVL853:
 5871 00ca 0146     		mov	r1, r0
 5872 00cc E061     		str	r0, [r4, #28]
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fs, FR_INT_ERR);
 5873              		.loc 1 4055 0
 5874 00ce 039F     		ldr	r7, [sp, #12]
 5875 00d0 3846     		mov	r0, r7
 5876 00d2 FFF7FEFF 		bl	clust2sect
 5877              	.LVL854:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5878              		.loc 1 4056 0
 5879 00d6 8046     		mov	r8, r0
 5880 00d8 D8B1     		cbz	r0, .L576
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
 5881              		.loc 1 4057 0
 5882 00da 7989     		ldrh	r1, [r7, #10]
 5883 00dc 0139     		subs	r1, r1, #1
 5884 00de 01EA5921 		and	r1, r1, r9, lsr #9
 5885 00e2 8844     		add	r8, r8, r1
 5886              	.LVL855:
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5887              		.loc 1 4058 0
 5888 00e4 C6F30806 		ubfx	r6, r6, #0, #9
 5889              	.LVL856:
 5890 00e8 002E     		cmp	r6, #0
 5891 00ea A4D0     		beq	.L530
4058:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5892              		.loc 1 4058 0 is_stmt 0 discriminator 1
 5893 00ec 226A     		ldr	r2, [r4, #32]
 5894 00ee 4245     		cmp	r2, r8
 5895 00f0 A1D0     		beq	.L530
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5896              		.loc 1 4061 0 is_stmt 1
 5897 00f2 94F91430 		ldrsb	r3, [r4, #20]
 5898 00f6 002B     		cmp	r3, #0
 5899 00f8 0EDB     		blt	.L577
 5900              	.L541:
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5901              		.loc 1 4066 0
 5902 00fa 0123     		movs	r3, #1
 5903 00fc 4246     		mov	r2, r8
 5904 00fe 04F13001 		add	r1, r4, #48
 5905 0102 0398     		ldr	r0, [sp, #12]
 5906 0104 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5907 0106 FFF7FEFF 		bl	disk_read
 5908              	.LVL857:
 5909 010a A0B1     		cbz	r0, .L543
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5910              		.loc 1 4066 0 is_stmt 0 discriminator 1
 5911 010c 0125     		movs	r5, #1
 5912              	.LVL858:
ARM GAS  /tmp/cc2OGbx6.s 			page 223


 5913 010e 6575     		strb	r5, [r4, #21]
 5914 0110 91E7     		b	.L530
 5915              	.LVL859:
 5916              	.L576:
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
 5917              		.loc 1 4056 0 is_stmt 1 discriminator 1
 5918 0112 0225     		movs	r5, #2
 5919              	.LVL860:
 5920 0114 6575     		strb	r5, [r4, #21]
 5921 0116 8EE7     		b	.L530
 5922              	.LVL861:
 5923              	.L577:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5924              		.loc 1 4062 0
 5925 0118 0123     		movs	r3, #1
 5926 011a 04F13001 		add	r1, r4, #48
 5927 011e 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 5928 0120 FFF7FEFF 		bl	disk_write
 5929              	.LVL862:
 5930 0124 20B9     		cbnz	r0, .L578
4063:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5931              		.loc 1 4063 0
 5932 0126 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 5933 0128 03F07F03 		and	r3, r3, #127
 5934 012c 2375     		strb	r3, [r4, #20]
 5935 012e E4E7     		b	.L541
 5936              	.L578:
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
 5937              		.loc 1 4062 0 discriminator 1
 5938 0130 0125     		movs	r5, #1
 5939              	.LVL863:
 5940 0132 6575     		strb	r5, [r4, #21]
 5941 0134 7FE7     		b	.L530
 5942              	.LVL864:
 5943              	.L543:
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5944              		.loc 1 4068 0
 5945 0136 C4F82080 		str	r8, [r4, #32]
 5946 013a 7CE7     		b	.L530
 5947              	.LVL865:
 5948              	.L531:
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5949              		.loc 1 4080 0
 5950 013c E368     		ldr	r3, [r4, #12]
 5951 013e BB42     		cmp	r3, r7
 5952 0140 04D2     		bcs	.L544
4080:Middlewares/Third_Party/FatFs/src/ff.c **** 			ofs = fp->obj.objsize;
 5953              		.loc 1 4080 0 is_stmt 0 discriminator 1
 5954 0142 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 5955 0144 12F0020F 		tst	r2, #2
 5956 0148 00D1     		bne	.L544
4081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5957              		.loc 1 4081 0 is_stmt 1
 5958 014a 1F46     		mov	r7, r3
 5959              	.LVL866:
 5960              	.L544:
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
ARM GAS  /tmp/cc2OGbx6.s 			page 224


 5961              		.loc 1 4083 0
 5962 014c A369     		ldr	r3, [r4, #24]
 5963              	.LVL867:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5964              		.loc 1 4084 0
 5965 014e 0022     		movs	r2, #0
 5966 0150 A261     		str	r2, [r4, #24]
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 5967              		.loc 1 4085 0
 5968 0152 002F     		cmp	r7, #0
 5969 0154 6DD0     		beq	.L568
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5970              		.loc 1 4086 0
 5971 0156 039A     		ldr	r2, [sp, #12]
 5972 0158 B2F80A90 		ldrh	r9, [r2, #10]
 5973 015c 4FEA4929 		lsl	r9, r9, #9
 5974              	.LVL868:
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5975              		.loc 1 4087 0
 5976 0160 7BB1     		cbz	r3, .L546
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 5977              		.loc 1 4088 0 discriminator 1
 5978 0162 7A1E     		subs	r2, r7, #1
 5979 0164 B2FBF9F2 		udiv	r2, r2, r9
 5980 0168 013B     		subs	r3, r3, #1
 5981              	.LVL869:
 5982 016a B3FBF9F1 		udiv	r1, r3, r9
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5983              		.loc 1 4087 0 discriminator 1
 5984 016e 8A42     		cmp	r2, r1
 5985 0170 07D3     		bcc	.L546
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5986              		.loc 1 4089 0
 5987 0172 C9F10002 		rsb	r2, r9, #0
 5988 0176 1340     		ands	r3, r3, r2
 5989              	.LVL870:
 5990 0178 A361     		str	r3, [r4, #24]
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5991              		.loc 1 4090 0
 5992 017a FF1A     		subs	r7, r7, r3
 5993              	.LVL871:
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5994              		.loc 1 4091 0
 5995 017c D4F81C80 		ldr	r8, [r4, #28]
 5996              	.LVL872:
 5997 0180 06E0     		b	.L547
 5998              	.LVL873:
 5999              	.L546:
4093:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6000              		.loc 1 4093 0
 6001 0182 D4F80880 		ldr	r8, [r4, #8]
 6002              	.LVL874:
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(&fp->obj, 0);
 6003              		.loc 1 4095 0
 6004 0186 B8F1000F 		cmp	r8, #0
 6005 018a 05D0     		beq	.L579
 6006              	.L548:
ARM GAS  /tmp/cc2OGbx6.s 			page 225


4102:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6007              		.loc 1 4102 0
 6008 018c C4F81C80 		str	r8, [r4, #28]
 6009              	.L547:
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 6010              		.loc 1 4104 0
 6011 0190 B8F1000F 		cmp	r8, #0
 6012 0194 23D1     		bne	.L551
 6013 0196 4EE0     		b	.L545
 6014              	.L579:
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 6015              		.loc 1 4096 0
 6016 0198 0021     		movs	r1, #0
 6017 019a 2046     		mov	r0, r4
 6018 019c FFF7FEFF 		bl	create_chain
 6019              	.LVL875:
 6020 01a0 8046     		mov	r8, r0
 6021              	.LVL876:
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6022              		.loc 1 4097 0
 6023 01a2 0128     		cmp	r0, #1
 6024 01a4 04D0     		beq	.L580
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6025              		.loc 1 4098 0
 6026 01a6 B0F1FF3F 		cmp	r0, #-1
 6027 01aa 04D0     		beq	.L581
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6028              		.loc 1 4099 0
 6029 01ac A060     		str	r0, [r4, #8]
 6030 01ae EDE7     		b	.L548
 6031              	.L580:
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 6032              		.loc 1 4097 0 discriminator 1
 6033 01b0 0225     		movs	r5, #2
 6034              	.LVL877:
 6035 01b2 6575     		strb	r5, [r4, #21]
 6036 01b4 3FE7     		b	.L530
 6037              	.LVL878:
 6038              	.L581:
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->obj.sclust = clst;
 6039              		.loc 1 4098 0 discriminator 1
 6040 01b6 0125     		movs	r5, #1
 6041              	.LVL879:
 6042 01b8 6575     		strb	r5, [r4, #21]
 6043 01ba 3CE7     		b	.L530
 6044              	.LVL880:
 6045              	.L552:
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6046              		.loc 1 4120 0
 6047 01bc 4146     		mov	r1, r8
 6048 01be 3046     		mov	r0, r6
 6049 01c0 FFF7FEFF 		bl	get_fat
 6050              	.LVL881:
 6051 01c4 8046     		mov	r8, r0
 6052              	.LVL882:
 6053              	.L554:
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
ARM GAS  /tmp/cc2OGbx6.s 			page 226


 6054              		.loc 1 4122 0
 6055 01c6 B8F1FF3F 		cmp	r8, #-1
 6056 01ca 29D0     		beq	.L582
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6057              		.loc 1 4123 0
 6058 01cc B8F1010F 		cmp	r8, #1
 6059 01d0 29D9     		bls	.L556
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6060              		.loc 1 4123 0 is_stmt 0 discriminator 2
 6061 01d2 039B     		ldr	r3, [sp, #12]
 6062 01d4 5B69     		ldr	r3, [r3, #20]
 6063 01d6 4345     		cmp	r3, r8
 6064 01d8 25D9     		bls	.L556
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6065              		.loc 1 4124 0 is_stmt 1
 6066 01da C4F81C80 		str	r8, [r4, #28]
 6067              	.LVL883:
 6068              	.L551:
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 6069              		.loc 1 4105 0
 6070 01de 4F45     		cmp	r7, r9
 6071 01e0 10D9     		bls	.L553
4106:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6072              		.loc 1 4106 0
 6073 01e2 A7EB0907 		sub	r7, r7, r9
 6074              	.LVL884:
 6075 01e6 A369     		ldr	r3, [r4, #24]
 6076 01e8 4B44     		add	r3, r3, r9
 6077 01ea A361     		str	r3, [r4, #24]
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize t
 6078              		.loc 1 4108 0
 6079 01ec 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6080 01ee 13F0020F 		tst	r3, #2
 6081 01f2 E3D0     		beq	.L552
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 6082              		.loc 1 4113 0
 6083 01f4 4146     		mov	r1, r8
 6084 01f6 3046     		mov	r0, r6
 6085 01f8 FFF7FEFF 		bl	create_chain
 6086              	.LVL885:
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = 0; break;
 6087              		.loc 1 4114 0
 6088 01fc 8046     		mov	r8, r0
 6089 01fe 0028     		cmp	r0, #0
 6090 0200 E1D1     		bne	.L554
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6091              		.loc 1 4115 0
 6092 0202 0027     		movs	r7, #0
 6093              	.LVL886:
 6094              	.L553:
4126:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fs)) {
 6095              		.loc 1 4126 0
 6096 0204 A369     		ldr	r3, [r4, #24]
 6097 0206 3B44     		add	r3, r3, r7
 6098 0208 A361     		str	r3, [r4, #24]
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fs, clst);	/* Current sector */
 6099              		.loc 1 4127 0
ARM GAS  /tmp/cc2OGbx6.s 			page 227


 6100 020a C7F30803 		ubfx	r3, r7, #0, #9
 6101 020e A3B3     		cbz	r3, .L570
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fs, FR_INT_ERR);
 6102              		.loc 1 4128 0
 6103 0210 4146     		mov	r1, r8
 6104 0212 0398     		ldr	r0, [sp, #12]
 6105 0214 FFF7FEFF 		bl	clust2sect
 6106              	.LVL887:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6107              		.loc 1 4129 0
 6108 0218 40B1     		cbz	r0, .L583
4130:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6109              		.loc 1 4130 0
 6110 021a 00EB5728 		add	r8, r0, r7, lsr #9
 6111              	.LVL888:
 6112 021e 0AE0     		b	.L545
 6113              	.LVL889:
 6114              	.L582:
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 6115              		.loc 1 4122 0 discriminator 1
 6116 0220 0125     		movs	r5, #1
 6117              	.LVL890:
 6118 0222 6575     		strb	r5, [r4, #21]
 6119 0224 07E7     		b	.L530
 6120              	.LVL891:
 6121              	.L556:
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6122              		.loc 1 4123 0 discriminator 3
 6123 0226 0225     		movs	r5, #2
 6124              	.LVL892:
 6125 0228 6575     		strb	r5, [r4, #21]
 6126 022a 04E7     		b	.L530
 6127              	.LVL893:
 6128              	.L583:
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 6129              		.loc 1 4129 0 discriminator 1
 6130 022c 0225     		movs	r5, #2
 6131              	.LVL894:
 6132 022e 6575     		strb	r5, [r4, #21]
 6133 0230 01E7     		b	.L530
 6134              	.LVL895:
 6135              	.L568:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6136              		.loc 1 4084 0
 6137 0232 4FF00008 		mov	r8, #0
 6138              	.LVL896:
 6139              	.L545:
4134:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.objsize = fp->fptr;
 6140              		.loc 1 4134 0
 6141 0236 A369     		ldr	r3, [r4, #24]
 6142 0238 E268     		ldr	r2, [r4, #12]
 6143 023a 9342     		cmp	r3, r2
 6144 023c 04D9     		bls	.L560
4135:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA_MODIFIED;
 6145              		.loc 1 4135 0
 6146 023e E360     		str	r3, [r4, #12]
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cc2OGbx6.s 			page 228


 6147              		.loc 1 4136 0
 6148 0240 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 6149 0242 42F04002 		orr	r2, r2, #64
 6150 0246 2275     		strb	r2, [r4, #20]
 6151              	.L560:
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6152              		.loc 1 4138 0
 6153 0248 C3F30803 		ubfx	r3, r3, #0, #9
 6154 024c 002B     		cmp	r3, #0
 6155 024e 3FF4F2AE 		beq	.L530
4138:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6156              		.loc 1 4138 0 is_stmt 0 discriminator 1
 6157 0252 226A     		ldr	r2, [r4, #32]
 6158 0254 4245     		cmp	r2, r8
 6159 0256 3FF4EEAE 		beq	.L530
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 6160              		.loc 1 4141 0 is_stmt 1
 6161 025a 94F91430 		ldrsb	r3, [r4, #20]
 6162 025e 002B     		cmp	r3, #0
 6163 0260 0EDB     		blt	.L584
 6164              	.L561:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6165              		.loc 1 4146 0
 6166 0262 0123     		movs	r3, #1
 6167 0264 4246     		mov	r2, r8
 6168 0266 04F13001 		add	r1, r4, #48
 6169 026a 0398     		ldr	r0, [sp, #12]
 6170 026c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6171 026e FFF7FEFF 		bl	disk_read
 6172              	.LVL897:
 6173 0272 A8B9     		cbnz	r0, .L585
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6174              		.loc 1 4148 0
 6175 0274 C4F82080 		str	r8, [r4, #32]
 6176 0278 DDE6     		b	.L530
 6177              	.LVL898:
 6178              	.L570:
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6179              		.loc 1 4084 0
 6180 027a 4FF00008 		mov	r8, #0
 6181              	.LVL899:
 6182 027e DAE7     		b	.L545
 6183              	.LVL900:
 6184              	.L584:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6185              		.loc 1 4142 0
 6186 0280 0123     		movs	r3, #1
 6187 0282 04F13001 		add	r1, r4, #48
 6188 0286 0398     		ldr	r0, [sp, #12]
 6189 0288 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6190 028a FFF7FEFF 		bl	disk_write
 6191              	.LVL901:
 6192 028e 20B9     		cbnz	r0, .L586
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6193              		.loc 1 4143 0
 6194 0290 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 6195 0292 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/cc2OGbx6.s 			page 229


 6196 0296 2375     		strb	r3, [r4, #20]
 6197 0298 E3E7     		b	.L561
 6198              	.L586:
4142:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6199              		.loc 1 4142 0 discriminator 1
 6200 029a 0125     		movs	r5, #1
 6201              	.LVL902:
 6202 029c 6575     		strb	r5, [r4, #21]
 6203 029e CAE6     		b	.L530
 6204              	.LVL903:
 6205              	.L585:
4146:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6206              		.loc 1 4146 0 discriminator 1
 6207 02a0 0125     		movs	r5, #1
 6208              	.LVL904:
 6209 02a2 6575     		strb	r5, [r4, #21]
 6210 02a4 C7E6     		b	.L530
 6211              	.LVL905:
 6212              	.L566:
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6213              		.loc 1 4048 0
 6214 02a6 1125     		movs	r5, #17
 6215              	.LVL906:
 6216 02a8 C5E6     		b	.L530
 6217              		.cfi_endproc
 6218              	.LFE185:
 6220              		.section	.text.f_opendir,"ax",%progbits
 6221              		.align	1
 6222              		.global	f_opendir
 6223              		.syntax unified
 6224              		.thumb
 6225              		.thumb_func
 6226              		.fpu fpv5-d16
 6228              	f_opendir:
 6229              	.LFB186:
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6230              		.loc 1 4166 0
 6231              		.cfi_startproc
 6232              		@ args = 0, pretend = 0, frame = 16
 6233              		@ frame_needed = 0, uses_anonymous_args = 0
 6234              	.LVL907:
 6235 0000 30B5     		push	{r4, r5, lr}
 6236              	.LCFI81:
 6237              		.cfi_def_cfa_offset 12
 6238              		.cfi_offset 4, -12
 6239              		.cfi_offset 5, -8
 6240              		.cfi_offset 14, -4
 6241 0002 85B0     		sub	sp, sp, #20
 6242              	.LCFI82:
 6243              		.cfi_def_cfa_offset 32
 6244 0004 0191     		str	r1, [sp, #4]
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6245              		.loc 1 4173 0
 6246 0006 0028     		cmp	r0, #0
 6247 0008 3DD0     		beq	.L594
 6248 000a 0446     		mov	r4, r0
 6249              	.LVL908:
ARM GAS  /tmp/cc2OGbx6.s 			page 230


4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6250              		.loc 1 4177 0
 6251 000c 0022     		movs	r2, #0
 6252 000e 03A9     		add	r1, sp, #12
 6253              	.LVL909:
 6254 0010 01A8     		add	r0, sp, #4
 6255              	.LVL910:
 6256 0012 FFF7FEFF 		bl	find_volume
 6257              	.LVL911:
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		obj->fs = fs;
 6258              		.loc 1 4178 0
 6259 0016 0546     		mov	r5, r0
 6260 0018 28B1     		cbz	r0, .L599
 6261              	.L589:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6262              		.loc 1 4220 0
 6263 001a 0DB1     		cbz	r5, .L588
 6264              	.L593:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6265              		.loc 1 4220 0 is_stmt 0 discriminator 1
 6266 001c 0023     		movs	r3, #0
 6267 001e 2360     		str	r3, [r4]
 6268              	.LVL912:
 6269              	.L588:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6270              		.loc 1 4223 0 is_stmt 1
 6271 0020 2846     		mov	r0, r5
 6272 0022 05B0     		add	sp, sp, #20
 6273              	.LCFI83:
 6274              		.cfi_remember_state
 6275              		.cfi_def_cfa_offset 12
 6276              		@ sp needed
 6277 0024 30BD     		pop	{r4, r5, pc}
 6278              	.LVL913:
 6279              	.L599:
 6280              	.LCFI84:
 6281              		.cfi_restore_state
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 6282              		.loc 1 4179 0
 6283 0026 039B     		ldr	r3, [sp, #12]
 6284 0028 2360     		str	r3, [r4]
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 6285              		.loc 1 4181 0
 6286 002a 0199     		ldr	r1, [sp, #4]
 6287 002c 2046     		mov	r0, r4
 6288 002e FFF7FEFF 		bl	follow_path
 6289              	.LVL914:
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 6290              		.loc 1 4182 0
 6291 0032 0546     		mov	r5, r0
 6292 0034 18BB     		cbnz	r0, .L590
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 6293              		.loc 1 4183 0
 6294 0036 94F92F30 		ldrsb	r3, [r4, #47]
 6295 003a 002B     		cmp	r3, #0
 6296 003c 08DB     		blt	.L591
4184:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/cc2OGbx6.s 			page 231


 6297              		.loc 1 4184 0
 6298 003e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 6299 0040 13F0100F 		tst	r3, #16
 6300 0044 1AD0     		beq	.L595
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6301              		.loc 1 4196 0
 6302 0046 216A     		ldr	r1, [r4, #32]
 6303 0048 0398     		ldr	r0, [sp, #12]
 6304 004a FFF7FEFF 		bl	ld_clust
 6305              	.LVL915:
 6306 004e A060     		str	r0, [r4, #8]
 6307              	.L591:
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6308              		.loc 1 4203 0
 6309 0050 039B     		ldr	r3, [sp, #12]
 6310 0052 DB88     		ldrh	r3, [r3, #6]
 6311 0054 A380     		strh	r3, [r4, #4]	@ movhi
4204:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6312              		.loc 1 4204 0
 6313 0056 0021     		movs	r1, #0
 6314 0058 2046     		mov	r0, r4
 6315 005a FFF7FEFF 		bl	dir_sdi
 6316              	.LVL916:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (obj->sclust) {
 6317              		.loc 1 4206 0
 6318 005e 0546     		mov	r5, r0
 6319 0060 68B9     		cbnz	r0, .L590
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6320              		.loc 1 4207 0
 6321 0062 A368     		ldr	r3, [r4, #8]
 6322 0064 13B9     		cbnz	r3, .L600
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6323              		.loc 1 4211 0
 6324 0066 0023     		movs	r3, #0
 6325 0068 2361     		str	r3, [r4, #16]
 6326 006a 08E0     		b	.L590
 6327              	.L600:
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 6328              		.loc 1 4208 0
 6329 006c 0021     		movs	r1, #0
 6330 006e 2046     		mov	r0, r4
 6331 0070 FFF7FEFF 		bl	inc_lock
 6332              	.LVL917:
 6333 0074 2061     		str	r0, [r4, #16]
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6334              		.loc 1 4209 0
 6335 0076 10B9     		cbnz	r0, .L590
 6336              	.LVL918:
 6337 0078 1225     		movs	r5, #18
 6338 007a CEE7     		b	.L589
 6339              	.LVL919:
 6340              	.L595:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6341              		.loc 1 4199 0
 6342 007c 0525     		movs	r5, #5
 6343              	.LVL920:
 6344              	.L590:
ARM GAS  /tmp/cc2OGbx6.s 			page 232


4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6345              		.loc 1 4218 0
 6346 007e 042D     		cmp	r5, #4
 6347 0080 CBD1     		bne	.L589
 6348              	.LVL921:
 6349 0082 0525     		movs	r5, #5
 6350 0084 CAE7     		b	.L593
 6351              	.LVL922:
 6352              	.L594:
4173:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6353              		.loc 1 4173 0
 6354 0086 0925     		movs	r5, #9
 6355 0088 CAE7     		b	.L588
 6356              		.cfi_endproc
 6357              	.LFE186:
 6359              		.section	.text.f_closedir,"ax",%progbits
 6360              		.align	1
 6361              		.global	f_closedir
 6362              		.syntax unified
 6363              		.thumb
 6364              		.thumb_func
 6365              		.fpu fpv5-d16
 6367              	f_closedir:
 6368              	.LFB187:
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6369              		.loc 1 4235 0
 6370              		.cfi_startproc
 6371              		@ args = 0, pretend = 0, frame = 8
 6372              		@ frame_needed = 0, uses_anonymous_args = 0
 6373              	.LVL923:
 6374 0000 10B5     		push	{r4, lr}
 6375              	.LCFI85:
 6376              		.cfi_def_cfa_offset 8
 6377              		.cfi_offset 4, -8
 6378              		.cfi_offset 14, -4
 6379 0002 82B0     		sub	sp, sp, #8
 6380              	.LCFI86:
 6381              		.cfi_def_cfa_offset 16
 6382 0004 0446     		mov	r4, r0
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6383              		.loc 1 4240 0
 6384 0006 01A9     		add	r1, sp, #4
 6385 0008 FFF7FEFF 		bl	validate
 6386              	.LVL924:
4241:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 6387              		.loc 1 4241 0
 6388 000c 0346     		mov	r3, r0
 6389 000e 20B9     		cbnz	r0, .L602
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->obj.lockid);
 6390              		.loc 1 4243 0
 6391 0010 2069     		ldr	r0, [r4, #16]
 6392              	.LVL925:
 6393 0012 28B9     		cbnz	r0, .L605
 6394              	.L603:
 6395              	.LVL926:
4246:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6396              		.loc 1 4246 0
ARM GAS  /tmp/cc2OGbx6.s 			page 233


 6397 0014 0BB9     		cbnz	r3, .L602
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6398              		.loc 1 4249 0
 6399 0016 0022     		movs	r2, #0
 6400 0018 2260     		str	r2, [r4]
 6401              	.LVL927:
 6402              	.L602:
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6403              		.loc 1 4256 0
 6404 001a 1846     		mov	r0, r3
 6405 001c 02B0     		add	sp, sp, #8
 6406              	.LCFI87:
 6407              		.cfi_remember_state
 6408              		.cfi_def_cfa_offset 8
 6409              		@ sp needed
 6410 001e 10BD     		pop	{r4, pc}
 6411              	.LVL928:
 6412              	.L605:
 6413              	.LCFI88:
 6414              		.cfi_restore_state
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6415              		.loc 1 4244 0
 6416 0020 FFF7FEFF 		bl	dec_lock
 6417              	.LVL929:
 6418 0024 0346     		mov	r3, r0
 6419              	.LVL930:
 6420 0026 F5E7     		b	.L603
 6421              		.cfi_endproc
 6422              	.LFE187:
 6424              		.section	.text.f_readdir,"ax",%progbits
 6425              		.align	1
 6426              		.global	f_readdir
 6427              		.syntax unified
 6428              		.thumb
 6429              		.thumb_func
 6430              		.fpu fpv5-d16
 6432              	f_readdir:
 6433              	.LFB188:
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6434              		.loc 1 4269 0
 6435              		.cfi_startproc
 6436              		@ args = 0, pretend = 0, frame = 8
 6437              		@ frame_needed = 0, uses_anonymous_args = 0
 6438              	.LVL931:
 6439 0000 70B5     		push	{r4, r5, r6, lr}
 6440              	.LCFI89:
 6441              		.cfi_def_cfa_offset 16
 6442              		.cfi_offset 4, -16
 6443              		.cfi_offset 5, -12
 6444              		.cfi_offset 6, -8
 6445              		.cfi_offset 14, -4
 6446 0002 82B0     		sub	sp, sp, #8
 6447              	.LCFI90:
 6448              		.cfi_def_cfa_offset 24
 6449 0004 0546     		mov	r5, r0
 6450 0006 0E46     		mov	r6, r1
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /tmp/cc2OGbx6.s 			page 234


 6451              		.loc 1 4275 0
 6452 0008 01A9     		add	r1, sp, #4
 6453              	.LVL932:
 6454 000a FFF7FEFF 		bl	validate
 6455              	.LVL933:
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6456              		.loc 1 4276 0
 6457 000e 0446     		mov	r4, r0
 6458 0010 90B9     		cbnz	r0, .L607
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6459              		.loc 1 4277 0
 6460 0012 A6B1     		cbz	r6, .L612
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6461              		.loc 1 4281 0
 6462 0014 0021     		movs	r1, #0
 6463 0016 2846     		mov	r0, r5
 6464              	.LVL934:
 6465 0018 FFF7FEFF 		bl	dir_read
 6466              	.LVL935:
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6467              		.loc 1 4282 0
 6468 001c 0428     		cmp	r0, #4
 6469 001e 00D0     		beq	.L609
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6470              		.loc 1 4283 0
 6471 0020 98B9     		cbnz	r0, .L610
 6472              	.L609:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6473              		.loc 1 4284 0
 6474 0022 3146     		mov	r1, r6
 6475 0024 2846     		mov	r0, r5
 6476              	.LVL936:
 6477 0026 FFF7FEFF 		bl	get_fileinfo
 6478              	.LVL937:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6479              		.loc 1 4285 0
 6480 002a 0021     		movs	r1, #0
 6481 002c 2846     		mov	r0, r5
 6482 002e FFF7FEFF 		bl	dir_next
 6483              	.LVL938:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6484              		.loc 1 4286 0
 6485 0032 0428     		cmp	r0, #4
 6486 0034 00D0     		beq	.L607
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6487              		.loc 1 4285 0
 6488 0036 0446     		mov	r4, r0
 6489              	.LVL939:
 6490              	.L607:
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6491              		.loc 1 4292 0
 6492 0038 2046     		mov	r0, r4
 6493 003a 02B0     		add	sp, sp, #8
 6494              	.LCFI91:
 6495              		.cfi_remember_state
 6496              		.cfi_def_cfa_offset 16
 6497              		@ sp needed
ARM GAS  /tmp/cc2OGbx6.s 			page 235


 6498 003c 70BD     		pop	{r4, r5, r6, pc}
 6499              	.LVL940:
 6500              	.L612:
 6501              	.LCFI92:
 6502              		.cfi_restore_state
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6503              		.loc 1 4278 0
 6504 003e 0021     		movs	r1, #0
 6505 0040 2846     		mov	r0, r5
 6506              	.LVL941:
 6507 0042 FFF7FEFF 		bl	dir_sdi
 6508              	.LVL942:
 6509 0046 0446     		mov	r4, r0
 6510              	.LVL943:
 6511 0048 F6E7     		b	.L607
 6512              	.LVL944:
 6513              	.L610:
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6514              		.loc 1 4281 0
 6515 004a 0446     		mov	r4, r0
 6516 004c F4E7     		b	.L607
 6517              		.cfi_endproc
 6518              	.LFE188:
 6520              		.section	.text.f_stat,"ax",%progbits
 6521              		.align	1
 6522              		.global	f_stat
 6523              		.syntax unified
 6524              		.thumb
 6525              		.thumb_func
 6526              		.fpu fpv5-d16
 6528              	f_stat:
 6529              	.LFB189:
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6530              		.loc 1 4357 0
 6531              		.cfi_startproc
 6532              		@ args = 0, pretend = 0, frame = 56
 6533              		@ frame_needed = 0, uses_anonymous_args = 0
 6534              	.LVL945:
 6535 0000 30B5     		push	{r4, r5, lr}
 6536              	.LCFI93:
 6537              		.cfi_def_cfa_offset 12
 6538              		.cfi_offset 4, -12
 6539              		.cfi_offset 5, -8
 6540              		.cfi_offset 14, -4
 6541 0002 8FB0     		sub	sp, sp, #60
 6542              	.LCFI94:
 6543              		.cfi_def_cfa_offset 72
 6544 0004 0190     		str	r0, [sp, #4]
 6545 0006 0D46     		mov	r5, r1
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6546              		.loc 1 4364 0
 6547 0008 0022     		movs	r2, #0
 6548 000a 02A9     		add	r1, sp, #8
 6549              	.LVL946:
 6550 000c 01A8     		add	r0, sp, #4
 6551              	.LVL947:
 6552 000e FFF7FEFF 		bl	find_volume
ARM GAS  /tmp/cc2OGbx6.s 			page 236


 6553              	.LVL948:
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
 6554              		.loc 1 4365 0
 6555 0012 0446     		mov	r4, r0
 6556 0014 10B1     		cbz	r0, .L617
 6557              	.LVL949:
 6558              	.L614:
4379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6559              		.loc 1 4379 0
 6560 0016 2046     		mov	r0, r4
 6561 0018 0FB0     		add	sp, sp, #60
 6562              	.LCFI95:
 6563              		.cfi_remember_state
 6564              		.cfi_def_cfa_offset 12
 6565              		@ sp needed
 6566 001a 30BD     		pop	{r4, r5, pc}
 6567              	.LVL950:
 6568              	.L617:
 6569              	.LCFI96:
 6570              		.cfi_restore_state
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6571              		.loc 1 4367 0
 6572 001c 0199     		ldr	r1, [sp, #4]
 6573 001e 02A8     		add	r0, sp, #8
 6574              	.LVL951:
 6575 0020 FFF7FEFF 		bl	follow_path
 6576              	.LVL952:
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6577              		.loc 1 4368 0
 6578 0024 0446     		mov	r4, r0
 6579 0026 0028     		cmp	r0, #0
 6580 0028 F5D1     		bne	.L614
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 6581              		.loc 1 4369 0
 6582 002a 9DF93730 		ldrsb	r3, [sp, #55]
 6583 002e 002B     		cmp	r3, #0
 6584 0030 06DB     		blt	.L615
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6585              		.loc 1 4372 0
 6586 0032 002D     		cmp	r5, #0
 6587 0034 EFD0     		beq	.L614
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6588              		.loc 1 4372 0 is_stmt 0 discriminator 1
 6589 0036 2946     		mov	r1, r5
 6590 0038 02A8     		add	r0, sp, #8
 6591              	.LVL953:
 6592 003a FFF7FEFF 		bl	get_fileinfo
 6593              	.LVL954:
 6594 003e EAE7     		b	.L614
 6595              	.LVL955:
 6596              	.L615:
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {							/* Found an object */
 6597              		.loc 1 4370 0 is_stmt 1
 6598 0040 0624     		movs	r4, #6
 6599 0042 E8E7     		b	.L614
 6600              		.cfi_endproc
 6601              	.LFE189:
ARM GAS  /tmp/cc2OGbx6.s 			page 237


 6603              		.section	.text.f_getfree,"ax",%progbits
 6604              		.align	1
 6605              		.global	f_getfree
 6606              		.syntax unified
 6607              		.thumb
 6608              		.thumb_func
 6609              		.fpu fpv5-d16
 6611              	f_getfree:
 6612              	.LFB190:
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6613              		.loc 1 4393 0
 6614              		.cfi_startproc
 6615              		@ args = 0, pretend = 0, frame = 32
 6616              		@ frame_needed = 0, uses_anonymous_args = 0
 6617              	.LVL956:
 6618 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6619              	.LCFI97:
 6620              		.cfi_def_cfa_offset 32
 6621              		.cfi_offset 4, -32
 6622              		.cfi_offset 5, -28
 6623              		.cfi_offset 6, -24
 6624              		.cfi_offset 7, -20
 6625              		.cfi_offset 8, -16
 6626              		.cfi_offset 9, -12
 6627              		.cfi_offset 10, -8
 6628              		.cfi_offset 14, -4
 6629 0004 88B0     		sub	sp, sp, #32
 6630              	.LCFI98:
 6631              		.cfi_def_cfa_offset 64
 6632 0006 0190     		str	r0, [sp, #4]
 6633 0008 8A46     		mov	r10, r1
 6634 000a 1446     		mov	r4, r2
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6635              		.loc 1 4403 0
 6636 000c 0022     		movs	r2, #0
 6637              	.LVL957:
 6638 000e 07A9     		add	r1, sp, #28
 6639              	.LVL958:
 6640 0010 01A8     		add	r0, sp, #4
 6641              	.LVL959:
 6642 0012 FFF7FEFF 		bl	find_volume
 6643              	.LVL960:
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6644              		.loc 1 4404 0
 6645 0016 8046     		mov	r8, r0
 6646 0018 0028     		cmp	r0, #0
 6647 001a 5AD1     		bne	.L619
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clst is valid, return it without full cluster scan */
 6648              		.loc 1 4405 0
 6649 001c 079B     		ldr	r3, [sp, #28]
 6650 001e 2360     		str	r3, [r4]
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clst;
 6651              		.loc 1 4407 0
 6652 0020 1A69     		ldr	r2, [r3, #16]
 6653 0022 5D69     		ldr	r5, [r3, #20]
 6654 0024 A91E     		subs	r1, r5, #2
 6655 0026 8A42     		cmp	r2, r1
ARM GAS  /tmp/cc2OGbx6.s 			page 238


 6656 0028 08D9     		bls	.L634
 6657              	.LVL961:
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2; obj.fs = fs;
 6658              		.loc 1 4412 0
 6659 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6660 002c 012A     		cmp	r2, #1
 6661 002e 08D0     		beq	.L635
 6662              	.LVL962:
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 					i = 0; p = 0;
 6663              		.loc 1 4440 0
 6664 0030 D3F82090 		ldr	r9, [r3, #32]
 6665              	.LVL963:
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 6666              		.loc 1 4441 0
 6667 0034 0024     		movs	r4, #0
 6668              	.LVL964:
 6669 0036 2646     		mov	r6, r4
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6670              		.loc 1 4411 0
 6671 0038 2746     		mov	r7, r4
 6672 003a 32E0     		b	.L630
 6673              	.LVL965:
 6674              	.L634:
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6675              		.loc 1 4408 0
 6676 003c CAF80020 		str	r2, [r10]
 6677 0040 47E0     		b	.L619
 6678              	.LVL966:
 6679              	.L635:
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6680              		.loc 1 4413 0
 6681 0042 0293     		str	r3, [sp, #8]
 6682 0044 0224     		movs	r4, #2
 6683              	.LVL967:
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Sector unalighed FAT entries */
 6684              		.loc 1 4411 0
 6685 0046 0027     		movs	r7, #0
 6686 0048 04E0     		b	.L624
 6687              	.LVL968:
 6688              	.L623:
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6689              		.loc 1 4419 0
 6690 004a 0134     		adds	r4, r4, #1
 6691              	.LVL969:
 6692 004c 079B     		ldr	r3, [sp, #28]
 6693 004e 5B69     		ldr	r3, [r3, #20]
 6694 0050 A342     		cmp	r3, r4
 6695 0052 36D9     		bls	.L622
 6696              	.LVL970:
 6697              	.L624:
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6698              		.loc 1 4415 0
 6699 0054 2146     		mov	r1, r4
 6700 0056 02A8     		add	r0, sp, #8
 6701 0058 FFF7FEFF 		bl	get_fat
 6702              	.LVL971:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
ARM GAS  /tmp/cc2OGbx6.s 			page 239


 6703              		.loc 1 4416 0
 6704 005c B0F1FF3F 		cmp	r0, #-1
 6705 0060 2DD0     		beq	.L631
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6706              		.loc 1 4417 0
 6707 0062 0128     		cmp	r0, #1
 6708 0064 39D0     		beq	.L632
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6709              		.loc 1 4418 0
 6710 0066 0028     		cmp	r0, #0
 6711 0068 EFD1     		bne	.L623
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6712              		.loc 1 4418 0 is_stmt 0 discriminator 1
 6713 006a 0137     		adds	r7, r7, #1
 6714              	.LVL972:
 6715 006c EDE7     		b	.L623
 6716              	.LVL973:
 6717              	.L636:
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6718              		.loc 1 4444 0 is_stmt 1
 6719 006e 09F10106 		add	r6, r9, #1
 6720              	.LVL974:
 6721 0072 4946     		mov	r1, r9
 6722 0074 0798     		ldr	r0, [sp, #28]
 6723 0076 FFF7FEFF 		bl	move_window
 6724              	.LVL975:
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 							p = fs->win;
 6725              		.loc 1 4445 0
 6726 007a 8046     		mov	r8, r0
 6727 007c 08BB     		cbnz	r0, .L622
4446:Middlewares/Third_Party/FatFs/src/ff.c **** 							i = SS(fs);
 6728              		.loc 1 4446 0
 6729 007e 079C     		ldr	r4, [sp, #28]
 6730              	.LVL976:
 6731 0080 3034     		adds	r4, r4, #48
 6732              	.LVL977:
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res != FR_OK) break;
 6733              		.loc 1 4444 0
 6734 0082 B146     		mov	r9, r6
4447:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6735              		.loc 1 4447 0
 6736 0084 4FF40076 		mov	r6, #512
 6737              	.LVL978:
 6738 0088 0DE0     		b	.L625
 6739              	.LVL979:
 6740              	.L637:
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6741              		.loc 1 4450 0
 6742 008a 2046     		mov	r0, r4
 6743 008c FFF7FEFF 		bl	ld_word
 6744              	.LVL980:
 6745 0090 00B9     		cbnz	r0, .L627
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 2; i -= 2;
 6746              		.loc 1 4450 0 is_stmt 0 discriminator 1
 6747 0092 0137     		adds	r7, r7, #1
 6748              	.LVL981:
 6749              	.L627:
ARM GAS  /tmp/cc2OGbx6.s 			page 240


4451:Middlewares/Third_Party/FatFs/src/ff.c **** 						} else {
 6750              		.loc 1 4451 0 is_stmt 1
 6751 0094 0234     		adds	r4, r4, #2
 6752              	.LVL982:
 6753 0096 023E     		subs	r6, r6, #2
 6754              	.LVL983:
 6755 0098 01E0     		b	.L628
 6756              	.L629:
4454:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6757              		.loc 1 4454 0
 6758 009a 0434     		adds	r4, r4, #4
 6759              	.LVL984:
 6760 009c 043E     		subs	r6, r6, #4
 6761              	.LVL985:
 6762              	.L628:
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6763              		.loc 1 4456 0
 6764 009e 013D     		subs	r5, r5, #1
 6765              	.LVL986:
 6766 00a0 0FD0     		beq	.L622
 6767              	.LVL987:
 6768              	.L630:
4443:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = move_window(fs, sect++);
 6769              		.loc 1 4443 0
 6770 00a2 002E     		cmp	r6, #0
 6771 00a4 E3D0     		beq	.L636
 6772              	.LVL988:
 6773              	.L625:
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (ld_word(p) == 0) nfree++;
 6774              		.loc 1 4449 0
 6775 00a6 079B     		ldr	r3, [sp, #28]
 6776 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6777 00aa 022B     		cmp	r3, #2
 6778 00ac EDD0     		beq	.L637
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6779              		.loc 1 4453 0
 6780 00ae 2046     		mov	r0, r4
 6781 00b0 FFF7FEFF 		bl	ld_dword
 6782              	.LVL989:
 6783 00b4 30F07043 		bics	r3, r0, #-268435456
 6784 00b8 EFD1     		bne	.L629
4453:Middlewares/Third_Party/FatFs/src/ff.c **** 							p += 4; i -= 4;
 6785              		.loc 1 4453 0 is_stmt 0 discriminator 1
 6786 00ba 0137     		adds	r7, r7, #1
 6787              	.LVL990:
 6788 00bc EDE7     		b	.L629
 6789              	.LVL991:
 6790              	.L631:
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6791              		.loc 1 4416 0 is_stmt 1
 6792 00be 4FF00108 		mov	r8, #1
 6793              	.LVL992:
 6794              	.L622:
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 6795              		.loc 1 4459 0
 6796 00c2 CAF80070 		str	r7, [r10]
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;		/* FSInfo is to be updated */
ARM GAS  /tmp/cc2OGbx6.s 			page 241


 6797              		.loc 1 4460 0
 6798 00c6 079B     		ldr	r3, [sp, #28]
 6799 00c8 1F61     		str	r7, [r3, #16]
4461:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6800              		.loc 1 4461 0
 6801 00ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 6802 00cc 42F00102 		orr	r2, r2, #1
 6803 00d0 1A71     		strb	r2, [r3, #4]
 6804              	.LVL993:
 6805              	.L619:
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6806              		.loc 1 4466 0
 6807 00d2 4046     		mov	r0, r8
 6808 00d4 08B0     		add	sp, sp, #32
 6809              	.LCFI99:
 6810              		.cfi_remember_state
 6811              		.cfi_def_cfa_offset 32
 6812              		@ sp needed
 6813 00d6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6814              	.LVL994:
 6815              	.L632:
 6816              	.LCFI100:
 6817              		.cfi_restore_state
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) nfree++;
 6818              		.loc 1 4417 0
 6819 00da 4FF00208 		mov	r8, #2
 6820 00de F0E7     		b	.L622
 6821              		.cfi_endproc
 6822              	.LFE190:
 6824              		.section	.text.f_truncate,"ax",%progbits
 6825              		.align	1
 6826              		.global	f_truncate
 6827              		.syntax unified
 6828              		.thumb
 6829              		.thumb_func
 6830              		.fpu fpv5-d16
 6832              	f_truncate:
 6833              	.LFB191:
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6834              		.loc 1 4478 0
 6835              		.cfi_startproc
 6836              		@ args = 0, pretend = 0, frame = 8
 6837              		@ frame_needed = 0, uses_anonymous_args = 0
 6838              	.LVL995:
 6839 0000 30B5     		push	{r4, r5, lr}
 6840              	.LCFI101:
 6841              		.cfi_def_cfa_offset 12
 6842              		.cfi_offset 4, -12
 6843              		.cfi_offset 5, -8
 6844              		.cfi_offset 14, -4
 6845 0002 83B0     		sub	sp, sp, #12
 6846              	.LCFI102:
 6847              		.cfi_def_cfa_offset 24
 6848 0004 0546     		mov	r5, r0
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 6849              		.loc 1 4484 0
 6850 0006 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cc2OGbx6.s 			page 242


 6851 0008 FFF7FEFF 		bl	validate
 6852              	.LVL996:
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6853              		.loc 1 4485 0
 6854 000c 0446     		mov	r4, r0
 6855 000e 0028     		cmp	r0, #0
 6856 0010 4BD1     		bne	.L639
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6857              		.loc 1 4485 0 is_stmt 0 discriminator 2
 6858 0012 6C7D     		ldrb	r4, [r5, #21]	@ zero_extendqisi2
 6859              	.LVL997:
 6860 0014 002C     		cmp	r4, #0
 6861 0016 48D1     		bne	.L639
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6862              		.loc 1 4486 0 is_stmt 1
 6863 0018 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6864 001a 13F0020F 		tst	r3, #2
 6865 001e 43D0     		beq	.L645
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6866              		.loc 1 4488 0
 6867 0020 AB69     		ldr	r3, [r5, #24]
 6868 0022 EA68     		ldr	r2, [r5, #12]
 6869 0024 9342     		cmp	r3, r2
 6870 0026 40D2     		bcs	.L639
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 6871              		.loc 1 4489 0
 6872 0028 A3B9     		cbnz	r3, .L640
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->obj.sclust = 0;
 6873              		.loc 1 4490 0
 6874 002a 0022     		movs	r2, #0
 6875 002c A968     		ldr	r1, [r5, #8]
 6876 002e 2846     		mov	r0, r5
 6877 0030 FFF7FEFF 		bl	remove_chain
 6878              	.LVL998:
 6879 0034 0446     		mov	r4, r0
 6880              	.LVL999:
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
 6881              		.loc 1 4491 0
 6882 0036 0023     		movs	r3, #0
 6883 0038 AB60     		str	r3, [r5, #8]
 6884              	.LVL1000:
 6885              	.L641:
4501:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA_MODIFIED;
 6886              		.loc 1 4501 0
 6887 003a AB69     		ldr	r3, [r5, #24]
 6888 003c EB60     		str	r3, [r5, #12]
4502:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 6889              		.loc 1 4502 0
 6890 003e 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6891 0040 43F04003 		orr	r3, r3, #64
 6892 0044 2B75     		strb	r3, [r5, #20]
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6893              		.loc 1 4504 0
 6894 0046 14B9     		cbnz	r4, .L643
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(fs->drv, fp->buf, fp->sect, 1) != RES_OK) {
 6895              		.loc 1 4504 0 is_stmt 0 discriminator 1
 6896 0048 13F0800F 		tst	r3, #128
ARM GAS  /tmp/cc2OGbx6.s 			page 243


 6897 004c 1CD1     		bne	.L650
 6898              	.L643:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6899              		.loc 1 4512 0 is_stmt 1
 6900 004e 64B3     		cbz	r4, .L639
 6901              	.LVL1001:
 6902              	.L644:
4512:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6903              		.loc 1 4512 0 is_stmt 0 discriminator 1
 6904 0050 6C75     		strb	r4, [r5, #21]
 6905 0052 2AE0     		b	.L639
 6906              	.LVL1002:
 6907              	.L640:
4493:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6908              		.loc 1 4493 0 is_stmt 1
 6909 0054 E969     		ldr	r1, [r5, #28]
 6910 0056 2846     		mov	r0, r5
 6911 0058 FFF7FEFF 		bl	get_fat
 6912              	.LVL1003:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6913              		.loc 1 4495 0
 6914 005c B0F1FF3F 		cmp	r0, #-1
 6915 0060 0ED0     		beq	.L651
 6916              	.L642:
 6917              	.LVL1004:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6918              		.loc 1 4496 0
 6919 0062 0128     		cmp	r0, #1
 6920 0064 0ED0     		beq	.L647
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6921              		.loc 1 4497 0
 6922 0066 002C     		cmp	r4, #0
 6923 0068 E7D1     		bne	.L641
4497:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6924              		.loc 1 4497 0 is_stmt 0 discriminator 1
 6925 006a 019B     		ldr	r3, [sp, #4]
 6926 006c 5B69     		ldr	r3, [r3, #20]
 6927 006e 8342     		cmp	r3, r0
 6928 0070 E3D9     		bls	.L641
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6929              		.loc 1 4498 0 is_stmt 1
 6930 0072 EA69     		ldr	r2, [r5, #28]
 6931 0074 0146     		mov	r1, r0
 6932 0076 2846     		mov	r0, r5
 6933              	.LVL1005:
 6934 0078 FFF7FEFF 		bl	remove_chain
 6935              	.LVL1006:
 6936 007c 0446     		mov	r4, r0
 6937              	.LVL1007:
 6938 007e DCE7     		b	.L641
 6939              	.LVL1008:
 6940              	.L651:
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6941              		.loc 1 4495 0
 6942 0080 0124     		movs	r4, #1
 6943 0082 EEE7     		b	.L642
 6944              	.LVL1009:
ARM GAS  /tmp/cc2OGbx6.s 			page 244


 6945              	.L647:
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6946              		.loc 1 4496 0
 6947 0084 0224     		movs	r4, #2
 6948              	.LVL1010:
 6949 0086 D8E7     		b	.L641
 6950              	.LVL1011:
 6951              	.L650:
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 6952              		.loc 1 4505 0
 6953 0088 0123     		movs	r3, #1
 6954 008a 2A6A     		ldr	r2, [r5, #32]
 6955 008c 05F13001 		add	r1, r5, #48
 6956 0090 0198     		ldr	r0, [sp, #4]
 6957 0092 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 6958 0094 FFF7FEFF 		bl	disk_write
 6959              	.LVL1012:
 6960 0098 20B9     		cbnz	r0, .L648
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6961              		.loc 1 4508 0
 6962 009a 2B7D     		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 6963 009c 03F07F03 		and	r3, r3, #127
 6964 00a0 2B75     		strb	r3, [r5, #20]
 6965 00a2 D4E7     		b	.L643
 6966              	.L648:
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6967              		.loc 1 4506 0
 6968 00a4 0124     		movs	r4, #1
 6969              	.LVL1013:
 6970 00a6 D3E7     		b	.L644
 6971              	.LVL1014:
 6972              	.L645:
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6973              		.loc 1 4486 0
 6974 00a8 0724     		movs	r4, #7
 6975              	.LVL1015:
 6976              	.L639:
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6977              		.loc 1 4516 0
 6978 00aa 2046     		mov	r0, r4
 6979 00ac 03B0     		add	sp, sp, #12
 6980              	.LCFI103:
 6981              		.cfi_def_cfa_offset 12
 6982              		@ sp needed
 6983 00ae 30BD     		pop	{r4, r5, pc}
 6984              		.cfi_endproc
 6985              	.LFE191:
 6987              		.section	.text.f_unlink,"ax",%progbits
 6988              		.align	1
 6989              		.global	f_unlink
 6990              		.syntax unified
 6991              		.thumb
 6992              		.thumb_func
 6993              		.fpu fpv5-d16
 6995              	f_unlink:
 6996              	.LFB192:
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  /tmp/cc2OGbx6.s 			page 245


 6997              		.loc 1 4528 0
 6998              		.cfi_startproc
 6999              		@ args = 0, pretend = 0, frame = 112
 7000              		@ frame_needed = 0, uses_anonymous_args = 0
 7001              	.LVL1016:
 7002 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7003              	.LCFI104:
 7004              		.cfi_def_cfa_offset 20
 7005              		.cfi_offset 4, -20
 7006              		.cfi_offset 5, -16
 7007              		.cfi_offset 6, -12
 7008              		.cfi_offset 7, -8
 7009              		.cfi_offset 14, -4
 7010 0002 9DB0     		sub	sp, sp, #116
 7011              	.LCFI105:
 7012              		.cfi_def_cfa_offset 136
 7013 0004 0190     		str	r0, [sp, #4]
 7014              	.LVL1017:
4540:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7015              		.loc 1 4540 0
 7016 0006 0222     		movs	r2, #2
 7017 0008 03A9     		add	r1, sp, #12
 7018 000a 01A8     		add	r0, sp, #4
 7019              	.LVL1018:
 7020 000c FFF7FEFF 		bl	find_volume
 7021              	.LVL1019:
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7022              		.loc 1 4541 0
 7023 0010 039B     		ldr	r3, [sp, #12]
 7024 0012 1093     		str	r3, [sp, #64]
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7025              		.loc 1 4542 0
 7026 0014 0446     		mov	r4, r0
 7027 0016 10B1     		cbz	r0, .L662
 7028              	.LVL1020:
 7029              	.L653:
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7030              		.loc 1 4611 0
 7031 0018 2046     		mov	r0, r4
 7032 001a 1DB0     		add	sp, sp, #116
 7033              	.LCFI106:
 7034              		.cfi_remember_state
 7035              		.cfi_def_cfa_offset 20
 7036              		@ sp needed
 7037 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 7038              	.LVL1021:
 7039              	.L662:
 7040              	.LCFI107:
 7041              		.cfi_restore_state
4544:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
 7042              		.loc 1 4544 0
 7043 001e 0199     		ldr	r1, [sp, #4]
 7044 0020 10A8     		add	r0, sp, #64
 7045              	.LVL1022:
 7046 0022 FFF7FEFF 		bl	follow_path
 7047              	.LVL1023:
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cc2OGbx6.s 			page 246


 7048              		.loc 1 4549 0
 7049 0026 0446     		mov	r4, r0
 7050 0028 20B9     		cbnz	r0, .L654
4549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7051              		.loc 1 4549 0 is_stmt 0 discriminator 1
 7052 002a 0221     		movs	r1, #2
 7053 002c 10A8     		add	r0, sp, #64
 7054              	.LVL1024:
 7055 002e FFF7FEFF 		bl	chk_lock
 7056              	.LVL1025:
 7057 0032 0446     		mov	r4, r0
 7058              	.LVL1026:
 7059              	.L654:
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 7060              		.loc 1 4551 0 is_stmt 1
 7061 0034 002C     		cmp	r4, #0
 7062 0036 EFD1     		bne	.L653
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 7063              		.loc 1 4552 0
 7064 0038 9DF96F30 		ldrsb	r3, [sp, #111]
 7065 003c 002B     		cmp	r3, #0
 7066 003e 1EDB     		blt	.L658
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 7067              		.loc 1 4555 0
 7068 0040 9DF84660 		ldrb	r6, [sp, #70]	@ zero_extendqisi2
 7069 0044 16F0010F 		tst	r6, #1
 7070 0048 30D1     		bne	.L659
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7071              		.loc 1 4569 0
 7072 004a 039F     		ldr	r7, [sp, #12]
 7073 004c 1899     		ldr	r1, [sp, #96]
 7074 004e 3846     		mov	r0, r7
 7075 0050 FFF7FEFF 		bl	ld_clust
 7076              	.LVL1027:
 7077 0054 0546     		mov	r5, r0
 7078              	.LVL1028:
4571:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH != 0
 7079              		.loc 1 4571 0
 7080 0056 16F0100F 		tst	r6, #16
 7081 005a 12D0     		beq	.L655
4578:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.obj.sclust = dclst;
 7082              		.loc 1 4578 0
 7083 005c 0497     		str	r7, [sp, #16]
4579:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7084              		.loc 1 4579 0
 7085 005e 0690     		str	r0, [sp, #24]
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7086              		.loc 1 4586 0
 7087 0060 0021     		movs	r1, #0
 7088 0062 04A8     		add	r0, sp, #16
 7089              	.LVL1029:
 7090 0064 FFF7FEFF 		bl	dir_sdi
 7091              	.LVL1030:
4587:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item */
 7092              		.loc 1 4587 0
 7093 0068 0446     		mov	r4, r0
 7094 006a 50B9     		cbnz	r0, .L655
ARM GAS  /tmp/cc2OGbx6.s 			page 247


4588:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 7095              		.loc 1 4588 0
 7096 006c 0021     		movs	r1, #0
 7097 006e 04A8     		add	r0, sp, #16
 7098              	.LVL1031:
 7099 0070 FFF7FEFF 		bl	dir_read
 7100              	.LVL1032:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7101              		.loc 1 4589 0
 7102 0074 0446     		mov	r4, r0
 7103 0076 E0B1     		cbz	r0, .L660
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7104              		.loc 1 4590 0
 7105 0078 0428     		cmp	r0, #4
 7106 007a 02D1     		bne	.L655
 7107 007c 03E0     		b	.L656
 7108              	.LVL1033:
 7109              	.L658:
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7110              		.loc 1 4531 0
 7111 007e 0025     		movs	r5, #0
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7112              		.loc 1 4553 0
 7113 0080 0624     		movs	r4, #6
 7114              	.LVL1034:
 7115              	.L655:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 7116              		.loc 1 4595 0
 7117 0082 002C     		cmp	r4, #0
 7118 0084 C8D1     		bne	.L653
 7119              	.LVL1035:
 7120              	.L656:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst) {	/* Remove the cluster chain if exist */
 7121              		.loc 1 4596 0
 7122 0086 10A8     		add	r0, sp, #64
 7123 0088 FFF7FEFF 		bl	dir_remove
 7124              	.LVL1036:
4597:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7125              		.loc 1 4597 0
 7126 008c 0446     		mov	r4, r0
 7127 008e 2B1C     		adds	r3, r5, #0
 7128 0090 18BF     		it	ne
 7129 0092 0123     		movne	r3, #1
 7130 0094 0028     		cmp	r0, #0
 7131 0096 0CBF     		ite	eq
 7132 0098 1846     		moveq	r0, r3
 7133 009a 0020     		movne	r0, #0
 7134              	.LVL1037:
 7135 009c 58B9     		cbnz	r0, .L663
 7136              	.L657:
 7137              	.LVL1038:
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7138              		.loc 1 4604 0
 7139 009e 002C     		cmp	r4, #0
 7140 00a0 BAD1     		bne	.L653
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7141              		.loc 1 4604 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc2OGbx6.s 			page 248


 7142 00a2 0398     		ldr	r0, [sp, #12]
 7143 00a4 FFF7FEFF 		bl	sync_fs
 7144              	.LVL1039:
 7145 00a8 0446     		mov	r4, r0
 7146              	.LVL1040:
 7147 00aa B5E7     		b	.L653
 7148              	.LVL1041:
 7149              	.L659:
4531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
 7150              		.loc 1 4531 0 is_stmt 1
 7151 00ac 0025     		movs	r5, #0
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7152              		.loc 1 4556 0
 7153 00ae 0724     		movs	r4, #7
 7154              	.LVL1042:
 7155 00b0 E7E7     		b	.L655
 7156              	.LVL1043:
 7157              	.L660:
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 7158              		.loc 1 4589 0
 7159 00b2 0724     		movs	r4, #7
 7160 00b4 E5E7     		b	.L655
 7161              	.LVL1044:
 7162              	.L663:
4601:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7163              		.loc 1 4601 0
 7164 00b6 0022     		movs	r2, #0
 7165 00b8 2946     		mov	r1, r5
 7166 00ba 10A8     		add	r0, sp, #64
 7167 00bc FFF7FEFF 		bl	remove_chain
 7168              	.LVL1045:
 7169 00c0 0446     		mov	r4, r0
 7170              	.LVL1046:
 7171 00c2 ECE7     		b	.L657
 7172              		.cfi_endproc
 7173              	.LFE192:
 7175              		.section	.text.f_mkdir,"ax",%progbits
 7176              		.align	1
 7177              		.global	f_mkdir
 7178              		.syntax unified
 7179              		.thumb
 7180              		.thumb_func
 7181              		.fpu fpv5-d16
 7183              	f_mkdir:
 7184              	.LFB193:
4623:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7185              		.loc 1 4623 0
 7186              		.cfi_startproc
 7187              		@ args = 0, pretend = 0, frame = 64
 7188              		@ frame_needed = 0, uses_anonymous_args = 0
 7189              	.LVL1047:
 7190 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7191              	.LCFI108:
 7192              		.cfi_def_cfa_offset 36
 7193              		.cfi_offset 4, -36
 7194              		.cfi_offset 5, -32
 7195              		.cfi_offset 6, -28
ARM GAS  /tmp/cc2OGbx6.s 			page 249


 7196              		.cfi_offset 7, -24
 7197              		.cfi_offset 8, -20
 7198              		.cfi_offset 9, -16
 7199              		.cfi_offset 10, -12
 7200              		.cfi_offset 11, -8
 7201              		.cfi_offset 14, -4
 7202 0004 91B0     		sub	sp, sp, #68
 7203              	.LCFI109:
 7204              		.cfi_def_cfa_offset 104
 7205 0006 0190     		str	r0, [sp, #4]
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.obj.fs = fs;
 7206              		.loc 1 4634 0
 7207 0008 0222     		movs	r2, #2
 7208 000a 03A9     		add	r1, sp, #12
 7209 000c 01A8     		add	r0, sp, #4
 7210              	.LVL1048:
 7211 000e FFF7FEFF 		bl	find_volume
 7212              	.LVL1049:
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7213              		.loc 1 4635 0
 7214 0012 039B     		ldr	r3, [sp, #12]
 7215 0014 0493     		str	r3, [sp, #16]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7216              		.loc 1 4636 0
 7217 0016 0446     		mov	r4, r0
 7218 0018 18B1     		cbz	r0, .L682
 7219              	.LVL1050:
 7220              	.L665:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7221              		.loc 1 4708 0
 7222 001a 2046     		mov	r0, r4
 7223 001c 11B0     		add	sp, sp, #68
 7224              	.LCFI110:
 7225              		.cfi_remember_state
 7226              		.cfi_def_cfa_offset 36
 7227              		@ sp needed
 7228 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7229              	.LVL1051:
 7230              	.L682:
 7231              	.LCFI111:
 7232              		.cfi_restore_state
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7233              		.loc 1 4638 0
 7234 0022 0199     		ldr	r1, [sp, #4]
 7235 0024 04A8     		add	r0, sp, #16
 7236              	.LVL1052:
 7237 0026 FFF7FEFF 		bl	follow_path
 7238              	.LVL1053:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7239              		.loc 1 4639 0
 7240 002a 0028     		cmp	r0, #0
 7241 002c 00F09980 		beq	.L675
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 7242              		.loc 1 4643 0
 7243 0030 0428     		cmp	r0, #4
 7244 0032 01D0     		beq	.L683
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
ARM GAS  /tmp/cc2OGbx6.s 			page 250


 7245              		.loc 1 4638 0
 7246 0034 0446     		mov	r4, r0
 7247 0036 F0E7     		b	.L665
 7248              	.L683:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 7249              		.loc 1 4644 0
 7250 0038 0021     		movs	r1, #0
 7251 003a 04A8     		add	r0, sp, #16
 7252              	.LVL1054:
 7253 003c FFF7FEFF 		bl	create_chain
 7254              	.LVL1055:
4645:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7255              		.loc 1 4645 0
 7256 0040 039A     		ldr	r2, [sp, #12]
 7257 0042 5389     		ldrh	r3, [r2, #10]
 7258 0044 5B02     		lsls	r3, r3, #9
 7259 0046 0793     		str	r3, [sp, #28]
 7260              	.LVL1056:
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 7261              		.loc 1 4647 0
 7262 0048 0746     		mov	r7, r0
 7263 004a 00B9     		cbnz	r0, .L666
 7264 004c 0724     		movs	r4, #7
 7265              	.L666:
 7266              	.LVL1057:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7267              		.loc 1 4648 0
 7268 004e 012F     		cmp	r7, #1
 7269 0050 11D0     		beq	.L684
 7270              	.LVL1058:
 7271              	.L667:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7272              		.loc 1 4649 0
 7273 0052 B7F1FF3F 		cmp	r7, #-1
 7274 0056 15D0     		beq	.L679
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7275              		.loc 1 4650 0
 7276 0058 7CB1     		cbz	r4, .L685
 7277              	.LVL1059:
 7278              	.L668:
4651:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7279              		.loc 1 4651 0
 7280 005a FFF7FEFF 		bl	get_fattime
 7281              	.LVL1060:
 7282 005e 8246     		mov	r10, r0
 7283              	.LVL1061:
4652:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fs, dcl);
 7284              		.loc 1 4652 0
 7285 0060 94B1     		cbz	r4, .L686
 7286              	.LVL1062:
 7287              	.L669:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 7288              		.loc 1 4675 0
 7289 0062 002C     		cmp	r4, #0
 7290 0064 63D0     		beq	.L687
 7291              	.L673:
4678:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
ARM GAS  /tmp/cc2OGbx6.s 			page 251


 7292              		.loc 1 4678 0
 7293 0066 002C     		cmp	r4, #0
 7294 0068 66D0     		beq	.L688
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7295              		.loc 1 4701 0
 7296 006a 0022     		movs	r2, #0
 7297 006c 3946     		mov	r1, r7
 7298 006e 04A8     		add	r0, sp, #16
 7299 0070 FFF7FEFF 		bl	remove_chain
 7300              	.LVL1063:
 7301 0074 D1E7     		b	.L665
 7302              	.LVL1064:
 7303              	.L684:
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7304              		.loc 1 4648 0
 7305 0076 0224     		movs	r4, #2
 7306              	.LVL1065:
 7307 0078 EBE7     		b	.L667
 7308              	.LVL1066:
 7309              	.L685:
4650:Middlewares/Third_Party/FatFs/src/ff.c **** 			tm = GET_FATTIME();
 7310              		.loc 1 4650 0 discriminator 1
 7311 007a 1046     		mov	r0, r2
 7312              	.LVL1067:
 7313 007c FFF7FEFF 		bl	sync_window
 7314              	.LVL1068:
 7315 0080 0446     		mov	r4, r0
 7316              	.LVL1069:
 7317 0082 EAE7     		b	.L668
 7318              	.LVL1070:
 7319              	.L679:
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 7320              		.loc 1 4649 0
 7321 0084 0124     		movs	r4, #1
 7322              	.LVL1071:
 7323 0086 E8E7     		b	.L668
 7324              	.LVL1072:
 7325              	.L686:
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fs->win;
 7326              		.loc 1 4653 0
 7327 0088 039D     		ldr	r5, [sp, #12]
 7328 008a 3946     		mov	r1, r7
 7329 008c 2846     		mov	r0, r5
 7330              	.LVL1073:
 7331 008e FFF7FEFF 		bl	clust2sect
 7332              	.LVL1074:
 7333 0092 0646     		mov	r6, r0
 7334              	.LVL1075:
4654:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(fs));
 7335              		.loc 1 4654 0
 7336 0094 05F13009 		add	r9, r5, #48
 7337              	.LVL1076:
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 7338              		.loc 1 4655 0
 7339 0098 4FF40072 		mov	r2, #512
 7340 009c 0021     		movs	r1, #0
 7341 009e 4846     		mov	r0, r9
ARM GAS  /tmp/cc2OGbx6.s 			page 252


 7342              	.LVL1077:
 7343 00a0 FFF7FEFF 		bl	mem_set
 7344              	.LVL1078:
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Name] = '.';
 7345              		.loc 1 4657 0
 7346 00a4 0B22     		movs	r2, #11
 7347 00a6 2021     		movs	r1, #32
 7348 00a8 4846     		mov	r0, r9
 7349 00aa FFF7FEFF 		bl	mem_set
 7350              	.LVL1079:
4658:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 7351              		.loc 1 4658 0
 7352 00ae 4FF02E0B 		mov	fp, #46
 7353 00b2 85F830B0 		strb	fp, [r5, #48]
4659:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 7354              		.loc 1 4659 0
 7355 00b6 1023     		movs	r3, #16
 7356 00b8 85F83B30 		strb	r3, [r5, #59]
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);
 7357              		.loc 1 4660 0
 7358 00bc 5146     		mov	r1, r10
 7359 00be 05F14600 		add	r0, r5, #70
 7360 00c2 FFF7FEFF 		bl	st_dword
 7361              	.LVL1080:
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); 	/* Create ".." entry */
 7362              		.loc 1 4661 0
 7363 00c6 3A46     		mov	r2, r7
 7364 00c8 4946     		mov	r1, r9
 7365 00ca 0398     		ldr	r0, [sp, #12]
 7366 00cc FFF7FEFF 		bl	st_clust
 7367              	.LVL1081:
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 7368              		.loc 1 4662 0
 7369 00d0 05F15008 		add	r8, r5, #80
 7370 00d4 2022     		movs	r2, #32
 7371 00d6 4946     		mov	r1, r9
 7372 00d8 4046     		mov	r0, r8
 7373 00da FFF7FEFF 		bl	mem_cpy
 7374              	.LVL1082:
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fs->fs_type == FS_FAT32 && pcl == fs->dirbase) pcl = 0;
 7375              		.loc 1 4663 0
 7376 00de 85F851B0 		strb	fp, [r5, #81]
 7377 00e2 069A     		ldr	r2, [sp, #24]
 7378              	.LVL1083:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7379              		.loc 1 4664 0
 7380 00e4 0398     		ldr	r0, [sp, #12]
 7381 00e6 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7382 00e8 032B     		cmp	r3, #3
 7383 00ea 1BD0     		beq	.L689
 7384              	.LVL1084:
 7385              	.L670:
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7386              		.loc 1 4665 0
 7387 00ec 4146     		mov	r1, r8
 7388 00ee FFF7FEFF 		bl	st_clust
 7389              	.LVL1085:
ARM GAS  /tmp/cc2OGbx6.s 			page 253


4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7390              		.loc 1 4667 0
 7391 00f2 039B     		ldr	r3, [sp, #12]
 7392 00f4 5D89     		ldrh	r5, [r3, #10]
 7393              	.LVL1086:
 7394              	.L671:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7395              		.loc 1 4667 0 is_stmt 0 discriminator 1
 7396 00f6 002D     		cmp	r5, #0
 7397 00f8 B3D0     		beq	.L669
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7398              		.loc 1 4668 0 is_stmt 1
 7399 00fa 06F10108 		add	r8, r6, #1
 7400              	.LVL1087:
 7401 00fe 039B     		ldr	r3, [sp, #12]
 7402 0100 DE62     		str	r6, [r3, #44]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(fs);
 7403              		.loc 1 4669 0
 7404 0102 0122     		movs	r2, #1
 7405 0104 DA70     		strb	r2, [r3, #3]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7406              		.loc 1 4670 0
 7407 0106 0398     		ldr	r0, [sp, #12]
 7408 0108 FFF7FEFF 		bl	sync_window
 7409              	.LVL1088:
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(fs));
 7410              		.loc 1 4671 0
 7411 010c 0446     		mov	r4, r0
 7412 010e 0028     		cmp	r0, #0
 7413 0110 A7D1     		bne	.L669
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7414              		.loc 1 4672 0 discriminator 2
 7415 0112 4FF40072 		mov	r2, #512
 7416 0116 0021     		movs	r1, #0
 7417 0118 4846     		mov	r0, r9
 7418              	.LVL1089:
 7419 011a FFF7FEFF 		bl	mem_set
 7420              	.LVL1090:
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->winsect = dsc++;
 7421              		.loc 1 4667 0 discriminator 2
 7422 011e 013D     		subs	r5, r5, #1
 7423              	.LVL1091:
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7424              		.loc 1 4668 0 discriminator 2
 7425 0120 4646     		mov	r6, r8
 7426 0122 E8E7     		b	.L671
 7427              	.LVL1092:
 7428              	.L689:
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7429              		.loc 1 4664 0 discriminator 1
 7430 0124 436A     		ldr	r3, [r0, #36]
 7431 0126 9342     		cmp	r3, r2
 7432 0128 E0D1     		bne	.L670
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 7433              		.loc 1 4664 0 is_stmt 0
 7434 012a 0022     		movs	r2, #0
 7435              	.LVL1093:
ARM GAS  /tmp/cc2OGbx6.s 			page 254


 7436 012c DEE7     		b	.L670
 7437              	.LVL1094:
 7438              	.L687:
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7439              		.loc 1 4676 0 is_stmt 1
 7440 012e 04A8     		add	r0, sp, #16
 7441 0130 FFF7FEFF 		bl	dir_register
 7442              	.LVL1095:
 7443 0134 0446     		mov	r4, r0
 7444              	.LVL1096:
 7445 0136 96E7     		b	.L673
 7446              	.L688:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 7447              		.loc 1 4691 0
 7448 0138 0C9C     		ldr	r4, [sp, #48]
 7449              	.LVL1097:
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 7450              		.loc 1 4692 0
 7451 013a 5146     		mov	r1, r10
 7452 013c 04F11600 		add	r0, r4, #22
 7453 0140 FFF7FEFF 		bl	st_dword
 7454              	.LVL1098:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7455              		.loc 1 4693 0
 7456 0144 3A46     		mov	r2, r7
 7457 0146 2146     		mov	r1, r4
 7458 0148 0398     		ldr	r0, [sp, #12]
 7459 014a FFF7FEFF 		bl	st_clust
 7460              	.LVL1099:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 					fs->wflag = 1;
 7461              		.loc 1 4694 0
 7462 014e 1023     		movs	r3, #16
 7463 0150 E372     		strb	r3, [r4, #11]
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7464              		.loc 1 4695 0
 7465 0152 039B     		ldr	r3, [sp, #12]
 7466 0154 0122     		movs	r2, #1
 7467 0156 DA70     		strb	r2, [r3, #3]
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7468              		.loc 1 4698 0
 7469 0158 0398     		ldr	r0, [sp, #12]
 7470 015a FFF7FEFF 		bl	sync_fs
 7471              	.LVL1100:
 7472 015e 0446     		mov	r4, r0
 7473              	.LVL1101:
 7474 0160 5BE7     		b	.L665
 7475              	.LVL1102:
 7476              	.L675:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
 7477              		.loc 1 4639 0
 7478 0162 0824     		movs	r4, #8
 7479 0164 59E7     		b	.L665
 7480              		.cfi_endproc
 7481              	.LFE193:
 7483              		.section	.text.f_rename,"ax",%progbits
 7484              		.align	1
 7485              		.global	f_rename
ARM GAS  /tmp/cc2OGbx6.s 			page 255


 7486              		.syntax unified
 7487              		.thumb
 7488              		.thumb_func
 7489              		.fpu fpv5-d16
 7491              	f_rename:
 7492              	.LFB194:
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7493              		.loc 1 4721 0
 7494              		.cfi_startproc
 7495              		@ args = 0, pretend = 0, frame = 136
 7496              		@ frame_needed = 0, uses_anonymous_args = 0
 7497              	.LVL1103:
 7498 0000 30B5     		push	{r4, r5, lr}
 7499              	.LCFI112:
 7500              		.cfi_def_cfa_offset 12
 7501              		.cfi_offset 4, -12
 7502              		.cfi_offset 5, -8
 7503              		.cfi_offset 14, -4
 7504 0002 A3B0     		sub	sp, sp, #140
 7505              	.LCFI113:
 7506              		.cfi_def_cfa_offset 152
 7507 0004 0190     		str	r0, [sp, #4]
 7508 0006 22A8     		add	r0, sp, #136
 7509              	.LVL1104:
 7510 0008 40F8881D 		str	r1, [r0, #-136]!
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7511              		.loc 1 4730 0
 7512 000c FFF7FEFF 		bl	get_ldnumber
 7513              	.LVL1105:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7514              		.loc 1 4731 0
 7515 0010 0222     		movs	r2, #2
 7516 0012 09A9     		add	r1, sp, #36
 7517 0014 01A8     		add	r0, sp, #4
 7518 0016 FFF7FEFF 		bl	find_volume
 7519              	.LVL1106:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 		djo.obj.fs = fs;
 7520              		.loc 1 4732 0
 7521 001a 0446     		mov	r4, r0
 7522 001c 10B1     		cbz	r0, .L701
 7523              	.LVL1107:
 7524              	.L691:
4811:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7525              		.loc 1 4811 0
 7526 001e 2046     		mov	r0, r4
 7527 0020 23B0     		add	sp, sp, #140
 7528              	.LCFI114:
 7529              		.cfi_remember_state
 7530              		.cfi_def_cfa_offset 12
 7531              		@ sp needed
 7532 0022 30BD     		pop	{r4, r5, pc}
 7533              	.LVL1108:
 7534              	.L701:
 7535              	.LCFI115:
 7536              		.cfi_restore_state
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_NAMBUF(fs);
 7537              		.loc 1 4733 0
ARM GAS  /tmp/cc2OGbx6.s 			page 256


 7538 0024 099B     		ldr	r3, [sp, #36]
 7539 0026 1693     		str	r3, [sp, #88]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7540              		.loc 1 4735 0
 7541 0028 0199     		ldr	r1, [sp, #4]
 7542 002a 16A8     		add	r0, sp, #88
 7543              	.LVL1109:
 7544 002c FFF7FEFF 		bl	follow_path
 7545              	.LVL1110:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7546              		.loc 1 4736 0
 7547 0030 0446     		mov	r4, r0
 7548 0032 20B9     		cbnz	r0, .L692
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7549              		.loc 1 4736 0 is_stmt 0 discriminator 1
 7550 0034 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 7551 0038 13F0A00F 		tst	r3, #160
 7552 003c 1ED1     		bne	.L697
 7553              	.L692:
 7554              	.LVL1111:
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = chk_lock(&djo, 2);
 7555              		.loc 1 4738 0 is_stmt 1
 7556 003e 24B9     		cbnz	r4, .L693
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7557              		.loc 1 4739 0
 7558 0040 0221     		movs	r1, #2
 7559 0042 16A8     		add	r0, sp, #88
 7560 0044 FFF7FEFF 		bl	chk_lock
 7561              	.LVL1112:
 7562 0048 0446     		mov	r4, r0
 7563              	.LVL1113:
 7564              	.L693:
4742:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_EXFAT
 7565              		.loc 1 4742 0
 7566 004a 002C     		cmp	r4, #0
 7567 004c E7D1     		bne	.L691
4769:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7568              		.loc 1 4769 0
 7569 004e 1522     		movs	r2, #21
 7570 0050 1E99     		ldr	r1, [sp, #120]
 7571 0052 0B31     		adds	r1, r1, #11
 7572 0054 03A8     		add	r0, sp, #12
 7573 0056 FFF7FEFF 		bl	mem_cpy
 7574              	.LVL1114:
4770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7575              		.loc 1 4770 0
 7576 005a 3022     		movs	r2, #48
 7577 005c 16A9     		add	r1, sp, #88
 7578 005e 0AA8     		add	r0, sp, #40
 7579 0060 FFF7FEFF 		bl	mem_cpy
 7580              	.LVL1115:
4771:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7581              		.loc 1 4771 0
 7582 0064 0099     		ldr	r1, [sp]
 7583 0066 0AA8     		add	r0, sp, #40
 7584 0068 FFF7FEFF 		bl	follow_path
 7585              	.LVL1116:
ARM GAS  /tmp/cc2OGbx6.s 			page 257


4772:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7586              		.loc 1 4772 0
 7587 006c 0446     		mov	r4, r0
 7588 006e 68B9     		cbnz	r0, .L694
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7589              		.loc 1 4773 0
 7590 0070 0C9A     		ldr	r2, [sp, #48]
 7591 0072 189B     		ldr	r3, [sp, #96]
 7592 0074 9A42     		cmp	r2, r3
 7593 0076 03D0     		beq	.L702
 7594 0078 0824     		movs	r4, #8
 7595 007a 09E0     		b	.L695
 7596              	.L697:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK != 0
 7597              		.loc 1 4736 0
 7598 007c 0624     		movs	r4, #6
 7599 007e E4E7     		b	.L693
 7600              	.L702:
4773:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7601              		.loc 1 4773 0 discriminator 1
 7602 0080 0F9A     		ldr	r2, [sp, #60]
 7603 0082 1B9B     		ldr	r3, [sp, #108]
 7604 0084 9A42     		cmp	r2, r3
 7605 0086 10D0     		beq	.L696
 7606 0088 0824     		movs	r4, #8
 7607 008a 01E0     		b	.L695
 7608              	.L694:
4775:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7609              		.loc 1 4775 0
 7610 008c 0428     		cmp	r0, #4
 7611 008e 0CD0     		beq	.L696
 7612              	.LVL1117:
 7613              	.L695:
4799:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7614              		.loc 1 4799 0
 7615 0090 002C     		cmp	r4, #0
 7616 0092 C4D1     		bne	.L691
4800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
 7617              		.loc 1 4800 0
 7618 0094 16A8     		add	r0, sp, #88
 7619 0096 FFF7FEFF 		bl	dir_remove
 7620              	.LVL1118:
4801:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_fs(fs);
 7621              		.loc 1 4801 0
 7622 009a 0446     		mov	r4, r0
 7623 009c 0028     		cmp	r0, #0
 7624 009e BED1     		bne	.L691
4802:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7625              		.loc 1 4802 0
 7626 00a0 0998     		ldr	r0, [sp, #36]
 7627              	.LVL1119:
 7628 00a2 FFF7FEFF 		bl	sync_fs
 7629              	.LVL1120:
 7630 00a6 0446     		mov	r4, r0
 7631              	.LVL1121:
 7632 00a8 B9E7     		b	.L691
 7633              	.LVL1122:
ARM GAS  /tmp/cc2OGbx6.s 			page 258


 7634              	.L696:
4776:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7635              		.loc 1 4776 0
 7636 00aa 0AA8     		add	r0, sp, #40
 7637              	.LVL1123:
 7638 00ac FFF7FEFF 		bl	dir_register
 7639              	.LVL1124:
4777:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
 7640              		.loc 1 4777 0
 7641 00b0 0446     		mov	r4, r0
 7642 00b2 0028     		cmp	r0, #0
 7643 00b4 ECD1     		bne	.L695
4778:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7644              		.loc 1 4778 0
 7645 00b6 129D     		ldr	r5, [sp, #72]
 7646              	.LVL1125:
4779:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7647              		.loc 1 4779 0
 7648 00b8 1322     		movs	r2, #19
 7649 00ba 0DF10E01 		add	r1, sp, #14
 7650 00be 05F10D00 		add	r0, r5, #13
 7651              	.LVL1126:
 7652 00c2 FFF7FEFF 		bl	mem_cpy
 7653              	.LVL1127:
4780:Middlewares/Third_Party/FatFs/src/ff.c **** 						fs->wflag = 1;
 7654              		.loc 1 4780 0
 7655 00c6 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 7656 00ca 43F02003 		orr	r3, r3, #32
 7657 00ce EB72     		strb	r3, [r5, #11]
4781:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 7658              		.loc 1 4781 0
 7659 00d0 099B     		ldr	r3, [sp, #36]
 7660 00d2 0122     		movs	r2, #1
 7661 00d4 DA70     		strb	r2, [r3, #3]
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7662              		.loc 1 4782 0
 7663 00d6 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7664 00d8 13F0100F 		tst	r3, #16
 7665 00dc D8D0     		beq	.L695
4782:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(fs, ld_clust(fs, dir));
 7666              		.loc 1 4782 0 is_stmt 0 discriminator 1
 7667 00de 189A     		ldr	r2, [sp, #96]
 7668 00e0 0C9B     		ldr	r3, [sp, #48]
 7669 00e2 9A42     		cmp	r2, r3
 7670 00e4 D4D0     		beq	.L695
4783:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7671              		.loc 1 4783 0 is_stmt 1
 7672 00e6 099C     		ldr	r4, [sp, #36]
 7673 00e8 2946     		mov	r1, r5
 7674 00ea 2046     		mov	r0, r4
 7675 00ec FFF7FEFF 		bl	ld_clust
 7676              	.LVL1128:
 7677 00f0 0146     		mov	r1, r0
 7678 00f2 2046     		mov	r0, r4
 7679 00f4 FFF7FEFF 		bl	clust2sect
 7680              	.LVL1129:
4784:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
ARM GAS  /tmp/cc2OGbx6.s 			page 259


 7681              		.loc 1 4784 0
 7682 00f8 0146     		mov	r1, r0
 7683 00fa A0B1     		cbz	r0, .L699
4788:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 7684              		.loc 1 4788 0
 7685 00fc 2046     		mov	r0, r4
 7686              	.LVL1130:
 7687 00fe FFF7FEFF 		bl	move_window
 7688              	.LVL1131:
4789:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7689              		.loc 1 4789 0
 7690 0102 099B     		ldr	r3, [sp, #36]
 7691 0104 03F15001 		add	r1, r3, #80
 7692              	.LVL1132:
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7693              		.loc 1 4790 0
 7694 0108 0446     		mov	r4, r0
 7695 010a 0028     		cmp	r0, #0
 7696 010c C0D1     		bne	.L695
4790:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7697              		.loc 1 4790 0 is_stmt 0 discriminator 1
 7698 010e 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 7699 0112 2E2A     		cmp	r2, #46
 7700 0114 BCD1     		bne	.L695
4791:Middlewares/Third_Party/FatFs/src/ff.c **** 									fs->wflag = 1;
 7701              		.loc 1 4791 0 is_stmt 1
 7702 0116 0C9A     		ldr	r2, [sp, #48]
 7703 0118 1846     		mov	r0, r3
 7704              	.LVL1133:
 7705 011a FFF7FEFF 		bl	st_clust
 7706              	.LVL1134:
4792:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7707              		.loc 1 4792 0
 7708 011e 099B     		ldr	r3, [sp, #36]
 7709 0120 0122     		movs	r2, #1
 7710 0122 DA70     		strb	r2, [r3, #3]
 7711 0124 B4E7     		b	.L695
 7712              	.LVL1135:
 7713              	.L699:
4785:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7714              		.loc 1 4785 0
 7715 0126 0224     		movs	r4, #2
 7716 0128 79E7     		b	.L691
 7717              		.cfi_endproc
 7718              	.LFE194:
 7720              		.section	.text.f_mkfs,"ax",%progbits
 7721              		.align	1
 7722              		.global	f_mkfs
 7723              		.syntax unified
 7724              		.thumb
 7725              		.thumb_func
 7726              		.fpu fpv5-d16
 7728              	f_mkfs:
 7729              	.LFB195:
5308:Middlewares/Third_Party/FatFs/src/ff.c **** 	const UINT n_fats = 1;		/* Number of FATs for FAT12/16/32 volume (1 or 2) */
 7730              		.loc 1 5308 0
 7731              		.cfi_startproc
ARM GAS  /tmp/cc2OGbx6.s 			page 260


 7732              		@ args = 4, pretend = 0, frame = 40
 7733              		@ frame_needed = 0, uses_anonymous_args = 0
 7734              	.LVL1136:
 7735 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7736              	.LCFI116:
 7737              		.cfi_def_cfa_offset 36
 7738              		.cfi_offset 4, -36
 7739              		.cfi_offset 5, -32
 7740              		.cfi_offset 6, -28
 7741              		.cfi_offset 7, -24
 7742              		.cfi_offset 8, -20
 7743              		.cfi_offset 9, -16
 7744              		.cfi_offset 10, -12
 7745              		.cfi_offset 11, -8
 7746              		.cfi_offset 14, -4
 7747 0004 8BB0     		sub	sp, sp, #44
 7748              	.LCFI117:
 7749              		.cfi_def_cfa_offset 80
 7750 0006 0AAC     		add	r4, sp, #40
 7751 0008 44F80C0D 		str	r0, [r4, #-12]!
 7752 000c 8846     		mov	r8, r1
 7753 000e 1546     		mov	r5, r2
 7754 0010 1E46     		mov	r6, r3
 7755              	.LVL1137:
5327:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7756              		.loc 1 5327 0
 7757 0012 2046     		mov	r0, r4
 7758              	.LVL1138:
 7759 0014 FFF7FEFF 		bl	get_ldnumber
 7760              	.LVL1139:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 7761              		.loc 1 5328 0
 7762 0018 0028     		cmp	r0, #0
 7763 001a C0F2DF82 		blt	.L747
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7764              		.loc 1 5329 0
 7765 001e 924B     		ldr	r3, .L794
 7766 0020 53F82030 		ldr	r3, [r3, r0, lsl #2]
 7767 0024 0BB1     		cbz	r3, .L705
5329:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7768              		.loc 1 5329 0 is_stmt 0 discriminator 1
 7769 0026 0022     		movs	r2, #0
 7770 0028 1A70     		strb	r2, [r3]
 7771              	.L705:
5330:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:create as new, 1-4:get from partition table) */
 7772              		.loc 1 5330 0 is_stmt 1
 7773 002a C4B2     		uxtb	r4, r0
 7774              	.LVL1140:
5334:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7775              		.loc 1 5334 0
 7776 002c 2046     		mov	r0, r4
 7777              	.LVL1141:
 7778 002e FFF7FEFF 		bl	disk_initialize
 7779              	.LVL1142:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7780              		.loc 1 5335 0
 7781 0032 10F0010F 		tst	r0, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 261


 7782 0036 40F0D382 		bne	.L748
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 7783              		.loc 1 5336 0
 7784 003a 10F0040F 		tst	r0, #4
 7785 003e 40F0D182 		bne	.L749
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7786              		.loc 1 5337 0
 7787 0042 09AA     		add	r2, sp, #36
 7788 0044 0321     		movs	r1, #3
 7789 0046 2046     		mov	r0, r4
 7790              	.LVL1143:
 7791 0048 FFF7FEFF 		bl	disk_ioctl
 7792              	.LVL1144:
 7793 004c 38B9     		cbnz	r0, .L706
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7794              		.loc 1 5337 0 is_stmt 0 discriminator 2
 7795 004e 099B     		ldr	r3, [sp, #36]
 7796 0050 2BB1     		cbz	r3, .L706
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7797              		.loc 1 5337 0 discriminator 4
 7798 0052 B3F5004F 		cmp	r3, #32768
 7799 0056 02D8     		bhi	.L706
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7800              		.loc 1 5337 0 discriminator 6
 7801 0058 5A1E     		subs	r2, r3, #1
 7802 005a 1342     		tst	r3, r2
 7803 005c 01D0     		beq	.L707
 7804              	.L706:
5337:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get sector size of the medium if variable sector size cfg. */
 7805              		.loc 1 5337 0 discriminator 7
 7806 005e 0123     		movs	r3, #1
 7807 0060 0993     		str	r3, [sp, #36]
 7808              	.L707:
 7809              	.LVL1145:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7810              		.loc 1 5344 0 is_stmt 1
 7811 0062 1DB1     		cbz	r5, .L708
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7812              		.loc 1 5344 0 is_stmt 0 discriminator 1
 7813 0064 B5F5007F 		cmp	r5, #512
 7814 0068 C0F0C082 		bcc	.L750
 7815              	.L708:
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7816              		.loc 1 5344 0 discriminator 4
 7817 006c B5F1807F 		cmp	r5, #16777216
 7818 0070 00F2BE82 		bhi	.L751
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 7819              		.loc 1 5344 0 discriminator 6
 7820 0074 6B1E     		subs	r3, r5, #1
 7821 0076 2B42     		tst	r3, r5
 7822 0078 40F0BC82 		bne	.L752
5345:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7823              		.loc 1 5345 0 is_stmt 1
 7824 007c 6D0A     		lsrs	r5, r5, #9
 7825              	.LVL1146:
5349:Middlewares/Third_Party/FatFs/src/ff.c **** 	szb_buf = sz_buf * ss;	/* Size of working buffer (byte) */
 7826              		.loc 1 5349 0
ARM GAS  /tmp/cc2OGbx6.s 			page 262


 7827 007e 149B     		ldr	r3, [sp, #80]
 7828 0080 4FEA532A 		lsr	r10, r3, #9
 7829              	.LVL1147:
5350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!szb_buf) return FR_MKFS_ABORTED;
 7830              		.loc 1 5350 0
 7831 0084 794F     		ldr	r7, .L794+4
 7832 0086 1F40     		ands	r7, r7, r3
 7833              	.LVL1148:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7834              		.loc 1 5351 0
 7835 0088 002F     		cmp	r7, #0
 7836 008a 00F0B582 		beq	.L753
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 7837              		.loc 1 5364 0
 7838 008e 08AA     		add	r2, sp, #32
 7839 0090 0121     		movs	r1, #1
 7840 0092 2046     		mov	r0, r4
 7841 0094 FFF7FEFF 		bl	disk_ioctl
 7842              	.LVL1149:
 7843 0098 0028     		cmp	r0, #0
 7844 009a 40F0AF82 		bne	.L754
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 7845              		.loc 1 5365 0
 7846 009e 18F00803 		ands	r3, r8, #8
 7847 00a2 0093     		str	r3, [sp]
 7848 00a4 70D0     		beq	.L755
 7849 00a6 4FF00009 		mov	r9, #0
 7850              	.L709:
 7851              	.LVL1150:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 7852              		.loc 1 5366 0 discriminator 4
 7853 00aa 089B     		ldr	r3, [sp, #32]
 7854 00ac 4B45     		cmp	r3, r9
 7855 00ae C0F0A782 		bcc	.L756
5367:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7856              		.loc 1 5367 0
 7857 00b2 A3EB0903 		sub	r3, r3, r9
 7858 00b6 0893     		str	r3, [sp, #32]
5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7859              		.loc 1 5369 0
 7860 00b8 7F2B     		cmp	r3, #127
 7861 00ba 40F2A382 		bls	.L757
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 7862              		.loc 1 5378 0
 7863 00be 802D     		cmp	r5, #128
 7864 00c0 00F2A282 		bhi	.L758
5379:Middlewares/Third_Party/FatFs/src/ff.c **** 			if ((opt & FM_ANY) == FM_FAT32 || !(opt & FM_FAT)) {	/* FAT32 only or no-FAT? */
 7865              		.loc 1 5379 0
 7866 00c4 18F00200 		ands	r0, r8, #2
 7867 00c8 06D0     		beq	.L710
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7868              		.loc 1 5380 0
 7869 00ca 08F00702 		and	r2, r8, #7
 7870 00ce 022A     		cmp	r2, #2
 7871 00d0 5DD0     		beq	.L759
5380:Middlewares/Third_Party/FatFs/src/ff.c **** 				fmt = FS_FAT32; break;
 7872              		.loc 1 5380 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc2OGbx6.s 			page 263


 7873 00d2 18F0010F 		tst	r8, #1
 7874 00d6 61D0     		beq	.L760
 7875              	.L710:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 7876              		.loc 1 5384 0 is_stmt 1
 7877 00d8 18F0010F 		tst	r8, #1
 7878 00dc 00F09682 		beq	.L761
5385:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (0);
 7879              		.loc 1 5385 0
 7880 00e0 4FF0020B 		mov	fp, #2
 7881 00e4 0194     		str	r4, [sp, #4]
 7882 00e6 CDF808A0 		str	r10, [sp, #8]
 7883 00ea 0397     		str	r7, [sp, #12]
 7884              	.LVL1151:
 7885              	.L712:
5555:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!pau) {	/* au auto-selection */
 7886              		.loc 1 5555 0
 7887 00ec BBF1030F 		cmp	fp, #3
 7888 00f0 5FD0     		beq	.L730
5566:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x1000;	/* Volume size in unit of 4KS */
 7889              		.loc 1 5566 0
 7890 00f2 002D     		cmp	r5, #0
 7891 00f4 00F08180 		beq	.L786
 7892 00f8 A846     		mov	r8, r5
 7893              	.LVL1152:
 7894              	.L718:
5570:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT12) {
 7895              		.loc 1 5570 0
 7896 00fa B3FBF8F2 		udiv	r2, r3, r8
 7897              	.LVL1153:
5571:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = n_clst * 2 + 4;		/* FAT size [byte] */
 7898              		.loc 1 5571 0
 7899 00fe 40F6F571 		movw	r1, #4085
 7900 0102 8A42     		cmp	r2, r1
 7901 0104 40F28A80 		bls	.L721
5572:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 7902              		.loc 1 5572 0
 7903 0108 0232     		adds	r2, r2, #2
 7904              	.LVL1154:
 7905 010a 5200     		lsls	r2, r2, #1
 7906              	.LVL1155:
 7907              	.L722:
5577:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 1;						/* Number of reserved sectors */
 7908              		.loc 1 5577 0
 7909 010c 02F2FF12 		addw	r2, r2, #511
 7910              	.LVL1156:
 7911 0110 520A     		lsrs	r2, r2, #9
 7912              	.LVL1157:
5579:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7913              		.loc 1 5579 0
 7914 0112 4FF0200E 		mov	lr, #32
5578:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = (DWORD)n_rootdir * SZDIRE / ss;	/* Rootdir size [sector] */
 7915              		.loc 1 5578 0
 7916 0116 4FF0010C 		mov	ip, #1
 7917              	.LVL1158:
 7918              	.L717:
5581:Middlewares/Third_Party/FatFs/src/ff.c **** 			b_data = b_fat + sz_fat * n_fats + sz_dir;	/* Data base */
ARM GAS  /tmp/cc2OGbx6.s 			page 264


 7919              		.loc 1 5581 0
 7920 011a 0CEB090A 		add	r10, ip, r9
 7921              	.LVL1159:
5582:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7922              		.loc 1 5582 0
 7923 011e 02EB0A01 		add	r1, r2, r10
 7924 0122 7144     		add	r1, r1, lr
 7925              	.LVL1160:
5585:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {		/* FAT32: Move FAT base */
 7926              		.loc 1 5585 0
 7927 0124 099F     		ldr	r7, [sp, #36]
 7928 0126 7C18     		adds	r4, r7, r1
 7929 0128 013C     		subs	r4, r4, #1
 7930 012a 7F42     		negs	r7, r7
 7931 012c 3C40     		ands	r4, r4, r7
 7932 012e 641A     		subs	r4, r4, r1
 7933              	.LVL1161:
5586:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv += n; b_fat += n;
 7934              		.loc 1 5586 0
 7935 0130 BBF1030F 		cmp	fp, #3
 7936 0134 7AD0     		beq	.L787
5589:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7937              		.loc 1 5589 0
 7938 0136 2244     		add	r2, r2, r4
 7939              	.LVL1162:
 7940              	.L724:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 7941              		.loc 1 5593 0
 7942 0138 01EB0811 		add	r1, r1, r8, lsl #4
 7943              	.LVL1163:
 7944 013c A1EB0901 		sub	r1, r1, r9
 7945 0140 8B42     		cmp	r3, r1
 7946 0142 C0F06782 		bcc	.L765
5594:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 7947              		.loc 1 5594 0
 7948 0146 A3EB0C01 		sub	r1, r3, ip
 7949 014a 891A     		subs	r1, r1, r2
 7950 014c A1EB0E01 		sub	r1, r1, lr
 7951 0150 B1FBF8F1 		udiv	r1, r1, r8
 7952              	.LVL1164:
5595:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16) {	/* Too few clusters for FAT32 */
 7953              		.loc 1 5595 0
 7954 0154 BBF1030F 		cmp	fp, #3
 7955 0158 6BD0     		beq	.L788
 7956              	.LVL1165:
 7957              	.L725:
5601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst > MAX_FAT16) {	/* Too many clusters for FAT16 */
 7958              		.loc 1 5601 0
 7959 015a BBF1020F 		cmp	fp, #2
 7960 015e 40F08F80 		bne	.L727
5602:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (pau * 2) <= 64) {
 7961              		.loc 1 5602 0
 7962 0162 4FF6F574 		movw	r4, #65525
 7963 0166 A142     		cmp	r1, r4
 7964 0168 70D9     		bls	.L728
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7965              		.loc 1 5603 0
ARM GAS  /tmp/cc2OGbx6.s 			page 265


 7966 016a 1DB9     		cbnz	r5, .L729
5603:Middlewares/Third_Party/FatFs/src/ff.c **** 						au = pau * 2; continue;		/* Adjust cluster size and retry */
 7967              		.loc 1 5603 0 is_stmt 0 discriminator 1
 7968 016c 4FEA4802 		lsl	r2, r8, #1
 7969              	.LVL1166:
 7970 0170 402A     		cmp	r2, #64
 7971 0172 1AD9     		bls	.L767
 7972              	.L729:
5606:Middlewares/Third_Party/FatFs/src/ff.c **** 						fmt = FS_FAT32; continue;	/* Switch type to FAT32 and retry */
 7973              		.loc 1 5606 0 is_stmt 1
 7974 0174 D8B9     		cbnz	r0, .L768
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7975              		.loc 1 5609 0
 7976 0176 002D     		cmp	r5, #0
 7977 0178 40F05082 		bne	.L769
5609:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 7978              		.loc 1 5609 0 is_stmt 0 discriminator 1
 7979 017c 4FEA4805 		lsl	r5, r8, #1
 7980              	.LVL1167:
 7981 0180 802D     		cmp	r5, #128
 7982 0182 B3D9     		bls	.L712
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7983              		.loc 1 5610 0 is_stmt 1
 7984 0184 0E20     		movs	r0, #14
 7985 0186 2EE2     		b	.L704
 7986              	.LVL1168:
 7987              	.L755:
5365:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < b_vol) return FR_MKFS_ABORTED;
 7988              		.loc 1 5365 0
 7989 0188 4FF03F09 		mov	r9, #63
 7990 018c 8DE7     		b	.L709
 7991              	.LVL1169:
 7992              	.L759:
5381:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7993              		.loc 1 5381 0
 7994 018e 4FF0030B 		mov	fp, #3
 7995 0192 0194     		str	r4, [sp, #4]
 7996 0194 CDF808A0 		str	r10, [sp, #8]
 7997 0198 0397     		str	r7, [sp, #12]
 7998 019a A7E7     		b	.L712
 7999              	.L760:
 8000 019c 4FF0030B 		mov	fp, #3
 8001 01a0 0194     		str	r4, [sp, #4]
 8002 01a2 CDF808A0 		str	r10, [sp, #8]
 8003 01a6 0397     		str	r7, [sp, #12]
 8004 01a8 A0E7     		b	.L712
 8005              	.LVL1170:
 8006              	.L767:
5604:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8007              		.loc 1 5604 0
 8008 01aa 1546     		mov	r5, r2
 8009              	.LVL1171:
 8010 01ac 9EE7     		b	.L712
 8011              	.LVL1172:
 8012              	.L768:
5607:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 8013              		.loc 1 5607 0
ARM GAS  /tmp/cc2OGbx6.s 			page 266


 8014 01ae 4FF0030B 		mov	fp, #3
 8015              	.LVL1173:
 8016              	.L730:
5556:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = sz_vol / 0x20000;	/* Volume size in unit of 128KS */
 8017              		.loc 1 5556 0
 8018 01b2 95B1     		cbz	r5, .L789
 8019 01b4 A846     		mov	r8, r5
 8020              	.L714:
 8021              	.LVL1174:
5560:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_fat = (n_clst * 4 + 8 + ss - 1) / ss;	/* FAT size [sector] */
 8022              		.loc 1 5560 0
 8023 01b6 B3FBF8F1 		udiv	r1, r3, r8
 8024              	.LVL1175:
5561:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_rsv = 32;	/* Number of reserved sectors */
 8025              		.loc 1 5561 0
 8026 01ba 8A1C     		adds	r2, r1, #2
 8027 01bc 9200     		lsls	r2, r2, #2
 8028 01be 02F2FF12 		addw	r2, r2, #511
 8029 01c2 520A     		lsrs	r2, r2, #9
 8030              	.LVL1176:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8031              		.loc 1 5564 0
 8032 01c4 2A4C     		ldr	r4, .L794+8
 8033 01c6 0C44     		add	r4, r4, r1
 8034 01c8 2A49     		ldr	r1, .L794+12
 8035              	.LVL1177:
 8036 01ca 8C42     		cmp	r4, r1
 8037 01cc 00F22082 		bhi	.L763
5563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (n_clst <= MAX_FAT16 || n_clst > MAX_FAT32) return FR_MKFS_ABORTED;
 8038              		.loc 1 5563 0
 8039 01d0 4FF0000E 		mov	lr, #0
5562:Middlewares/Third_Party/FatFs/src/ff.c **** 				sz_dir = 0;		/* No static directory */
 8040              		.loc 1 5562 0
 8041 01d4 4FF0200C 		mov	ip, #32
 8042 01d8 9FE7     		b	.L717
 8043              	.LVL1178:
 8044              	.L789:
5557:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst32[i] && cst32[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8045              		.loc 1 5557 0
 8046 01da 5C0C     		lsrs	r4, r3, #17
 8047              	.LVL1179:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8048              		.loc 1 5558 0
 8049 01dc 0021     		movs	r1, #0
 8050 01de 4FF00108 		mov	r8, #1
 8051 01e2 02E0     		b	.L715
 8052              	.LVL1180:
 8053              	.L716:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8054              		.loc 1 5558 0 is_stmt 0 discriminator 4
 8055 01e4 0131     		adds	r1, r1, #1
 8056              	.LVL1181:
 8057 01e6 4FEA4808 		lsl	r8, r8, #1
 8058              	.LVL1182:
 8059              	.L715:
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8060              		.loc 1 5558 0 discriminator 1
ARM GAS  /tmp/cc2OGbx6.s 			page 267


 8061 01ea 234A     		ldr	r2, .L794+16
 8062 01ec 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8063 01f0 002A     		cmp	r2, #0
 8064 01f2 E0D0     		beq	.L714
5558:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8065              		.loc 1 5558 0 discriminator 3
 8066 01f4 A242     		cmp	r2, r4
 8067 01f6 F5D9     		bls	.L716
 8068 01f8 DDE7     		b	.L714
 8069              	.LVL1183:
 8070              	.L786:
5567:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (i = 0, pau = 1; cst[i] && cst[i] <= n; i++, pau <<= 1) ;	/* Get from table */
 8071              		.loc 1 5567 0 is_stmt 1
 8072 01fa 1C0B     		lsrs	r4, r3, #12
 8073              	.LVL1184:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8074              		.loc 1 5568 0
 8075 01fc 0021     		movs	r1, #0
 8076 01fe 4FF00108 		mov	r8, #1
 8077 0202 02E0     		b	.L719
 8078              	.LVL1185:
 8079              	.L720:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8080              		.loc 1 5568 0 is_stmt 0 discriminator 4
 8081 0204 0131     		adds	r1, r1, #1
 8082              	.LVL1186:
 8083 0206 4FEA4808 		lsl	r8, r8, #1
 8084              	.LVL1187:
 8085              	.L719:
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8086              		.loc 1 5568 0 discriminator 1
 8087 020a 1C4A     		ldr	r2, .L794+20
 8088 020c 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 8089 0210 002A     		cmp	r2, #0
 8090 0212 3FF472AF 		beq	.L718
5568:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8091              		.loc 1 5568 0 discriminator 3
 8092 0216 A242     		cmp	r2, r4
 8093 0218 F4D9     		bls	.L720
 8094 021a 6EE7     		b	.L718
 8095              	.LVL1188:
 8096              	.L721:
5575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8097              		.loc 1 5575 0 is_stmt 1
 8098 021c 02EB4202 		add	r2, r2, r2, lsl #1
 8099              	.LVL1189:
 8100 0220 0132     		adds	r2, r2, #1
 8101 0222 5208     		lsrs	r2, r2, #1
 8102 0224 0332     		adds	r2, r2, #3
 8103              	.LVL1190:
5574:Middlewares/Third_Party/FatFs/src/ff.c **** 					n = (n_clst * 3 + 1) / 2 + 3;	/* FAT size [byte] */
 8104              		.loc 1 5574 0
 8105 0226 4FF0010B 		mov	fp, #1
 8106 022a 6FE7     		b	.L722
 8107              	.LVL1191:
 8108              	.L787:
5587:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* FAT12/16: Expand FAT size */
ARM GAS  /tmp/cc2OGbx6.s 			page 268


 8109              		.loc 1 5587 0
 8110 022c A444     		add	ip, ip, r4
 8111              	.LVL1192:
 8112 022e A244     		add	r10, r10, r4
 8113              	.LVL1193:
 8114 0230 82E7     		b	.L724
 8115              	.LVL1194:
 8116              	.L788:
5596:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau / 2) != 0) continue;	/* Adjust cluster size and retry */
 8117              		.loc 1 5596 0
 8118 0232 4FF6F574 		movw	r4, #65525
 8119              	.LVL1195:
 8120 0236 A142     		cmp	r1, r4
 8121 0238 8FD8     		bhi	.L725
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8122              		.loc 1 5597 0
 8123 023a 002D     		cmp	r5, #0
 8124 023c 40F0EC81 		bne	.L766
 8125              	.LVL1196:
5597:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8126              		.loc 1 5597 0 is_stmt 0 discriminator 1
 8127 0240 5FEA5805 		lsrs	r5, r8, #1
 8128              	.LVL1197:
 8129 0244 7FF452AF 		bne	.L712
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8130              		.loc 1 5598 0 is_stmt 1
 8131 0248 0E20     		movs	r0, #14
 8132 024a CCE1     		b	.L704
 8133              	.L728:
5612:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!au && (au = pau * 2) <= 128) continue;	/* Adjust cluster size and retry */
 8134              		.loc 1 5612 0
 8135 024c 40F6F574 		movw	r4, #4085
 8136 0250 A142     		cmp	r1, r4
 8137 0252 15D8     		bhi	.L727
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8138              		.loc 1 5613 0
 8139 0254 002D     		cmp	r5, #0
 8140 0256 40F0E381 		bne	.L770
5613:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_MKFS_ABORTED;
 8141              		.loc 1 5613 0 is_stmt 0 discriminator 1
 8142 025a 4FEA4805 		lsl	r5, r8, #1
 8143              	.LVL1198:
 8144 025e 802D     		cmp	r5, #128
 8145 0260 7FF644AF 		bls	.L712
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8146              		.loc 1 5614 0 is_stmt 1
 8147 0264 0E20     		movs	r0, #14
 8148 0266 BEE1     		b	.L704
 8149              	.L795:
 8150              		.align	2
 8151              	.L794:
 8152 0268 00000000 		.word	.LANCHOR2
 8153 026c 00FEFFFF 		.word	-512
 8154 0270 0A00FFFF 		.word	-65526
 8155 0274 FFFFFE0F 		.word	268369919
 8156 0278 00000000 		.word	.LANCHOR4
 8157 027c 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/cc2OGbx6.s 			page 269


 8158              	.L727:
 8159 0280 CDF818E0 		str	lr, [sp, #24]
 8160 0284 6546     		mov	r5, ip
 8161              	.LVL1199:
 8162 0286 0592     		str	r2, [sp, #20]
 8163 0288 CDF810A0 		str	r10, [sp, #16]
 8164 028c 019C     		ldr	r4, [sp, #4]
 8165 028e DDF808A0 		ldr	r10, [sp, #8]
 8166              	.LVL1200:
 8167 0292 039F     		ldr	r7, [sp, #12]
 8168 0294 0B46     		mov	r3, r1
 8169 0296 0291     		str	r1, [sp, #8]
 8170              	.LVL1201:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8171              		.loc 1 5617 0
 8172 0298 40F6F572 		movw	r2, #4085
 8173              	.LVL1202:
 8174 029c BBF1010F 		cmp	fp, #1
 8175 02a0 14BF     		ite	ne
 8176 02a2 0023     		movne	r3, #0
 8177 02a4 0123     		moveq	r3, #1
 8178 02a6 9142     		cmp	r1, r2
 8179 02a8 98BF     		it	ls
 8180 02aa 0023     		movls	r3, #0
 8181 02ac 002B     		cmp	r3, #0
 8182 02ae 40F0B981 		bne	.L771
 8183              	.LVL1203:
5628:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(buf + BS_JmpBoot, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code (x86), OEM name */
 8184              		.loc 1 5628 0
 8185 02b2 4FF40072 		mov	r2, #512
 8186 02b6 0021     		movs	r1, #0
 8187              	.LVL1204:
 8188 02b8 3046     		mov	r0, r6
 8189 02ba FFF7FEFF 		bl	mem_set
 8190              	.LVL1205:
5629:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_BytsPerSec, ss);				/* Sector size [byte] */
 8191              		.loc 1 5629 0
 8192 02be 0B22     		movs	r2, #11
 8193 02c0 DA49     		ldr	r1, .L796
 8194 02c2 3046     		mov	r0, r6
 8195 02c4 FFF7FEFF 		bl	mem_cpy
 8196              	.LVL1206:
5630:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_SecPerClus] = (BYTE)pau;				/* Cluster size [sector] */
 8197              		.loc 1 5630 0
 8198 02c8 4FF40071 		mov	r1, #512
 8199 02cc 06F10B00 		add	r0, r6, #11
 8200 02d0 FFF7FEFF 		bl	st_word
 8201              	.LVL1207:
5631:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RsvdSecCnt, (WORD)sz_rsv);	/* Size of reserved area */
 8202              		.loc 1 5631 0
 8203 02d4 86F80D80 		strb	r8, [r6, #13]
5632:Middlewares/Third_Party/FatFs/src/ff.c **** 		buf[BPB_NumFATs] = (BYTE)n_fats;				/* Number of FATs */
 8204              		.loc 1 5632 0
 8205 02d8 A9B2     		uxth	r1, r5
 8206 02da 06F10E00 		add	r0, r6, #14
 8207 02de FFF7FEFF 		bl	st_word
 8208              	.LVL1208:
ARM GAS  /tmp/cc2OGbx6.s 			page 270


5633:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_RootEntCnt, (WORD)((fmt == FS_FAT32) ? 0 : n_rootdir));	/* Number of root direc
 8209              		.loc 1 5633 0
 8210 02e2 0123     		movs	r3, #1
 8211 02e4 3374     		strb	r3, [r6, #16]
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8212              		.loc 1 5634 0
 8213 02e6 06F11100 		add	r0, r6, #17
 8214 02ea BBF1030F 		cmp	fp, #3
 8215 02ee 00F0D880 		beq	.L772
 8216 02f2 4FF40071 		mov	r1, #512
 8217              	.L731:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8218              		.loc 1 5634 0 is_stmt 0 discriminator 4
 8219 02f6 FFF7FEFF 		bl	st_word
 8220              	.LVL1209:
5635:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_TotSec16, (WORD)sz_vol);	/* Volume size in 16-bit LBA */
 8221              		.loc 1 5635 0 is_stmt 1 discriminator 4
 8222 02fa 0899     		ldr	r1, [sp, #32]
 8223 02fc B1F5803F 		cmp	r1, #65536
 8224 0300 80F0D180 		bcs	.L732
5636:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8225              		.loc 1 5636 0
 8226 0304 89B2     		uxth	r1, r1
 8227 0306 06F11300 		add	r0, r6, #19
 8228 030a FFF7FEFF 		bl	st_word
 8229              	.LVL1210:
 8230              	.L733:
5640:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_SecPerTrk, 63);				/* Number of sectors per track (for int13) */
 8231              		.loc 1 5640 0
 8232 030e F823     		movs	r3, #248
 8233 0310 7375     		strb	r3, [r6, #21]
5641:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_word(buf + BPB_NumHeads, 255);				/* Number of heads (for int13) */
 8234              		.loc 1 5641 0
 8235 0312 3F21     		movs	r1, #63
 8236 0314 06F11800 		add	r0, r6, #24
 8237 0318 FFF7FEFF 		bl	st_word
 8238              	.LVL1211:
5642:Middlewares/Third_Party/FatFs/src/ff.c **** 		st_dword(buf + BPB_HiddSec, b_vol);				/* Volume offset in the physical drive [sector] */
 8239              		.loc 1 5642 0
 8240 031c FF21     		movs	r1, #255
 8241 031e 06F11A00 		add	r0, r6, #26
 8242 0322 FFF7FEFF 		bl	st_word
 8243              	.LVL1212:
5643:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT32) {
 8244              		.loc 1 5643 0
 8245 0326 4946     		mov	r1, r9
 8246 0328 06F11C00 		add	r0, r6, #28
 8247 032c FFF7FEFF 		bl	st_dword
 8248              	.LVL1213:
5644:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BS_VolID32, GET_FATTIME());	/* VSN */
 8249              		.loc 1 5644 0
 8250 0330 BBF1030F 		cmp	fp, #3
 8251 0334 40F0BC80 		bne	.L734
5645:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_FATSz32, sz_fat);		/* FAT size [sector] */
 8252              		.loc 1 5645 0
 8253 0338 FFF7FEFF 		bl	get_fattime
 8254              	.LVL1214:
ARM GAS  /tmp/cc2OGbx6.s 			page 271


 8255 033c 0146     		mov	r1, r0
 8256 033e 06F14300 		add	r0, r6, #67
 8257 0342 FFF7FEFF 		bl	st_dword
 8258              	.LVL1215:
5646:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + BPB_RootClus32, 2);			/* Root directory cluster # (2) */
 8259              		.loc 1 5646 0
 8260 0346 0599     		ldr	r1, [sp, #20]
 8261 0348 06F12400 		add	r0, r6, #36
 8262 034c FFF7FEFF 		bl	st_dword
 8263              	.LVL1216:
5647:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FSInfo32, 1);				/* Offset of FSINFO sector (VBR + 1) */
 8264              		.loc 1 5647 0
 8265 0350 0221     		movs	r1, #2
 8266 0352 06F12C00 		add	r0, r6, #44
 8267 0356 FFF7FEFF 		bl	st_dword
 8268              	.LVL1217:
5648:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_BkBootSec32, 6);			/* Offset of backup VBR (VBR + 6) */
 8269              		.loc 1 5648 0
 8270 035a 0121     		movs	r1, #1
 8271 035c 06F13000 		add	r0, r6, #48
 8272 0360 FFF7FEFF 		bl	st_word
 8273              	.LVL1218:
5649:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum32] = 0x80;					/* Drive number (for int13) */
 8274              		.loc 1 5649 0
 8275 0364 0621     		movs	r1, #6
 8276 0366 06F13200 		add	r0, r6, #50
 8277 036a FFF7FEFF 		bl	st_word
 8278              	.LVL1219:
5650:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig32] = 0x29;					/* Extended boot signature */
 8279              		.loc 1 5650 0
 8280 036e 8023     		movs	r3, #128
 8281 0370 86F84030 		strb	r3, [r6, #64]
5651:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8282              		.loc 1 5651 0
 8283 0374 2923     		movs	r3, #41
 8284 0376 86F84230 		strb	r3, [r6, #66]
5652:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8285              		.loc 1 5652 0
 8286 037a 1322     		movs	r2, #19
 8287 037c AC49     		ldr	r1, .L796+4
 8288 037e 06F14700 		add	r0, r6, #71
 8289 0382 FFF7FEFF 		bl	mem_cpy
 8290              	.LVL1220:
 8291              	.L735:
5660:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, buf, b_vol, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the VBR sector 
 8292              		.loc 1 5660 0
 8293 0386 06F5FF73 		add	r3, r6, #510
 8294 038a 0193     		str	r3, [sp, #4]
 8295              	.LVL1221:
 8296 038c 4AF65521 		movw	r1, #43605
 8297 0390 1846     		mov	r0, r3
 8298 0392 FFF7FEFF 		bl	st_word
 8299              	.LVL1222:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8300              		.loc 1 5661 0
 8301 0396 0123     		movs	r3, #1
 8302 0398 4A46     		mov	r2, r9
ARM GAS  /tmp/cc2OGbx6.s 			page 272


 8303 039a 3146     		mov	r1, r6
 8304 039c 2046     		mov	r0, r4
 8305 039e FFF7FEFF 		bl	disk_write
 8306              	.LVL1223:
 8307 03a2 0028     		cmp	r0, #0
 8308 03a4 40F04081 		bne	.L773
5664:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 6, 1);		/* Write backup VBR (VBR + 6) */
 8309              		.loc 1 5664 0
 8310 03a8 BBF1030F 		cmp	fp, #3
 8311 03ac 00F09A80 		beq	.L790
 8312              	.L736:
5677:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = b_fat;		/* FAT start sector */
 8313              		.loc 1 5677 0
 8314 03b0 3A46     		mov	r2, r7
 8315 03b2 0021     		movs	r1, #0
 8316 03b4 3046     		mov	r0, r6
 8317 03b6 FFF7FEFF 		bl	mem_set
 8318              	.LVL1224:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8319              		.loc 1 5679 0
 8320 03ba 0025     		movs	r5, #0
 8321              	.LVL1225:
 8322 03bc CDF80880 		str	r8, [sp, #8]
 8323              	.LVL1226:
 8324              	.L737:
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8325              		.loc 1 5679 0 is_stmt 0 discriminator 1
 8326 03c0 002D     		cmp	r5, #0
 8327 03c2 00F0C480 		beq	.L742
 8328 03c6 DDF80880 		ldr	r8, [sp, #8]
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8329              		.loc 1 5697 0 is_stmt 1
 8330 03ca BBF1030F 		cmp	fp, #3
 8331 03ce 00F0F880 		beq	.L791
 8332 03d2 069F     		ldr	r7, [sp, #24]
 8333 03d4 DDF81080 		ldr	r8, [sp, #16]
 8334              	.LVL1227:
 8335              	.L744:
5699:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8336              		.loc 1 5699 0
 8337 03d8 3D46     		mov	r5, r7
 8338 03da 5745     		cmp	r7, r10
 8339 03dc 28BF     		it	cs
 8340 03de 5546     		movcs	r5, r10
 8341              	.LVL1228:
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8342              		.loc 1 5700 0
 8343 03e0 2B46     		mov	r3, r5
 8344 03e2 4246     		mov	r2, r8
 8345 03e4 3146     		mov	r1, r6
 8346 03e6 2046     		mov	r0, r4
 8347 03e8 FFF7FEFF 		bl	disk_write
 8348              	.LVL1229:
 8349 03ec 0028     		cmp	r0, #0
 8350 03ee 40F02B81 		bne	.L776
5701:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (nsect);
 8351              		.loc 1 5701 0
ARM GAS  /tmp/cc2OGbx6.s 			page 273


 8352 03f2 A844     		add	r8, r8, r5
 8353              	.LVL1230:
5702:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8354              		.loc 1 5702 0
 8355 03f4 7F1B     		subs	r7, r7, r5
 8356              	.LVL1231:
 8357 03f6 EFD1     		bne	.L744
5709:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x0C;		/* FAT32X */
 8358              		.loc 1 5709 0
 8359 03f8 BBF1030F 		cmp	fp, #3
 8360 03fc 00F0E580 		beq	.L777
5712:Middlewares/Third_Party/FatFs/src/ff.c **** 				sys = 0x06;	/* FAT12/16 (>=64KS) */
 8361              		.loc 1 5712 0
 8362 0400 089B     		ldr	r3, [sp, #32]
 8363 0402 B3F5803F 		cmp	r3, #65536
 8364 0406 80F0E380 		bcs	.L778
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8365              		.loc 1 5715 0
 8366 040a BBF1020F 		cmp	fp, #2
 8367 040e 40F0E280 		bne	.L779
 8368 0412 4FF00408 		mov	r8, #4
 8369              	.LVL1232:
 8370              	.L745:
5727:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8371              		.loc 1 5727 0
 8372 0416 009B     		ldr	r3, [sp]
 8373 0418 CBBB     		cbnz	r3, .L746
5728:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);		/* MBR signature */
 8374              		.loc 1 5728 0
 8375 041a 4FF40072 		mov	r2, #512
 8376 041e 0021     		movs	r1, #0
 8377 0420 3046     		mov	r0, r6
 8378 0422 FFF7FEFF 		bl	mem_set
 8379              	.LVL1233:
5729:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte = buf + MBR_Table;				/* Create partition table for single partition in the drive */
 8380              		.loc 1 5729 0
 8381 0426 4AF65521 		movw	r1, #43605
 8382 042a 0198     		ldr	r0, [sp, #4]
 8383 042c FFF7FEFF 		bl	st_word
 8384              	.LVL1234:
5731:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StHead] = 1;				/* Start head */
 8385              		.loc 1 5731 0
 8386 0430 0025     		movs	r5, #0
 8387              	.LVL1235:
 8388 0432 86F8BE51 		strb	r5, [r6, #446]
5732:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StSec] = 1;					/* Start sector */
 8389              		.loc 1 5732 0
 8390 0436 0127     		movs	r7, #1
 8391              	.LVL1236:
 8392 0438 86F8BF71 		strb	r7, [r6, #447]
5733:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_StCyl] = 0;					/* Start cylinder */
 8393              		.loc 1 5733 0
 8394 043c 86F8C071 		strb	r7, [r6, #448]
5734:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_System] = sys;				/* System type */
 8395              		.loc 1 5734 0
 8396 0440 86F8C151 		strb	r5, [r6, #449]
5735:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + sz_vol) / (63 * 255);	/* (End CHS may be invalid) */
ARM GAS  /tmp/cc2OGbx6.s 			page 274


 8397              		.loc 1 5735 0
 8398 0444 86F8C281 		strb	r8, [r6, #450]
5736:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdHead] = 254;				/* End head */
 8399              		.loc 1 5736 0
 8400 0448 089B     		ldr	r3, [sp, #32]
 8401 044a 4B44     		add	r3, r3, r9
 8402 044c 43F6C162 		movw	r2, #16065
 8403 0450 B3FBF2F3 		udiv	r3, r3, r2
 8404              	.LVL1237:
5737:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdSec] = (BYTE)(n >> 2 | 63);	/* End sector */
 8405              		.loc 1 5737 0
 8406 0454 FE22     		movs	r2, #254
 8407 0456 86F8C321 		strb	r2, [r6, #451]
5738:Middlewares/Third_Party/FatFs/src/ff.c **** 			pte[PTE_EdCyl] = (BYTE)n;			/* End cylinder */
 8408              		.loc 1 5738 0
 8409 045a 9A08     		lsrs	r2, r3, #2
 8410 045c 42F03F02 		orr	r2, r2, #63
 8411 0460 86F8C421 		strb	r2, [r6, #452]
5739:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_StLba, b_vol);	/* Start offset in LBA */
 8412              		.loc 1 5739 0
 8413 0464 86F8C531 		strb	r3, [r6, #453]
5740:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(pte + PTE_SizLba, sz_vol);	/* Size in sectors */
 8414              		.loc 1 5740 0
 8415 0468 4946     		mov	r1, r9
 8416 046a 06F5E370 		add	r0, r6, #454
 8417 046e FFF7FEFF 		bl	st_dword
 8418              	.LVL1238:
5741:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, buf, 0, 1) != RES_OK) return FR_DISK_ERR;	/* Write it to the MBR */
 8419              		.loc 1 5741 0
 8420 0472 0899     		ldr	r1, [sp, #32]
 8421 0474 06F5E570 		add	r0, r6, #458
 8422 0478 FFF7FEFF 		bl	st_dword
 8423              	.LVL1239:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8424              		.loc 1 5742 0
 8425 047c 3B46     		mov	r3, r7
 8426 047e 2A46     		mov	r2, r5
 8427 0480 3146     		mov	r1, r6
 8428 0482 2046     		mov	r0, r4
 8429 0484 FFF7FEFF 		bl	disk_write
 8430              	.LVL1240:
 8431 0488 0028     		cmp	r0, #0
 8432 048a 40F0DF80 		bne	.L780
 8433              	.LVL1241:
 8434              	.L746:
5746:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8435              		.loc 1 5746 0
 8436 048e 0022     		movs	r2, #0
 8437 0490 1146     		mov	r1, r2
 8438 0492 2046     		mov	r0, r4
 8439 0494 FFF7FEFF 		bl	disk_ioctl
 8440              	.LVL1242:
 8441 0498 0028     		cmp	r0, #0
 8442 049a 00F0D980 		beq	.L781
 8443 049e 0120     		movs	r0, #1
 8444 04a0 A1E0     		b	.L704
 8445              	.LVL1243:
ARM GAS  /tmp/cc2OGbx6.s 			page 275


 8446              	.L772:
5634:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sz_vol < 0x10000) {
 8447              		.loc 1 5634 0
 8448 04a2 0021     		movs	r1, #0
 8449 04a4 27E7     		b	.L731
 8450              	.L732:
5638:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8451              		.loc 1 5638 0
 8452 04a6 06F12000 		add	r0, r6, #32
 8453 04aa FFF7FEFF 		bl	st_dword
 8454              	.LVL1244:
 8455 04ae 2EE7     		b	.L733
 8456              	.L734:
5654:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BPB_FATSz16, (WORD)sz_fat);	/* FAT size [sector] */
 8457              		.loc 1 5654 0
 8458 04b0 FFF7FEFF 		bl	get_fattime
 8459              	.LVL1245:
 8460 04b4 0146     		mov	r1, r0
 8461 04b6 06F12700 		add	r0, r6, #39
 8462 04ba FFF7FEFF 		bl	st_dword
 8463              	.LVL1246:
5655:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_DrvNum] = 0x80;						/* Drive number (for int13) */
 8464              		.loc 1 5655 0
 8465 04be BDF81410 		ldrh	r1, [sp, #20]
 8466 04c2 06F11600 		add	r0, r6, #22
 8467 04c6 FFF7FEFF 		bl	st_word
 8468              	.LVL1247:
5656:Middlewares/Third_Party/FatFs/src/ff.c **** 			buf[BS_BootSig] = 0x29;						/* Extended boot signature */
 8469              		.loc 1 5656 0
 8470 04ca 8023     		movs	r3, #128
 8471 04cc 86F82430 		strb	r3, [r6, #36]
5657:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(buf + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8472              		.loc 1 5657 0
 8473 04d0 2923     		movs	r3, #41
 8474 04d2 86F82630 		strb	r3, [r6, #38]
5658:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8475              		.loc 1 5658 0
 8476 04d6 1322     		movs	r2, #19
 8477 04d8 5649     		ldr	r1, .L796+8
 8478 04da 06F12B00 		add	r0, r6, #43
 8479 04de FFF7FEFF 		bl	mem_cpy
 8480              	.LVL1248:
 8481 04e2 50E7     		b	.L735
 8482              	.LVL1249:
 8483              	.L790:
5665:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(buf, 0, ss);
 8484              		.loc 1 5665 0
 8485 04e4 0123     		movs	r3, #1
 8486 04e6 09F10602 		add	r2, r9, #6
 8487 04ea 3146     		mov	r1, r6
 8488 04ec 2046     		mov	r0, r4
 8489 04ee FFF7FEFF 		bl	disk_write
 8490              	.LVL1250:
5666:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_LeadSig, 0x41615252);
 8491              		.loc 1 5666 0
 8492 04f2 4FF40072 		mov	r2, #512
 8493 04f6 0021     		movs	r1, #0
ARM GAS  /tmp/cc2OGbx6.s 			page 276


 8494 04f8 3046     		mov	r0, r6
 8495 04fa FFF7FEFF 		bl	mem_set
 8496              	.LVL1251:
5667:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_StrucSig, 0x61417272);
 8497              		.loc 1 5667 0
 8498 04fe 4E49     		ldr	r1, .L796+12
 8499 0500 3046     		mov	r0, r6
 8500 0502 FFF7FEFF 		bl	st_dword
 8501              	.LVL1252:
5668:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8502              		.loc 1 5668 0
 8503 0506 4D49     		ldr	r1, .L796+16
 8504 0508 06F5F270 		add	r0, r6, #484
 8505 050c FFF7FEFF 		bl	st_dword
 8506              	.LVL1253:
5669:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_dword(buf + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8507              		.loc 1 5669 0
 8508 0510 029B     		ldr	r3, [sp, #8]
 8509 0512 591E     		subs	r1, r3, #1
 8510 0514 06F5F470 		add	r0, r6, #488
 8511 0518 FFF7FEFF 		bl	st_dword
 8512              	.LVL1254:
5670:Middlewares/Third_Party/FatFs/src/ff.c **** 			st_word(buf + BS_55AA, 0xAA55);
 8513              		.loc 1 5670 0
 8514 051c 0221     		movs	r1, #2
 8515 051e 06F5F670 		add	r0, r6, #492
 8516 0522 FFF7FEFF 		bl	st_dword
 8517              	.LVL1255:
5671:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 7, 1);		/* Write backup FSINFO (VBR + 7) */
 8518              		.loc 1 5671 0
 8519 0526 4AF65521 		movw	r1, #43605
 8520 052a 0198     		ldr	r0, [sp, #4]
 8521 052c FFF7FEFF 		bl	st_word
 8522              	.LVL1256:
5672:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(pdrv, buf, b_vol + 1, 1);		/* Write original FSINFO (VBR + 1) */
 8523              		.loc 1 5672 0
 8524 0530 0123     		movs	r3, #1
 8525 0532 09F10702 		add	r2, r9, #7
 8526 0536 3146     		mov	r1, r6
 8527 0538 2046     		mov	r0, r4
 8528 053a FFF7FEFF 		bl	disk_write
 8529              	.LVL1257:
5673:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8530              		.loc 1 5673 0
 8531 053e 0123     		movs	r3, #1
 8532 0540 09EB0302 		add	r2, r9, r3
 8533 0544 3146     		mov	r1, r6
 8534 0546 2046     		mov	r0, r4
 8535 0548 FFF7FEFF 		bl	disk_write
 8536              	.LVL1258:
 8537 054c 30E7     		b	.L736
 8538              	.LVL1259:
 8539              	.L742:
5680:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 0, 0xFFFFFFF8);	/* Entry 0 */
 8540              		.loc 1 5680 0
 8541 054e BBF1030F 		cmp	fp, #3
 8542 0552 23D0     		beq	.L792
ARM GAS  /tmp/cc2OGbx6.s 			page 277


5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8543              		.loc 1 5685 0
 8544 0554 BBF1010F 		cmp	fp, #1
 8545 0558 31D0     		beq	.L793
 8546 055a 6FF00701 		mvn	r1, #7
 8547              	.L740:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8548              		.loc 1 5685 0 is_stmt 0 discriminator 4
 8549 055e 3046     		mov	r0, r6
 8550 0560 FFF7FEFF 		bl	st_dword
 8551              	.LVL1260:
 8552              	.L739:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8553              		.loc 1 5685 0
 8554 0564 DDF81480 		ldr	r8, [sp, #20]
 8555              	.L741:
 8556              	.LVL1261:
5689:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(pdrv, buf, sect, (UINT)n) != RES_OK) return FR_DISK_ERR;
 8557              		.loc 1 5689 0 is_stmt 1
 8558 0568 4746     		mov	r7, r8
 8559 056a D045     		cmp	r8, r10
 8560 056c 28BF     		it	cs
 8561 056e 5746     		movcs	r7, r10
 8562              	.LVL1262:
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8563              		.loc 1 5690 0
 8564 0570 3B46     		mov	r3, r7
 8565 0572 049A     		ldr	r2, [sp, #16]
 8566 0574 3146     		mov	r1, r6
 8567 0576 2046     		mov	r0, r4
 8568 0578 FFF7FEFF 		bl	disk_write
 8569              	.LVL1263:
 8570 057c 0028     		cmp	r0, #0
 8571 057e 61D1     		bne	.L775
5691:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect += n; nsect -= n;
 8572              		.loc 1 5691 0
 8573 0580 4FF40072 		mov	r2, #512
 8574 0584 0021     		movs	r1, #0
 8575 0586 3046     		mov	r0, r6
 8576 0588 FFF7FEFF 		bl	mem_set
 8577              	.LVL1264:
5692:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (nsect);
 8578              		.loc 1 5692 0
 8579 058c 049B     		ldr	r3, [sp, #16]
 8580 058e 3B44     		add	r3, r3, r7
 8581 0590 0493     		str	r3, [sp, #16]
 8582              	.LVL1265:
5693:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8583              		.loc 1 5693 0
 8584 0592 B8EB0708 		subs	r8, r8, r7
 8585              	.LVL1266:
 8586 0596 E7D1     		bne	.L741
5679:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fmt == FS_FAT32) {
 8587              		.loc 1 5679 0 discriminator 2
 8588 0598 0135     		adds	r5, r5, #1
 8589              	.LVL1267:
 8590 059a 11E7     		b	.L737
ARM GAS  /tmp/cc2OGbx6.s 			page 278


 8591              	.LVL1268:
 8592              	.L792:
5681:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 4, 0xFFFFFFFF);	/* Entry 1 */
 8593              		.loc 1 5681 0
 8594 059c 6FF00701 		mvn	r1, #7
 8595 05a0 3046     		mov	r0, r6
 8596 05a2 FFF7FEFF 		bl	st_dword
 8597              	.LVL1269:
5682:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_dword(buf + 8, 0x0FFFFFFF);	/* Entry 2 (root directory) */
 8598              		.loc 1 5682 0
 8599 05a6 4FF0FF31 		mov	r1, #-1
 8600 05aa 301D     		adds	r0, r6, #4
 8601 05ac FFF7FEFF 		bl	st_dword
 8602              	.LVL1270:
5683:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8603              		.loc 1 5683 0
 8604 05b0 6FF07041 		mvn	r1, #-268435456
 8605 05b4 06F10800 		add	r0, r6, #8
 8606 05b8 FFF7FEFF 		bl	st_dword
 8607              	.LVL1271:
 8608 05bc D2E7     		b	.L739
 8609              	.L793:
5685:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8610              		.loc 1 5685 0
 8611 05be 2049     		ldr	r1, .L796+20
 8612 05c0 CDE7     		b	.L740
 8613              	.L791:
5697:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 8614              		.loc 1 5697 0
 8615 05c2 4746     		mov	r7, r8
 8616 05c4 DDF81080 		ldr	r8, [sp, #16]
 8617 05c8 06E7     		b	.L744
 8618              	.LVL1272:
 8619              	.L777:
5710:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8620              		.loc 1 5710 0
 8621 05ca 4FF00C08 		mov	r8, #12
 8622              	.LVL1273:
 8623 05ce 22E7     		b	.L745
 8624              	.LVL1274:
 8625              	.L778:
5713:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 8626              		.loc 1 5713 0
 8627 05d0 4FF00608 		mov	r8, #6
 8628              	.LVL1275:
 8629 05d4 1FE7     		b	.L745
 8630              	.LVL1276:
 8631              	.L779:
5715:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8632              		.loc 1 5715 0
 8633 05d6 4FF00108 		mov	r8, #1
 8634              	.LVL1277:
 8635 05da 1CE7     		b	.L745
 8636              	.LVL1278:
 8637              	.L747:
5328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (FatFs[vol]) FatFs[vol]->fs_type = 0;	/* Clear the volume */
 8638              		.loc 1 5328 0
ARM GAS  /tmp/cc2OGbx6.s 			page 279


 8639 05dc 0B20     		movs	r0, #11
 8640              	.LVL1279:
 8641 05de 02E0     		b	.L704
 8642              	.LVL1280:
 8643              	.L748:
5335:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 8644              		.loc 1 5335 0
 8645 05e0 0320     		movs	r0, #3
 8646              	.LVL1281:
 8647 05e2 00E0     		b	.L704
 8648              	.LVL1282:
 8649              	.L749:
5336:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &sz_blk) != RES_OK || !sz_blk || sz_blk > 32768 || (sz_blk & 
 8650              		.loc 1 5336 0
 8651 05e4 0A20     		movs	r0, #10
 8652              	.LVL1283:
 8653              	.L704:
5749:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8654              		.loc 1 5749 0
 8655 05e6 0BB0     		add	sp, sp, #44
 8656              	.LCFI118:
 8657              		.cfi_remember_state
 8658              		.cfi_def_cfa_offset 36
 8659              		@ sp needed
 8660 05e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8661              	.LVL1284:
 8662              	.L750:
 8663              	.LCFI119:
 8664              		.cfi_restore_state
5344:Middlewares/Third_Party/FatFs/src/ff.c **** 	au /= ss;	/* Cluster size in unit of sector */
 8665              		.loc 1 5344 0
 8666 05ec 1320     		movs	r0, #19
 8667 05ee FAE7     		b	.L704
 8668              	.L751:
 8669 05f0 1320     		movs	r0, #19
 8670 05f2 F8E7     		b	.L704
 8671              	.L752:
 8672 05f4 1320     		movs	r0, #19
 8673 05f6 F6E7     		b	.L704
 8674              	.LVL1285:
 8675              	.L753:
5351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8676              		.loc 1 5351 0
 8677 05f8 0E20     		movs	r0, #14
 8678 05fa F4E7     		b	.L704
 8679              	.L754:
5364:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (opt & FM_SFD) ? 0 : 63;		/* Volume start sector */
 8680              		.loc 1 5364 0
 8681 05fc 0120     		movs	r0, #1
 8682 05fe F2E7     		b	.L704
 8683              	.LVL1286:
 8684              	.L756:
5366:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_vol -= b_vol;						/* Volume size */
 8685              		.loc 1 5366 0
 8686 0600 0E20     		movs	r0, #14
 8687 0602 F0E7     		b	.L704
 8688              	.L757:
ARM GAS  /tmp/cc2OGbx6.s 			page 280


5369:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8689              		.loc 1 5369 0
 8690 0604 0E20     		movs	r0, #14
 8691 0606 EEE7     		b	.L704
 8692              	.L758:
5378:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (opt & FM_FAT32) {	/* FAT32 possible? */
 8693              		.loc 1 5378 0
 8694 0608 1320     		movs	r0, #19
 8695 060a ECE7     		b	.L704
 8696              	.L761:
5384:Middlewares/Third_Party/FatFs/src/ff.c **** 		fmt = FS_FAT16;
 8697              		.loc 1 5384 0
 8698 060c 1320     		movs	r0, #19
 8699 060e EAE7     		b	.L704
 8700              	.LVL1287:
 8701              	.L763:
5564:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* FAT12/16 volume */
 8702              		.loc 1 5564 0
 8703 0610 0E20     		movs	r0, #14
 8704 0612 E8E7     		b	.L704
 8705              	.LVL1288:
 8706              	.L765:
5593:Middlewares/Third_Party/FatFs/src/ff.c **** 			n_clst = (sz_vol - sz_rsv - sz_fat * n_fats - sz_dir) / pau;
 8707              		.loc 1 5593 0
 8708 0614 0E20     		movs	r0, #14
 8709 0616 E6E7     		b	.L704
 8710              	.LVL1289:
 8711              	.L766:
5598:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8712              		.loc 1 5598 0
 8713 0618 0E20     		movs	r0, #14
 8714 061a E4E7     		b	.L704
 8715              	.LVL1290:
 8716              	.L769:
5610:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8717              		.loc 1 5610 0
 8718 061c 0E20     		movs	r0, #14
 8719 061e E2E7     		b	.L704
 8720              	.LVL1291:
 8721              	.L770:
5614:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 8722              		.loc 1 5614 0
 8723 0620 0E20     		movs	r0, #14
 8724 0622 E0E7     		b	.L704
 8725              	.LVL1292:
 8726              	.L771:
5617:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8727              		.loc 1 5617 0
 8728 0624 0E20     		movs	r0, #14
 8729 0626 DEE7     		b	.L704
 8730              	.LVL1293:
 8731              	.L773:
5661:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8732              		.loc 1 5661 0
 8733 0628 0120     		movs	r0, #1
 8734 062a DCE7     		b	.L704
 8735              	.L797:
ARM GAS  /tmp/cc2OGbx6.s 			page 281


 8736              		.align	2
 8737              	.L796:
 8738 062c 00000000 		.word	.LC1
 8739 0630 0C000000 		.word	.LC2
 8740 0634 20000000 		.word	.LC3
 8741 0638 52526141 		.word	1096897106
 8742 063c 72724161 		.word	1631679090
 8743 0640 F8FFFF00 		.word	16777208
 8744              	.LVL1294:
 8745              	.L775:
5690:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(buf, 0, ss);
 8746              		.loc 1 5690 0
 8747 0644 0120     		movs	r0, #1
 8748 0646 CEE7     		b	.L704
 8749              	.LVL1295:
 8750              	.L776:
5700:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += n; nsect -= n;
 8751              		.loc 1 5700 0
 8752 0648 0120     		movs	r0, #1
 8753 064a CCE7     		b	.L704
 8754              	.LVL1296:
 8755              	.L780:
5742:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8756              		.loc 1 5742 0
 8757 064c 0120     		movs	r0, #1
 8758 064e CAE7     		b	.L704
 8759              	.LVL1297:
 8760              	.L781:
5748:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8761              		.loc 1 5748 0
 8762 0650 0020     		movs	r0, #0
 8763 0652 C8E7     		b	.L704
 8764              		.cfi_endproc
 8765              	.LFE195:
 8767              		.section	.text.f_gets,"ax",%progbits
 8768              		.align	1
 8769              		.global	f_gets
 8770              		.syntax unified
 8771              		.thumb
 8772              		.thumb_func
 8773              		.fpu fpv5-d16
 8775              	f_gets:
 8776              	.LFB196:
5835:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8777              		.loc 1 5835 0
 8778              		.cfi_startproc
 8779              		@ args = 0, pretend = 0, frame = 8
 8780              		@ frame_needed = 0, uses_anonymous_args = 0
 8781              	.LVL1298:
 8782 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8783              	.LCFI120:
 8784              		.cfi_def_cfa_offset 24
 8785              		.cfi_offset 4, -24
 8786              		.cfi_offset 5, -20
 8787              		.cfi_offset 6, -16
 8788              		.cfi_offset 7, -12
 8789              		.cfi_offset 8, -8
ARM GAS  /tmp/cc2OGbx6.s 			page 282


 8790              		.cfi_offset 14, -4
 8791 0004 82B0     		sub	sp, sp, #8
 8792              	.LCFI121:
 8793              		.cfi_def_cfa_offset 32
 8794 0006 8046     		mov	r8, r0
 8795 0008 0E46     		mov	r6, r1
 8796 000a 1746     		mov	r7, r2
 8797              	.LVL1299:
5837:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8798              		.loc 1 5837 0
 8799 000c 0446     		mov	r4, r0
5836:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8800              		.loc 1 5836 0
 8801 000e 0025     		movs	r5, #0
5842:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
 8802              		.loc 1 5842 0
 8803 0010 01E0     		b	.L799
 8804              	.LVL1300:
 8805              	.L804:
 8806 0012 2246     		mov	r2, r4
 8807              	.LVL1301:
 8808              	.L801:
 8809 0014 1446     		mov	r4, r2
 8810              	.LVL1302:
 8811              	.L799:
 8812 0016 731E     		subs	r3, r6, #1
 8813 0018 AB42     		cmp	r3, r5
 8814 001a 12DD     		ble	.L800
5887:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8815              		.loc 1 5887 0
 8816 001c 6B46     		mov	r3, sp
 8817 001e 0122     		movs	r2, #1
 8818 0020 01A9     		add	r1, sp, #4
 8819 0022 3846     		mov	r0, r7
 8820 0024 FFF7FEFF 		bl	f_read
 8821              	.LVL1303:
5888:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8822              		.loc 1 5888 0
 8823 0028 009B     		ldr	r3, [sp]
 8824 002a 012B     		cmp	r3, #1
 8825 002c 09D1     		bne	.L800
5889:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8826              		.loc 1 5889 0
 8827 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8828              	.LVL1304:
5891:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8829              		.loc 1 5891 0
 8830 0032 0D2B     		cmp	r3, #13
 8831 0034 EDD0     		beq	.L804
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8832              		.loc 1 5892 0
 8833 0036 621C     		adds	r2, r4, #1
 8834              	.LVL1305:
 8835 0038 2370     		strb	r3, [r4]
5893:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8836              		.loc 1 5893 0
 8837 003a 0135     		adds	r5, r5, #1
ARM GAS  /tmp/cc2OGbx6.s 			page 283


 8838              	.LVL1306:
5894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8839              		.loc 1 5894 0
 8840 003c 0A2B     		cmp	r3, #10
 8841 003e E9D1     		bne	.L801
5892:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8842              		.loc 1 5892 0
 8843 0040 1446     		mov	r4, r2
 8844              	.LVL1307:
 8845              	.L800:
5896:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8846              		.loc 1 5896 0
 8847 0042 0023     		movs	r3, #0
 8848 0044 2370     		strb	r3, [r4]
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8849              		.loc 1 5897 0
 8850 0046 1DB1     		cbz	r5, .L806
 8851 0048 4046     		mov	r0, r8
 8852              	.L798:
5898:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8853              		.loc 1 5898 0
 8854 004a 02B0     		add	sp, sp, #8
 8855              	.LCFI122:
 8856              		.cfi_remember_state
 8857              		.cfi_def_cfa_offset 24
 8858              		@ sp needed
 8859 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8860              	.LVL1308:
 8861              	.L806:
 8862              	.LCFI123:
 8863              		.cfi_restore_state
5897:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8864              		.loc 1 5897 0
 8865 0050 0020     		movs	r0, #0
 8866 0052 FAE7     		b	.L798
 8867              		.cfi_endproc
 8868              	.LFE196:
 8870              		.section	.text.f_putc,"ax",%progbits
 8871              		.align	1
 8872              		.global	f_putc
 8873              		.syntax unified
 8874              		.thumb
 8875              		.thumb_func
 8876              		.fpu fpv5-d16
 8878              	f_putc:
 8879              	.LFB200:
5995:Middlewares/Third_Party/FatFs/src/ff.c **** 
5996:Middlewares/Third_Party/FatFs/src/ff.c **** 
5997:Middlewares/Third_Party/FatFs/src/ff.c **** 
5998:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
5999:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
6000:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
6001:Middlewares/Third_Party/FatFs/src/ff.c **** )
6002:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8880              		.loc 1 6002 0
 8881              		.cfi_startproc
 8882              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/cc2OGbx6.s 			page 284


 8883              		@ frame_needed = 0, uses_anonymous_args = 0
 8884              	.LVL1309:
 8885 0000 10B5     		push	{r4, lr}
 8886              	.LCFI124:
 8887              		.cfi_def_cfa_offset 8
 8888              		.cfi_offset 4, -8
 8889              		.cfi_offset 14, -4
 8890 0002 94B0     		sub	sp, sp, #80
 8891              	.LCFI125:
 8892              		.cfi_def_cfa_offset 88
 8893 0004 0446     		mov	r4, r0
6003:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6004:Middlewares/Third_Party/FatFs/src/ff.c **** 
6005:Middlewares/Third_Party/FatFs/src/ff.c **** 
6006:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8894              		.loc 1 6006 0
 8895 0006 01A8     		add	r0, sp, #4
 8896              	.LVL1310:
 8897 0008 FFF7FEFF 		bl	putc_init
 8898              	.LVL1311:
6007:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put the character */
 8899              		.loc 1 6007 0
 8900 000c 2146     		mov	r1, r4
 8901 000e 01A8     		add	r0, sp, #4
 8902 0010 FFF7FEFF 		bl	putc_bfd
 8903              	.LVL1312:
6008:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 8904              		.loc 1 6008 0
 8905 0014 01A8     		add	r0, sp, #4
 8906 0016 FFF7FEFF 		bl	putc_flush
 8907              	.LVL1313:
6009:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8908              		.loc 1 6009 0
 8909 001a 14B0     		add	sp, sp, #80
 8910              	.LCFI126:
 8911              		.cfi_def_cfa_offset 8
 8912              		@ sp needed
 8913 001c 10BD     		pop	{r4, pc}
 8914              		.cfi_endproc
 8915              	.LFE200:
 8917              		.section	.text.f_puts,"ax",%progbits
 8918              		.align	1
 8919              		.global	f_puts
 8920              		.syntax unified
 8921              		.thumb
 8922              		.thumb_func
 8923              		.fpu fpv5-d16
 8925              	f_puts:
 8926              	.LFB201:
6010:Middlewares/Third_Party/FatFs/src/ff.c **** 
6011:Middlewares/Third_Party/FatFs/src/ff.c **** 
6012:Middlewares/Third_Party/FatFs/src/ff.c **** 
6013:Middlewares/Third_Party/FatFs/src/ff.c **** 
6014:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6015:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
6016:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6017:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 285


6018:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
6019:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
6020:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
6021:Middlewares/Third_Party/FatFs/src/ff.c **** )
6022:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8927              		.loc 1 6022 0
 8928              		.cfi_startproc
 8929              		@ args = 0, pretend = 0, frame = 80
 8930              		@ frame_needed = 0, uses_anonymous_args = 0
 8931              	.LVL1314:
 8932 0000 10B5     		push	{r4, lr}
 8933              	.LCFI127:
 8934              		.cfi_def_cfa_offset 8
 8935              		.cfi_offset 4, -8
 8936              		.cfi_offset 14, -4
 8937 0002 94B0     		sub	sp, sp, #80
 8938              	.LCFI128:
 8939              		.cfi_def_cfa_offset 88
 8940 0004 0446     		mov	r4, r0
6023:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6024:Middlewares/Third_Party/FatFs/src/ff.c **** 
6025:Middlewares/Third_Party/FatFs/src/ff.c **** 
6026:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 8941              		.loc 1 6026 0
 8942 0006 01A8     		add	r0, sp, #4
 8943              	.LVL1315:
 8944 0008 FFF7FEFF 		bl	putc_init
 8945              	.LVL1316:
6027:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str) putc_bfd(&pb, *str++);		/* Put the string */
 8946              		.loc 1 6027 0
 8947 000c 03E0     		b	.L811
 8948              	.L812:
 8949              		.loc 1 6027 0 is_stmt 0 discriminator 2
 8950 000e 0134     		adds	r4, r4, #1
 8951              	.LVL1317:
 8952 0010 01A8     		add	r0, sp, #4
 8953 0012 FFF7FEFF 		bl	putc_bfd
 8954              	.LVL1318:
 8955              	.L811:
 8956              		.loc 1 6027 0 discriminator 1
 8957 0016 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 8958 0018 0029     		cmp	r1, #0
 8959 001a F8D1     		bne	.L812
6028:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 8960              		.loc 1 6028 0 is_stmt 1
 8961 001c 01A8     		add	r0, sp, #4
 8962 001e FFF7FEFF 		bl	putc_flush
 8963              	.LVL1319:
6029:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8964              		.loc 1 6029 0
 8965 0022 14B0     		add	sp, sp, #80
 8966              	.LCFI129:
 8967              		.cfi_def_cfa_offset 8
 8968              		@ sp needed
 8969 0024 10BD     		pop	{r4, pc}
 8970              		.cfi_endproc
 8971              	.LFE201:
ARM GAS  /tmp/cc2OGbx6.s 			page 286


 8973              		.section	.text.f_printf,"ax",%progbits
 8974              		.align	1
 8975              		.global	f_printf
 8976              		.syntax unified
 8977              		.thumb
 8978              		.thumb_func
 8979              		.fpu fpv5-d16
 8981              	f_printf:
 8982              	.LFB202:
6030:Middlewares/Third_Party/FatFs/src/ff.c **** 
6031:Middlewares/Third_Party/FatFs/src/ff.c **** 
6032:Middlewares/Third_Party/FatFs/src/ff.c **** 
6033:Middlewares/Third_Party/FatFs/src/ff.c **** 
6034:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6035:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
6036:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
6037:Middlewares/Third_Party/FatFs/src/ff.c **** 
6038:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
6039:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
6040:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
6041:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
6042:Middlewares/Third_Party/FatFs/src/ff.c **** )
6043:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8983              		.loc 1 6043 0
 8984              		.cfi_startproc
 8985              		@ args = 4, pretend = 12, frame = 112
 8986              		@ frame_needed = 0, uses_anonymous_args = 1
 8987              	.LVL1320:
 8988 0000 0EB4     		push	{r1, r2, r3}
 8989              	.LCFI130:
 8990              		.cfi_def_cfa_offset 12
 8991              		.cfi_offset 1, -12
 8992              		.cfi_offset 2, -8
 8993              		.cfi_offset 3, -4
 8994 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8995              	.LCFI131:
 8996              		.cfi_def_cfa_offset 44
 8997              		.cfi_offset 4, -44
 8998              		.cfi_offset 5, -40
 8999              		.cfi_offset 6, -36
 9000              		.cfi_offset 7, -32
 9001              		.cfi_offset 8, -28
 9002              		.cfi_offset 9, -24
 9003              		.cfi_offset 10, -20
 9004              		.cfi_offset 14, -16
 9005 0006 9DB0     		sub	sp, sp, #116
 9006              	.LCFI132:
 9007              		.cfi_def_cfa_offset 160
 9008 0008 25AC     		add	r4, sp, #148
 9009 000a 54F8045B 		ldr	r5, [r4], #4
6044:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
6045:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
6046:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
6047:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, w;
6048:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
6049:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, str[32], *p;
6050:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cc2OGbx6.s 			page 287


6051:Middlewares/Third_Party/FatFs/src/ff.c **** 
6052:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_init(&pb, fp);
 9010              		.loc 1 6052 0
 9011 000e 0146     		mov	r1, r0
 9012 0010 08A8     		add	r0, sp, #32
 9013              	.LVL1321:
 9014 0012 FFF7FEFF 		bl	putc_init
 9015              	.LVL1322:
6053:Middlewares/Third_Party/FatFs/src/ff.c **** 
6054:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9016              		.loc 1 6054 0
 9017 0016 1B94     		str	r4, [sp, #108]
 9018 0018 03E0     		b	.L815
 9019              	.LVL1323:
 9020              	.L864:
6055:Middlewares/Third_Party/FatFs/src/ff.c **** 
6056:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
6060:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9021              		.loc 1 6060 0
 9022 001a 08A8     		add	r0, sp, #32
 9023 001c FFF7FEFF 		bl	putc_bfd
 9024              	.LVL1324:
6057:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9025              		.loc 1 6057 0
 9026 0020 2546     		mov	r5, r4
 9027              	.LVL1325:
 9028              	.L815:
 9029 0022 6C1C     		adds	r4, r5, #1
 9030              	.LVL1326:
 9031 0024 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9032              	.LVL1327:
6058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9033              		.loc 1 6058 0
 9034 0026 0029     		cmp	r1, #0
 9035 0028 00F00881 		beq	.L816
6059:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9036              		.loc 1 6059 0
 9037 002c 2529     		cmp	r1, #37
 9038 002e F4D1     		bne	.L864
 9039              	.LVL1328:
6061:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6062:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9040              		.loc 1 6064 0
 9041 0030 AB1C     		adds	r3, r5, #2
 9042              	.LVL1329:
 9043 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 9044              	.LVL1330:
6065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9045              		.loc 1 6065 0
 9046 0034 3029     		cmp	r1, #48
 9047 0036 05D0     		beq	.L865
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
ARM GAS  /tmp/cc2OGbx6.s 			page 288


6067:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
6068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9048              		.loc 1 6068 0
 9049 0038 2D29     		cmp	r1, #45
 9050 003a 07D0     		beq	.L866
6064:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9051              		.loc 1 6064 0
 9052 003c 1D46     		mov	r5, r3
6063:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9053              		.loc 1 6063 0
 9054 003e 0026     		movs	r6, #0
 9055              	.LVL1331:
 9056              	.L820:
6066:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9057              		.loc 1 6066 0
 9058 0040 0024     		movs	r4, #0
 9059 0042 0FE0     		b	.L821
 9060              	.LVL1332:
 9061              	.L865:
 9062 0044 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 9063              	.LVL1333:
 9064 0046 0335     		adds	r5, r5, #3
 9065              	.LVL1334:
 9066 0048 0126     		movs	r6, #1
 9067 004a F9E7     		b	.L820
 9068              	.LVL1335:
 9069              	.L866:
6069:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9070              		.loc 1 6069 0
 9071 004c A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 9072              	.LVL1336:
 9073 004e 0335     		adds	r5, r5, #3
 9074              	.LVL1337:
 9075 0050 0226     		movs	r6, #2
 9076 0052 F5E7     		b	.L820
 9077              	.LVL1338:
 9078              	.L822:
6070:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
6073:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9079              		.loc 1 6073 0
 9080 0054 04EB8404 		add	r4, r4, r4, lsl #2
 9081              	.LVL1339:
 9082 0058 6300     		lsls	r3, r4, #1
 9083 005a 1944     		add	r1, r1, r3
 9084              	.LVL1340:
 9085 005c A1F13004 		sub	r4, r1, #48
 9086              	.LVL1341:
6074:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9087              		.loc 1 6074 0
 9088 0060 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9089              	.LVL1342:
 9090 0062 0135     		adds	r5, r5, #1
 9091              	.LVL1343:
 9092              	.L821:
6072:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
ARM GAS  /tmp/cc2OGbx6.s 			page 289


 9093              		.loc 1 6072 0
 9094 0064 A1F13003 		sub	r3, r1, #48
 9095 0068 DBB2     		uxtb	r3, r3
 9096 006a 092B     		cmp	r3, #9
 9097 006c F2D9     		bls	.L822
6075:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6076:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9098              		.loc 1 6076 0
 9099 006e 4C29     		cmp	r1, #76
 9100 0070 18BF     		it	ne
 9101 0072 6C29     		cmpne	r1, #108
 9102 0074 03D1     		bne	.L823
6077:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9103              		.loc 1 6077 0
 9104 0076 46F00406 		orr	r6, r6, #4
 9105              	.LVL1344:
 9106 007a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 9107              	.LVL1345:
 9108 007c 0135     		adds	r5, r5, #1
 9109              	.LVL1346:
 9110              	.L823:
6078:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9111              		.loc 1 6079 0
 9112 007e 0029     		cmp	r1, #0
 9113 0080 00F0DC80 		beq	.L816
 9114              	.LVL1347:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
6081:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9115              		.loc 1 6081 0
 9116 0084 A1F16103 		sub	r3, r1, #97
 9117 0088 DBB2     		uxtb	r3, r3
 9118 008a 192B     		cmp	r3, #25
 9119 008c 14D8     		bhi	.L858
 9120              		.loc 1 6081 0 is_stmt 0 discriminator 1
 9121 008e A1F12003 		sub	r3, r1, #32
 9122 0092 DBB2     		uxtb	r3, r3
 9123              	.LVL1348:
 9124              	.L824:
6082:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9125              		.loc 1 6082 0 is_stmt 1
 9126 0094 A3F14202 		sub	r2, r3, #66
 9127 0098 162A     		cmp	r2, #22
 9128 009a 4CD8     		bhi	.L825
 9129 009c DFE802F0 		tbb	[pc, r2]
 9130              	.L827:
 9131 00a0 4F       		.byte	(.L826-.L827)/2
 9132 00a1 3D       		.byte	(.L828-.L827)/2
 9133 00a2 45       		.byte	(.L829-.L827)/2
 9134 00a3 4B       		.byte	(.L825-.L827)/2
 9135 00a4 4B       		.byte	(.L825-.L827)/2
 9136 00a5 4B       		.byte	(.L825-.L827)/2
 9137 00a6 4B       		.byte	(.L825-.L827)/2
 9138 00a7 4B       		.byte	(.L825-.L827)/2
 9139 00a8 4B       		.byte	(.L825-.L827)/2
 9140 00a9 4B       		.byte	(.L825-.L827)/2
 9141 00aa 4B       		.byte	(.L825-.L827)/2
ARM GAS  /tmp/cc2OGbx6.s 			page 290


 9142 00ab 4B       		.byte	(.L825-.L827)/2
 9143 00ac 4B       		.byte	(.L825-.L827)/2
 9144 00ad 52       		.byte	(.L859-.L827)/2
 9145 00ae 4B       		.byte	(.L825-.L827)/2
 9146 00af 4B       		.byte	(.L825-.L827)/2
 9147 00b0 4B       		.byte	(.L825-.L827)/2
 9148 00b1 0E       		.byte	(.L831-.L827)/2
 9149 00b2 4B       		.byte	(.L825-.L827)/2
 9150 00b3 45       		.byte	(.L829-.L827)/2
 9151 00b4 4B       		.byte	(.L825-.L827)/2
 9152 00b5 4B       		.byte	(.L825-.L827)/2
 9153 00b6 48       		.byte	(.L832-.L827)/2
 9154              	.LVL1349:
 9155 00b7 00       		.p2align 1
 9156              	.L858:
6080:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9157              		.loc 1 6080 0
 9158 00b8 0B46     		mov	r3, r1
 9159 00ba EBE7     		b	.L824
 9160              	.LVL1350:
 9161              	.L831:
6083:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
6084:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9162              		.loc 1 6084 0
 9163 00bc 1B9B     		ldr	r3, [sp, #108]
 9164              	.LVL1351:
 9165 00be 1A1D     		adds	r2, r3, #4
 9166 00c0 1B92     		str	r2, [sp, #108]
 9167 00c2 D3F80080 		ldr	r8, [r3]
 9168              	.LVL1352:
6085:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9169              		.loc 1 6085 0
 9170 00c6 0027     		movs	r7, #0
 9171 00c8 00E0     		b	.L833
 9172              	.LVL1353:
 9173              	.L834:
 9174              		.loc 1 6085 0 is_stmt 0 discriminator 3
 9175 00ca 0137     		adds	r7, r7, #1
 9176              	.LVL1354:
 9177              	.L833:
 9178              		.loc 1 6085 0 discriminator 1
 9179 00cc 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 9180 00d0 002B     		cmp	r3, #0
 9181 00d2 FAD1     		bne	.L834
6086:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9182              		.loc 1 6086 0 is_stmt 1
 9183 00d4 16F0020F 		tst	r6, #2
 9184 00d8 10D1     		bne	.L838
 9185 00da 05E0     		b	.L835
 9186              	.LVL1355:
 9187              	.L837:
6087:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9188              		.loc 1 6087 0 discriminator 2
 9189 00dc 2021     		movs	r1, #32
 9190 00de 0DEB0100 		add	r0, sp, r1
 9191 00e2 FFF7FEFF 		bl	putc_bfd
 9192              	.LVL1356:
ARM GAS  /tmp/cc2OGbx6.s 			page 291


 9193 00e6 3746     		mov	r7, r6
 9194              	.LVL1357:
 9195              	.L835:
 9196              		.loc 1 6087 0 is_stmt 0 discriminator 1
 9197 00e8 7E1C     		adds	r6, r7, #1
 9198              	.LVL1358:
 9199 00ea A742     		cmp	r7, r4
 9200 00ec F6D3     		bcc	.L837
 9201              		.loc 1 6087 0
 9202 00ee 3746     		mov	r7, r6
 9203 00f0 04E0     		b	.L838
 9204              	.LVL1359:
 9205              	.L839:
6088:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
6089:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9206              		.loc 1 6089 0 is_stmt 1 discriminator 2
 9207 00f2 08F10108 		add	r8, r8, #1
 9208              	.LVL1360:
 9209 00f6 08A8     		add	r0, sp, #32
 9210 00f8 FFF7FEFF 		bl	putc_bfd
 9211              	.LVL1361:
 9212              	.L838:
 9213              		.loc 1 6089 0 is_stmt 0 discriminator 1
 9214 00fc 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 9215 0100 0029     		cmp	r1, #0
 9216 0102 F6D1     		bne	.L839
 9217 0104 05E0     		b	.L840
 9218              	.LVL1362:
 9219              	.L841:
6090:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9220              		.loc 1 6090 0 is_stmt 1 discriminator 2
 9221 0106 2021     		movs	r1, #32
 9222 0108 0DEB0100 		add	r0, sp, r1
 9223 010c FFF7FEFF 		bl	putc_bfd
 9224              	.LVL1363:
 9225 0110 3746     		mov	r7, r6
 9226              	.LVL1364:
 9227              	.L840:
 9228              		.loc 1 6090 0 is_stmt 0 discriminator 1
 9229 0112 7E1C     		adds	r6, r7, #1
 9230              	.LVL1365:
 9231 0114 A742     		cmp	r7, r4
 9232 0116 F6D3     		bcc	.L841
 9233 0118 83E7     		b	.L815
 9234              	.LVL1366:
 9235              	.L828:
6091:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
6092:Middlewares/Third_Party/FatFs/src/ff.c **** 
6093:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
6094:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9236              		.loc 1 6094 0 is_stmt 1
 9237 011a 1B9B     		ldr	r3, [sp, #108]
 9238              	.LVL1367:
 9239 011c 1A1D     		adds	r2, r3, #4
 9240 011e 1B92     		str	r2, [sp, #108]
 9241 0120 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9242              	.LVL1368:
ARM GAS  /tmp/cc2OGbx6.s 			page 292


 9243 0122 08A8     		add	r0, sp, #32
 9244 0124 FFF7FEFF 		bl	putc_bfd
 9245              	.LVL1369:
 9246 0128 7BE7     		b	.L815
 9247              	.LVL1370:
 9248              	.L829:
6095:Middlewares/Third_Party/FatFs/src/ff.c **** 
6096:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
6098:Middlewares/Third_Party/FatFs/src/ff.c **** 
6099:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
6101:Middlewares/Third_Party/FatFs/src/ff.c **** 
6102:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
6103:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
6104:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9249              		.loc 1 6104 0
 9250 012a 4FF00A0E 		mov	lr, #10
 9251 012e 0BE0     		b	.L830
 9252              	.LVL1371:
 9253              	.L832:
6105:Middlewares/Third_Party/FatFs/src/ff.c **** 
6106:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
6107:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9254              		.loc 1 6107 0
 9255 0130 4FF0100E 		mov	lr, #16
 9256 0134 08E0     		b	.L830
 9257              	.LVL1372:
 9258              	.L825:
6108:Middlewares/Third_Party/FatFs/src/ff.c **** 
6109:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
6110:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9259              		.loc 1 6110 0
 9260 0136 08A8     		add	r0, sp, #32
 9261 0138 FFF7FEFF 		bl	putc_bfd
 9262              	.LVL1373:
 9263 013c 71E7     		b	.L815
 9264              	.LVL1374:
 9265              	.L826:
6097:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9266              		.loc 1 6097 0
 9267 013e 4FF0020E 		mov	lr, #2
 9268 0142 01E0     		b	.L830
 9269              	.L859:
6100:Middlewares/Third_Party/FatFs/src/ff.c **** 
 9270              		.loc 1 6100 0
 9271 0144 4FF0080E 		mov	lr, #8
 9272              	.L830:
 9273              	.LVL1375:
6111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6112:Middlewares/Third_Party/FatFs/src/ff.c **** 
6113:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9274              		.loc 1 6114 0
 9275 0148 16F0040F 		tst	r6, #4
 9276 014c 13D0     		beq	.L842
 9277 014e 1B9A     		ldr	r2, [sp, #108]
ARM GAS  /tmp/cc2OGbx6.s 			page 293


 9278 0150 101D     		adds	r0, r2, #4
 9279 0152 1B90     		str	r0, [sp, #108]
 9280 0154 D2F80080 		ldr	r8, [r2]
 9281              	.L843:
 9282              	.LVL1376:
6115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9283              		.loc 1 6115 0 discriminator 8
 9284 0158 4FEAD872 		lsr	r2, r8, #31
 9285 015c 442B     		cmp	r3, #68
 9286 015e 14BF     		ite	ne
 9287 0160 0023     		movne	r3, #0
 9288 0162 02F00103 		andeq	r3, r2, #1
 9289              	.LVL1377:
 9290 0166 1BB1     		cbz	r3, .L845
6116:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9291              		.loc 1 6116 0
 9292 0168 C8F10008 		rsb	r8, r8, #0
 9293              	.LVL1378:
6117:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 9294              		.loc 1 6117 0
 9295 016c 46F00806 		orr	r6, r6, #8
 9296              	.LVL1379:
 9297              	.L845:
6118:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
6119:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9298              		.loc 1 6119 0
 9299 0170 4FF0000C 		mov	ip, #0
 9300 0174 20E0     		b	.L848
 9301              	.LVL1380:
 9302              	.L842:
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9303              		.loc 1 6114 0 discriminator 2
 9304 0176 442B     		cmp	r3, #68
 9305 0178 05D0     		beq	.L867
6114:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9306              		.loc 1 6114 0 is_stmt 0
 9307 017a 1B9A     		ldr	r2, [sp, #108]
 9308 017c 101D     		adds	r0, r2, #4
 9309 017e 1B90     		str	r0, [sp, #108]
 9310 0180 D2F80080 		ldr	r8, [r2]
 9311 0184 E8E7     		b	.L843
 9312              	.L867:
 9313 0186 1B9A     		ldr	r2, [sp, #108]
 9314 0188 101D     		adds	r0, r2, #4
 9315 018a 1B90     		str	r0, [sp, #108]
 9316 018c D2F80080 		ldr	r8, [r2]
 9317 0190 E2E7     		b	.L843
 9318              	.LVL1381:
 9319              	.L869:
6120:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9320              		.loc 1 6122 0 is_stmt 1
 9321 0192 2722     		movs	r2, #39
 9322              	.L847:
 9323              		.loc 1 6122 0 is_stmt 0 discriminator 5
 9324 0194 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc2OGbx6.s 			page 294


 9325              	.LVL1382:
 9326 0196 DBB2     		uxtb	r3, r3
 9327              	.LVL1383:
 9328              	.L846:
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9329              		.loc 1 6123 0 is_stmt 1
 9330 0198 0CF10107 		add	r7, ip, #1
 9331              	.LVL1384:
 9332 019c 3033     		adds	r3, r3, #48
 9333              	.LVL1385:
 9334 019e 1CAA     		add	r2, sp, #112
 9335 01a0 6244     		add	r2, r2, ip
 9336 01a2 02F8703C 		strb	r3, [r2, #-112]
6124:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof str / sizeof str[0]);
 9337              		.loc 1 6124 0
 9338 01a6 1F2F     		cmp	r7, #31
 9339 01a8 8CBF     		ite	hi
 9340 01aa 0022     		movhi	r2, #0
 9341 01ac 0122     		movls	r2, #1
 9342 01ae 0028     		cmp	r0, #0
 9343 01b0 08BF     		it	eq
 9344 01b2 0022     		moveq	r2, #0
 9345 01b4 62B1     		cbz	r2, .L868
6123:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9346              		.loc 1 6123 0
 9347 01b6 BC46     		mov	ip, r7
 9348              	.LVL1386:
 9349              	.L848:
6121:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9350              		.loc 1 6121 0
 9351 01b8 B8FBFEF0 		udiv	r0, r8, lr
 9352 01bc 0EFB1083 		mls	r3, lr, r0, r8
 9353 01c0 DBB2     		uxtb	r3, r3
 9354              	.LVL1387:
 9355 01c2 8046     		mov	r8, r0
 9356              	.LVL1388:
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9357              		.loc 1 6122 0
 9358 01c4 092B     		cmp	r3, #9
 9359 01c6 E7D9     		bls	.L846
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9360              		.loc 1 6122 0 is_stmt 0 discriminator 1
 9361 01c8 7829     		cmp	r1, #120
 9362 01ca E2D0     		beq	.L869
6122:Middlewares/Third_Party/FatFs/src/ff.c **** 			str[i++] = d + '0';
 9363              		.loc 1 6122 0
 9364 01cc 0722     		movs	r2, #7
 9365 01ce E1E7     		b	.L847
 9366              	.LVL1389:
 9367              	.L868:
6125:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) str[i++] = '-';
 9368              		.loc 1 6125 0 is_stmt 1
 9369 01d0 16F0080F 		tst	r6, #8
 9370 01d4 06D0     		beq	.L849
 9371              	.LVL1390:
 9372              		.loc 1 6125 0 is_stmt 0 discriminator 1
 9373 01d6 1CAB     		add	r3, sp, #112
ARM GAS  /tmp/cc2OGbx6.s 			page 295


 9374 01d8 1F44     		add	r7, r7, r3
 9375 01da 2D23     		movs	r3, #45
 9376 01dc 07F8703C 		strb	r3, [r7, #-112]
 9377 01e0 0CF10207 		add	r7, ip, #2
 9378              	.LVL1391:
 9379              	.L849:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9380              		.loc 1 6126 0 is_stmt 1
 9381 01e4 16F0010F 		tst	r6, #1
 9382 01e8 03D0     		beq	.L862
 9383 01ea 4FF0300A 		mov	r10, #48
 9384              	.L850:
 9385              	.LVL1392:
 9386              		.loc 1 6126 0 is_stmt 0 discriminator 4
 9387 01ee B846     		mov	r8, r7
6127:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9388              		.loc 1 6127 0 is_stmt 1 discriminator 4
 9389 01f0 07E0     		b	.L851
 9390              	.LVL1393:
 9391              	.L862:
6126:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9392              		.loc 1 6126 0
 9393 01f2 4FF0200A 		mov	r10, #32
 9394 01f6 FAE7     		b	.L850
 9395              	.LVL1394:
 9396              	.L853:
 9397              		.loc 1 6127 0 discriminator 3
 9398 01f8 5146     		mov	r1, r10
 9399 01fa 08A8     		add	r0, sp, #32
 9400 01fc FFF7FEFF 		bl	putc_bfd
 9401              	.LVL1395:
 9402 0200 C846     		mov	r8, r9
 9403              	.LVL1396:
 9404              	.L851:
 9405              		.loc 1 6127 0 is_stmt 0 discriminator 1
 9406 0202 16F0020F 		tst	r6, #2
 9407 0206 04D1     		bne	.L854
 9408              		.loc 1 6127 0 discriminator 2
 9409 0208 08F10109 		add	r9, r8, #1
 9410              	.LVL1397:
 9411 020c A045     		cmp	r8, r4
 9412 020e F3D3     		bcc	.L853
 9413              		.loc 1 6127 0
 9414 0210 C846     		mov	r8, r9
 9415              	.LVL1398:
 9416              	.L854:
6128:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
6129:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, str[--i]);
 9417              		.loc 1 6129 0 is_stmt 1 discriminator 1
 9418 0212 013F     		subs	r7, r7, #1
 9419              	.LVL1399:
 9420 0214 1CAB     		add	r3, sp, #112
 9421 0216 3B44     		add	r3, r3, r7
 9422 0218 13F8701C 		ldrb	r1, [r3, #-112]	@ zero_extendqisi2
 9423 021c 08A8     		add	r0, sp, #32
 9424 021e FFF7FEFF 		bl	putc_bfd
 9425              	.LVL1400:
ARM GAS  /tmp/cc2OGbx6.s 			page 296


6130:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i);
 9426              		.loc 1 6130 0 discriminator 1
 9427 0222 002F     		cmp	r7, #0
 9428 0224 F5D1     		bne	.L854
 9429 0226 04E0     		b	.L855
 9430              	.LVL1401:
 9431              	.L856:
6131:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9432              		.loc 1 6131 0 discriminator 2
 9433 0228 5146     		mov	r1, r10
 9434 022a 08A8     		add	r0, sp, #32
 9435 022c FFF7FEFF 		bl	putc_bfd
 9436              	.LVL1402:
 9437 0230 B046     		mov	r8, r6
 9438              	.LVL1403:
 9439              	.L855:
 9440              		.loc 1 6131 0 is_stmt 0 discriminator 1
 9441 0232 08F10106 		add	r6, r8, #1
 9442              	.LVL1404:
 9443 0236 A045     		cmp	r8, r4
 9444 0238 F6D3     		bcc	.L856
 9445 023a F2E6     		b	.L815
 9446              	.LVL1405:
 9447              	.L816:
6132:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
6133:Middlewares/Third_Party/FatFs/src/ff.c **** 
6134:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
6135:Middlewares/Third_Party/FatFs/src/ff.c **** 
6136:Middlewares/Third_Party/FatFs/src/ff.c **** 	return putc_flush(&pb);
 9448              		.loc 1 6136 0 is_stmt 1
 9449 023c 08A8     		add	r0, sp, #32
 9450 023e FFF7FEFF 		bl	putc_flush
 9451              	.LVL1406:
6137:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9452              		.loc 1 6137 0
 9453 0242 1DB0     		add	sp, sp, #116
 9454              	.LCFI133:
 9455              		.cfi_def_cfa_offset 44
 9456              		@ sp needed
 9457 0244 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9458              	.LCFI134:
 9459              		.cfi_restore 14
 9460              		.cfi_restore 10
 9461              		.cfi_restore 9
 9462              		.cfi_restore 8
 9463              		.cfi_restore 7
 9464              		.cfi_restore 6
 9465              		.cfi_restore 5
 9466              		.cfi_restore 4
 9467              		.cfi_def_cfa_offset 12
 9468 0248 03B0     		add	sp, sp, #12
 9469              	.LCFI135:
 9470              		.cfi_restore 3
 9471              		.cfi_restore 2
 9472              		.cfi_restore 1
 9473              		.cfi_def_cfa_offset 0
 9474 024a 7047     		bx	lr
ARM GAS  /tmp/cc2OGbx6.s 			page 297


 9475              		.cfi_endproc
 9476              	.LFE202:
 9478              		.section	.bss.FatFs,"aw",%nobits
 9479              		.align	2
 9480              		.set	.LANCHOR2,. + 0
 9483              	FatFs:
 9484 0000 00000000 		.space	4
 9485              		.section	.bss.Files,"aw",%nobits
 9486              		.align	2
 9487              		.set	.LANCHOR0,. + 0
 9490              	Files:
 9491 0000 00000000 		.space	32
 9491      00000000 
 9491      00000000 
 9491      00000000 
 9491      00000000 
 9492              		.section	.bss.Fsid,"aw",%nobits
 9493              		.align	1
 9494              		.set	.LANCHOR3,. + 0
 9497              	Fsid:
 9498 0000 0000     		.space	2
 9499              		.section	.rodata.ExCvt,"a",%progbits
 9500              		.align	2
 9501              		.set	.LANCHOR1,. + 0
 9504              	ExCvt:
 9505 0000 43       		.byte	67
 9506 0001 55       		.byte	85
 9507 0002 45       		.byte	69
 9508 0003 41       		.byte	65
 9509 0004 41       		.byte	65
 9510 0005 41       		.byte	65
 9511 0006 41       		.byte	65
 9512 0007 43       		.byte	67
 9513 0008 45       		.byte	69
 9514 0009 45       		.byte	69
 9515 000a 45       		.byte	69
 9516 000b 49       		.byte	73
 9517 000c 49       		.byte	73
 9518 000d 49       		.byte	73
 9519 000e 41       		.byte	65
 9520 000f 41       		.byte	65
 9521 0010 45       		.byte	69
 9522 0011 92       		.byte	-110
 9523 0012 92       		.byte	-110
 9524 0013 4F       		.byte	79
 9525 0014 4F       		.byte	79
 9526 0015 4F       		.byte	79
 9527 0016 55       		.byte	85
 9528 0017 55       		.byte	85
 9529 0018 59       		.byte	89
 9530 0019 4F       		.byte	79
 9531 001a 55       		.byte	85
 9532 001b 4F       		.byte	79
 9533 001c 9C       		.byte	-100
 9534 001d 4F       		.byte	79
 9535 001e 9E       		.byte	-98
 9536 001f 9F       		.byte	-97
ARM GAS  /tmp/cc2OGbx6.s 			page 298


 9537 0020 41       		.byte	65
 9538 0021 49       		.byte	73
 9539 0022 4F       		.byte	79
 9540 0023 55       		.byte	85
 9541 0024 A5       		.byte	-91
 9542 0025 A5       		.byte	-91
 9543 0026 A6       		.byte	-90
 9544 0027 A7       		.byte	-89
 9545 0028 A8       		.byte	-88
 9546 0029 A9       		.byte	-87
 9547 002a AA       		.byte	-86
 9548 002b AB       		.byte	-85
 9549 002c AC       		.byte	-84
 9550 002d AD       		.byte	-83
 9551 002e AE       		.byte	-82
 9552 002f AF       		.byte	-81
 9553 0030 B0       		.byte	-80
 9554 0031 B1       		.byte	-79
 9555 0032 B2       		.byte	-78
 9556 0033 B3       		.byte	-77
 9557 0034 B4       		.byte	-76
 9558 0035 41       		.byte	65
 9559 0036 41       		.byte	65
 9560 0037 41       		.byte	65
 9561 0038 B8       		.byte	-72
 9562 0039 B9       		.byte	-71
 9563 003a BA       		.byte	-70
 9564 003b BB       		.byte	-69
 9565 003c BC       		.byte	-68
 9566 003d BD       		.byte	-67
 9567 003e BE       		.byte	-66
 9568 003f BF       		.byte	-65
 9569 0040 C0       		.byte	-64
 9570 0041 C1       		.byte	-63
 9571 0042 C2       		.byte	-62
 9572 0043 C3       		.byte	-61
 9573 0044 C4       		.byte	-60
 9574 0045 C5       		.byte	-59
 9575 0046 41       		.byte	65
 9576 0047 41       		.byte	65
 9577 0048 C8       		.byte	-56
 9578 0049 C9       		.byte	-55
 9579 004a CA       		.byte	-54
 9580 004b CB       		.byte	-53
 9581 004c CC       		.byte	-52
 9582 004d CD       		.byte	-51
 9583 004e CE       		.byte	-50
 9584 004f CF       		.byte	-49
 9585 0050 D1       		.byte	-47
 9586 0051 D1       		.byte	-47
 9587 0052 45       		.byte	69
 9588 0053 45       		.byte	69
 9589 0054 45       		.byte	69
 9590 0055 49       		.byte	73
 9591 0056 49       		.byte	73
 9592 0057 49       		.byte	73
 9593 0058 49       		.byte	73
ARM GAS  /tmp/cc2OGbx6.s 			page 299


 9594 0059 D9       		.byte	-39
 9595 005a DA       		.byte	-38
 9596 005b DB       		.byte	-37
 9597 005c DC       		.byte	-36
 9598 005d DD       		.byte	-35
 9599 005e 49       		.byte	73
 9600 005f DF       		.byte	-33
 9601 0060 4F       		.byte	79
 9602 0061 E1       		.byte	-31
 9603 0062 4F       		.byte	79
 9604 0063 4F       		.byte	79
 9605 0064 4F       		.byte	79
 9606 0065 4F       		.byte	79
 9607 0066 E6       		.byte	-26
 9608 0067 E8       		.byte	-24
 9609 0068 E8       		.byte	-24
 9610 0069 55       		.byte	85
 9611 006a 55       		.byte	85
 9612 006b 55       		.byte	85
 9613 006c 59       		.byte	89
 9614 006d 59       		.byte	89
 9615 006e EE       		.byte	-18
 9616 006f EF       		.byte	-17
 9617 0070 F0       		.byte	-16
 9618 0071 F1       		.byte	-15
 9619 0072 F2       		.byte	-14
 9620 0073 F3       		.byte	-13
 9621 0074 F4       		.byte	-12
 9622 0075 F5       		.byte	-11
 9623 0076 F6       		.byte	-10
 9624 0077 F7       		.byte	-9
 9625 0078 F8       		.byte	-8
 9626 0079 F9       		.byte	-7
 9627 007a FA       		.byte	-6
 9628 007b FB       		.byte	-5
 9629 007c FC       		.byte	-4
 9630 007d FD       		.byte	-3
 9631 007e FE       		.byte	-2
 9632 007f FF       		.byte	-1
 9633              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 9634              		.align	2
 9635              	.LC0:
 9636 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9636      3A3B3C3D 
 9636      3E3F5B5D 
 9636      7C7F00
 9637              		.section	.rodata.cst.12405,"a",%progbits
 9638              		.align	2
 9639              		.set	.LANCHOR5,. + 0
 9642              	cst.12405:
 9643 0000 0100     		.short	1
 9644 0002 0400     		.short	4
 9645 0004 1000     		.short	16
 9646 0006 4000     		.short	64
 9647 0008 0001     		.short	256
 9648 000a 0002     		.short	512
 9649 000c 0000     		.short	0
ARM GAS  /tmp/cc2OGbx6.s 			page 300


 9650              		.section	.rodata.cst32.12406,"a",%progbits
 9651              		.align	2
 9652              		.set	.LANCHOR4,. + 0
 9655              	cst32.12406:
 9656 0000 0100     		.short	1
 9657 0002 0200     		.short	2
 9658 0004 0400     		.short	4
 9659 0006 0800     		.short	8
 9660 0008 1000     		.short	16
 9661 000a 2000     		.short	32
 9662 000c 0000     		.short	0
 9663              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 9664              		.align	2
 9665              	.LC1:
 9666 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9666      53444F53 
 9666      352E3000 
 9667              	.LC2:
 9668 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9668      414D4520 
 9668      20202046 
 9668      41543332 
 9668      20202000 
 9669              	.LC3:
 9670 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 9670      414D4520 
 9670      20202046 
 9670      41542020 
 9670      20202000 
 9671              		.text
 9672              	.Letext0:
 9673              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9674              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 9675              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 9676              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 9677              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 9678              		.file 7 "/usr/include/newlib/sys/lock.h"
 9679              		.file 8 "/usr/include/newlib/sys/_types.h"
 9680              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 9681              		.file 10 "/usr/include/newlib/sys/reent.h"
 9682              		.file 11 "/usr/include/newlib/math.h"
 9683              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 9684              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 9685              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 9686              		.file 15 "/usr/include/newlib/stdlib.h"
 9687              		.file 16 "Middlewares/Third_Party/FatFs/src/ff.h"
 9688              		.file 17 "Middlewares/Third_Party/FatFs/src/diskio.h"
 9689              		.file 18 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stdarg.h"
 9690              		.file 19 "<built-in>"
 9691              		.file 20 "Core/Inc/main.h"
ARM GAS  /tmp/cc2OGbx6.s 			page 301


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/cc2OGbx6.s:17     .text.ld_word:0000000000000000 $t
     /tmp/cc2OGbx6.s:23     .text.ld_word:0000000000000000 ld_word
     /tmp/cc2OGbx6.s:46     .text.ld_dword:0000000000000000 $t
     /tmp/cc2OGbx6.s:52     .text.ld_dword:0000000000000000 ld_dword
     /tmp/cc2OGbx6.s:82     .text.st_word:0000000000000000 $t
     /tmp/cc2OGbx6.s:88     .text.st_word:0000000000000000 st_word
     /tmp/cc2OGbx6.s:109    .text.st_dword:0000000000000000 $t
     /tmp/cc2OGbx6.s:115    .text.st_dword:0000000000000000 st_dword
     /tmp/cc2OGbx6.s:144    .text.mem_cpy:0000000000000000 $t
     /tmp/cc2OGbx6.s:150    .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/cc2OGbx6.s:182    .text.mem_set:0000000000000000 $t
     /tmp/cc2OGbx6.s:188    .text.mem_set:0000000000000000 mem_set
     /tmp/cc2OGbx6.s:212    .text.mem_cmp:0000000000000000 $t
     /tmp/cc2OGbx6.s:218    .text.mem_cmp:0000000000000000 mem_cmp
     /tmp/cc2OGbx6.s:268    .text.chk_chr:0000000000000000 $t
     /tmp/cc2OGbx6.s:274    .text.chk_chr:0000000000000000 chk_chr
     /tmp/cc2OGbx6.s:304    .text.chk_lock:0000000000000000 $t
     /tmp/cc2OGbx6.s:310    .text.chk_lock:0000000000000000 chk_lock
     /tmp/cc2OGbx6.s:426    .text.chk_lock:0000000000000070 $d
     /tmp/cc2OGbx6.s:431    .text.enq_lock:0000000000000000 $t
     /tmp/cc2OGbx6.s:437    .text.enq_lock:0000000000000000 enq_lock
     /tmp/cc2OGbx6.s:474    .text.enq_lock:000000000000001c $d
     /tmp/cc2OGbx6.s:479    .text.inc_lock:0000000000000000 $t
     /tmp/cc2OGbx6.s:485    .text.inc_lock:0000000000000000 inc_lock
     /tmp/cc2OGbx6.s:638    .text.inc_lock:00000000000000a0 $d
     /tmp/cc2OGbx6.s:643    .text.dec_lock:0000000000000000 $t
     /tmp/cc2OGbx6.s:649    .text.dec_lock:0000000000000000 dec_lock
     /tmp/cc2OGbx6.s:714    .text.dec_lock:000000000000003c $d
     /tmp/cc2OGbx6.s:719    .text.clear_lock:0000000000000000 $t
     /tmp/cc2OGbx6.s:725    .text.clear_lock:0000000000000000 clear_lock
     /tmp/cc2OGbx6.s:791    .text.clear_lock:0000000000000038 $d
     /tmp/cc2OGbx6.s:796    .text.clust2sect:0000000000000000 $t
     /tmp/cc2OGbx6.s:802    .text.clust2sect:0000000000000000 clust2sect
     /tmp/cc2OGbx6.s:835    .text.clmt_clust:0000000000000000 $t
     /tmp/cc2OGbx6.s:841    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/cc2OGbx6.s:892    .text.ld_clust:0000000000000000 $t
     /tmp/cc2OGbx6.s:898    .text.ld_clust:0000000000000000 ld_clust
     /tmp/cc2OGbx6.s:943    .text.st_clust:0000000000000000 $t
     /tmp/cc2OGbx6.s:949    .text.st_clust:0000000000000000 st_clust
     /tmp/cc2OGbx6.s:993    .text.get_fileinfo:0000000000000000 $t
     /tmp/cc2OGbx6.s:999    .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/cc2OGbx6.s:1113   .text.create_name:0000000000000000 $t
     /tmp/cc2OGbx6.s:1119   .text.create_name:0000000000000000 create_name
     /tmp/cc2OGbx6.s:1300   .text.create_name:00000000000000cc $d
     /tmp/cc2OGbx6.s:1306   .text.get_ldnumber:0000000000000000 $t
     /tmp/cc2OGbx6.s:1312   .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/cc2OGbx6.s:1408   .text.putc_init:0000000000000000 $t
     /tmp/cc2OGbx6.s:1414   .text.putc_init:0000000000000000 putc_init
     /tmp/cc2OGbx6.s:1434   .text.validate:0000000000000000 $t
     /tmp/cc2OGbx6.s:1440   .text.validate:0000000000000000 validate
     /tmp/cc2OGbx6.s:1529   .text.sync_window:0000000000000000 $t
     /tmp/cc2OGbx6.s:1535   .text.sync_window:0000000000000000 sync_window
     /tmp/cc2OGbx6.s:1625   .text.move_window:0000000000000000 $t
     /tmp/cc2OGbx6.s:1631   .text.move_window:0000000000000000 move_window
     /tmp/cc2OGbx6.s:1689   .text.check_fs:0000000000000000 $t
ARM GAS  /tmp/cc2OGbx6.s 			page 302


     /tmp/cc2OGbx6.s:1695   .text.check_fs:0000000000000000 check_fs
     /tmp/cc2OGbx6.s:1778   .text.check_fs:0000000000000070 $d
     /tmp/cc2OGbx6.s:1785   .text.find_volume:0000000000000000 $t
     /tmp/cc2OGbx6.s:1791   .text.find_volume:0000000000000000 find_volume
     /tmp/cc2OGbx6.s:2342   .text.find_volume:00000000000002f4 $d
     /tmp/cc2OGbx6.s:2350   .text.put_fat:0000000000000000 $t
     /tmp/cc2OGbx6.s:2356   .text.put_fat:0000000000000000 put_fat
     /tmp/cc2OGbx6.s:2554   .text.get_fat:0000000000000000 $t
     /tmp/cc2OGbx6.s:2560   .text.get_fat:0000000000000000 get_fat
     /tmp/cc2OGbx6.s:2726   .text.dir_sdi:0000000000000000 $t
     /tmp/cc2OGbx6.s:2732   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/cc2OGbx6.s:2889   .text.create_chain:0000000000000000 $t
     /tmp/cc2OGbx6.s:2895   .text.create_chain:0000000000000000 create_chain
     /tmp/cc2OGbx6.s:3079   .text.remove_chain:0000000000000000 $t
     /tmp/cc2OGbx6.s:3085   .text.remove_chain:0000000000000000 remove_chain
     /tmp/cc2OGbx6.s:3206   .text.dir_remove:0000000000000000 $t
     /tmp/cc2OGbx6.s:3212   .text.dir_remove:0000000000000000 dir_remove
     /tmp/cc2OGbx6.s:3255   .text.dir_next:0000000000000000 $t
     /tmp/cc2OGbx6.s:3261   .text.dir_next:0000000000000000 dir_next
     /tmp/cc2OGbx6.s:3490   .text.dir_find:0000000000000000 $t
     /tmp/cc2OGbx6.s:3496   .text.dir_find:0000000000000000 dir_find
     /tmp/cc2OGbx6.s:3582   .text.follow_path:0000000000000000 $t
     /tmp/cc2OGbx6.s:3588   .text.follow_path:0000000000000000 follow_path
     /tmp/cc2OGbx6.s:3714   .text.dir_alloc:0000000000000000 $t
     /tmp/cc2OGbx6.s:3720   .text.dir_alloc:0000000000000000 dir_alloc
     /tmp/cc2OGbx6.s:3810   .text.dir_register:0000000000000000 $t
     /tmp/cc2OGbx6.s:3816   .text.dir_register:0000000000000000 dir_register
     /tmp/cc2OGbx6.s:3879   .text.dir_read:0000000000000000 $t
     /tmp/cc2OGbx6.s:3885   .text.dir_read:0000000000000000 dir_read
     /tmp/cc2OGbx6.s:3982   .text.sync_fs:0000000000000000 $t
     /tmp/cc2OGbx6.s:3988   .text.sync_fs:0000000000000000 sync_fs
     /tmp/cc2OGbx6.s:4084   .text.sync_fs:0000000000000084 $d
     /tmp/cc2OGbx6.s:4090   .text.f_mount:0000000000000000 $t
     /tmp/cc2OGbx6.s:4097   .text.f_mount:0000000000000000 f_mount
     /tmp/cc2OGbx6.s:4192   .text.f_mount:0000000000000060 $d
     /tmp/cc2OGbx6.s:4197   .text.f_open:0000000000000000 $t
     /tmp/cc2OGbx6.s:4204   .text.f_open:0000000000000000 f_open
     /tmp/cc2OGbx6.s:4639   .text.f_read:0000000000000000 $t
     /tmp/cc2OGbx6.s:4646   .text.f_read:0000000000000000 f_read
     /tmp/cc2OGbx6.s:4953   .text.f_write:0000000000000000 $t
     /tmp/cc2OGbx6.s:4960   .text.f_write:0000000000000000 f_write
     /tmp/cc2OGbx6.s:5304   .text.putc_bfd:0000000000000000 $t
     /tmp/cc2OGbx6.s:5310   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/cc2OGbx6.s:5400   .text.putc_flush:0000000000000000 $t
     /tmp/cc2OGbx6.s:5406   .text.putc_flush:0000000000000000 putc_flush
     /tmp/cc2OGbx6.s:5476   .text.f_sync:0000000000000000 $t
     /tmp/cc2OGbx6.s:5483   .text.f_sync:0000000000000000 f_sync
     /tmp/cc2OGbx6.s:5615   .text.f_close:0000000000000000 $t
     /tmp/cc2OGbx6.s:5622   .text.f_close:0000000000000000 f_close
     /tmp/cc2OGbx6.s:5685   .text.f_lseek:0000000000000000 $t
     /tmp/cc2OGbx6.s:5692   .text.f_lseek:0000000000000000 f_lseek
     /tmp/cc2OGbx6.s:6221   .text.f_opendir:0000000000000000 $t
     /tmp/cc2OGbx6.s:6228   .text.f_opendir:0000000000000000 f_opendir
     /tmp/cc2OGbx6.s:6360   .text.f_closedir:0000000000000000 $t
     /tmp/cc2OGbx6.s:6367   .text.f_closedir:0000000000000000 f_closedir
     /tmp/cc2OGbx6.s:6425   .text.f_readdir:0000000000000000 $t
     /tmp/cc2OGbx6.s:6432   .text.f_readdir:0000000000000000 f_readdir
ARM GAS  /tmp/cc2OGbx6.s 			page 303


     /tmp/cc2OGbx6.s:6521   .text.f_stat:0000000000000000 $t
     /tmp/cc2OGbx6.s:6528   .text.f_stat:0000000000000000 f_stat
     /tmp/cc2OGbx6.s:6604   .text.f_getfree:0000000000000000 $t
     /tmp/cc2OGbx6.s:6611   .text.f_getfree:0000000000000000 f_getfree
     /tmp/cc2OGbx6.s:6825   .text.f_truncate:0000000000000000 $t
     /tmp/cc2OGbx6.s:6832   .text.f_truncate:0000000000000000 f_truncate
     /tmp/cc2OGbx6.s:6988   .text.f_unlink:0000000000000000 $t
     /tmp/cc2OGbx6.s:6995   .text.f_unlink:0000000000000000 f_unlink
     /tmp/cc2OGbx6.s:7176   .text.f_mkdir:0000000000000000 $t
     /tmp/cc2OGbx6.s:7183   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/cc2OGbx6.s:7484   .text.f_rename:0000000000000000 $t
     /tmp/cc2OGbx6.s:7491   .text.f_rename:0000000000000000 f_rename
     /tmp/cc2OGbx6.s:7721   .text.f_mkfs:0000000000000000 $t
     /tmp/cc2OGbx6.s:7728   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/cc2OGbx6.s:8152   .text.f_mkfs:0000000000000268 $d
     /tmp/cc2OGbx6.s:8159   .text.f_mkfs:0000000000000280 $t
     /tmp/cc2OGbx6.s:8738   .text.f_mkfs:000000000000062c $d
     /tmp/cc2OGbx6.s:8747   .text.f_mkfs:0000000000000644 $t
     /tmp/cc2OGbx6.s:8768   .text.f_gets:0000000000000000 $t
     /tmp/cc2OGbx6.s:8775   .text.f_gets:0000000000000000 f_gets
     /tmp/cc2OGbx6.s:8871   .text.f_putc:0000000000000000 $t
     /tmp/cc2OGbx6.s:8878   .text.f_putc:0000000000000000 f_putc
     /tmp/cc2OGbx6.s:8918   .text.f_puts:0000000000000000 $t
     /tmp/cc2OGbx6.s:8925   .text.f_puts:0000000000000000 f_puts
     /tmp/cc2OGbx6.s:8974   .text.f_printf:0000000000000000 $t
     /tmp/cc2OGbx6.s:8981   .text.f_printf:0000000000000000 f_printf
     /tmp/cc2OGbx6.s:9131   .text.f_printf:00000000000000a0 $d
     /tmp/cc2OGbx6.s:9479   .bss.FatFs:0000000000000000 $d
     /tmp/cc2OGbx6.s:9483   .bss.FatFs:0000000000000000 FatFs
     /tmp/cc2OGbx6.s:9486   .bss.Files:0000000000000000 $d
     /tmp/cc2OGbx6.s:9490   .bss.Files:0000000000000000 Files
     /tmp/cc2OGbx6.s:9493   .bss.Fsid:0000000000000000 $d
     /tmp/cc2OGbx6.s:9497   .bss.Fsid:0000000000000000 Fsid
     /tmp/cc2OGbx6.s:9500   .rodata.ExCvt:0000000000000000 $d
     /tmp/cc2OGbx6.s:9504   .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/cc2OGbx6.s:9634   .rodata.create_name.str1.4:0000000000000000 $d
     /tmp/cc2OGbx6.s:9638   .rodata.cst.12405:0000000000000000 $d
     /tmp/cc2OGbx6.s:9642   .rodata.cst.12405:0000000000000000 cst.12405
     /tmp/cc2OGbx6.s:9651   .rodata.cst32.12406:0000000000000000 $d
     /tmp/cc2OGbx6.s:9655   .rodata.cst32.12406:0000000000000000 cst32.12406
     /tmp/cc2OGbx6.s:9664   .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/cc2OGbx6.s:9155   .text.f_printf:00000000000000b7 $d
     /tmp/cc2OGbx6.s:9155   .text.f_printf:00000000000000b8 $t

UNDEFINED SYMBOLS
disk_status
disk_write
disk_read
disk_initialize
disk_ioctl
get_fattime
