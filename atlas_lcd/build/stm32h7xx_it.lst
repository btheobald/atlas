ARM GAS  /tmp/cc1morcM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	NMI_Handler:
  25              	.LFB141:
  26              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32h7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32h7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32h7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32h7xx_it.c ****   *
  17:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32h7xx_it.c ****   */
  19:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32h7xx_it.c **** 
  21:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32h7xx_it.c **** #include "main.h"
  23:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  24:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32h7xx_it.c **** 
  28:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32h7xx_it.c **** 
  31:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /tmp/cc1morcM.s 			page 2


  33:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32h7xx_it.c **** 
  36:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32h7xx_it.c **** 
  38:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32h7xx_it.c **** 
  41:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32h7xx_it.c **** 
  43:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32h7xx_it.c **** 
  46:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32h7xx_it.c **** 
  48:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32h7xx_it.c **** 
  51:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32h7xx_it.c **** 
  53:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32h7xx_it.c **** 
  56:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32h7xx_it.c **** 
  58:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32h7xx_it.c **** 
  60:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32h7xx_it.c **** 
  62:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32h7xx_it.c **** 
  64:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32h7xx_it.c **** /**
  68:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32h7xx_it.c ****   */
  70:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32h7xx_it.c **** {
  27              		.loc 1 71 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  34 0000 FEE7     		b	.L2
  35              		.cfi_endproc
  36              	.LFE141:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-d16
  46              	HardFault_Handler:
ARM GAS  /tmp/cc1morcM.s 			page 3


  47              	.LFB142:
  72:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32h7xx_it.c **** 
  74:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32h7xx_it.c ****   while (1)
  77:Core/Src/stm32h7xx_it.c ****   {
  78:Core/Src/stm32h7xx_it.c ****   }
  79:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32h7xx_it.c **** }
  81:Core/Src/stm32h7xx_it.c **** 
  82:Core/Src/stm32h7xx_it.c **** /**
  83:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32h7xx_it.c ****   */
  85:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32h7xx_it.c **** {
  48              		.loc 1 86 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L4:
  55 0000 FEE7     		b	.L4
  56              		.cfi_endproc
  57              	.LFE142:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-d16
  67              	MemManage_Handler:
  68              	.LFB143:
  87:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32h7xx_it.c **** 
  89:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32h7xx_it.c ****   while (1)
  91:Core/Src/stm32h7xx_it.c ****   {
  92:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32h7xx_it.c ****   }
  95:Core/Src/stm32h7xx_it.c **** }
  96:Core/Src/stm32h7xx_it.c **** 
  97:Core/Src/stm32h7xx_it.c **** /**
  98:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
  99:Core/Src/stm32h7xx_it.c ****   */
 100:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 101:Core/Src/stm32h7xx_it.c **** {
  69              		.loc 1 101 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L6:
ARM GAS  /tmp/cc1morcM.s 			page 4


  76 0000 FEE7     		b	.L6
  77              		.cfi_endproc
  78              	.LFE143:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-d16
  88              	BusFault_Handler:
  89              	.LFB144:
 102:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32h7xx_it.c **** 
 104:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32h7xx_it.c ****   while (1)
 106:Core/Src/stm32h7xx_it.c ****   {
 107:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32h7xx_it.c ****   }
 110:Core/Src/stm32h7xx_it.c **** }
 111:Core/Src/stm32h7xx_it.c **** 
 112:Core/Src/stm32h7xx_it.c **** /**
 113:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Core/Src/stm32h7xx_it.c ****   */
 115:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32h7xx_it.c **** {
  90              		.loc 1 116 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L8:
  97 0000 FEE7     		b	.L8
  98              		.cfi_endproc
  99              	.LFE144:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-d16
 109              	UsageFault_Handler:
 110              	.LFB145:
 117:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32h7xx_it.c **** 
 119:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32h7xx_it.c ****   while (1)
 121:Core/Src/stm32h7xx_it.c ****   {
 122:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32h7xx_it.c ****   }
 125:Core/Src/stm32h7xx_it.c **** }
 126:Core/Src/stm32h7xx_it.c **** 
 127:Core/Src/stm32h7xx_it.c **** /**
ARM GAS  /tmp/cc1morcM.s 			page 5


 128:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32h7xx_it.c ****   */
 130:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32h7xx_it.c **** {
 111              		.loc 1 131 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L10:
 118 0000 FEE7     		b	.L10
 119              		.cfi_endproc
 120              	.LFE145:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv5-d16
 130              	SVC_Handler:
 131              	.LFB146:
 132:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32h7xx_it.c **** 
 134:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32h7xx_it.c ****   while (1)
 136:Core/Src/stm32h7xx_it.c ****   {
 137:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32h7xx_it.c ****   }
 140:Core/Src/stm32h7xx_it.c **** }
 141:Core/Src/stm32h7xx_it.c **** 
 142:Core/Src/stm32h7xx_it.c **** /**
 143:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Core/Src/stm32h7xx_it.c ****   */
 145:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 146:Core/Src/stm32h7xx_it.c **** {
 132              		.loc 1 146 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 147:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Core/Src/stm32h7xx_it.c **** 
 149:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Core/Src/stm32h7xx_it.c **** 
 152:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Core/Src/stm32h7xx_it.c **** }
 137              		.loc 1 153 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE146:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
ARM GAS  /tmp/cc1morcM.s 			page 6


 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	DebugMon_Handler:
 151              	.LFB147:
 154:Core/Src/stm32h7xx_it.c **** 
 155:Core/Src/stm32h7xx_it.c **** /**
 156:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 157:Core/Src/stm32h7xx_it.c ****   */
 158:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 159:Core/Src/stm32h7xx_it.c **** {
 152              		.loc 1 159 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 160:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Core/Src/stm32h7xx_it.c **** 
 162:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Core/Src/stm32h7xx_it.c **** 
 165:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Core/Src/stm32h7xx_it.c **** }
 157              		.loc 1 166 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE147:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv5-d16
 170              	PendSV_Handler:
 171              	.LFB148:
 167:Core/Src/stm32h7xx_it.c **** 
 168:Core/Src/stm32h7xx_it.c **** /**
 169:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Core/Src/stm32h7xx_it.c ****   */
 171:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 172:Core/Src/stm32h7xx_it.c **** {
 172              		.loc 1 172 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 173:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Core/Src/stm32h7xx_it.c **** 
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Core/Src/stm32h7xx_it.c **** 
 178:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Core/Src/stm32h7xx_it.c **** }
 177              		.loc 1 179 0
 178 0000 7047     		bx	lr
ARM GAS  /tmp/cc1morcM.s 			page 7


 179              		.cfi_endproc
 180              	.LFE148:
 182              		.section	.text.SysTick_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv5-d16
 190              	SysTick_Handler:
 191              	.LFB149:
 180:Core/Src/stm32h7xx_it.c **** 
 181:Core/Src/stm32h7xx_it.c **** /**
 182:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 183:Core/Src/stm32h7xx_it.c ****   */
 184:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 185:Core/Src/stm32h7xx_it.c **** {
 192              		.loc 1 185 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 186:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Core/Src/stm32h7xx_it.c **** 
 188:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 201              		.loc 1 189 0
 202 0002 FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL0:
 190:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Core/Src/stm32h7xx_it.c **** 
 192:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Core/Src/stm32h7xx_it.c **** }
 204              		.loc 1 193 0
 205 0006 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE149:
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 213              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 214              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 215              		.file 6 "/usr/include/newlib/sys/lock.h"
 216              		.file 7 "/usr/include/newlib/sys/_types.h"
 217              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 218              		.file 9 "/usr/include/newlib/sys/reent.h"
 219              		.file 10 "/usr/include/newlib/math.h"
 220              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 221              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 222              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 223              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/cc1morcM.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/cc1morcM.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc1morcM.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc1morcM.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc1morcM.s:81     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc1morcM.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:109    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc1morcM.s:123    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:130    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc1morcM.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:150    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc1morcM.s:163    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc1morcM.s:183    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc1morcM.s:190    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
