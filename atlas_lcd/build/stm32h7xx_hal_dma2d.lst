ARM GAS  /tmp/ccdAsAmP.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_dma2d.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.DMA2D_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	DMA2D_SetConfig:
  24              	.LFB172:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @file    stm32h7xx_hal_dma2d.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief   DMA2D HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          functionalities of the DMA2D peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @verbatim
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                         ##### How to use this driver #####
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ==============================================================================
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the transfer mode, the output color mode and the output offset using
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_Init() function.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the input color mode, the input color, the input alpha value, the alpha mode,
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           the red/blue swap mode, the inverted alpha mode and the input offset using
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_ConfigLayer() function for foreground or/and background layer.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Polling mode IO operation ***
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =================================
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter (explained hereafter), destination and data length
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            and enable the transfer using HAL_DMA2D_Start().
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Wait for end of transfer using HAL_DMA2D_PollForTransfer(), at this stage
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            user can specify the value of timeout according to his end application.
ARM GAS  /tmp/ccdAsAmP.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Interrupt mode IO operation ***
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Configure pdata parameter, destination and data length and enable
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            the transfer using HAL_DMA2D_Start_IT().
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) Use HAL_DMA2D_IRQHandler() called under DMA2D_IRQHandler() interrupt subroutine.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) At the end of data transfer HAL_DMA2D_IRQHandler() function is executed and user can
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            add his own function by customization of function pointer XferCpltCallback (member
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            of DMA2D handle structure).
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        (#) In case of error, the HAL_DMA2D_IRQHandler() function calls the callback
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****            XferErrorCallback.
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   In Register-to-Memory transfer mode, pdata parameter is the register
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                color, in Memory-to-memory or Memory-to-Memory with pixel format
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                conversion pdata is the source address.
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   Configure the foreground source address, the background source address,
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                the destination and data length then Enable the transfer using
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                HAL_DMA2D_BlendingStart() in polling mode and HAL_DMA2D_BlendingStart_IT()
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                in interrupt mode.
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****          -@-   HAL_DMA2D_BlendingStart() and HAL_DMA2D_BlendingStart_IT() functions
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                are used if the memory to memory with blending transfer mode is selected.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure and enable the CLUT using HAL_DMA2D_CLUTLoad() in polling
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           mode or HAL_DMA2D_CLUTLoad_IT() in interrupt mode.
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the line watermark in using the API HAL_DMA2D_ProgramLineEvent().
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Optionally, configure the dead time value in the AHB clock cycle inserted between two
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           consecutive accesses on the AHB master port in using the API HAL_DMA2D_ConfigDeadTime()
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and enable/disable the functionality  with the APIs HAL_DMA2D_EnableDeadTime() or
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_DisableDeadTime().
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The transfer can be suspended, resumed and aborted using the following
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_Suspend(), HAL_DMA2D_Resume(), HAL_DMA2D_Abort().
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The CLUT loading can be suspended, resumed and aborted using the following
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           functions: HAL_DMA2D_CLUTLoading_Suspend(), HAL_DMA2D_CLUTLoading_Resume(),
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           HAL_DMA2D_CLUTLoading_Abort().
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To control the DMA2D state, use the following function: HAL_DMA2D_GetState().
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) To read the DMA2D error code, use the following function: HAL_DMA2D_GetError().
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** DMA2D HAL driver macros list ***
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      =============================================
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        Below the list of most used macros in DMA2D HAL driver :
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE: Enable the DMA2D peripheral.
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_FLAG: Get the DMA2D pending flags.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_CLEAR_FLAG: Clear the DMA2D pending flags.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE_IT: Enable the specified DMA2D interrupts.
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_DISABLE_IT: Disable the specified DMA2D interrupts.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_IT_SOURCE: Check whether the specified DMA2D interrupt is enabled or not.
ARM GAS  /tmp/ccdAsAmP.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      *** Callback registration ***
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      ===================================
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) The compilation define  USE_HAL_DMA2D_REGISTER_CALLBACKS when set to 1
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           allows the user to configure dynamically the driver callbacks.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Use function @ref HAL_DMA2D_RegisterCallback() to register a user callback.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Function @ref HAL_DMA2D_RegisterCallback() allows to register following callbacks:
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and a pointer to the user callback function.
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) Use function @ref HAL_DMA2D_UnRegisterCallback() to reset a callback to the default
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           weak (surcharged) function.
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           @ref HAL_DMA2D_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and the Callback ID.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           This function allows to reset following callbacks:
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferCpltCallback : callback for transfer complete.
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) XferErrorCallback : callback for transfer error.
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) LineEventCallback : callback for line event.
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) CLUTLoadingCpltCallback : callback for CLUT loading completion.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspInitCallback    : DMA2D MspInit.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             (+) MspDeInitCallback  : DMA2D MspDeInit.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (#) By default, after the @ref HAL_DMA2D_Init and if the state is HAL_DMA2D_STATE_RESET
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           all callbacks are reset to the corresponding legacy weak (surcharged) functions:
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           examples @ref HAL_DMA2D_LineEventCallback(), @ref HAL_DMA2D_CLUTLoadingCpltCallback()
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit and MspDeInit callbacks that are respectively
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           reset to the legacy weak (surcharged) functions in the @ref HAL_DMA2D_Init
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and @ref HAL_DMA2D_DeInit only when these callbacks are null (not registered beforehand)
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           If not, MspInit or MspDeInit are not null, the @ref HAL_DMA2D_Init and @ref HAL_DMA2D_DeI
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception as well for Transfer Completion and Transfer Error callbacks that are not defin
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           as weak (surcharged) functions. They must be defined by the user to be resorted to.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Callbacks can be registered/unregistered in READY state only.
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           during the Init/DeInit.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           In that case first register the MspInit/MspDeInit user callbacks
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           using @ref HAL_DMA2D_RegisterCallback before calling @ref HAL_DMA2D_DeInit
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           or @ref HAL_DMA2D_Init function.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           When The compilation define USE_HAL_DMA2D_REGISTER_CALLBACKS is set to 0 or
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           not defined, the callback registering feature is not available
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and weak (surcharged) callbacks are used.
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      [..]
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (@) You can refer to the DMA2D HAL driver header file for more useful macros
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   @endverbatim
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @attention
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * All rights reserved.</center></h2>
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * the "License"; You may not use this file except in compliance with the
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * License. You may obtain a copy of the License at:
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                        opensource.org/licenses/BSD-3-Clause
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   ******************************************************************************
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Includes ------------------------------------------------------------------*/
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #include "stm32h7xx_hal.h"
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #ifdef HAL_DMA2D_MODULE_ENABLED
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if defined (DMA2D)
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup STM32H7xx_HAL_Driver
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D  DMA2D
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief DMA2D HAL module driver
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private types -------------------------------------------------------------*/
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private define ------------------------------------------------------------*/
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Constants DMA2D Private Constants
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_TimeOut DMA2D Time Out
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_ABORT           (1000U)  /*!<  1s  */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_SUSPEND         (1000U)  /*!<  1s  */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private variables ---------------------------------------------------------*/
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private constants ---------------------------------------------------------*/
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private macro -------------------------------------------------------------*/
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @addtogroup DMA2D_Private_Functions DMA2D Private Functions
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
ARM GAS  /tmp/ccdAsAmP.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Private functions ---------------------------------------------------------*/
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /* Exported functions --------------------------------------------------------*/
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions DMA2D Exported Functions
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief   Initialization and Configuration functions
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                 ##### Initialization and Configuration functions #####
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Initialize and configure the DMA2D
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) De-initialize the DMA2D
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initialize the DMA2D according to the specified
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      return HAL_ERROR;
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->Init.AlphaInverted));
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->Init.RedBlueSwap));
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LOM_MODE(hdma2d->Init.LineOffsetMode));
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_BYTES_SWAP(hdma2d->Init.BytesSwap));
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Reset Callback pointers in HAL_DMA2D_STATE_RESET only */
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->LineEventCallback       = HAL_DMA2D_LineEventCallback;
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->MspInitCallback == NULL)
ARM GAS  /tmp/ccdAsAmP.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspInitCallback(hdma2d);
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Allocate lock resource and initialize it */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->Lock = HAL_UNLOCKED;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     HAL_DMA2D_MspInit(hdma2d);
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D CR register configuration -------------------------------------------*/
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.L
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR register configuration ---------------------------------------*/
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB, hdma2d->Init.ColorMode | 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OOR register configuration ------------------------------------------*/
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR,(DMA2D_OPFCCR_AI|DMA2D_OPFCCR_RBS), ((hdma2d->Init.AlphaInver
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_READY;
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         values.
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      return HAL_ERROR;
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccdAsAmP.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Before aborting any DMA2D transfer or CLUT loading, check
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      first whether or not DMA2D clock is enabled */
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Abort DMA2D transfer if any */
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Issue when aborting DMA2D transfer */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Abort background CLUT loading if any */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Issue when aborting background CLUT loading */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_ERROR;
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       else
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Abort foreground CLUT loading if any */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           {
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             /* Issue when aborting foreground CLUT loading */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             return HAL_ERROR;
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           }
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Reset DMA2D control registers*/
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->CR       =    0U;
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->MspDeInitCallback == NULL)
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DeInit the low level hardware */
ARM GAS  /tmp/ccdAsAmP.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->MspDeInitCallback(hdma2d);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Carry on with de-initialization of low level hardware */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_DMA2D_MspDeInit(hdma2d);
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Update error code */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_RESET;
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Initializes the DMA2D MSP.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspInit can be implemented in the user file.
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  DeInitializes the DMA2D MSP.
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_MspDeInit can be implemented in the user file.
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Register a User DMA2D Callback
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         To be used instead of the weak (surcharged) predefined callback
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be registered
ARM GAS  /tmp/ccdAsAmP.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param pCallback pointer to the Callback function
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_RegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTypeD
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   HAL_StatusTypeDef status = HAL_OK;
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(pCallback == NULL)
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = pCallback;
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = pCallback;
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = pCallback;
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = pCallback;
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
ARM GAS  /tmp/ccdAsAmP.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = pCallback;
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = pCallback;
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Update the error code */
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Unregister a DMA2D Callback
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         DMA2D Callback is redirected to the weak (surcharged) predefined callback
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param CallbackID ID of the callback to be unregistered
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *        This parameter can be one of the following values:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERCOMPLETE_CB_ID DMA2D transfer complete Callback ID
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_TRANSFERERROR_CB_ID DMA2D transfer error Callback ID
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_LINEEVENT_CB_ID DMA2D line event Callback ID
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_CLUTLOADINGCPLT_CB_ID DMA2D CLUT loading completion Callback ID
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPINIT_CB_ID DMA2D MspInit callback ID
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *          @arg @ref HAL_DMA2D_MSPDEINIT_CB_ID DMA2D MspDeInit callback ID
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note No weak predefined callbacks are defined for HAL_DMA2D_TRANSFERCOMPLETE_CB_ID or HAL_DMA2
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval status
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_UnRegisterCallback(DMA2D_HandleTypeDef *hdma2d, HAL_DMA2D_CallbackIDTyp
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef status = HAL_OK;
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
ARM GAS  /tmp/ccdAsAmP.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(HAL_DMA2D_STATE_READY == hdma2d->State)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERCOMPLETE_CB_ID :
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferCpltCallback = NULL;
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_TRANSFERERROR_CB_ID :
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->XferErrorCallback = NULL;
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_LINEEVENT_CB_ID :
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback = HAL_DMA2D_LineEventCallback;
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_CLUTLOADINGCPLT_CB_ID :
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback = HAL_DMA2D_CLUTLoadingCpltCallback;
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit; /* Legacy weak (surcharged) Msp Init */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit; /* Legacy weak (surcharged) Msp DeInit */
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if(HAL_DMA2D_STATE_RESET == hdma2d->State)
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     switch (CallbackID)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPINIT_CB_ID :
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspInitCallback = HAL_DMA2D_MspInit;   /* Legacy weak (surcharged) Msp Init */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     case HAL_DMA2D_MSPDEINIT_CB_ID :
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->MspDeInitCallback = HAL_DMA2D_MspDeInit;  /* Legacy weak (surcharged) Msp DeInit */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     default :
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       break;
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccdAsAmP.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Update the error code */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_INVALID_CALLBACK;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* update return status */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       status =  HAL_ERROR;
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Release Lock */
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return status;
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group2 IO operation functions
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief   IO operation functions
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                       #####  IO operation functions  #####
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer.
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer.
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           start the DMA2D transfer with interrupt.
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer with interrupt.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D transfer.
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D transfer.
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D transfer.
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable CLUT transfer.
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in polling mode.
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in interrupt mode.
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Abort DMA2D CLUT loading.
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Suspend DMA2D CLUT loading.
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Resume DMA2D CLUT loading.
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Poll for transfer complete.
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) handle DMA2D interrupt request.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Transfer watermark callback.
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) CLUT Transfer Complete callback.
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer.
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
ARM GAS  /tmp/ccdAsAmP.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     Memory-to-Memory or Memory-to-Memory with pixel format
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress,
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer with interrupt enabled.
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      Configure the source memory Buffer address if
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the Memory-to-Memory or Memory-to-Memory with pixel format
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address.
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination (expressed in
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination (expressed i
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddre
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
ARM GAS  /tmp/ccdAsAmP.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer.
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d      Pointer to a DMA2D_HandleTypeDef structure that contains
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                      the configuration information for the DMA2D.
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed FG*/
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed BG*/
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Configure DMA2D Stream source2 address */
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Configure the source, destination address and the data size */
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer with interrupt enabled.
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress1 The source memory Buffer address for the foreground layer.
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  SrcAddress2 The source memory Buffer address for the background layer.
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress  The destination memory Buffer address.
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width       The width of data to be transferred from source to destination (expressed i
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height      The height of data to be transferred from source to destination (expressed 
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uin
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed FG*/
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /*blending & fixed BG*/
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D Transfer.
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the DMA2D transfer */
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue) */
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively disabled */
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D Transfer.
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
ARM GAS  /tmp/ccdAsAmP.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Suspend(DMA2D_HandleTypeDef *hdma2d)
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the DMA2D transfer */
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_SUSP|DMA2D_CR_START, DMA2D_CR_SUSP);
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively suspended */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while ((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == DMA2D_CR_START)
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no tranfer is on-going */
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D Transfer.
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Resume(DMA2D_HandleTypeDef *hdma2d)
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == (DMA2D_CR_SUSP | DMA2D_CR_START))
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Ongoing transfer is suspended: change the DMA2D state before resuming */
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
ARM GAS  /tmp/ccdAsAmP.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the DMA2D transfer */
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      effect on START bitvalue). */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, (DMA2D_CR_SUSP|DMA2D_CR_START));
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Enable the DMA2D CLUT Transfer.
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableCLUT(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the background CLUT loading */
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the foreground CLUT loading */
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
ARM GAS  /tmp/ccdAsAmP.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTStartLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef *CLUTCf
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg->CLUTColorMode));
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg->Size));
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg->pCLUT);
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_CCM
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg->pCLUT);
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_CCM
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  /* Enable the CLUT loading for the foreground */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTStartLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef *CLU
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
ARM GAS  /tmp/ccdAsAmP.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg->CLUTColorMode));
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg->Size));
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg->pCLUT);
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_CCM
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg->pCLUT);
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_CCM
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      invited to resort to HAL_DMA2D_CLUTStartLoad() instead to benefit from
ARM GAS  /tmp/ccdAsAmP.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      code compactness, code size and improved heap usage.
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, uin
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  /* Enable the CLUT loading for the foreground */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      invited to resort to HAL_DMA2D_CLUTStartLoad_IT() instead to benefit
ARM GAS  /tmp/ccdAsAmP.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      from code compactness, code size and improved heap usage.
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, 
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D CLUT loading.
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  Pointer to a DMA2D_HandleTypeDef structure that contains
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
ARM GAS  /tmp/ccdAsAmP.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Abort the CLUT loading */
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is aborted */
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while((*reg & DMA2D_BGPFCCR_START) != 0U)
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error 
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D CLUT loading.
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
ARM GAS  /tmp/ccdAsAmP.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Suspend(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t loadsuspended;
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background reg
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Suspend the CLUT loading */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_FOREGROUND_LAYER)
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Get tick */
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check if the CLUT loading is suspended */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st condit
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change the DMA2D state */
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended = ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)? 1UL: 0UL; /*1st cond
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((*reg & DMA2D_BGPFCCR_START) != 0U)
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****        when no tranfer is on-going */
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccdAsAmP.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D CLUT loading.
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Resume(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Background CLUT loading suspension check */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Foreground CLUT loading suspension check */
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Resume the CLUT loading */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Polling for transfer complete or CLUT loading.
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Timeout Timeout duration
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_PollForTransfer(DMA2D_HandleTypeDef *hdma2d, uint32_t Timeout)
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t layer_start;
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __IO uint32_t isrflags = 0x0U;
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for DMA2D transfer */
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Get tick */
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    tickstart = HAL_GetTick();
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == 0U)
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the transfer and configuration error flags */
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Polling for CLUT loading (foreground or background) */
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start = hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START;
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (layer_start != 0U)
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Get tick */
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == 0U)
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != 0U)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != 0U)
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Clear the CLUT Access Error, Configuration Error and Transfer Error flags */
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Change DMA2D state */
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->State= HAL_DMA2D_STATE_ERROR;
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Process unlocked */
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         return HAL_ERROR;
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Check for the Timeout */
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         if(((HAL_GetTick() - tickstart ) > Timeout)||(Timeout == 0U))
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Update error code */
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           /* Process unlocked */
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear the transfer complete and CLUT loading flags */
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D state */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Handle DMA2D interrupt request.
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Error Interrupt management ***************************************/
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TE) != 0U)
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TE) != 0U)
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer Error interrupt */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer error flag */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configuration Error Interrupt management **********************************/
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CE) != 0U)
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CE) != 0U)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the Configuration Error interrupt */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the Configuration error flag */
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT access Error Interrupt management ***********************************/
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CAE) != 0U)
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CAE) != 0U)
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT access error interrupt */
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT access error flag */
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer error Callback */
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer watermark Interrupt management **********************************/
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TW) != 0U)
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TW) != 0U)
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer watermark interrupt */
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer watermark flag */
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Transfer watermark Callback */
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->LineEventCallback(hdma2d);
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_LineEventCallback(hdma2d);
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccdAsAmP.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Transfer Complete Interrupt management ************************************/
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TC) != 0U)
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TC) != 0U)
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the transfer complete interrupt */
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the transfer complete flag */
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if(hdma2d->XferCpltCallback != NULL)
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         /* Transfer complete Callback */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback(hdma2d);
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* CLUT Transfer Complete Interrupt management ******************************/
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CTC) != 0U)
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CTC) != 0U)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Disable the CLUT transfer complete interrupt */
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Clear the CLUT transfer complete flag */
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Update error code */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Change DMA2D state */
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* Process Unlocked */
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       /* CLUT Transfer complete Callback */
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       hdma2d->CLUTLoadingCpltCallback(hdma2d);
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #else
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
ARM GAS  /tmp/ccdAsAmP.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Transfer watermark callback.
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_LineEventCallback can be implemented in the user file.
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  CLUT Transfer Complete callback.
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval None
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** __weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    */
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group3 Peripheral Control functions
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief    Peripheral Control functions
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                     ##### Peripheral Control functions #####
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D foreground or background layer parameters.
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the DMA2D CLUT transfer.
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the line watermark
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Configure the dead time value.
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Enable or disable the dead time value functionality.
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccdAsAmP.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D Layer according to the specified
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *         parameters in the DMA2D_HandleTypeDef.
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t regMask, regValue;
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode != DMA2D_R2M)
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_INPUT_COLOR_MODE(hdma2d->LayerCfg[LayerIdx].InputColorMode));
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(hdma2d->Init.Mode != DMA2D_M2M)
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_IN
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the background DMA2D layer */
ARM GAS  /tmp/ccdAsAmP.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write DMA2D BGPFCCR register */
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGOR register configuration -------------------------------------*/
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D BGCOLR register configuration -------------------------------------*/
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_G
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the foreground DMA2D layer */
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if(pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regMask  |= DMA2D_FGPFCCR_CSS;
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****      /* Write DMA2D FGPFCCR register */
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGOR register configuration -------------------------------------*/
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* DMA2D FGCOLR register configuration -------------------------------------*/
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_G
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D CLUT Transfer.
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d   Pointer to a DMA2D_HandleTypeDef structure that contains
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  CLUTCfg  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  LayerIdx DMA2D Layer index.
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note API obsolete and maintained for compatibility with legacy. User is invited
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      to resort to HAL_DMA2D_CLUTStartLoad() instead to benefit from code compactness,
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *      code size and improved heap usage.
ARM GAS  /tmp/ccdAsAmP.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigCLUT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, u
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process locked */
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if(LayerIdx == DMA2D_BACKGROUND_LAYER)
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  }
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  /* Configure the CLUT of the foreground DMA2D layer */
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  else
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  {
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****    /* Write foreground CLUT memory address */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set the DMA2D state to Ready*/
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process unlocked */
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Configure the line watermark.
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Line   Line Watermark configuration (maximum 16-bit long value expected).
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   HAL_DMA2D_ProgramLineEvent() API enables the transfer watermark interrupt.
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note   The transfer watermark interrupt is disabled once it has occurred.
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ProgramLineEvent(DMA2D_HandleTypeDef *hdma2d, uint32_t Line)
ARM GAS  /tmp/ccdAsAmP.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINEWATERMARK(Line));
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (Line > DMA2D_LWR_LW)
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_ERROR;
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process locked */
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_LOCK(hdma2d);
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Change DMA2D peripheral state */
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Sets the Line watermark configuration */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->LWR, Line);
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Enable the Line interrupt */
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TW);
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Initialize the DMA2D state*/
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_READY;
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Process unlocked */
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     __HAL_UNLOCK(hdma2d);
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     return HAL_OK;
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Enable DMA2D dead time feature.
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR EN bit */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Disable DMA2D dead time feature.
ARM GAS  /tmp/ccdAsAmP.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DisableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Clear DMA2D_AMTCR EN bit */
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief Configure dead time.
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @note The dead time value represents the guaranteed minimum number of cycles between
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *       two consecutive transactions on the AHB bus.
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param hdma2d DMA2D handle.
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param DeadTime dead time value.
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigDeadTime(DMA2D_HandleTypeDef *hdma2d, uint8_t DeadTime)
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR DT field */
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->AMTCR, DMA2D_AMTCR_DT, (((uint32_t) DeadTime) << DMA2D_AMTCR_DT_Pos)
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Unlocked */
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return HAL_OK;
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group4 Peripheral State and Error functions
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *  @brief    Peripheral State functions
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  *
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @verbatim
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
ARM GAS  /tmp/ccdAsAmP.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****                   ##### Peripheral State and Errors functions #####
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****  ===============================================================================
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     [..]
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     This subsection provides functions allowing to:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D state
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       (+) Get the DMA2D error code
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** @endverbatim
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D state
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL state
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** HAL_DMA2D_StateTypeDef HAL_DMA2D_GetState(DMA2D_HandleTypeDef *hdma2d)
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->State;
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Return the DMA2D error code
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *               the configuration information for DMA2D.
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval DMA2D Error Code
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** uint32_t HAL_DMA2D_GetError(DMA2D_HandleTypeDef *hdma2d)
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @}
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Functions DMA2D Private Functions
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @{
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @brief  Set the DMA2D transfer parameters.
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  hdma2d     Pointer to a DMA2D_HandleTypeDef structure that contains
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   *                     the configuration information for the specified DMA2D.
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  pdata      The source memory Buffer address
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  DstAddress The destination memory Buffer address
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Width      The width of data to be transferred from source to destination.
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @param  Height     The height of data to be transferred from source to destination.
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   * @retval HAL status
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
ARM GAS  /tmp/ccdAsAmP.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** {
  26              		.loc 1 2086 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 70B4     		push	{r4, r5, r6}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 6, -4
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp;
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp1;
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp2;
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp3;
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tmp4;
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D data size */
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Po
  38              		.loc 1 2094 0
  39 0002 0668     		ldr	r6, [r0]
  40 0004 746C     		ldr	r4, [r6, #68]
  41 0006 04F04044 		and	r4, r4, #-1073741824
  42 000a 039D     		ldr	r5, [sp, #12]
  43 000c 45EA0343 		orr	r3, r5, r3, lsl #16
  44              	.LVL1:
  45 0010 1C43     		orrs	r4, r4, r3
  46 0012 7464     		str	r4, [r6, #68]
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Configure DMA2D destination address */
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
  47              		.loc 1 2097 0
  48 0014 0368     		ldr	r3, [r0]
  49 0016 DA63     		str	r2, [r3, #60]
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Register to memory DMA2D mode selected */
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_R2M)
  50              		.loc 1 2100 0
  51 0018 4368     		ldr	r3, [r0, #4]
  52 001a B3F5403F 		cmp	r3, #196608
  53 001e 06D0     		beq	.L10
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Prepare the value to be written to the OCOLR register according to the color mode */
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp1| tmp4);
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp4);
ARM GAS  /tmp/ccdAsAmP.s 			page 39


2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 31U);
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 28U);
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Write to DMA2D OCOLR register */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->OCOLR, tmp);
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else if(hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG) /*M2M_blending with fixed color FG DMA2D Mode se
  54              		.loc 1 2142 0
  55 0020 B3F5802F 		cmp	r3, #262144
  56 0024 35D0     		beq	.L11
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGMAR , pdata);
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   else /* M2M, M2M_PFC,M2M_Blending or M2M_blending with fixed color BG DMA2D Mode */
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure DMA2D source address */
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  57              		.loc 1 2149 0
  58 0026 0368     		ldr	r3, [r0]
  59 0028 D960     		str	r1, [r3, #12]
  60              	.LVL2:
  61              	.L1:
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
  62              		.loc 1 2151 0
  63 002a 70BC     		pop	{r4, r5, r6}
  64              	.LCFI1:
  65              		.cfi_remember_state
  66              		.cfi_restore 6
  67              		.cfi_restore 5
  68              		.cfi_restore 4
  69              		.cfi_def_cfa_offset 0
  70              	.LVL3:
  71 002c 7047     		bx	lr
  72              	.LVL4:
  73              	.L10:
ARM GAS  /tmp/ccdAsAmP.s 			page 40


  74              	.LCFI2:
  75              		.cfi_restore_state
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
  76              		.loc 1 2102 0
  77 002e 01F07F46 		and	r6, r1, #-16777216
  78              	.LVL5:
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
  79              		.loc 1 2103 0
  80 0032 01F47F03 		and	r3, r1, #16711680
  81              	.LVL6:
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
  82              		.loc 1 2104 0
  83 0036 01F47F45 		and	r5, r1, #65280
  84              	.LVL7:
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
  85              		.loc 1 2105 0
  86 003a CAB2     		uxtb	r2, r1
  87              	.LVL8:
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  88              		.loc 1 2108 0
  89 003c 8468     		ldr	r4, [r0, #8]
  90 003e 94B1     		cbz	r4, .L3
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  91              		.loc 1 2112 0
  92 0040 012C     		cmp	r4, #1
  93 0042 0ED0     		beq	.L12
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  94              		.loc 1 2116 0
  95 0044 022C     		cmp	r4, #2
  96 0046 11D0     		beq	.L13
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
  97              		.loc 1 2123 0
  98 0048 032C     		cmp	r4, #3
  99 004a 17D0     		beq	.L14
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20U);
 100              		.loc 1 2133 0
 101 004c 360F     		lsrs	r6, r6, #28
 102              	.LVL9:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12U);
 103              		.loc 1 2134 0
 104 004e 1B0D     		lsrs	r3, r3, #20
 105              	.LVL10:
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4U );
 106              		.loc 1 2135 0
 107 0050 2D0B     		lsrs	r5, r5, #12
 108              	.LVL11:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 109              		.loc 1 2137 0
 110 0052 1902     		lsls	r1, r3, #8
 111              	.LVL12:
 112 0054 41EA0511 		orr	r1, r1, r5, lsl #4
 113 0058 41EA0631 		orr	r1, r1, r6, lsl #12
 114 005c 41EA1211 		orr	r1, r1, r2, lsr #4
 115              	.LVL13:
 116 0060 01E0     		b	.L3
 117              	.LVL14:
 118              	.L12:
ARM GAS  /tmp/ccdAsAmP.s 			page 41


2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 119              		.loc 1 2114 0
 120 0062 21F07F41 		bic	r1, r1, #-16777216
 121              	.LVL15:
 122              	.L3:
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 123              		.loc 1 2140 0
 124 0066 0368     		ldr	r3, [r0]
 125              	.LVL16:
 126 0068 9963     		str	r1, [r3, #56]
 127 006a DEE7     		b	.L1
 128              	.LVL17:
 129              	.L13:
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10U);
 130              		.loc 1 2118 0
 131 006c DB0C     		lsrs	r3, r3, #19
 132              	.LVL18:
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 133              		.loc 1 2119 0
 134 006e AD0A     		lsrs	r5, r5, #10
 135              	.LVL19:
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 136              		.loc 1 2121 0
 137 0070 D902     		lsls	r1, r3, #11
 138              	.LVL20:
 139 0072 41EA4511 		orr	r1, r1, r5, lsl #5
 140 0076 41EAD201 		orr	r1, r1, r2, lsr #3
 141              	.LVL21:
 142 007a F4E7     		b	.L3
 143              	.LVL22:
 144              	.L14:
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19U);
 145              		.loc 1 2125 0
 146 007c F60F     		lsrs	r6, r6, #31
 147              	.LVL23:
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11U);
 148              		.loc 1 2126 0
 149 007e DB0C     		lsrs	r3, r3, #19
 150              	.LVL24:
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3U );
 151              		.loc 1 2127 0
 152 0080 ED0A     		lsrs	r5, r5, #11
 153              	.LVL25:
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 154              		.loc 1 2129 0
 155 0082 9902     		lsls	r1, r3, #10
 156              	.LVL26:
 157 0084 41EA4511 		orr	r1, r1, r5, lsl #5
 158 0088 41EAC631 		orr	r1, r1, r6, lsl #15
 159 008c 41EAD201 		orr	r1, r1, r2, lsr #3
 160              	.LVL27:
 161 0090 E9E7     		b	.L3
 162              	.LVL28:
 163              	.L11:
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 164              		.loc 1 2144 0
 165 0092 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccdAsAmP.s 			page 42


 166 0094 5961     		str	r1, [r3, #20]
 167 0096 C8E7     		b	.L1
 168              		.cfi_endproc
 169              	.LFE172:
 171              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 172              		.align	1
 173              		.weak	HAL_DMA2D_MspInit
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv5-d16
 179              	HAL_DMA2D_MspInit:
 180              	.LFB143:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 181              		.loc 1 402 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186              	.LVL29:
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 187              		.loc 1 409 0
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE143:
 192              		.section	.text.HAL_DMA2D_Init,"ax",%progbits
 193              		.align	1
 194              		.global	HAL_DMA2D_Init
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	HAL_DMA2D_Init:
 201              	.LFB141:
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 202              		.loc 1 238 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL30:
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 207              		.loc 1 240 0
 208 0000 0028     		cmp	r0, #0
 209 0002 37D0     		beq	.L19
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 210              		.loc 1 238 0
 211 0004 10B5     		push	{r4, lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 14, -4
 216 0006 0446     		mov	r4, r0
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 217              		.loc 1 270 0
 218 0008 90F86130 		ldrb	r3, [r0, #97]	@ zero_extendqisi2
 219 000c 002B     		cmp	r3, #0
 220 000e 2CD0     		beq	.L24
ARM GAS  /tmp/ccdAsAmP.s 			page 43


 221              	.LVL31:
 222              	.L18:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 223              		.loc 1 280 0
 224 0010 0223     		movs	r3, #2
 225 0012 84F86130 		strb	r3, [r4, #97]
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 226              		.loc 1 283 0
 227 0016 2168     		ldr	r1, [r4]
 228 0018 0A68     		ldr	r2, [r1]
 229 001a 174B     		ldr	r3, .L25
 230 001c 1340     		ands	r3, r3, r2
 231 001e 6268     		ldr	r2, [r4, #4]
 232 0020 E069     		ldr	r0, [r4, #28]
 233 0022 0243     		orrs	r2, r2, r0
 234 0024 1343     		orrs	r3, r3, r2
 235 0026 0B60     		str	r3, [r1]
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 236              		.loc 1 286 0
 237 0028 2168     		ldr	r1, [r4]
 238 002a 4A6B     		ldr	r2, [r1, #52]
 239 002c 134B     		ldr	r3, .L25+4
 240 002e 1340     		ands	r3, r3, r2
 241 0030 A268     		ldr	r2, [r4, #8]
 242 0032 A069     		ldr	r0, [r4, #24]
 243 0034 0243     		orrs	r2, r2, r0
 244 0036 1343     		orrs	r3, r3, r2
 245 0038 4B63     		str	r3, [r1, #52]
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
 246              		.loc 1 289 0
 247 003a 2268     		ldr	r2, [r4]
 248 003c 116C     		ldr	r1, [r2, #64]
 249 003e 104B     		ldr	r3, .L25+8
 250 0040 0B40     		ands	r3, r3, r1
 251 0042 E168     		ldr	r1, [r4, #12]
 252 0044 0B43     		orrs	r3, r3, r1
 253 0046 1364     		str	r3, [r2, #64]
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 254              		.loc 1 291 0
 255 0048 2168     		ldr	r1, [r4]
 256 004a 4B6B     		ldr	r3, [r1, #52]
 257 004c 23F44013 		bic	r3, r3, #3145728
 258 0050 2069     		ldr	r0, [r4, #16]
 259 0052 6269     		ldr	r2, [r4, #20]
 260 0054 5205     		lsls	r2, r2, #21
 261 0056 42EA0052 		orr	r2, r2, r0, lsl #20
 262 005a 1343     		orrs	r3, r3, r2
 263 005c 4B63     		str	r3, [r1, #52]
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 264              		.loc 1 295 0
 265 005e 0020     		movs	r0, #0
 266 0060 6066     		str	r0, [r4, #100]
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 267              		.loc 1 298 0
 268 0062 0123     		movs	r3, #1
 269 0064 84F86130 		strb	r3, [r4, #97]
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 44


 270              		.loc 1 301 0
 271 0068 10BD     		pop	{r4, pc}
 272              	.LVL32:
 273              	.L24:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Init the low level hardware */
 274              		.loc 1 273 0
 275 006a 80F86030 		strb	r3, [r0, #96]
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 276              		.loc 1 275 0
 277 006e FFF7FEFF 		bl	HAL_DMA2D_MspInit
 278              	.LVL33:
 279 0072 CDE7     		b	.L18
 280              	.LVL34:
 281              	.L19:
 282              	.LCFI4:
 283              		.cfi_def_cfa_offset 0
 284              		.cfi_restore 4
 285              		.cfi_restore 14
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 286              		.loc 1 242 0
 287 0074 0120     		movs	r0, #1
 288              	.LVL35:
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 289              		.loc 1 301 0
 290 0076 7047     		bx	lr
 291              	.L26:
 292              		.align	2
 293              	.L25:
 294 0078 BFFFF8FF 		.word	-458817
 295 007c F8FEFFFF 		.word	-264
 296 0080 0000FFFF 		.word	-65536
 297              		.cfi_endproc
 298              	.LFE141:
 300              		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 301              		.align	1
 302              		.weak	HAL_DMA2D_MspDeInit
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-d16
 308              	HAL_DMA2D_MspDeInit:
 309              	.LFB144:
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 310              		.loc 1 418 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL36:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 316              		.loc 1 425 0
 317 0000 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE144:
 321              		.section	.text.HAL_DMA2D_Start,"ax",%progbits
 322              		.align	1
 323              		.global	HAL_DMA2D_Start
ARM GAS  /tmp/ccdAsAmP.s 			page 45


 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv5-d16
 329              	HAL_DMA2D_Start:
 330              	.LFB145:
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 331              		.loc 1 672 0
 332              		.cfi_startproc
 333              		@ args = 4, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL37:
 336 0000 10B5     		push	{r4, lr}
 337              	.LCFI5:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
 341 0002 82B0     		sub	sp, sp, #8
 342              	.LCFI6:
 343              		.cfi_def_cfa_offset 16
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 344              		.loc 1 678 0
 345 0004 90F86040 		ldrb	r4, [r0, #96]	@ zero_extendqisi2
 346 0008 012C     		cmp	r4, #1
 347 000a 13D0     		beq	.L30
 348 000c 0446     		mov	r4, r0
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 349              		.loc 1 678 0 is_stmt 0 discriminator 2
 350 000e 0120     		movs	r0, #1
 351              	.LVL38:
 352 0010 84F86000 		strb	r0, [r4, #96]
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 353              		.loc 1 681 0 is_stmt 1 discriminator 2
 354 0014 0220     		movs	r0, #2
 355 0016 84F86100 		strb	r0, [r4, #97]
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 356              		.loc 1 684 0 discriminator 2
 357 001a 0498     		ldr	r0, [sp, #16]
 358 001c 0090     		str	r0, [sp]
 359 001e 2046     		mov	r0, r4
 360 0020 FFF7FEFF 		bl	DMA2D_SetConfig
 361              	.LVL39:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 362              		.loc 1 687 0 discriminator 2
 363 0024 2268     		ldr	r2, [r4]
 364 0026 1368     		ldr	r3, [r2]
 365 0028 43F00103 		orr	r3, r3, #1
 366 002c 1360     		str	r3, [r2]
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 367              		.loc 1 689 0 discriminator 2
 368 002e 0020     		movs	r0, #0
 369              	.LVL40:
 370              	.L29:
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 371              		.loc 1 690 0
 372 0030 02B0     		add	sp, sp, #8
 373              	.LCFI7:
ARM GAS  /tmp/ccdAsAmP.s 			page 46


 374              		.cfi_remember_state
 375              		.cfi_def_cfa_offset 8
 376              		@ sp needed
 377 0032 10BD     		pop	{r4, pc}
 378              	.LVL41:
 379              	.L30:
 380              	.LCFI8:
 381              		.cfi_restore_state
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 382              		.loc 1 678 0
 383 0034 0220     		movs	r0, #2
 384              	.LVL42:
 385 0036 FBE7     		b	.L29
 386              		.cfi_endproc
 387              	.LFE145:
 389              		.section	.text.HAL_DMA2D_Start_IT,"ax",%progbits
 390              		.align	1
 391              		.global	HAL_DMA2D_Start_IT
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv5-d16
 397              	HAL_DMA2D_Start_IT:
 398              	.LFB146:
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 399              		.loc 1 706 0
 400              		.cfi_startproc
 401              		@ args = 4, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LVL43:
 404 0000 10B5     		push	{r4, lr}
 405              	.LCFI9:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 4, -8
 408              		.cfi_offset 14, -4
 409 0002 82B0     		sub	sp, sp, #8
 410              	.LCFI10:
 411              		.cfi_def_cfa_offset 16
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 412              		.loc 1 712 0
 413 0004 90F86040 		ldrb	r4, [r0, #96]	@ zero_extendqisi2
 414 0008 012C     		cmp	r4, #1
 415 000a 18D0     		beq	.L34
 416 000c 0446     		mov	r4, r0
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 417              		.loc 1 712 0 is_stmt 0 discriminator 2
 418 000e 0120     		movs	r0, #1
 419              	.LVL44:
 420 0010 84F86000 		strb	r0, [r4, #96]
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 421              		.loc 1 715 0 is_stmt 1 discriminator 2
 422 0014 0220     		movs	r0, #2
 423 0016 84F86100 		strb	r0, [r4, #97]
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 424              		.loc 1 718 0 discriminator 2
 425 001a 0498     		ldr	r0, [sp, #16]
 426 001c 0090     		str	r0, [sp]
ARM GAS  /tmp/ccdAsAmP.s 			page 47


 427 001e 2046     		mov	r0, r4
 428 0020 FFF7FEFF 		bl	DMA2D_SetConfig
 429              	.LVL45:
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 430              		.loc 1 721 0 discriminator 2
 431 0024 2268     		ldr	r2, [r4]
 432 0026 1368     		ldr	r3, [r2]
 433 0028 43F40C53 		orr	r3, r3, #8960
 434 002c 1360     		str	r3, [r2]
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 435              		.loc 1 724 0 discriminator 2
 436 002e 2268     		ldr	r2, [r4]
 437 0030 1368     		ldr	r3, [r2]
 438 0032 43F00103 		orr	r3, r3, #1
 439 0036 1360     		str	r3, [r2]
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 440              		.loc 1 726 0 discriminator 2
 441 0038 0020     		movs	r0, #0
 442              	.LVL46:
 443              	.L33:
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 444              		.loc 1 727 0
 445 003a 02B0     		add	sp, sp, #8
 446              	.LCFI11:
 447              		.cfi_remember_state
 448              		.cfi_def_cfa_offset 8
 449              		@ sp needed
 450 003c 10BD     		pop	{r4, pc}
 451              	.LVL47:
 452              	.L34:
 453              	.LCFI12:
 454              		.cfi_restore_state
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 455              		.loc 1 712 0
 456 003e 0220     		movs	r0, #2
 457              	.LVL48:
 458 0040 FBE7     		b	.L33
 459              		.cfi_endproc
 460              	.LFE146:
 462              		.section	.text.HAL_DMA2D_BlendingStart,"ax",%progbits
 463              		.align	1
 464              		.global	HAL_DMA2D_BlendingStart
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu fpv5-d16
 470              	HAL_DMA2D_BlendingStart:
 471              	.LFB147:
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 472              		.loc 1 741 0
 473              		.cfi_startproc
 474              		@ args = 8, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              	.LVL49:
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              	.LCFI13:
 479              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccdAsAmP.s 			page 48


 480              		.cfi_offset 4, -16
 481              		.cfi_offset 5, -12
 482              		.cfi_offset 6, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              	.LCFI14:
 486              		.cfi_def_cfa_offset 24
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 487              		.loc 1 747 0
 488 0004 90F86040 		ldrb	r4, [r0, #96]	@ zero_extendqisi2
 489 0008 012C     		cmp	r4, #1
 490 000a 32D0     		beq	.L41
 491 000c 1D46     		mov	r5, r3
 492 000e 1646     		mov	r6, r2
 493 0010 0446     		mov	r4, r0
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 494              		.loc 1 747 0 is_stmt 0 discriminator 2
 495 0012 0123     		movs	r3, #1
 496              	.LVL50:
 497 0014 80F86030 		strb	r3, [r0, #96]
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 498              		.loc 1 750 0 is_stmt 1 discriminator 2
 499 0018 0223     		movs	r3, #2
 500 001a 80F86130 		strb	r3, [r0, #97]
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 501              		.loc 1 752 0 discriminator 2
 502 001e 4368     		ldr	r3, [r0, #4]
 503 0020 B3F5802F 		cmp	r3, #262144
 504 0024 12D0     		beq	.L43
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 505              		.loc 1 759 0
 506 0026 B3F5A02F 		cmp	r3, #327680
 507 002a 19D0     		beq	.L44
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 508              		.loc 1 769 0
 509 002c 0368     		ldr	r3, [r0]
 510 002e 5A61     		str	r2, [r3, #20]
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 511              		.loc 1 772 0
 512 0030 079B     		ldr	r3, [sp, #28]
 513 0032 0093     		str	r3, [sp]
 514 0034 069B     		ldr	r3, [sp, #24]
 515 0036 2A46     		mov	r2, r5
 516              	.LVL51:
 517 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 518              	.LVL52:
 519              	.L39:
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 520              		.loc 1 776 0
 521 003c 2268     		ldr	r2, [r4]
 522 003e 1368     		ldr	r3, [r2]
 523 0040 43F00103 		orr	r3, r3, #1
 524 0044 1360     		str	r3, [r2]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 525              		.loc 1 778 0
 526 0046 0020     		movs	r0, #0
 527              	.LVL53:
ARM GAS  /tmp/ccdAsAmP.s 			page 49


 528              	.L37:
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 529              		.loc 1 779 0
 530 0048 02B0     		add	sp, sp, #8
 531              	.LCFI15:
 532              		.cfi_remember_state
 533              		.cfi_def_cfa_offset 16
 534              		@ sp needed
 535 004a 70BD     		pop	{r4, r5, r6, pc}
 536              	.LVL54:
 537              	.L43:
 538              	.LCFI16:
 539              		.cfi_restore_state
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 540              		.loc 1 755 0
 541 004c 0368     		ldr	r3, [r0]
 542 004e 1962     		str	r1, [r3, #32]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 543              		.loc 1 757 0
 544 0050 079B     		ldr	r3, [sp, #28]
 545 0052 0093     		str	r3, [sp]
 546 0054 069B     		ldr	r3, [sp, #24]
 547 0056 2A46     		mov	r2, r5
 548              	.LVL55:
 549 0058 3146     		mov	r1, r6
 550              	.LVL56:
 551 005a FFF7FEFF 		bl	DMA2D_SetConfig
 552              	.LVL57:
 553 005e EDE7     		b	.L39
 554              	.LVL58:
 555              	.L44:
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 556              		.loc 1 762 0
 557 0060 0368     		ldr	r3, [r0]
 558 0062 9A62     		str	r2, [r3, #40]
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 559              		.loc 1 764 0
 560 0064 079B     		ldr	r3, [sp, #28]
 561 0066 0093     		str	r3, [sp]
 562 0068 069B     		ldr	r3, [sp, #24]
 563 006a 2A46     		mov	r2, r5
 564              	.LVL59:
 565 006c FFF7FEFF 		bl	DMA2D_SetConfig
 566              	.LVL60:
 567 0070 E4E7     		b	.L39
 568              	.LVL61:
 569              	.L41:
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 570              		.loc 1 747 0
 571 0072 0220     		movs	r0, #2
 572              	.LVL62:
 573 0074 E8E7     		b	.L37
 574              		.cfi_endproc
 575              	.LFE147:
 577              		.section	.text.HAL_DMA2D_BlendingStart_IT,"ax",%progbits
 578              		.align	1
 579              		.global	HAL_DMA2D_BlendingStart_IT
ARM GAS  /tmp/ccdAsAmP.s 			page 50


 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-d16
 585              	HAL_DMA2D_BlendingStart_IT:
 586              	.LFB148:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 587              		.loc 1 793 0
 588              		.cfi_startproc
 589              		@ args = 8, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              	.LVL63:
 592 0000 70B5     		push	{r4, r5, r6, lr}
 593              	.LCFI17:
 594              		.cfi_def_cfa_offset 16
 595              		.cfi_offset 4, -16
 596              		.cfi_offset 5, -12
 597              		.cfi_offset 6, -8
 598              		.cfi_offset 14, -4
 599 0002 82B0     		sub	sp, sp, #8
 600              	.LCFI18:
 601              		.cfi_def_cfa_offset 24
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 602              		.loc 1 799 0
 603 0004 90F86040 		ldrb	r4, [r0, #96]	@ zero_extendqisi2
 604 0008 012C     		cmp	r4, #1
 605 000a 37D0     		beq	.L50
 606 000c 1D46     		mov	r5, r3
 607 000e 1646     		mov	r6, r2
 608 0010 0446     		mov	r4, r0
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 609              		.loc 1 799 0 is_stmt 0 discriminator 2
 610 0012 0123     		movs	r3, #1
 611              	.LVL64:
 612 0014 80F86030 		strb	r3, [r0, #96]
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 613              		.loc 1 802 0 is_stmt 1 discriminator 2
 614 0018 0223     		movs	r3, #2
 615 001a 80F86130 		strb	r3, [r0, #97]
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 616              		.loc 1 804 0 discriminator 2
 617 001e 4368     		ldr	r3, [r0, #4]
 618 0020 B3F5802F 		cmp	r3, #262144
 619 0024 17D0     		beq	.L52
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 620              		.loc 1 811 0
 621 0026 B3F5A02F 		cmp	r3, #327680
 622 002a 1ED0     		beq	.L53
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 623              		.loc 1 820 0
 624 002c 0368     		ldr	r3, [r0]
 625 002e 5A61     		str	r2, [r3, #20]
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 626              		.loc 1 823 0
 627 0030 079B     		ldr	r3, [sp, #28]
 628 0032 0093     		str	r3, [sp]
 629 0034 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/ccdAsAmP.s 			page 51


 630 0036 2A46     		mov	r2, r5
 631              	.LVL65:
 632 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 633              	.LVL66:
 634              	.L48:
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 635              		.loc 1 827 0
 636 003c 2268     		ldr	r2, [r4]
 637 003e 1368     		ldr	r3, [r2]
 638 0040 43F40C53 		orr	r3, r3, #8960
 639 0044 1360     		str	r3, [r2]
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 640              		.loc 1 830 0
 641 0046 2268     		ldr	r2, [r4]
 642 0048 1368     		ldr	r3, [r2]
 643 004a 43F00103 		orr	r3, r3, #1
 644 004e 1360     		str	r3, [r2]
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 645              		.loc 1 832 0
 646 0050 0020     		movs	r0, #0
 647              	.LVL67:
 648              	.L46:
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 649              		.loc 1 833 0
 650 0052 02B0     		add	sp, sp, #8
 651              	.LCFI19:
 652              		.cfi_remember_state
 653              		.cfi_def_cfa_offset 16
 654              		@ sp needed
 655 0054 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL68:
 657              	.L52:
 658              	.LCFI20:
 659              		.cfi_restore_state
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 660              		.loc 1 807 0
 661 0056 0368     		ldr	r3, [r0]
 662 0058 1962     		str	r1, [r3, #32]
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 663              		.loc 1 809 0
 664 005a 079B     		ldr	r3, [sp, #28]
 665 005c 0093     		str	r3, [sp]
 666 005e 069B     		ldr	r3, [sp, #24]
 667 0060 2A46     		mov	r2, r5
 668              	.LVL69:
 669 0062 3146     		mov	r1, r6
 670              	.LVL70:
 671 0064 FFF7FEFF 		bl	DMA2D_SetConfig
 672              	.LVL71:
 673 0068 E8E7     		b	.L48
 674              	.LVL72:
 675              	.L53:
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     /* Configure the source, destination address and the data size */
 676              		.loc 1 814 0
 677 006a 0368     		ldr	r3, [r0]
 678 006c 9A62     		str	r2, [r3, #40]
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccdAsAmP.s 			page 52


 679              		.loc 1 816 0
 680 006e 079B     		ldr	r3, [sp, #28]
 681 0070 0093     		str	r3, [sp]
 682 0072 069B     		ldr	r3, [sp, #24]
 683 0074 2A46     		mov	r2, r5
 684              	.LVL73:
 685 0076 FFF7FEFF 		bl	DMA2D_SetConfig
 686              	.LVL74:
 687 007a DFE7     		b	.L48
 688              	.LVL75:
 689              	.L50:
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 690              		.loc 1 799 0
 691 007c 0220     		movs	r0, #2
 692              	.LVL76:
 693 007e E8E7     		b	.L46
 694              		.cfi_endproc
 695              	.LFE148:
 697              		.section	.text.HAL_DMA2D_Abort,"ax",%progbits
 698              		.align	1
 699              		.global	HAL_DMA2D_Abort
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu fpv5-d16
 705              	HAL_DMA2D_Abort:
 706              	.LFB149:
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 707              		.loc 1 842 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              	.LVL77:
 712 0000 38B5     		push	{r3, r4, r5, lr}
 713              	.LCFI21:
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 3, -16
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 5, -8
 718              		.cfi_offset 14, -4
 719 0002 0446     		mov	r4, r0
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 720              		.loc 1 849 0
 721 0004 0268     		ldr	r2, [r0]
 722 0006 1368     		ldr	r3, [r2]
 723 0008 23F00503 		bic	r3, r3, #5
 724 000c 43F00403 		orr	r3, r3, #4
 725 0010 1360     		str	r3, [r2]
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 726              		.loc 1 852 0
 727 0012 FFF7FEFF 		bl	HAL_GetTick
 728              	.LVL78:
 729 0016 0546     		mov	r5, r0
 730              	.LVL79:
 731              	.L55:
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 732              		.loc 1 855 0
ARM GAS  /tmp/ccdAsAmP.s 			page 53


 733 0018 2368     		ldr	r3, [r4]
 734 001a 1A68     		ldr	r2, [r3]
 735 001c 12F0010F 		tst	r2, #1
 736 0020 10D0     		beq	.L59
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 737              		.loc 1 857 0
 738 0022 FFF7FEFF 		bl	HAL_GetTick
 739              	.LVL80:
 740 0026 401B     		subs	r0, r0, r5
 741 0028 B0F57A7F 		cmp	r0, #1000
 742 002c F4D9     		bls	.L55
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 743              		.loc 1 860 0
 744 002e 636E     		ldr	r3, [r4, #100]
 745 0030 43F02003 		orr	r3, r3, #32
 746 0034 6366     		str	r3, [r4, #100]
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 747              		.loc 1 863 0
 748 0036 0320     		movs	r0, #3
 749 0038 84F86100 		strb	r0, [r4, #97]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 750              		.loc 1 866 0
 751 003c 0023     		movs	r3, #0
 752 003e 84F86030 		strb	r3, [r4, #96]
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 753              		.loc 1 868 0
 754 0042 09E0     		b	.L56
 755              	.L59:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 756              		.loc 1 873 0
 757 0044 1A68     		ldr	r2, [r3]
 758 0046 22F40C52 		bic	r2, r2, #8960
 759 004a 1A60     		str	r2, [r3]
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 760              		.loc 1 876 0
 761 004c 0123     		movs	r3, #1
 762 004e 84F86130 		strb	r3, [r4, #97]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 763              		.loc 1 879 0
 764 0052 0020     		movs	r0, #0
 765 0054 84F86000 		strb	r0, [r4, #96]
 766              	.L56:
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 767              		.loc 1 882 0
 768 0058 38BD     		pop	{r3, r4, r5, pc}
 769              		.cfi_endproc
 770              	.LFE149:
 772              		.section	.text.HAL_DMA2D_Suspend,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_DMA2D_Suspend
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv5-d16
 780              	HAL_DMA2D_Suspend:
 781              	.LFB150:
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccdAsAmP.s 			page 54


 782              		.loc 1 891 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL81:
 787 0000 38B5     		push	{r3, r4, r5, lr}
 788              	.LCFI22:
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 3, -16
 791              		.cfi_offset 4, -12
 792              		.cfi_offset 5, -8
 793              		.cfi_offset 14, -4
 794 0002 0446     		mov	r4, r0
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 795              		.loc 1 898 0
 796 0004 0268     		ldr	r2, [r0]
 797 0006 1368     		ldr	r3, [r2]
 798 0008 23F00303 		bic	r3, r3, #3
 799 000c 43F00203 		orr	r3, r3, #2
 800 0010 1360     		str	r3, [r2]
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 801              		.loc 1 901 0
 802 0012 FFF7FEFF 		bl	HAL_GetTick
 803              	.LVL82:
 804 0016 0546     		mov	r5, r0
 805              	.LVL83:
 806              	.L61:
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 807              		.loc 1 904 0
 808 0018 2268     		ldr	r2, [r4]
 809 001a 1368     		ldr	r3, [r2]
 810 001c 03F00303 		and	r3, r3, #3
 811 0020 012B     		cmp	r3, #1
 812 0022 0DD1     		bne	.L66
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 813              		.loc 1 906 0
 814 0024 FFF7FEFF 		bl	HAL_GetTick
 815              	.LVL84:
 816 0028 401B     		subs	r0, r0, r5
 817 002a B0F57A7F 		cmp	r0, #1000
 818 002e F3D9     		bls	.L61
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 819              		.loc 1 909 0
 820 0030 636E     		ldr	r3, [r4, #100]
 821 0032 43F02003 		orr	r3, r3, #32
 822 0036 6366     		str	r3, [r4, #100]
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 823              		.loc 1 912 0
 824 0038 0320     		movs	r0, #3
 825 003a 84F86100 		strb	r0, [r4, #97]
 826              	.L62:
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 827              		.loc 1 931 0
 828 003e 38BD     		pop	{r3, r4, r5, pc}
 829              	.LVL85:
 830              	.L66:
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
ARM GAS  /tmp/ccdAsAmP.s 			page 55


 831              		.loc 1 919 0
 832 0040 1368     		ldr	r3, [r2]
 833 0042 13F0010F 		tst	r3, #1
 834 0046 05D1     		bne	.L67
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 835              		.loc 1 927 0
 836 0048 1368     		ldr	r3, [r2]
 837 004a 23F00203 		bic	r3, r3, #2
 838 004e 1360     		str	r3, [r2]
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 839              		.loc 1 930 0
 840 0050 0020     		movs	r0, #0
 841 0052 F4E7     		b	.L62
 842              	.L67:
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 843              		.loc 1 921 0
 844 0054 0523     		movs	r3, #5
 845 0056 84F86130 		strb	r3, [r4, #97]
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 846              		.loc 1 930 0
 847 005a 0020     		movs	r0, #0
 848 005c EFE7     		b	.L62
 849              		.cfi_endproc
 850              	.LFE150:
 852              		.section	.text.HAL_DMA2D_Resume,"ax",%progbits
 853              		.align	1
 854              		.global	HAL_DMA2D_Resume
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-d16
 860              	HAL_DMA2D_Resume:
 861              	.LFB151:
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 862              		.loc 1 940 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867              	.LVL86:
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 868              		.loc 1 942 0
 869 0000 0368     		ldr	r3, [r0]
 870 0002 1A68     		ldr	r2, [r3]
 871 0004 02F00302 		and	r2, r2, #3
 872 0008 032A     		cmp	r2, #3
 873 000a 05D0     		beq	.L70
 874              	.L69:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 875              		.loc 1 952 0
 876 000c 1A68     		ldr	r2, [r3]
 877 000e 22F00302 		bic	r2, r2, #3
 878 0012 1A60     		str	r2, [r3]
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 879              		.loc 1 955 0
 880 0014 0020     		movs	r0, #0
 881              	.LVL87:
ARM GAS  /tmp/ccdAsAmP.s 			page 56


 882 0016 7047     		bx	lr
 883              	.LVL88:
 884              	.L70:
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 885              		.loc 1 945 0
 886 0018 0222     		movs	r2, #2
 887 001a 80F86120 		strb	r2, [r0, #97]
 888 001e F5E7     		b	.L69
 889              		.cfi_endproc
 890              	.LFE151:
 892              		.section	.text.HAL_DMA2D_EnableCLUT,"ax",%progbits
 893              		.align	1
 894              		.global	HAL_DMA2D_EnableCLUT
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv5-d16
 900              	HAL_DMA2D_EnableCLUT:
 901              	.LFB152:
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 902              		.loc 1 968 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907              	.LVL89:
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 908              		.loc 1 973 0
 909 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 910 0004 012B     		cmp	r3, #1
 911 0006 14D0     		beq	.L74
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 912              		.loc 1 973 0 is_stmt 0 discriminator 2
 913 0008 0123     		movs	r3, #1
 914 000a 80F86030 		strb	r3, [r0, #96]
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 915              		.loc 1 976 0 is_stmt 1 discriminator 2
 916 000e 0223     		movs	r3, #2
 917 0010 80F86130 		strb	r3, [r0, #97]
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 918              		.loc 1 978 0 discriminator 2
 919 0014 31B1     		cbz	r1, .L75
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 920              		.loc 1 986 0
 921 0016 0268     		ldr	r2, [r0]
 922 0018 D369     		ldr	r3, [r2, #28]
 923 001a 43F02003 		orr	r3, r3, #32
 924 001e D361     		str	r3, [r2, #28]
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 925              		.loc 1 989 0
 926 0020 0020     		movs	r0, #0
 927              	.LVL90:
 928 0022 7047     		bx	lr
 929              	.LVL91:
 930              	.L75:
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 931              		.loc 1 981 0
ARM GAS  /tmp/ccdAsAmP.s 			page 57


 932 0024 0268     		ldr	r2, [r0]
 933 0026 536A     		ldr	r3, [r2, #36]
 934 0028 43F02003 		orr	r3, r3, #32
 935 002c 5362     		str	r3, [r2, #36]
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 936              		.loc 1 989 0
 937 002e 0020     		movs	r0, #0
 938              	.LVL92:
 939 0030 7047     		bx	lr
 940              	.LVL93:
 941              	.L74:
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 942              		.loc 1 973 0
 943 0032 0220     		movs	r0, #2
 944              	.LVL94:
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 945              		.loc 1 990 0
 946 0034 7047     		bx	lr
 947              		.cfi_endproc
 948              	.LFE152:
 950              		.section	.text.HAL_DMA2D_CLUTStartLoad,"ax",%progbits
 951              		.align	1
 952              		.global	HAL_DMA2D_CLUTStartLoad
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu fpv5-d16
 958              	HAL_DMA2D_CLUTStartLoad:
 959              	.LFB153:
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 960              		.loc 1 1004 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		@ link register save eliminated.
 965              	.LVL95:
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 966              		.loc 1 1011 0
 967 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 968 0004 012B     		cmp	r3, #1
 969 0006 32D0     		beq	.L79
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 970              		.loc 1 1004 0 discriminator 2
 971 0008 30B4     		push	{r4, r5}
 972              	.LCFI23:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 4, -8
 975              		.cfi_offset 5, -4
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 976              		.loc 1 1011 0 discriminator 2
 977 000a 0123     		movs	r3, #1
 978 000c 80F86030 		strb	r3, [r0, #96]
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 979              		.loc 1 1014 0 discriminator 2
 980 0010 0223     		movs	r3, #2
 981 0012 80F86130 		strb	r3, [r0, #97]
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
ARM GAS  /tmp/ccdAsAmP.s 			page 58


 982              		.loc 1 1017 0 discriminator 2
 983 0016 AAB1     		cbz	r2, .L84
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 984              		.loc 1 1033 0
 985 0018 0A68     		ldr	r2, [r1]
 986              	.LVL96:
 987 001a 0368     		ldr	r3, [r0]
 988 001c DA62     		str	r2, [r3, #44]
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_CCM
 989              		.loc 1 1036 0
 990 001e 0468     		ldr	r4, [r0]
 991 0020 E269     		ldr	r2, [r4, #28]
 992 0022 144B     		ldr	r3, .L85
 993 0024 1340     		ands	r3, r3, r2
 994 0026 8D68     		ldr	r5, [r1, #8]
 995 0028 4A68     		ldr	r2, [r1, #4]
 996 002a 1201     		lsls	r2, r2, #4
 997 002c 42EA0522 		orr	r2, r2, r5, lsl #8
 998 0030 1343     		orrs	r3, r3, r2
 999 0032 E361     		str	r3, [r4, #28]
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1000              		.loc 1 1040 0
 1001 0034 0268     		ldr	r2, [r0]
 1002 0036 D369     		ldr	r3, [r2, #28]
 1003 0038 43F02003 		orr	r3, r3, #32
 1004 003c D361     		str	r3, [r2, #28]
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1005              		.loc 1 1043 0
 1006 003e 0020     		movs	r0, #0
 1007              	.LVL97:
 1008              	.L77:
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1009              		.loc 1 1044 0
 1010 0040 30BC     		pop	{r4, r5}
 1011              	.LCFI24:
 1012              		.cfi_remember_state
 1013              		.cfi_restore 5
 1014              		.cfi_restore 4
 1015              		.cfi_def_cfa_offset 0
 1016 0042 7047     		bx	lr
 1017              	.LVL98:
 1018              	.L84:
 1019              	.LCFI25:
 1020              		.cfi_restore_state
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1021              		.loc 1 1020 0
 1022 0044 0A68     		ldr	r2, [r1]
 1023              	.LVL99:
 1024 0046 0368     		ldr	r3, [r0]
 1025 0048 1A63     		str	r2, [r3, #48]
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_CCM
 1026              		.loc 1 1023 0
 1027 004a 0468     		ldr	r4, [r0]
 1028 004c 626A     		ldr	r2, [r4, #36]
 1029 004e 094B     		ldr	r3, .L85
 1030 0050 1340     		ands	r3, r3, r2
 1031 0052 8D68     		ldr	r5, [r1, #8]
ARM GAS  /tmp/ccdAsAmP.s 			page 59


 1032 0054 4A68     		ldr	r2, [r1, #4]
 1033 0056 1201     		lsls	r2, r2, #4
 1034 0058 42EA0522 		orr	r2, r2, r5, lsl #8
 1035 005c 1343     		orrs	r3, r3, r2
 1036 005e 6362     		str	r3, [r4, #36]
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1037              		.loc 1 1027 0
 1038 0060 0268     		ldr	r2, [r0]
 1039 0062 536A     		ldr	r3, [r2, #36]
 1040 0064 43F02003 		orr	r3, r3, #32
 1041 0068 5362     		str	r3, [r2, #36]
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1042              		.loc 1 1043 0
 1043 006a 0020     		movs	r0, #0
 1044              	.LVL100:
 1045 006c E8E7     		b	.L77
 1046              	.LVL101:
 1047              	.L79:
 1048              	.LCFI26:
 1049              		.cfi_def_cfa_offset 0
 1050              		.cfi_restore 4
 1051              		.cfi_restore 5
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1052              		.loc 1 1011 0
 1053 006e 0220     		movs	r0, #2
 1054              	.LVL102:
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1055              		.loc 1 1044 0
 1056 0070 7047     		bx	lr
 1057              	.L86:
 1058 0072 00BF     		.align	2
 1059              	.L85:
 1060 0074 EF00FFFF 		.word	-65297
 1061              		.cfi_endproc
 1062              	.LFE153:
 1064              		.section	.text.HAL_DMA2D_CLUTStartLoad_IT,"ax",%progbits
 1065              		.align	1
 1066              		.global	HAL_DMA2D_CLUTStartLoad_IT
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv5-d16
 1072              	HAL_DMA2D_CLUTStartLoad_IT:
 1073              	.LFB154:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 1074              		.loc 1 1058 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 1079              	.LVL103:
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1080              		.loc 1 1065 0
 1081 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1082 0004 012B     		cmp	r3, #1
 1083 0006 3CD0     		beq	.L90
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
ARM GAS  /tmp/ccdAsAmP.s 			page 60


 1084              		.loc 1 1058 0 discriminator 2
 1085 0008 30B4     		push	{r4, r5}
 1086              	.LCFI27:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 4, -8
 1089              		.cfi_offset 5, -4
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1090              		.loc 1 1065 0 discriminator 2
 1091 000a 0123     		movs	r3, #1
 1092 000c 80F86030 		strb	r3, [r0, #96]
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1093              		.loc 1 1068 0 discriminator 2
 1094 0010 0223     		movs	r3, #2
 1095 0012 80F86130 		strb	r3, [r0, #97]
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1096              		.loc 1 1071 0 discriminator 2
 1097 0016 D2B1     		cbz	r2, .L95
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1098              		.loc 1 1090 0
 1099 0018 0A68     		ldr	r2, [r1]
 1100              	.LVL104:
 1101 001a 0368     		ldr	r3, [r0]
 1102 001c DA62     		str	r2, [r3, #44]
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_FGPFCCR_CCM
 1103              		.loc 1 1093 0
 1104 001e 0468     		ldr	r4, [r0]
 1105 0020 E269     		ldr	r2, [r4, #28]
 1106 0022 194B     		ldr	r3, .L96
 1107 0024 1340     		ands	r3, r3, r2
 1108 0026 8D68     		ldr	r5, [r1, #8]
 1109 0028 4A68     		ldr	r2, [r1, #4]
 1110 002a 1201     		lsls	r2, r2, #4
 1111 002c 42EA0522 		orr	r2, r2, r5, lsl #8
 1112 0030 1343     		orrs	r3, r3, r2
 1113 0032 E361     		str	r3, [r4, #28]
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1114              		.loc 1 1097 0
 1115 0034 0268     		ldr	r2, [r0]
 1116 0036 1368     		ldr	r3, [r2]
 1117 0038 43F46453 		orr	r3, r3, #14592
 1118 003c 1360     		str	r3, [r2]
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1119              		.loc 1 1100 0
 1120 003e 0268     		ldr	r2, [r0]
 1121 0040 D369     		ldr	r3, [r2, #28]
 1122 0042 43F02003 		orr	r3, r3, #32
 1123 0046 D361     		str	r3, [r2, #28]
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1124              		.loc 1 1103 0
 1125 0048 0020     		movs	r0, #0
 1126              	.LVL105:
 1127              	.L88:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1128              		.loc 1 1104 0
 1129 004a 30BC     		pop	{r4, r5}
 1130              	.LCFI28:
 1131              		.cfi_remember_state
ARM GAS  /tmp/ccdAsAmP.s 			page 61


 1132              		.cfi_restore 5
 1133              		.cfi_restore 4
 1134              		.cfi_def_cfa_offset 0
 1135 004c 7047     		bx	lr
 1136              	.LVL106:
 1137              	.L95:
 1138              	.LCFI29:
 1139              		.cfi_restore_state
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1140              		.loc 1 1074 0
 1141 004e 0A68     		ldr	r2, [r1]
 1142              	.LVL107:
 1143 0050 0368     		ldr	r3, [r0]
 1144 0052 1A63     		str	r2, [r3, #48]
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg->Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg->CLUTColorMode << DMA2D_BGPFCCR_CCM
 1145              		.loc 1 1077 0
 1146 0054 0468     		ldr	r4, [r0]
 1147 0056 626A     		ldr	r2, [r4, #36]
 1148 0058 0B4B     		ldr	r3, .L96
 1149 005a 1340     		ands	r3, r3, r2
 1150 005c 8D68     		ldr	r5, [r1, #8]
 1151 005e 4A68     		ldr	r2, [r1, #4]
 1152 0060 1201     		lsls	r2, r2, #4
 1153 0062 42EA0522 		orr	r2, r2, r5, lsl #8
 1154 0066 1343     		orrs	r3, r3, r2
 1155 0068 6362     		str	r3, [r4, #36]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1156              		.loc 1 1081 0
 1157 006a 0268     		ldr	r2, [r0]
 1158 006c 1368     		ldr	r3, [r2]
 1159 006e 43F46453 		orr	r3, r3, #14592
 1160 0072 1360     		str	r3, [r2]
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1161              		.loc 1 1084 0
 1162 0074 0268     		ldr	r2, [r0]
 1163 0076 536A     		ldr	r3, [r2, #36]
 1164 0078 43F02003 		orr	r3, r3, #32
 1165 007c 5362     		str	r3, [r2, #36]
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1166              		.loc 1 1103 0
 1167 007e 0020     		movs	r0, #0
 1168              	.LVL108:
 1169 0080 E3E7     		b	.L88
 1170              	.LVL109:
 1171              	.L90:
 1172              	.LCFI30:
 1173              		.cfi_def_cfa_offset 0
 1174              		.cfi_restore 4
 1175              		.cfi_restore 5
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1176              		.loc 1 1065 0
 1177 0082 0220     		movs	r0, #2
 1178              	.LVL110:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1179              		.loc 1 1104 0
 1180 0084 7047     		bx	lr
 1181              	.L97:
ARM GAS  /tmp/ccdAsAmP.s 			page 62


 1182 0086 00BF     		.align	2
 1183              	.L96:
 1184 0088 EF00FFFF 		.word	-65297
 1185              		.cfi_endproc
 1186              	.LFE154:
 1188              		.section	.text.HAL_DMA2D_CLUTLoad,"ax",%progbits
 1189              		.align	1
 1190              		.global	HAL_DMA2D_CLUTLoad
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv5-d16
 1196              	HAL_DMA2D_CLUTLoad:
 1197              	.LFB155:
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 1198              		.loc 1 1121 0
 1199              		.cfi_startproc
 1200              		@ args = 4, pretend = 0, frame = 16
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203              	.LVL111:
 1204 0000 10B4     		push	{r4}
 1205              	.LCFI31:
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 4, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              	.LCFI32:
 1210              		.cfi_def_cfa_offset 24
 1211 0004 04AC     		add	r4, sp, #16
 1212 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1213              		.loc 1 1128 0
 1214 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1215 000e 012B     		cmp	r3, #1
 1216 0010 34D0     		beq	.L101
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1217              		.loc 1 1128 0 is_stmt 0 discriminator 2
 1218 0012 0123     		movs	r3, #1
 1219 0014 80F86030 		strb	r3, [r0, #96]
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1220              		.loc 1 1131 0 is_stmt 1 discriminator 2
 1221 0018 0223     		movs	r3, #2
 1222 001a 80F86130 		strb	r3, [r0, #97]
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1223              		.loc 1 1134 0 discriminator 2
 1224 001e 069B     		ldr	r3, [sp, #24]
 1225 0020 BBB1     		cbz	r3, .L103
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1226              		.loc 1 1150 0
 1227 0022 0368     		ldr	r3, [r0]
 1228 0024 019A     		ldr	r2, [sp, #4]
 1229 0026 DA62     		str	r2, [r3, #44]
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 1230              		.loc 1 1153 0
 1231 0028 0168     		ldr	r1, [r0]
 1232 002a CA69     		ldr	r2, [r1, #28]
 1233 002c 144B     		ldr	r3, .L104
ARM GAS  /tmp/ccdAsAmP.s 			page 63


 1234 002e 1340     		ands	r3, r3, r2
 1235 0030 029A     		ldr	r2, [sp, #8]
 1236 0032 1201     		lsls	r2, r2, #4
 1237 0034 039C     		ldr	r4, [sp, #12]
 1238 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 1239 003a 1343     		orrs	r3, r3, r2
 1240 003c CB61     		str	r3, [r1, #28]
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1241              		.loc 1 1157 0
 1242 003e 0268     		ldr	r2, [r0]
 1243 0040 D369     		ldr	r3, [r2, #28]
 1244 0042 43F02003 		orr	r3, r3, #32
 1245 0046 D361     		str	r3, [r2, #28]
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1246              		.loc 1 1160 0
 1247 0048 0020     		movs	r0, #0
 1248              	.LVL112:
 1249              	.L99:
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1250              		.loc 1 1161 0
 1251 004a 05B0     		add	sp, sp, #20
 1252              	.LCFI33:
 1253              		.cfi_remember_state
 1254              		.cfi_def_cfa_offset 4
 1255              		@ sp needed
 1256 004c 5DF8044B 		ldr	r4, [sp], #4
 1257              	.LCFI34:
 1258              		.cfi_restore 4
 1259              		.cfi_def_cfa_offset 0
 1260              	.LVL113:
 1261 0050 7047     		bx	lr
 1262              	.LVL114:
 1263              	.L103:
 1264              	.LCFI35:
 1265              		.cfi_restore_state
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1266              		.loc 1 1137 0
 1267 0052 0368     		ldr	r3, [r0]
 1268 0054 019A     		ldr	r2, [sp, #4]
 1269 0056 1A63     		str	r2, [r3, #48]
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 1270              		.loc 1 1140 0
 1271 0058 0168     		ldr	r1, [r0]
 1272 005a 4A6A     		ldr	r2, [r1, #36]
 1273 005c 084B     		ldr	r3, .L104
 1274 005e 1340     		ands	r3, r3, r2
 1275 0060 029A     		ldr	r2, [sp, #8]
 1276 0062 1201     		lsls	r2, r2, #4
 1277 0064 039C     		ldr	r4, [sp, #12]
 1278 0066 42EA0422 		orr	r2, r2, r4, lsl #8
 1279 006a 1343     		orrs	r3, r3, r2
 1280 006c 4B62     		str	r3, [r1, #36]
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1281              		.loc 1 1144 0
 1282 006e 0268     		ldr	r2, [r0]
 1283 0070 536A     		ldr	r3, [r2, #36]
 1284 0072 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccdAsAmP.s 			page 64


 1285 0076 5362     		str	r3, [r2, #36]
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1286              		.loc 1 1160 0
 1287 0078 0020     		movs	r0, #0
 1288              	.LVL115:
 1289 007a E6E7     		b	.L99
 1290              	.LVL116:
 1291              	.L101:
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1292              		.loc 1 1128 0
 1293 007c 0220     		movs	r0, #2
 1294              	.LVL117:
 1295 007e E4E7     		b	.L99
 1296              	.L105:
 1297              		.align	2
 1298              	.L104:
 1299 0080 EF00FFFF 		.word	-65297
 1300              		.cfi_endproc
 1301              	.LFE155:
 1303              		.section	.text.HAL_DMA2D_CLUTLoad_IT,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_DMA2D_CLUTLoad_IT
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
 1309              		.fpu fpv5-d16
 1311              	HAL_DMA2D_CLUTLoad_IT:
 1312              	.LFB156:
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 1313              		.loc 1 1178 0
 1314              		.cfi_startproc
 1315              		@ args = 4, pretend = 0, frame = 16
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              		@ link register save eliminated.
 1318              	.LVL118:
 1319 0000 10B4     		push	{r4}
 1320              	.LCFI36:
 1321              		.cfi_def_cfa_offset 4
 1322              		.cfi_offset 4, -4
 1323 0002 85B0     		sub	sp, sp, #20
 1324              	.LCFI37:
 1325              		.cfi_def_cfa_offset 24
 1326 0004 04AC     		add	r4, sp, #16
 1327 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1328              		.loc 1 1185 0
 1329 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 1330 000e 012B     		cmp	r3, #1
 1331 0010 3ED0     		beq	.L109
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1332              		.loc 1 1185 0 is_stmt 0 discriminator 2
 1333 0012 0123     		movs	r3, #1
 1334 0014 80F86030 		strb	r3, [r0, #96]
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1335              		.loc 1 1188 0 is_stmt 1 discriminator 2
 1336 0018 0223     		movs	r3, #2
 1337 001a 80F86130 		strb	r3, [r0, #97]
ARM GAS  /tmp/ccdAsAmP.s 			page 65


1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1338              		.loc 1 1191 0 discriminator 2
 1339 001e 069B     		ldr	r3, [sp, #24]
 1340 0020 E3B1     		cbz	r3, .L111
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1341              		.loc 1 1210 0
 1342 0022 0368     		ldr	r3, [r0]
 1343 0024 019A     		ldr	r2, [sp, #4]
 1344 0026 DA62     		str	r2, [r3, #44]
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 1345              		.loc 1 1213 0
 1346 0028 0168     		ldr	r1, [r0]
 1347 002a CA69     		ldr	r2, [r1, #28]
 1348 002c 194B     		ldr	r3, .L112
 1349 002e 1340     		ands	r3, r3, r2
 1350 0030 029A     		ldr	r2, [sp, #8]
 1351 0032 1201     		lsls	r2, r2, #4
 1352 0034 039C     		ldr	r4, [sp, #12]
 1353 0036 42EA0422 		orr	r2, r2, r4, lsl #8
 1354 003a 1343     		orrs	r3, r3, r2
 1355 003c CB61     		str	r3, [r1, #28]
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1356              		.loc 1 1217 0
 1357 003e 0268     		ldr	r2, [r0]
 1358 0040 1368     		ldr	r3, [r2]
 1359 0042 43F46453 		orr	r3, r3, #14592
 1360 0046 1360     		str	r3, [r2]
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1361              		.loc 1 1220 0
 1362 0048 0268     		ldr	r2, [r0]
 1363 004a D369     		ldr	r3, [r2, #28]
 1364 004c 43F02003 		orr	r3, r3, #32
 1365 0050 D361     		str	r3, [r2, #28]
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1366              		.loc 1 1223 0
 1367 0052 0020     		movs	r0, #0
 1368              	.LVL119:
 1369              	.L107:
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1370              		.loc 1 1224 0
 1371 0054 05B0     		add	sp, sp, #20
 1372              	.LCFI38:
 1373              		.cfi_remember_state
 1374              		.cfi_def_cfa_offset 4
 1375              		@ sp needed
 1376 0056 5DF8044B 		ldr	r4, [sp], #4
 1377              	.LCFI39:
 1378              		.cfi_restore 4
 1379              		.cfi_def_cfa_offset 0
 1380              	.LVL120:
 1381 005a 7047     		bx	lr
 1382              	.LVL121:
 1383              	.L111:
 1384              	.LCFI40:
 1385              		.cfi_restore_state
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1386              		.loc 1 1194 0
ARM GAS  /tmp/ccdAsAmP.s 			page 66


 1387 005c 0368     		ldr	r3, [r0]
 1388 005e 019A     		ldr	r2, [sp, #4]
 1389 0060 1A63     		str	r2, [r3, #48]
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 1390              		.loc 1 1197 0
 1391 0062 0168     		ldr	r1, [r0]
 1392 0064 4A6A     		ldr	r2, [r1, #36]
 1393 0066 0B4B     		ldr	r3, .L112
 1394 0068 1340     		ands	r3, r3, r2
 1395 006a 029A     		ldr	r2, [sp, #8]
 1396 006c 1201     		lsls	r2, r2, #4
 1397 006e 039C     		ldr	r4, [sp, #12]
 1398 0070 42EA0422 		orr	r2, r2, r4, lsl #8
 1399 0074 1343     		orrs	r3, r3, r2
 1400 0076 4B62     		str	r3, [r1, #36]
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1401              		.loc 1 1201 0
 1402 0078 0268     		ldr	r2, [r0]
 1403 007a 1368     		ldr	r3, [r2]
 1404 007c 43F46453 		orr	r3, r3, #14592
 1405 0080 1360     		str	r3, [r2]
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1406              		.loc 1 1204 0
 1407 0082 0268     		ldr	r2, [r0]
 1408 0084 536A     		ldr	r3, [r2, #36]
 1409 0086 43F02003 		orr	r3, r3, #32
 1410 008a 5362     		str	r3, [r2, #36]
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1411              		.loc 1 1223 0
 1412 008c 0020     		movs	r0, #0
 1413              	.LVL122:
 1414 008e E1E7     		b	.L107
 1415              	.LVL123:
 1416              	.L109:
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1417              		.loc 1 1185 0
 1418 0090 0220     		movs	r0, #2
 1419              	.LVL124:
 1420 0092 DFE7     		b	.L107
 1421              	.L113:
 1422              		.align	2
 1423              	.L112:
 1424 0094 EF00FFFF 		.word	-65297
 1425              		.cfi_endproc
 1426              	.LFE156:
 1428              		.section	.text.HAL_DMA2D_CLUTLoading_Abort,"ax",%progbits
 1429              		.align	1
 1430              		.global	HAL_DMA2D_CLUTLoading_Abort
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1434              		.fpu fpv5-d16
 1436              	HAL_DMA2D_CLUTLoading_Abort:
 1437              	.LFB157:
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1438              		.loc 1 1236 0
 1439              		.cfi_startproc
ARM GAS  /tmp/ccdAsAmP.s 			page 67


 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              	.LVL125:
 1443 0000 70B5     		push	{r4, r5, r6, lr}
 1444              	.LCFI41:
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0646     		mov	r6, r0
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1451              		.loc 1 1238 0
 1452 0004 0368     		ldr	r3, [r0]
 1453 0006 03F12404 		add	r4, r3, #36
 1454              	.LVL126:
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1455              		.loc 1 1241 0
 1456 000a 1A68     		ldr	r2, [r3]
 1457 000c 42F00402 		orr	r2, r2, #4
 1458 0010 1A60     		str	r2, [r3]
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1459              		.loc 1 1244 0
 1460 0012 0129     		cmp	r1, #1
 1461 0014 17D0     		beq	.L120
 1462              	.L115:
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1463              		.loc 1 1251 0
 1464 0016 FFF7FEFF 		bl	HAL_GetTick
 1465              	.LVL127:
 1466 001a 0546     		mov	r5, r0
 1467              	.LVL128:
 1468              	.L116:
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1469              		.loc 1 1254 0
 1470 001c 2368     		ldr	r3, [r4]
 1471 001e 13F0200F 		tst	r3, #32
 1472 0022 13D0     		beq	.L121
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1473              		.loc 1 1256 0
 1474 0024 FFF7FEFF 		bl	HAL_GetTick
 1475              	.LVL129:
 1476 0028 401B     		subs	r0, r0, r5
 1477 002a B0F57A7F 		cmp	r0, #1000
 1478 002e F5D9     		bls	.L116
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1479              		.loc 1 1259 0
 1480 0030 736E     		ldr	r3, [r6, #100]
 1481 0032 43F02003 		orr	r3, r3, #32
 1482 0036 7366     		str	r3, [r6, #100]
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1483              		.loc 1 1262 0
 1484 0038 0320     		movs	r0, #3
 1485 003a 86F86100 		strb	r0, [r6, #97]
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1486              		.loc 1 1265 0
 1487 003e 0023     		movs	r3, #0
ARM GAS  /tmp/ccdAsAmP.s 			page 68


 1488 0040 86F86030 		strb	r3, [r6, #96]
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1489              		.loc 1 1267 0
 1490 0044 0DE0     		b	.L117
 1491              	.LVL130:
 1492              	.L120:
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1493              		.loc 1 1246 0
 1494 0046 0468     		ldr	r4, [r0]
 1495              	.LVL131:
 1496 0048 1C34     		adds	r4, r4, #28
 1497              	.LVL132:
 1498 004a E4E7     		b	.L115
 1499              	.LVL133:
 1500              	.L121:
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1501              		.loc 1 1272 0
 1502 004c 3268     		ldr	r2, [r6]
 1503 004e 1368     		ldr	r3, [r2]
 1504 0050 23F46453 		bic	r3, r3, #14592
 1505 0054 1360     		str	r3, [r2]
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1506              		.loc 1 1275 0
 1507 0056 0123     		movs	r3, #1
 1508 0058 86F86130 		strb	r3, [r6, #97]
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1509              		.loc 1 1278 0
 1510 005c 0020     		movs	r0, #0
 1511 005e 86F86000 		strb	r0, [r6, #96]
 1512              	.L117:
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1513              		.loc 1 1281 0
 1514 0062 70BD     		pop	{r4, r5, r6, pc}
 1515              		.cfi_endproc
 1516              	.LFE157:
 1518              		.section	.text.HAL_DMA2D_DeInit,"ax",%progbits
 1519              		.align	1
 1520              		.global	HAL_DMA2D_DeInit
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1524              		.fpu fpv5-d16
 1526              	HAL_DMA2D_DeInit:
 1527              	.LFB142:
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1528              		.loc 1 312 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              	.LVL134:
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1533              		.loc 1 315 0
 1534 0000 0028     		cmp	r0, #0
 1535 0002 42D0     		beq	.L127
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1536              		.loc 1 312 0
 1537 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccdAsAmP.s 			page 69


 1538              	.LCFI42:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 3, -16
 1541              		.cfi_offset 4, -12
 1542              		.cfi_offset 5, -8
 1543              		.cfi_offset 14, -4
 1544 0006 0446     		mov	r4, r0
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1545              		.loc 1 322 0
 1546 0008 214B     		ldr	r3, .L138
 1547 000a D3F8D430 		ldr	r3, [r3, #212]
 1548 000e 13F0100F 		tst	r3, #16
 1549 0012 0CD0     		beq	.L124
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1550              		.loc 1 325 0
 1551 0014 0368     		ldr	r3, [r0]
 1552 0016 1A68     		ldr	r2, [r3]
 1553 0018 12F0010F 		tst	r2, #1
 1554 001c 21D1     		bne	.L135
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1555              		.loc 1 336 0
 1556 001e 5A6A     		ldr	r2, [r3, #36]
 1557 0020 12F0200F 		tst	r2, #32
 1558 0024 23D1     		bne	.L136
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1559              		.loc 1 347 0
 1560 0026 DB69     		ldr	r3, [r3, #28]
 1561 0028 13F0200F 		tst	r3, #32
 1562 002c 26D1     		bne	.L137
 1563              	.LVL135:
 1564              	.L124:
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->IFCR     = 0x3FU;
 1565              		.loc 1 360 0
 1566 002e 2368     		ldr	r3, [r4]
 1567 0030 0025     		movs	r5, #0
 1568 0032 1D60     		str	r5, [r3]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR     =    0U;
 1569              		.loc 1 361 0
 1570 0034 2368     		ldr	r3, [r4]
 1571 0036 3F22     		movs	r2, #63
 1572 0038 9A60     		str	r2, [r3, #8]
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR     =    0U;
 1573              		.loc 1 362 0
 1574 003a 2368     		ldr	r3, [r4]
 1575 003c 1D61     		str	r5, [r3, #16]
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR  =    0U;
 1576              		.loc 1 363 0
 1577 003e 2368     		ldr	r3, [r4]
 1578 0040 9D61     		str	r5, [r3, #24]
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR  =    0U;
 1579              		.loc 1 364 0
 1580 0042 2368     		ldr	r3, [r4]
 1581 0044 DD61     		str	r5, [r3, #28]
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR   =    0U;
 1582              		.loc 1 365 0
 1583 0046 2368     		ldr	r3, [r4]
 1584 0048 5D62     		str	r5, [r3, #36]
ARM GAS  /tmp/ccdAsAmP.s 			page 70


 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1585              		.loc 1 366 0
 1586 004a 2368     		ldr	r3, [r4]
 1587 004c 5D63     		str	r5, [r3, #52]
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */
 1588              		.loc 1 380 0
 1589 004e 2046     		mov	r0, r4
 1590 0050 FFF7FEFF 		bl	HAL_DMA2D_MspDeInit
 1591              	.LVL136:
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1592              		.loc 1 384 0
 1593 0054 6566     		str	r5, [r4, #100]
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1594              		.loc 1 387 0
 1595 0056 84F86150 		strb	r5, [r4, #97]
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1596              		.loc 1 390 0
 1597 005a 84F86050 		strb	r5, [r4, #96]
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1598              		.loc 1 392 0
 1599 005e 2846     		mov	r0, r5
 1600              	.L123:
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1601              		.loc 1 393 0
 1602 0060 38BD     		pop	{r3, r4, r5, pc}
 1603              	.LVL137:
 1604              	.L135:
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1605              		.loc 1 327 0
 1606 0062 FFF7FEFF 		bl	HAL_DMA2D_Abort
 1607              	.LVL138:
 1608 0066 0028     		cmp	r0, #0
 1609 0068 E1D0     		beq	.L124
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1610              		.loc 1 330 0
 1611 006a 0120     		movs	r0, #1
 1612 006c F8E7     		b	.L123
 1613              	.LVL139:
 1614              	.L136:
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1615              		.loc 1 338 0
 1616 006e 0021     		movs	r1, #0
 1617 0070 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1618              	.LVL140:
 1619 0074 0028     		cmp	r0, #0
 1620 0076 DAD0     		beq	.L124
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1621              		.loc 1 341 0
 1622 0078 0120     		movs	r0, #1
 1623 007a F1E7     		b	.L123
 1624              	.LVL141:
 1625              	.L137:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           {
 1626              		.loc 1 349 0
 1627 007c 0121     		movs	r1, #1
 1628 007e FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 1629              	.LVL142:
ARM GAS  /tmp/ccdAsAmP.s 			page 71


 1630 0082 0028     		cmp	r0, #0
 1631 0084 D3D0     		beq	.L124
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****           }
 1632              		.loc 1 352 0
 1633 0086 0120     		movs	r0, #1
 1634 0088 EAE7     		b	.L123
 1635              	.LVL143:
 1636              	.L127:
 1637              	.LCFI43:
 1638              		.cfi_def_cfa_offset 0
 1639              		.cfi_restore 3
 1640              		.cfi_restore 4
 1641              		.cfi_restore 5
 1642              		.cfi_restore 14
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1643              		.loc 1 317 0
 1644 008a 0120     		movs	r0, #1
 1645              	.LVL144:
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1646              		.loc 1 393 0
 1647 008c 7047     		bx	lr
 1648              	.L139:
 1649 008e 00BF     		.align	2
 1650              	.L138:
 1651 0090 00440258 		.word	1476543488
 1652              		.cfi_endproc
 1653              	.LFE142:
 1655              		.section	.text.HAL_DMA2D_CLUTLoading_Suspend,"ax",%progbits
 1656              		.align	1
 1657              		.global	HAL_DMA2D_CLUTLoading_Suspend
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv5-d16
 1663              	HAL_DMA2D_CLUTLoading_Suspend:
 1664              	.LFB158:
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1665              		.loc 1 1293 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669              	.LVL145:
 1670 0000 70B5     		push	{r4, r5, r6, lr}
 1671              	.LCFI44:
 1672              		.cfi_def_cfa_offset 16
 1673              		.cfi_offset 4, -16
 1674              		.cfi_offset 5, -12
 1675              		.cfi_offset 6, -8
 1676              		.cfi_offset 14, -4
 1677 0002 0446     		mov	r4, r0
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1678              		.loc 1 1296 0
 1679 0004 0368     		ldr	r3, [r0]
 1680 0006 03F12405 		add	r5, r3, #36
 1681              	.LVL146:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1682              		.loc 1 1299 0
ARM GAS  /tmp/ccdAsAmP.s 			page 72


 1683 000a 1A68     		ldr	r2, [r3]
 1684 000c 42F00202 		orr	r2, r2, #2
 1685 0010 1A60     		str	r2, [r3]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1686              		.loc 1 1302 0
 1687 0012 0129     		cmp	r1, #1
 1688 0014 0FD0     		beq	.L154
 1689              	.L141:
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1690              		.loc 1 1308 0
 1691 0016 FFF7FEFF 		bl	HAL_GetTick
 1692              	.LVL147:
 1693 001a 0646     		mov	r6, r0
 1694              	.LVL148:
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd condition
 1695              		.loc 1 1311 0
 1696 001c 2368     		ldr	r3, [r4]
 1697 001e 1B68     		ldr	r3, [r3]
 1698 0020 13F00203 		ands	r3, r3, #2
 1699 0024 00D0     		beq	.L142
 1700 0026 0123     		movs	r3, #1
 1701              	.L142:
 1702              	.LVL149:
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1703              		.loc 1 1312 0 discriminator 4
 1704 0028 2A68     		ldr	r2, [r5]
 1705 002a 12F0200F 		tst	r2, #32
 1706 002e 05D1     		bne	.L151
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1707              		.loc 1 1312 0 is_stmt 0
 1708 0030 0122     		movs	r2, #1
 1709              	.L143:
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1710              		.loc 1 1312 0 discriminator 4
 1711 0032 1343     		orrs	r3, r3, r2
 1712              	.LVL150:
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1713              		.loc 1 1313 0 is_stmt 1 discriminator 4
 1714 0034 0EE0     		b	.L144
 1715              	.LVL151:
 1716              	.L154:
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1717              		.loc 1 1304 0
 1718 0036 0568     		ldr	r5, [r0]
 1719              	.LVL152:
 1720 0038 1C35     		adds	r5, r5, #28
 1721              	.LVL153:
 1722 003a ECE7     		b	.L141
 1723              	.LVL154:
 1724              	.L151:
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   while (loadsuspended == 0UL)
 1725              		.loc 1 1312 0
 1726 003c 0022     		movs	r2, #0
 1727 003e F8E7     		b	.L143
 1728              	.LVL155:
 1729              	.L156:
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 73


 1730              		.loc 1 1318 0
 1731 0040 636E     		ldr	r3, [r4, #100]
 1732 0042 43F02003 		orr	r3, r3, #32
 1733 0046 6366     		str	r3, [r4, #100]
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1734              		.loc 1 1321 0
 1735 0048 0320     		movs	r0, #3
 1736 004a 84F86100 		strb	r0, [r4, #97]
 1737              	.L146:
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1738              		.loc 1 1342 0
 1739 004e 70BD     		pop	{r4, r5, r6, pc}
 1740              	.LVL156:
 1741              	.L152:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1742              		.loc 1 1326 0
 1743 0050 0022     		movs	r2, #0
 1744              	.L148:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1745              		.loc 1 1326 0 is_stmt 0 discriminator 4
 1746 0052 1343     		orrs	r3, r3, r2
 1747              	.LVL157:
 1748              	.L144:
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1749              		.loc 1 1313 0 is_stmt 1
 1750 0054 8BB9     		cbnz	r3, .L155
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1751              		.loc 1 1315 0
 1752 0056 FFF7FEFF 		bl	HAL_GetTick
 1753              	.LVL158:
 1754 005a 801B     		subs	r0, r0, r6
 1755 005c B0F57A7F 		cmp	r0, #1000
 1756 0060 EED8     		bhi	.L156
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     loadsuspended |= ((*reg & DMA2D_BGPFCCR_START) != DMA2D_BGPFCCR_START)? 1UL: 0UL; /*2nd conditi
 1757              		.loc 1 1325 0
 1758 0062 2368     		ldr	r3, [r4]
 1759 0064 1B68     		ldr	r3, [r3]
 1760 0066 13F00203 		ands	r3, r3, #2
 1761 006a 00D0     		beq	.L147
 1762 006c 0123     		movs	r3, #1
 1763              	.L147:
 1764              	.LVL159:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1765              		.loc 1 1326 0 discriminator 4
 1766 006e 2A68     		ldr	r2, [r5]
 1767 0070 12F0200F 		tst	r2, #32
 1768 0074 ECD1     		bne	.L152
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1769              		.loc 1 1326 0 is_stmt 0
 1770 0076 0122     		movs	r2, #1
 1771 0078 EBE7     		b	.L148
 1772              	.L155:
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1773              		.loc 1 1330 0 is_stmt 1
 1774 007a 2B68     		ldr	r3, [r5]
 1775              	.LVL160:
 1776 007c 13F0200F 		tst	r3, #32
ARM GAS  /tmp/ccdAsAmP.s 			page 74


 1777 0080 06D1     		bne	.L157
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1778              		.loc 1 1338 0
 1779 0082 2268     		ldr	r2, [r4]
 1780 0084 1368     		ldr	r3, [r2]
 1781 0086 23F00203 		bic	r3, r3, #2
 1782 008a 1360     		str	r3, [r2]
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1783              		.loc 1 1341 0
 1784 008c 0020     		movs	r0, #0
 1785 008e DEE7     		b	.L146
 1786              	.L157:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 1787              		.loc 1 1332 0
 1788 0090 0523     		movs	r3, #5
 1789 0092 84F86130 		strb	r3, [r4, #97]
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 1790              		.loc 1 1341 0
 1791 0096 0020     		movs	r0, #0
 1792 0098 D9E7     		b	.L146
 1793              		.cfi_endproc
 1794              	.LFE158:
 1796              		.section	.text.HAL_DMA2D_CLUTLoading_Resume,"ax",%progbits
 1797              		.align	1
 1798              		.global	HAL_DMA2D_CLUTLoading_Resume
 1799              		.syntax unified
 1800              		.thumb
 1801              		.thumb_func
 1802              		.fpu fpv5-d16
 1804              	HAL_DMA2D_CLUTLoading_Resume:
 1805              	.LFB159:
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
 1806              		.loc 1 1354 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
 1811              	.LVL161:
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1812              		.loc 1 1356 0
 1813 0000 61B9     		cbnz	r1, .L159
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1814              		.loc 1 1359 0
 1815 0002 0368     		ldr	r3, [r0]
 1816 0004 1A68     		ldr	r2, [r3]
 1817 0006 12F0020F 		tst	r2, #2
 1818 000a 13D0     		beq	.L160
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1819              		.loc 1 1361 0
 1820 000c 5B6A     		ldr	r3, [r3, #36]
 1821 000e 13F0200F 		tst	r3, #32
 1822 0012 0FD0     		beq	.L160
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1823              		.loc 1 1364 0
 1824 0014 0223     		movs	r3, #2
 1825 0016 80F86130 		strb	r3, [r0, #97]
 1826 001a 0BE0     		b	.L160
ARM GAS  /tmp/ccdAsAmP.s 			page 75


 1827              	.L159:
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1828              		.loc 1 1371 0
 1829 001c 0368     		ldr	r3, [r0]
 1830 001e 1A68     		ldr	r2, [r3]
 1831 0020 12F0020F 		tst	r2, #2
 1832 0024 06D0     		beq	.L160
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1833              		.loc 1 1373 0
 1834 0026 DB69     		ldr	r3, [r3, #28]
 1835 0028 13F0200F 		tst	r3, #32
 1836 002c 02D0     		beq	.L160
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 1837              		.loc 1 1376 0
 1838 002e 0223     		movs	r3, #2
 1839 0030 80F86130 		strb	r3, [r0, #97]
 1840              	.L160:
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1841              		.loc 1 1382 0
 1842 0034 0268     		ldr	r2, [r0]
 1843 0036 1368     		ldr	r3, [r2]
 1844 0038 23F00203 		bic	r3, r3, #2
 1845 003c 1360     		str	r3, [r2]
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1846              		.loc 1 1385 0
 1847 003e 0020     		movs	r0, #0
 1848              	.LVL162:
 1849 0040 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE159:
 1853              		.section	.text.HAL_DMA2D_PollForTransfer,"ax",%progbits
 1854              		.align	1
 1855              		.global	HAL_DMA2D_PollForTransfer
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu fpv5-d16
 1861              	HAL_DMA2D_PollForTransfer:
 1862              	.LFB160:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t tickstart;
 1863              		.loc 1 1397 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 8
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              	.LVL163:
 1868 0000 70B5     		push	{r4, r5, r6, lr}
 1869              	.LCFI45:
 1870              		.cfi_def_cfa_offset 16
 1871              		.cfi_offset 4, -16
 1872              		.cfi_offset 5, -12
 1873              		.cfi_offset 6, -8
 1874              		.cfi_offset 14, -4
 1875 0002 82B0     		sub	sp, sp, #8
 1876              	.LCFI46:
 1877              		.cfi_def_cfa_offset 24
 1878 0004 0446     		mov	r4, r0
 1879 0006 0D46     		mov	r5, r1
ARM GAS  /tmp/ccdAsAmP.s 			page 76


1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1880              		.loc 1 1400 0
 1881 0008 0023     		movs	r3, #0
 1882 000a 0193     		str	r3, [sp, #4]
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1883              		.loc 1 1403 0
 1884 000c 0368     		ldr	r3, [r0]
 1885 000e 1B68     		ldr	r3, [r3]
 1886 0010 13F0010F 		tst	r3, #1
 1887 0014 11D1     		bne	.L181
 1888              	.LVL164:
 1889              	.L162:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   layer_start |= hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START;
 1890              		.loc 1 1452 0
 1891 0016 2268     		ldr	r2, [r4]
 1892 0018 D369     		ldr	r3, [r2, #28]
 1893              	.LVL165:
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   if (layer_start != 0U)
 1894              		.loc 1 1453 0
 1895 001a 526A     		ldr	r2, [r2, #36]
 1896 001c 1343     		orrs	r3, r3, r2
 1897              	.LVL166:
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 1898              		.loc 1 1454 0
 1899 001e 13F0200F 		tst	r3, #32
 1900 0022 47D1     		bne	.L182
 1901              	.LVL167:
 1902              	.L171:
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1903              		.loc 1 1508 0
 1904 0024 2368     		ldr	r3, [r4]
 1905 0026 1222     		movs	r2, #18
 1906 0028 9A60     		str	r2, [r3, #8]
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1907              		.loc 1 1511 0
 1908 002a 0123     		movs	r3, #1
 1909 002c 84F86130 		strb	r3, [r4, #97]
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1910              		.loc 1 1514 0
 1911 0030 0020     		movs	r0, #0
 1912 0032 84F86000 		strb	r0, [r4, #96]
 1913              	.L167:
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** /**
 1914              		.loc 1 1517 0
 1915 0036 02B0     		add	sp, sp, #8
 1916              	.LCFI47:
 1917              		.cfi_remember_state
 1918              		.cfi_def_cfa_offset 16
 1919              		@ sp needed
 1920 0038 70BD     		pop	{r4, r5, r6, pc}
 1921              	.LVL168:
 1922              	.L181:
 1923              	.LCFI48:
 1924              		.cfi_restore_state
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1925              		.loc 1 1406 0
 1926 003a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccdAsAmP.s 			page 77


 1927              	.LVL169:
 1928 003e 0646     		mov	r6, r0
 1929              	.LVL170:
 1930              	.L168:
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 1931              		.loc 1 1408 0
 1932 0040 2368     		ldr	r3, [r4]
 1933 0042 5A68     		ldr	r2, [r3, #4]
 1934 0044 12F0020F 		tst	r2, #2
 1935 0048 E5D1     		bne	.L162
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 1936              		.loc 1 1410 0
 1937 004a 5A68     		ldr	r2, [r3, #4]
 1938 004c 0192     		str	r2, [sp, #4]
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1939              		.loc 1 1411 0
 1940 004e 019A     		ldr	r2, [sp, #4]
 1941 0050 12F0210F 		tst	r2, #33
 1942 0054 14D1     		bne	.L183
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 1943              		.loc 1 1433 0
 1944 0056 B5F1FF3F 		cmp	r5, #-1
 1945 005a F1D0     		beq	.L168
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1946              		.loc 1 1435 0
 1947 005c FFF7FEFF 		bl	HAL_GetTick
 1948              	.LVL171:
 1949 0060 801B     		subs	r0, r0, r6
 1950 0062 A842     		cmp	r0, r5
 1951 0064 01D8     		bhi	.L169
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1952              		.loc 1 1435 0 is_stmt 0 discriminator 1
 1953 0066 002D     		cmp	r5, #0
 1954 0068 EAD1     		bne	.L168
 1955              	.L169:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1956              		.loc 1 1438 0 is_stmt 1
 1957 006a 636E     		ldr	r3, [r4, #100]
 1958 006c 43F02003 		orr	r3, r3, #32
 1959 0070 6366     		str	r3, [r4, #100]
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1960              		.loc 1 1441 0
 1961 0072 0320     		movs	r0, #3
 1962 0074 84F86100 		strb	r0, [r4, #97]
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1963              		.loc 1 1444 0
 1964 0078 0023     		movs	r3, #0
 1965 007a 84F86030 		strb	r3, [r4, #96]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1966              		.loc 1 1446 0
 1967 007e DAE7     		b	.L167
 1968              	.L183:
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1969              		.loc 1 1413 0
 1970 0080 019A     		ldr	r2, [sp, #4]
 1971 0082 12F0200F 		tst	r2, #32
 1972 0086 03D0     		beq	.L165
ARM GAS  /tmp/ccdAsAmP.s 			page 78


1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1973              		.loc 1 1415 0
 1974 0088 626E     		ldr	r2, [r4, #100]
 1975 008a 42F00202 		orr	r2, r2, #2
 1976 008e 6266     		str	r2, [r4, #100]
 1977              	.L165:
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 1978              		.loc 1 1417 0
 1979 0090 019A     		ldr	r2, [sp, #4]
 1980 0092 12F0010F 		tst	r2, #1
 1981 0096 03D0     		beq	.L166
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 1982              		.loc 1 1419 0
 1983 0098 626E     		ldr	r2, [r4, #100]
 1984 009a 42F00102 		orr	r2, r2, #1
 1985 009e 6266     		str	r2, [r4, #100]
 1986              	.L166:
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1987              		.loc 1 1422 0
 1988 00a0 2122     		movs	r2, #33
 1989 00a2 9A60     		str	r2, [r3, #8]
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1990              		.loc 1 1425 0
 1991 00a4 0423     		movs	r3, #4
 1992 00a6 84F86130 		strb	r3, [r4, #97]
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 1993              		.loc 1 1428 0
 1994 00aa 0023     		movs	r3, #0
 1995 00ac 84F86030 		strb	r3, [r4, #96]
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 1996              		.loc 1 1430 0
 1997 00b0 0120     		movs	r0, #1
 1998 00b2 C0E7     		b	.L167
 1999              	.LVL172:
 2000              	.L182:
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2001              		.loc 1 1457 0
 2002 00b4 FFF7FEFF 		bl	HAL_GetTick
 2003              	.LVL173:
 2004 00b8 0646     		mov	r6, r0
 2005              	.LVL174:
 2006              	.L177:
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2007              		.loc 1 1459 0
 2008 00ba 2368     		ldr	r3, [r4]
 2009 00bc 5A68     		ldr	r2, [r3, #4]
 2010 00be 12F0100F 		tst	r2, #16
 2011 00c2 AFD1     		bne	.L171
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != 0U)
 2012              		.loc 1 1461 0
 2013 00c4 5A68     		ldr	r2, [r3, #4]
 2014 00c6 0192     		str	r2, [sp, #4]
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2015              		.loc 1 1462 0
 2016 00c8 019A     		ldr	r2, [sp, #4]
 2017 00ca 12F0290F 		tst	r2, #41
 2018 00ce 14D1     		bne	.L184
ARM GAS  /tmp/ccdAsAmP.s 			page 79


1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2019              		.loc 1 1488 0
 2020 00d0 B5F1FF3F 		cmp	r5, #-1
 2021 00d4 F1D0     		beq	.L177
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 2022              		.loc 1 1490 0
 2023 00d6 FFF7FEFF 		bl	HAL_GetTick
 2024              	.LVL175:
 2025 00da 801B     		subs	r0, r0, r6
 2026 00dc A842     		cmp	r0, r5
 2027 00de 01D8     		bhi	.L178
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 2028              		.loc 1 1490 0 is_stmt 0 discriminator 1
 2029 00e0 002D     		cmp	r5, #0
 2030 00e2 EAD1     		bne	.L177
 2031              	.L178:
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2032              		.loc 1 1493 0 is_stmt 1
 2033 00e4 636E     		ldr	r3, [r4, #100]
 2034 00e6 43F02003 		orr	r3, r3, #32
 2035 00ea 6366     		str	r3, [r4, #100]
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2036              		.loc 1 1496 0
 2037 00ec 0320     		movs	r0, #3
 2038 00ee 84F86100 		strb	r0, [r4, #97]
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2039              		.loc 1 1499 0
 2040 00f2 0023     		movs	r3, #0
 2041 00f4 84F86030 		strb	r3, [r4, #96]
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 2042              		.loc 1 1501 0
 2043 00f8 9DE7     		b	.L167
 2044              	.L184:
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 2045              		.loc 1 1464 0
 2046 00fa 019A     		ldr	r2, [sp, #4]
 2047 00fc 12F0080F 		tst	r2, #8
 2048 0100 03D0     		beq	.L174
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 2049              		.loc 1 1466 0
 2050 0102 626E     		ldr	r2, [r4, #100]
 2051 0104 42F00402 		orr	r2, r2, #4
 2052 0108 6266     		str	r2, [r4, #100]
 2053              	.L174:
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 2054              		.loc 1 1468 0
 2055 010a 019A     		ldr	r2, [sp, #4]
 2056 010c 12F0200F 		tst	r2, #32
 2057 0110 03D0     		beq	.L175
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 2058              		.loc 1 1470 0
 2059 0112 626E     		ldr	r2, [r4, #100]
 2060 0114 42F00202 		orr	r2, r2, #2
 2061 0118 6266     		str	r2, [r4, #100]
 2062              	.L175:
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         {
 2063              		.loc 1 1472 0
ARM GAS  /tmp/ccdAsAmP.s 			page 80


 2064 011a 019A     		ldr	r2, [sp, #4]
 2065 011c 12F0010F 		tst	r2, #1
 2066 0120 03D0     		beq	.L176
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****         }
 2067              		.loc 1 1474 0
 2068 0122 626E     		ldr	r2, [r4, #100]
 2069 0124 42F00102 		orr	r2, r2, #1
 2070 0128 6266     		str	r2, [r4, #100]
 2071              	.L176:
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2072              		.loc 1 1477 0
 2073 012a 2922     		movs	r2, #41
 2074 012c 9A60     		str	r2, [r3, #8]
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2075              		.loc 1 1480 0
 2076 012e 0423     		movs	r3, #4
 2077 0130 84F86130 		strb	r3, [r4, #97]
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2078              		.loc 1 1483 0
 2079 0134 0023     		movs	r3, #0
 2080 0136 84F86030 		strb	r3, [r4, #96]
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 2081              		.loc 1 1485 0
 2082 013a 0120     		movs	r0, #1
 2083 013c 7BE7     		b	.L167
 2084              		.cfi_endproc
 2085              	.LFE160:
 2087              		.section	.text.HAL_DMA2D_LineEventCallback,"ax",%progbits
 2088              		.align	1
 2089              		.weak	HAL_DMA2D_LineEventCallback
 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu fpv5-d16
 2095              	HAL_DMA2D_LineEventCallback:
 2096              	.LFB162:
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 2097              		.loc 1 1695 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 0
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101              		@ link register save eliminated.
 2102              	.LVL176:
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2103              		.loc 1 1702 0
 2104 0000 7047     		bx	lr
 2105              		.cfi_endproc
 2106              	.LFE162:
 2108              		.section	.text.HAL_DMA2D_CLUTLoadingCpltCallback,"ax",%progbits
 2109              		.align	1
 2110              		.weak	HAL_DMA2D_CLUTLoadingCpltCallback
 2111              		.syntax unified
 2112              		.thumb
 2113              		.thumb_func
 2114              		.fpu fpv5-d16
 2116              	HAL_DMA2D_CLUTLoadingCpltCallback:
 2117              	.LFB163:
ARM GAS  /tmp/ccdAsAmP.s 			page 81


1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 2118              		.loc 1 1711 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 0
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
 2122              		@ link register save eliminated.
 2123              	.LVL177:
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2124              		.loc 1 1718 0
 2125 0000 7047     		bx	lr
 2126              		.cfi_endproc
 2127              	.LFE163:
 2129              		.section	.text.HAL_DMA2D_IRQHandler,"ax",%progbits
 2130              		.align	1
 2131              		.global	HAL_DMA2D_IRQHandler
 2132              		.syntax unified
 2133              		.thumb
 2134              		.thumb_func
 2135              		.fpu fpv5-d16
 2137              	HAL_DMA2D_IRQHandler:
 2138              	.LFB161:
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 2139              		.loc 1 1525 0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 0, uses_anonymous_args = 0
 2143              	.LVL178:
 2144 0000 70B5     		push	{r4, r5, r6, lr}
 2145              	.LCFI49:
 2146              		.cfi_def_cfa_offset 16
 2147              		.cfi_offset 4, -16
 2148              		.cfi_offset 5, -12
 2149              		.cfi_offset 6, -8
 2150              		.cfi_offset 14, -4
 2151 0002 0446     		mov	r4, r0
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 2152              		.loc 1 1526 0
 2153 0004 0368     		ldr	r3, [r0]
 2154 0006 5D68     		ldr	r5, [r3, #4]
 2155              	.LVL179:
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2156              		.loc 1 1527 0
 2157 0008 1E68     		ldr	r6, [r3]
 2158              	.LVL180:
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2159              		.loc 1 1530 0
 2160 000a 15F0010F 		tst	r5, #1
 2161 000e 16D0     		beq	.L188
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2162              		.loc 1 1532 0
 2163 0010 16F4807F 		tst	r6, #256
 2164 0014 13D0     		beq	.L188
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2165              		.loc 1 1535 0
 2166 0016 1A68     		ldr	r2, [r3]
 2167 0018 22F48072 		bic	r2, r2, #256
 2168 001c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccdAsAmP.s 			page 82


1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2169              		.loc 1 1538 0
 2170 001e 436E     		ldr	r3, [r0, #100]
 2171 0020 43F00103 		orr	r3, r3, #1
 2172 0024 4366     		str	r3, [r0, #100]
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2173              		.loc 1 1541 0
 2174 0026 0368     		ldr	r3, [r0]
 2175 0028 0122     		movs	r2, #1
 2176 002a 9A60     		str	r2, [r3, #8]
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2177              		.loc 1 1544 0
 2178 002c 0423     		movs	r3, #4
 2179 002e 80F86130 		strb	r3, [r0, #97]
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2180              		.loc 1 1547 0
 2181 0032 0023     		movs	r3, #0
 2182 0034 80F86030 		strb	r3, [r0, #96]
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2183              		.loc 1 1549 0
 2184 0038 436A     		ldr	r3, [r0, #36]
 2185 003a 03B1     		cbz	r3, .L188
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 2186              		.loc 1 1552 0
 2187 003c 9847     		blx	r3
 2188              	.LVL181:
 2189              	.L188:
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2190              		.loc 1 1557 0
 2191 003e 15F0200F 		tst	r5, #32
 2192 0042 18D0     		beq	.L189
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2193              		.loc 1 1559 0
 2194 0044 16F4005F 		tst	r6, #8192
 2195 0048 15D0     		beq	.L189
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2196              		.loc 1 1562 0
 2197 004a 2268     		ldr	r2, [r4]
 2198 004c 1368     		ldr	r3, [r2]
 2199 004e 23F40053 		bic	r3, r3, #8192
 2200 0052 1360     		str	r3, [r2]
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2201              		.loc 1 1565 0
 2202 0054 2368     		ldr	r3, [r4]
 2203 0056 2022     		movs	r2, #32
 2204 0058 9A60     		str	r2, [r3, #8]
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2205              		.loc 1 1568 0
 2206 005a 636E     		ldr	r3, [r4, #100]
 2207 005c 43F00203 		orr	r3, r3, #2
 2208 0060 6366     		str	r3, [r4, #100]
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2209              		.loc 1 1571 0
 2210 0062 0423     		movs	r3, #4
 2211 0064 84F86130 		strb	r3, [r4, #97]
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2212              		.loc 1 1574 0
ARM GAS  /tmp/ccdAsAmP.s 			page 83


 2213 0068 0023     		movs	r3, #0
 2214 006a 84F86030 		strb	r3, [r4, #96]
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2215              		.loc 1 1576 0
 2216 006e 636A     		ldr	r3, [r4, #36]
 2217 0070 0BB1     		cbz	r3, .L189
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 2218              		.loc 1 1579 0
 2219 0072 2046     		mov	r0, r4
 2220 0074 9847     		blx	r3
 2221              	.LVL182:
 2222              	.L189:
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2223              		.loc 1 1584 0
 2224 0076 15F0080F 		tst	r5, #8
 2225 007a 18D0     		beq	.L190
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2226              		.loc 1 1586 0
 2227 007c 16F4006F 		tst	r6, #2048
 2228 0080 15D0     		beq	.L190
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2229              		.loc 1 1589 0
 2230 0082 2268     		ldr	r2, [r4]
 2231 0084 1368     		ldr	r3, [r2]
 2232 0086 23F40063 		bic	r3, r3, #2048
 2233 008a 1360     		str	r3, [r2]
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2234              		.loc 1 1592 0
 2235 008c 2368     		ldr	r3, [r4]
 2236 008e 0822     		movs	r2, #8
 2237 0090 9A60     		str	r2, [r3, #8]
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2238              		.loc 1 1595 0
 2239 0092 636E     		ldr	r3, [r4, #100]
 2240 0094 43F00403 		orr	r3, r3, #4
 2241 0098 6366     		str	r3, [r4, #100]
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2242              		.loc 1 1598 0
 2243 009a 0423     		movs	r3, #4
 2244 009c 84F86130 		strb	r3, [r4, #97]
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2245              		.loc 1 1601 0
 2246 00a0 0023     		movs	r3, #0
 2247 00a2 84F86030 		strb	r3, [r4, #96]
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2248              		.loc 1 1603 0
 2249 00a6 636A     		ldr	r3, [r4, #36]
 2250 00a8 0BB1     		cbz	r3, .L190
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 2251              		.loc 1 1606 0
 2252 00aa 2046     		mov	r0, r4
 2253 00ac 9847     		blx	r3
 2254              	.LVL183:
 2255              	.L190:
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2256              		.loc 1 1611 0
 2257 00ae 15F0040F 		tst	r5, #4
ARM GAS  /tmp/ccdAsAmP.s 			page 84


 2258 00b2 02D0     		beq	.L191
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2259              		.loc 1 1613 0
 2260 00b4 16F4806F 		tst	r6, #1024
 2261 00b8 20D1     		bne	.L195
 2262              	.L191:
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2263              		.loc 1 1631 0
 2264 00ba 15F0020F 		tst	r5, #2
 2265 00be 16D0     		beq	.L192
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2266              		.loc 1 1633 0
 2267 00c0 16F4007F 		tst	r6, #512
 2268 00c4 13D0     		beq	.L192
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2269              		.loc 1 1636 0
 2270 00c6 2268     		ldr	r2, [r4]
 2271 00c8 1368     		ldr	r3, [r2]
 2272 00ca 23F40073 		bic	r3, r3, #512
 2273 00ce 1360     		str	r3, [r2]
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2274              		.loc 1 1639 0
 2275 00d0 2368     		ldr	r3, [r4]
 2276 00d2 0222     		movs	r2, #2
 2277 00d4 9A60     		str	r2, [r3, #8]
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2278              		.loc 1 1642 0
 2279 00d6 636E     		ldr	r3, [r4, #100]
 2280 00d8 6366     		str	r3, [r4, #100]
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2281              		.loc 1 1645 0
 2282 00da 0123     		movs	r3, #1
 2283 00dc 84F86130 		strb	r3, [r4, #97]
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2284              		.loc 1 1648 0
 2285 00e0 0023     		movs	r3, #0
 2286 00e2 84F86030 		strb	r3, [r4, #96]
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       {
 2287              		.loc 1 1650 0
 2288 00e6 236A     		ldr	r3, [r4, #32]
 2289 00e8 0BB1     		cbz	r3, .L192
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       }
 2290              		.loc 1 1653 0
 2291 00ea 2046     		mov	r0, r4
 2292 00ec 9847     		blx	r3
 2293              	.LVL184:
 2294              	.L192:
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2295              		.loc 1 1658 0
 2296 00ee 15F0100F 		tst	r5, #16
 2297 00f2 02D0     		beq	.L187
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2298              		.loc 1 1660 0
 2299 00f4 16F4805F 		tst	r6, #4096
 2300 00f8 0CD1     		bne	.L196
 2301              	.L187:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
ARM GAS  /tmp/ccdAsAmP.s 			page 85


 2302              		.loc 1 1686 0
 2303 00fa 70BD     		pop	{r4, r5, r6, pc}
 2304              	.LVL185:
 2305              	.L195:
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2306              		.loc 1 1616 0
 2307 00fc 2268     		ldr	r2, [r4]
 2308 00fe 1368     		ldr	r3, [r2]
 2309 0100 23F48063 		bic	r3, r3, #1024
 2310 0104 1360     		str	r3, [r2]
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2311              		.loc 1 1619 0
 2312 0106 2368     		ldr	r3, [r4]
 2313 0108 0422     		movs	r2, #4
 2314 010a 9A60     		str	r2, [r3, #8]
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 2315              		.loc 1 1625 0
 2316 010c 2046     		mov	r0, r4
 2317 010e FFF7FEFF 		bl	HAL_DMA2D_LineEventCallback
 2318              	.LVL186:
 2319 0112 D2E7     		b	.L191
 2320              	.L196:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2321              		.loc 1 1663 0
 2322 0114 2268     		ldr	r2, [r4]
 2323 0116 1368     		ldr	r3, [r2]
 2324 0118 23F48053 		bic	r3, r3, #4096
 2325 011c 1360     		str	r3, [r2]
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2326              		.loc 1 1666 0
 2327 011e 2368     		ldr	r3, [r4]
 2328 0120 1022     		movs	r2, #16
 2329 0122 9A60     		str	r2, [r3, #8]
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2330              		.loc 1 1669 0
 2331 0124 636E     		ldr	r3, [r4, #100]
 2332 0126 6366     		str	r3, [r4, #100]
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2333              		.loc 1 1672 0
 2334 0128 0123     		movs	r3, #1
 2335 012a 84F86130 		strb	r3, [r4, #97]
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2336              		.loc 1 1675 0
 2337 012e 0023     		movs	r3, #0
 2338 0130 84F86030 		strb	r3, [r4, #96]
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** #endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
 2339              		.loc 1 1681 0
 2340 0134 2046     		mov	r0, r4
 2341 0136 FFF7FEFF 		bl	HAL_DMA2D_CLUTLoadingCpltCallback
 2342              	.LVL187:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2343              		.loc 1 1686 0
 2344 013a DEE7     		b	.L187
 2345              		.cfi_endproc
 2346              	.LFE161:
 2348              		.section	.text.HAL_DMA2D_ConfigLayer,"ax",%progbits
 2349              		.align	1
ARM GAS  /tmp/ccdAsAmP.s 			page 86


 2350              		.global	HAL_DMA2D_ConfigLayer
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv5-d16
 2356              	HAL_DMA2D_ConfigLayer:
 2357              	.LFB164:
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2358              		.loc 1 1754 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363              	.LVL188:
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2364              		.loc 1 1778 0
 2365 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2366 0004 012B     		cmp	r3, #1
 2367 0006 74D0     		beq	.L204
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg;
 2368              		.loc 1 1754 0 discriminator 2
 2369 0008 30B4     		push	{r4, r5}
 2370              	.LCFI50:
 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 4, -8
 2373              		.cfi_offset 5, -4
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2374              		.loc 1 1778 0 discriminator 2
 2375 000a 0123     		movs	r3, #1
 2376 000c 80F86030 		strb	r3, [r0, #96]
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2377              		.loc 1 1781 0 discriminator 2
 2378 0010 0223     		movs	r3, #2
 2379 0012 80F86130 		strb	r3, [r0, #97]
 2380              	.LVL189:
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2381              		.loc 1 1786 0 discriminator 2
 2382 0016 CB00     		lsls	r3, r1, #3
 2383 0018 5B1A     		subs	r3, r3, r1
 2384 001a 9A00     		lsls	r2, r3, #2
 2385 001c 0244     		add	r2, r2, r0
 2386 001e D46A     		ldr	r4, [r2, #44]
 2387 0020 136B     		ldr	r3, [r2, #48]
 2388 0022 44EA0343 		orr	r3, r4, r3, lsl #16
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
 2389              		.loc 1 1787 0 discriminator 2
 2390 0026 956B     		ldr	r5, [r2, #56]
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2391              		.loc 1 1786 0 discriminator 2
 2392 0028 43EA0553 		orr	r3, r3, r5, lsl #20
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_
 2393              		.loc 1 1787 0 discriminator 2
 2394 002c D26B     		ldr	r2, [r2, #60]
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****              (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_
 2395              		.loc 1 1786 0 discriminator 2
 2396 002e 43EA4253 		orr	r3, r3, r2, lsl #21
 2397              	.LVL190:
ARM GAS  /tmp/ccdAsAmP.s 			page 87


1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2398              		.loc 1 1791 0 discriminator 2
 2399 0032 A4F10902 		sub	r2, r4, #9
 2400 0036 012A     		cmp	r2, #1
 2401 0038 21D9     		bls	.L210
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2402              		.loc 1 1797 0
 2403 003a C1EBC105 		rsb	r5, r1, r1, lsl #3
 2404 003e AA00     		lsls	r2, r5, #2
 2405 0040 0244     		add	r2, r2, r0
 2406 0042 526B     		ldr	r2, [r2, #52]
 2407 0044 43EA0263 		orr	r3, r3, r2, lsl #24
 2408              	.LVL191:
 2409              	.L200:
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2410              		.loc 1 1801 0
 2411 0048 61BB     		cbnz	r1, .L201
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2412              		.loc 1 1804 0
 2413 004a 0468     		ldr	r4, [r0]
 2414 004c 656A     		ldr	r5, [r4, #36]
 2415 004e 2A4A     		ldr	r2, .L213
 2416 0050 2A40     		ands	r2, r2, r5
 2417 0052 1343     		orrs	r3, r3, r2
 2418              	.LVL192:
 2419 0054 6362     		str	r3, [r4, #36]
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2420              		.loc 1 1807 0
 2421 0056 0468     		ldr	r4, [r0]
 2422 0058 CA00     		lsls	r2, r1, #3
 2423 005a 521A     		subs	r2, r2, r1
 2424 005c 9300     		lsls	r3, r2, #2
 2425 005e 0344     		add	r3, r3, r0
 2426 0060 9A6A     		ldr	r2, [r3, #40]
 2427 0062 A261     		str	r2, [r4, #24]
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2428              		.loc 1 1810 0
 2429 0064 DB6A     		ldr	r3, [r3, #44]
 2430 0066 093B     		subs	r3, r3, #9
 2431 0068 012B     		cmp	r3, #1
 2432 006a 11D9     		bls	.L211
 2433              	.LVL193:
 2434              	.L202:
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2435              		.loc 1 1838 0
 2436 006c 0123     		movs	r3, #1
 2437 006e 80F86130 		strb	r3, [r0, #97]
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2438              		.loc 1 1841 0
 2439 0072 0023     		movs	r3, #0
 2440 0074 80F86030 		strb	r3, [r0, #96]
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2441              		.loc 1 1843 0
 2442 0078 1846     		mov	r0, r3
 2443              	.LVL194:
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2444              		.loc 1 1844 0
ARM GAS  /tmp/ccdAsAmP.s 			page 88


 2445 007a 30BC     		pop	{r4, r5}
 2446              	.LCFI51:
 2447              		.cfi_remember_state
 2448              		.cfi_restore 5
 2449              		.cfi_restore 4
 2450              		.cfi_def_cfa_offset 0
 2451 007c 7047     		bx	lr
 2452              	.LVL195:
 2453              	.L210:
 2454              	.LCFI52:
 2455              		.cfi_restore_state
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2456              		.loc 1 1793 0
 2457 007e C1EBC105 		rsb	r5, r1, r1, lsl #3
 2458 0082 AA00     		lsls	r2, r5, #2
 2459 0084 0244     		add	r2, r2, r0
 2460 0086 526B     		ldr	r2, [r2, #52]
 2461 0088 02F07F42 		and	r2, r2, #-16777216
 2462 008c 1343     		orrs	r3, r3, r2
 2463              	.LVL196:
 2464 008e DBE7     		b	.L200
 2465              	.LVL197:
 2466              	.L211:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2467              		.loc 1 1812 0
 2468 0090 C1EBC101 		rsb	r1, r1, r1, lsl #3
 2469              	.LVL198:
 2470 0094 8B00     		lsls	r3, r1, #2
 2471 0096 0344     		add	r3, r3, r0
 2472 0098 5B6B     		ldr	r3, [r3, #52]
 2473 009a 0268     		ldr	r2, [r0]
 2474 009c 23F07F43 		bic	r3, r3, #-16777216
 2475 00a0 9362     		str	r3, [r2, #40]
 2476 00a2 E3E7     		b	.L202
 2477              	.LVL199:
 2478              	.L201:
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2479              		.loc 1 1819 0
 2480 00a4 0B2C     		cmp	r4, #11
 2481 00a6 1BD0     		beq	.L212
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2482              		.loc 1 1788 0
 2483 00a8 144D     		ldr	r5, .L213+4
 2484              	.LVL200:
 2485              	.L203:
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2486              		.loc 1 1826 0
 2487 00aa 0468     		ldr	r4, [r0]
 2488 00ac E269     		ldr	r2, [r4, #28]
 2489 00ae 22EA0502 		bic	r2, r2, r5
 2490 00b2 1343     		orrs	r3, r3, r2
 2491              	.LVL201:
 2492 00b4 E361     		str	r3, [r4, #28]
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2493              		.loc 1 1829 0
 2494 00b6 0468     		ldr	r4, [r0]
 2495 00b8 CA00     		lsls	r2, r1, #3
ARM GAS  /tmp/ccdAsAmP.s 			page 89


 2496 00ba 521A     		subs	r2, r2, r1
 2497 00bc 9300     		lsls	r3, r2, #2
 2498 00be 0344     		add	r3, r3, r0
 2499 00c0 9A6A     		ldr	r2, [r3, #40]
 2500 00c2 2261     		str	r2, [r4, #16]
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     {
 2501              		.loc 1 1832 0
 2502 00c4 DB6A     		ldr	r3, [r3, #44]
 2503 00c6 093B     		subs	r3, r3, #9
 2504 00c8 012B     		cmp	r3, #1
 2505 00ca CFD8     		bhi	.L202
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2506              		.loc 1 1834 0
 2507 00cc C1EBC101 		rsb	r1, r1, r1, lsl #3
 2508              	.LVL202:
 2509 00d0 8B00     		lsls	r3, r1, #2
 2510 00d2 0344     		add	r3, r3, r0
 2511 00d4 5B6B     		ldr	r3, [r3, #52]
 2512 00d6 0268     		ldr	r2, [r0]
 2513 00d8 23F07F43 		bic	r3, r3, #-16777216
 2514 00dc 1362     		str	r3, [r2, #32]
 2515 00de C5E7     		b	.L202
 2516              	.LVL203:
 2517              	.L212:
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****       regMask  |= DMA2D_FGPFCCR_CSS;
 2518              		.loc 1 1821 0
 2519 00e0 C1EBC104 		rsb	r4, r1, r1, lsl #3
 2520 00e4 A200     		lsls	r2, r4, #2
 2521 00e6 0244     		add	r2, r2, r0
 2522 00e8 126C     		ldr	r2, [r2, #64]
 2523 00ea 43EA8243 		orr	r3, r3, r2, lsl #18
 2524              	.LVL204:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****     }
 2525              		.loc 1 1822 0
 2526 00ee 044D     		ldr	r5, .L213+8
 2527 00f0 DBE7     		b	.L203
 2528              	.LVL205:
 2529              	.L204:
 2530              	.LCFI53:
 2531              		.cfi_def_cfa_offset 0
 2532              		.cfi_restore 4
 2533              		.cfi_restore 5
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2534              		.loc 1 1778 0
 2535 00f2 0220     		movs	r0, #2
 2536              	.LVL206:
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2537              		.loc 1 1844 0
 2538 00f4 7047     		bx	lr
 2539              	.L214:
 2540 00f6 00BF     		.align	2
 2541              	.L213:
 2542 00f8 F0FFCC00 		.word	13434864
 2543 00fc 0F0033FF 		.word	-13434865
 2544 0100 0F003FFF 		.word	-12648433
 2545              		.cfi_endproc
 2546              	.LFE164:
ARM GAS  /tmp/ccdAsAmP.s 			page 90


 2548              		.section	.text.HAL_DMA2D_ConfigCLUT,"ax",%progbits
 2549              		.align	1
 2550              		.global	HAL_DMA2D_ConfigCLUT
 2551              		.syntax unified
 2552              		.thumb
 2553              		.thumb_func
 2554              		.fpu fpv5-d16
 2556              	HAL_DMA2D_ConfigCLUT:
 2557              	.LFB165:
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 2558              		.loc 1 1861 0
 2559              		.cfi_startproc
 2560              		@ args = 4, pretend = 0, frame = 16
 2561              		@ frame_needed = 0, uses_anonymous_args = 0
 2562              		@ link register save eliminated.
 2563              	.LVL207:
 2564 0000 10B4     		push	{r4}
 2565              	.LCFI54:
 2566              		.cfi_def_cfa_offset 4
 2567              		.cfi_offset 4, -4
 2568 0002 85B0     		sub	sp, sp, #20
 2569              	.LCFI55:
 2570              		.cfi_def_cfa_offset 24
 2571 0004 04AC     		add	r4, sp, #16
 2572 0006 04E90E00 		stmdb	r4, {r1, r2, r3}
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2573              		.loc 1 1868 0
 2574 000a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2575 000e 012B     		cmp	r3, #1
 2576 0010 2FD0     		beq	.L219
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2577              		.loc 1 1868 0 is_stmt 0 discriminator 2
 2578 0012 0123     		movs	r3, #1
 2579 0014 80F86030 		strb	r3, [r0, #96]
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2580              		.loc 1 1871 0 is_stmt 1 discriminator 2
 2581 0018 0223     		movs	r3, #2
 2582 001a 80F86130 		strb	r3, [r0, #97]
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2583              		.loc 1 1874 0 discriminator 2
 2584 001e 069B     		ldr	r3, [sp, #24]
 2585 0020 C3B9     		cbnz	r3, .L217
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2586              		.loc 1 1877 0
 2587 0022 0368     		ldr	r3, [r0]
 2588 0024 019A     		ldr	r2, [sp, #4]
 2589 0026 1A63     		str	r2, [r3, #48]
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_BGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_BGPFCCR_CCM_P
 2590              		.loc 1 1880 0
 2591 0028 0168     		ldr	r1, [r0]
 2592 002a 4A6A     		ldr	r2, [r1, #36]
 2593 002c 124B     		ldr	r3, .L221
 2594 002e 1340     		ands	r3, r3, r2
 2595 0030 029A     		ldr	r2, [sp, #8]
 2596 0032 1201     		lsls	r2, r2, #4
 2597 0034 039C     		ldr	r4, [sp, #12]
 2598 0036 42EA0422 		orr	r2, r2, r4, lsl #8
ARM GAS  /tmp/ccdAsAmP.s 			page 91


 2599 003a 1343     		orrs	r3, r3, r2
 2600 003c 4B62     		str	r3, [r1, #36]
 2601              	.L218:
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2602              		.loc 1 1895 0
 2603 003e 0123     		movs	r3, #1
 2604 0040 80F86130 		strb	r3, [r0, #97]
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2605              		.loc 1 1898 0
 2606 0044 0023     		movs	r3, #0
 2607 0046 80F86030 		strb	r3, [r0, #96]
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2608              		.loc 1 1900 0
 2609 004a 1846     		mov	r0, r3
 2610              	.LVL208:
 2611              	.L216:
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2612              		.loc 1 1901 0
 2613 004c 05B0     		add	sp, sp, #20
 2614              	.LCFI56:
 2615              		.cfi_remember_state
 2616              		.cfi_def_cfa_offset 4
 2617              		@ sp needed
 2618 004e 5DF8044B 		ldr	r4, [sp], #4
 2619              	.LCFI57:
 2620              		.cfi_restore 4
 2621              		.cfi_def_cfa_offset 0
 2622              	.LVL209:
 2623 0052 7047     		bx	lr
 2624              	.LVL210:
 2625              	.L217:
 2626              	.LCFI58:
 2627              		.cfi_restore_state
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2628              		.loc 1 1887 0
 2629 0054 0368     		ldr	r3, [r0]
 2630 0056 019A     		ldr	r2, [sp, #4]
 2631 0058 DA62     		str	r2, [r3, #44]
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_FGPFCCR_CS_Pos) | (CLUTCfg.CLUTColorMode << DMA2D_FGPFCCR_CCM_P
 2632              		.loc 1 1890 0
 2633 005a 0168     		ldr	r1, [r0]
 2634 005c CA69     		ldr	r2, [r1, #28]
 2635 005e 064B     		ldr	r3, .L221
 2636 0060 1340     		ands	r3, r3, r2
 2637 0062 029A     		ldr	r2, [sp, #8]
 2638 0064 1201     		lsls	r2, r2, #4
 2639 0066 039C     		ldr	r4, [sp, #12]
 2640 0068 42EA0422 		orr	r2, r2, r4, lsl #8
 2641 006c 1343     		orrs	r3, r3, r2
 2642 006e CB61     		str	r3, [r1, #28]
 2643 0070 E5E7     		b	.L218
 2644              	.L219:
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2645              		.loc 1 1868 0
 2646 0072 0220     		movs	r0, #2
 2647              	.LVL211:
 2648 0074 EAE7     		b	.L216
ARM GAS  /tmp/ccdAsAmP.s 			page 92


 2649              	.L222:
 2650 0076 00BF     		.align	2
 2651              	.L221:
 2652 0078 EF00FFFF 		.word	-65297
 2653              		.cfi_endproc
 2654              	.LFE165:
 2656              		.section	.text.HAL_DMA2D_ProgramLineEvent,"ax",%progbits
 2657              		.align	1
 2658              		.global	HAL_DMA2D_ProgramLineEvent
 2659              		.syntax unified
 2660              		.thumb
 2661              		.thumb_func
 2662              		.fpu fpv5-d16
 2664              	HAL_DMA2D_ProgramLineEvent:
 2665              	.LFB166:
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Check the parameters */
 2666              		.loc 1 1915 0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 0
 2669              		@ frame_needed = 0, uses_anonymous_args = 0
 2670              		@ link register save eliminated.
 2671              	.LVL212:
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   {
 2672              		.loc 1 1919 0
 2673 0000 B1F5803F 		cmp	r1, #65536
 2674 0004 17D2     		bcs	.L225
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2675              		.loc 1 1926 0
 2676 0006 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2677 000a 012B     		cmp	r3, #1
 2678 000c 15D0     		beq	.L226
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2679              		.loc 1 1926 0 is_stmt 0 discriminator 2
 2680 000e 0122     		movs	r2, #1
 2681 0010 80F86020 		strb	r2, [r0, #96]
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2682              		.loc 1 1929 0 is_stmt 1 discriminator 2
 2683 0014 0223     		movs	r3, #2
 2684 0016 80F86130 		strb	r3, [r0, #97]
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2685              		.loc 1 1932 0 discriminator 2
 2686 001a 0368     		ldr	r3, [r0]
 2687 001c 9964     		str	r1, [r3, #72]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2688              		.loc 1 1935 0 discriminator 2
 2689 001e 0168     		ldr	r1, [r0]
 2690              	.LVL213:
 2691 0020 0B68     		ldr	r3, [r1]
 2692              	.LVL214:
 2693 0022 43F48063 		orr	r3, r3, #1024
 2694 0026 0B60     		str	r3, [r1]
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2695              		.loc 1 1938 0 discriminator 2
 2696 0028 80F86120 		strb	r2, [r0, #97]
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2697              		.loc 1 1941 0 discriminator 2
 2698 002c 0023     		movs	r3, #0
ARM GAS  /tmp/ccdAsAmP.s 			page 93


 2699 002e 80F86030 		strb	r3, [r0, #96]
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2700              		.loc 1 1943 0 discriminator 2
 2701 0032 1846     		mov	r0, r3
 2702              	.LVL215:
 2703 0034 7047     		bx	lr
 2704              	.LVL216:
 2705              	.L225:
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   }
 2706              		.loc 1 1921 0
 2707 0036 0120     		movs	r0, #1
 2708              	.LVL217:
 2709 0038 7047     		bx	lr
 2710              	.LVL218:
 2711              	.L226:
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2712              		.loc 1 1926 0
 2713 003a 0220     		movs	r0, #2
 2714              	.LVL219:
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2715              		.loc 1 1945 0
 2716 003c 7047     		bx	lr
 2717              		.cfi_endproc
 2718              	.LFE166:
 2720              		.section	.text.HAL_DMA2D_EnableDeadTime,"ax",%progbits
 2721              		.align	1
 2722              		.global	HAL_DMA2D_EnableDeadTime
 2723              		.syntax unified
 2724              		.thumb
 2725              		.thumb_func
 2726              		.fpu fpv5-d16
 2728              	HAL_DMA2D_EnableDeadTime:
 2729              	.LFB167:
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2730              		.loc 1 1953 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 0
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
 2734              		@ link register save eliminated.
 2735              	.LVL220:
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2736              		.loc 1 1955 0
 2737 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2738 0004 012B     		cmp	r3, #1
 2739 0006 10D0     		beq	.L229
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2740              		.loc 1 1955 0 is_stmt 0 discriminator 2
 2741 0008 0122     		movs	r2, #1
 2742 000a 80F86020 		strb	r2, [r0, #96]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2743              		.loc 1 1957 0 is_stmt 1 discriminator 2
 2744 000e 0223     		movs	r3, #2
 2745 0010 80F86130 		strb	r3, [r0, #97]
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2746              		.loc 1 1960 0 discriminator 2
 2747 0014 0168     		ldr	r1, [r0]
 2748 0016 CB6C     		ldr	r3, [r1, #76]
ARM GAS  /tmp/ccdAsAmP.s 			page 94


 2749 0018 1343     		orrs	r3, r3, r2
 2750 001a CB64     		str	r3, [r1, #76]
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2751              		.loc 1 1962 0 discriminator 2
 2752 001c 80F86120 		strb	r2, [r0, #97]
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2753              		.loc 1 1965 0 discriminator 2
 2754 0020 0023     		movs	r3, #0
 2755 0022 80F86030 		strb	r3, [r0, #96]
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2756              		.loc 1 1967 0 discriminator 2
 2757 0026 1846     		mov	r0, r3
 2758              	.LVL221:
 2759 0028 7047     		bx	lr
 2760              	.LVL222:
 2761              	.L229:
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2762              		.loc 1 1955 0
 2763 002a 0220     		movs	r0, #2
 2764              	.LVL223:
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2765              		.loc 1 1968 0
 2766 002c 7047     		bx	lr
 2767              		.cfi_endproc
 2768              	.LFE167:
 2770              		.section	.text.HAL_DMA2D_DisableDeadTime,"ax",%progbits
 2771              		.align	1
 2772              		.global	HAL_DMA2D_DisableDeadTime
 2773              		.syntax unified
 2774              		.thumb
 2775              		.thumb_func
 2776              		.fpu fpv5-d16
 2778              	HAL_DMA2D_DisableDeadTime:
 2779              	.LFB168:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2780              		.loc 1 1976 0
 2781              		.cfi_startproc
 2782              		@ args = 0, pretend = 0, frame = 0
 2783              		@ frame_needed = 0, uses_anonymous_args = 0
 2784              		@ link register save eliminated.
 2785              	.LVL224:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2786              		.loc 1 1978 0
 2787 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2788 0004 012B     		cmp	r3, #1
 2789 0006 11D0     		beq	.L232
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2790              		.loc 1 1978 0 is_stmt 0 discriminator 2
 2791 0008 0122     		movs	r2, #1
 2792 000a 80F86020 		strb	r2, [r0, #96]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2793              		.loc 1 1980 0 is_stmt 1 discriminator 2
 2794 000e 0223     		movs	r3, #2
 2795 0010 80F86130 		strb	r3, [r0, #97]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2796              		.loc 1 1983 0 discriminator 2
 2797 0014 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccdAsAmP.s 			page 95


 2798 0016 CB6C     		ldr	r3, [r1, #76]
 2799 0018 23F00103 		bic	r3, r3, #1
 2800 001c CB64     		str	r3, [r1, #76]
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2801              		.loc 1 1985 0 discriminator 2
 2802 001e 80F86120 		strb	r2, [r0, #97]
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2803              		.loc 1 1988 0 discriminator 2
 2804 0022 0023     		movs	r3, #0
 2805 0024 80F86030 		strb	r3, [r0, #96]
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2806              		.loc 1 1990 0 discriminator 2
 2807 0028 1846     		mov	r0, r3
 2808              	.LVL225:
 2809 002a 7047     		bx	lr
 2810              	.LVL226:
 2811              	.L232:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2812              		.loc 1 1978 0
 2813 002c 0220     		movs	r0, #2
 2814              	.LVL227:
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2815              		.loc 1 1991 0
 2816 002e 7047     		bx	lr
 2817              		.cfi_endproc
 2818              	.LFE168:
 2820              		.section	.text.HAL_DMA2D_ConfigDeadTime,"ax",%progbits
 2821              		.align	1
 2822              		.global	HAL_DMA2D_ConfigDeadTime
 2823              		.syntax unified
 2824              		.thumb
 2825              		.thumb_func
 2826              		.fpu fpv5-d16
 2828              	HAL_DMA2D_ConfigDeadTime:
 2829              	.LFB169:
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2830              		.loc 1 2002 0
 2831              		.cfi_startproc
 2832              		@ args = 0, pretend = 0, frame = 0
 2833              		@ frame_needed = 0, uses_anonymous_args = 0
 2834              		@ link register save eliminated.
 2835              	.LVL228:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2836              		.loc 1 2004 0
 2837 0000 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 2838 0004 012B     		cmp	r3, #1
 2839 0006 16D0     		beq	.L235
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   /* Process Locked */
 2840              		.loc 1 2002 0 discriminator 2
 2841 0008 10B4     		push	{r4}
 2842              	.LCFI59:
 2843              		.cfi_def_cfa_offset 4
 2844              		.cfi_offset 4, -4
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2845              		.loc 1 2004 0 discriminator 2
 2846 000a 0122     		movs	r2, #1
 2847 000c 80F86020 		strb	r2, [r0, #96]
ARM GAS  /tmp/ccdAsAmP.s 			page 96


2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2848              		.loc 1 2006 0 discriminator 2
 2849 0010 0223     		movs	r3, #2
 2850 0012 80F86130 		strb	r3, [r0, #97]
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2851              		.loc 1 2009 0 discriminator 2
 2852 0016 0468     		ldr	r4, [r0]
 2853 0018 E36C     		ldr	r3, [r4, #76]
 2854 001a 23F47F43 		bic	r3, r3, #65280
 2855 001e 43EA0121 		orr	r1, r3, r1, lsl #8
 2856              	.LVL229:
 2857 0022 E164     		str	r1, [r4, #76]
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2858              		.loc 1 2011 0 discriminator 2
 2859 0024 80F86120 		strb	r2, [r0, #97]
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2860              		.loc 1 2014 0 discriminator 2
 2861 0028 0023     		movs	r3, #0
 2862 002a 80F86030 		strb	r3, [r0, #96]
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2863              		.loc 1 2016 0 discriminator 2
 2864 002e 1846     		mov	r0, r3
 2865              	.LVL230:
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2866              		.loc 1 2017 0 discriminator 2
 2867 0030 5DF8044B 		ldr	r4, [sp], #4
 2868              	.LCFI60:
 2869              		.cfi_restore 4
 2870              		.cfi_def_cfa_offset 0
 2871 0034 7047     		bx	lr
 2872              	.LVL231:
 2873              	.L235:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2874              		.loc 1 2004 0
 2875 0036 0220     		movs	r0, #2
 2876              	.LVL232:
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2877              		.loc 1 2017 0
 2878 0038 7047     		bx	lr
 2879              		.cfi_endproc
 2880              	.LFE169:
 2882              		.section	.text.HAL_DMA2D_GetState,"ax",%progbits
 2883              		.align	1
 2884              		.global	HAL_DMA2D_GetState
 2885              		.syntax unified
 2886              		.thumb
 2887              		.thumb_func
 2888              		.fpu fpv5-d16
 2890              	HAL_DMA2D_GetState:
 2891              	.LFB170:
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->State;
 2892              		.loc 1 2047 0
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 0
 2895              		@ frame_needed = 0, uses_anonymous_args = 0
 2896              		@ link register save eliminated.
 2897              	.LVL233:
ARM GAS  /tmp/ccdAsAmP.s 			page 97


2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2898              		.loc 1 2048 0
 2899 0000 90F86100 		ldrb	r0, [r0, #97]	@ zero_extendqisi2
 2900              	.LVL234:
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2901              		.loc 1 2049 0
 2902 0004 7047     		bx	lr
 2903              		.cfi_endproc
 2904              	.LFE170:
 2906              		.section	.text.HAL_DMA2D_GetError,"ax",%progbits
 2907              		.align	1
 2908              		.global	HAL_DMA2D_GetError
 2909              		.syntax unified
 2910              		.thumb
 2911              		.thumb_func
 2912              		.fpu fpv5-d16
 2914              	HAL_DMA2D_GetError:
 2915              	.LFB171:
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
 2916              		.loc 1 2058 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920              		@ link register save eliminated.
 2921              	.LVL235:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** }
 2922              		.loc 1 2059 0
 2923 0000 406E     		ldr	r0, [r0, #100]
 2924              	.LVL236:
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c **** 
 2925              		.loc 1 2060 0
 2926 0002 7047     		bx	lr
 2927              		.cfi_endproc
 2928              	.LFE171:
 2930              		.text
 2931              	.Letext0:
 2932              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2933              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2934              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2935              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2936              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 2937              		.file 7 "/usr/include/newlib/sys/lock.h"
 2938              		.file 8 "/usr/include/newlib/sys/_types.h"
 2939              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2940              		.file 10 "/usr/include/newlib/sys/reent.h"
 2941              		.file 11 "/usr/include/newlib/math.h"
 2942              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2943              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 2944              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2945              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccdAsAmP.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_dma2d.c
     /tmp/ccdAsAmP.s:17     .text.DMA2D_SetConfig:0000000000000000 $t
     /tmp/ccdAsAmP.s:23     .text.DMA2D_SetConfig:0000000000000000 DMA2D_SetConfig
     /tmp/ccdAsAmP.s:172    .text.HAL_DMA2D_MspInit:0000000000000000 $t
     /tmp/ccdAsAmP.s:179    .text.HAL_DMA2D_MspInit:0000000000000000 HAL_DMA2D_MspInit
     /tmp/ccdAsAmP.s:193    .text.HAL_DMA2D_Init:0000000000000000 $t
     /tmp/ccdAsAmP.s:200    .text.HAL_DMA2D_Init:0000000000000000 HAL_DMA2D_Init
     /tmp/ccdAsAmP.s:294    .text.HAL_DMA2D_Init:0000000000000078 $d
     /tmp/ccdAsAmP.s:301    .text.HAL_DMA2D_MspDeInit:0000000000000000 $t
     /tmp/ccdAsAmP.s:308    .text.HAL_DMA2D_MspDeInit:0000000000000000 HAL_DMA2D_MspDeInit
     /tmp/ccdAsAmP.s:322    .text.HAL_DMA2D_Start:0000000000000000 $t
     /tmp/ccdAsAmP.s:329    .text.HAL_DMA2D_Start:0000000000000000 HAL_DMA2D_Start
     /tmp/ccdAsAmP.s:390    .text.HAL_DMA2D_Start_IT:0000000000000000 $t
     /tmp/ccdAsAmP.s:397    .text.HAL_DMA2D_Start_IT:0000000000000000 HAL_DMA2D_Start_IT
     /tmp/ccdAsAmP.s:463    .text.HAL_DMA2D_BlendingStart:0000000000000000 $t
     /tmp/ccdAsAmP.s:470    .text.HAL_DMA2D_BlendingStart:0000000000000000 HAL_DMA2D_BlendingStart
     /tmp/ccdAsAmP.s:578    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 $t
     /tmp/ccdAsAmP.s:585    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 HAL_DMA2D_BlendingStart_IT
     /tmp/ccdAsAmP.s:698    .text.HAL_DMA2D_Abort:0000000000000000 $t
     /tmp/ccdAsAmP.s:705    .text.HAL_DMA2D_Abort:0000000000000000 HAL_DMA2D_Abort
     /tmp/ccdAsAmP.s:773    .text.HAL_DMA2D_Suspend:0000000000000000 $t
     /tmp/ccdAsAmP.s:780    .text.HAL_DMA2D_Suspend:0000000000000000 HAL_DMA2D_Suspend
     /tmp/ccdAsAmP.s:853    .text.HAL_DMA2D_Resume:0000000000000000 $t
     /tmp/ccdAsAmP.s:860    .text.HAL_DMA2D_Resume:0000000000000000 HAL_DMA2D_Resume
     /tmp/ccdAsAmP.s:893    .text.HAL_DMA2D_EnableCLUT:0000000000000000 $t
     /tmp/ccdAsAmP.s:900    .text.HAL_DMA2D_EnableCLUT:0000000000000000 HAL_DMA2D_EnableCLUT
     /tmp/ccdAsAmP.s:951    .text.HAL_DMA2D_CLUTStartLoad:0000000000000000 $t
     /tmp/ccdAsAmP.s:958    .text.HAL_DMA2D_CLUTStartLoad:0000000000000000 HAL_DMA2D_CLUTStartLoad
     /tmp/ccdAsAmP.s:1060   .text.HAL_DMA2D_CLUTStartLoad:0000000000000074 $d
     /tmp/ccdAsAmP.s:1065   .text.HAL_DMA2D_CLUTStartLoad_IT:0000000000000000 $t
     /tmp/ccdAsAmP.s:1072   .text.HAL_DMA2D_CLUTStartLoad_IT:0000000000000000 HAL_DMA2D_CLUTStartLoad_IT
     /tmp/ccdAsAmP.s:1184   .text.HAL_DMA2D_CLUTStartLoad_IT:0000000000000088 $d
     /tmp/ccdAsAmP.s:1189   .text.HAL_DMA2D_CLUTLoad:0000000000000000 $t
     /tmp/ccdAsAmP.s:1196   .text.HAL_DMA2D_CLUTLoad:0000000000000000 HAL_DMA2D_CLUTLoad
     /tmp/ccdAsAmP.s:1299   .text.HAL_DMA2D_CLUTLoad:0000000000000080 $d
     /tmp/ccdAsAmP.s:1304   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 $t
     /tmp/ccdAsAmP.s:1311   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 HAL_DMA2D_CLUTLoad_IT
     /tmp/ccdAsAmP.s:1424   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000094 $d
     /tmp/ccdAsAmP.s:1429   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 $t
     /tmp/ccdAsAmP.s:1436   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 HAL_DMA2D_CLUTLoading_Abort
     /tmp/ccdAsAmP.s:1519   .text.HAL_DMA2D_DeInit:0000000000000000 $t
     /tmp/ccdAsAmP.s:1526   .text.HAL_DMA2D_DeInit:0000000000000000 HAL_DMA2D_DeInit
     /tmp/ccdAsAmP.s:1651   .text.HAL_DMA2D_DeInit:0000000000000090 $d
     /tmp/ccdAsAmP.s:1656   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 $t
     /tmp/ccdAsAmP.s:1663   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 HAL_DMA2D_CLUTLoading_Suspend
     /tmp/ccdAsAmP.s:1797   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 $t
     /tmp/ccdAsAmP.s:1804   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 HAL_DMA2D_CLUTLoading_Resume
     /tmp/ccdAsAmP.s:1854   .text.HAL_DMA2D_PollForTransfer:0000000000000000 $t
     /tmp/ccdAsAmP.s:1861   .text.HAL_DMA2D_PollForTransfer:0000000000000000 HAL_DMA2D_PollForTransfer
     /tmp/ccdAsAmP.s:2088   .text.HAL_DMA2D_LineEventCallback:0000000000000000 $t
     /tmp/ccdAsAmP.s:2095   .text.HAL_DMA2D_LineEventCallback:0000000000000000 HAL_DMA2D_LineEventCallback
     /tmp/ccdAsAmP.s:2109   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 $t
     /tmp/ccdAsAmP.s:2116   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 HAL_DMA2D_CLUTLoadingCpltCallback
     /tmp/ccdAsAmP.s:2130   .text.HAL_DMA2D_IRQHandler:0000000000000000 $t
     /tmp/ccdAsAmP.s:2137   .text.HAL_DMA2D_IRQHandler:0000000000000000 HAL_DMA2D_IRQHandler
     /tmp/ccdAsAmP.s:2349   .text.HAL_DMA2D_ConfigLayer:0000000000000000 $t
ARM GAS  /tmp/ccdAsAmP.s 			page 99


     /tmp/ccdAsAmP.s:2356   .text.HAL_DMA2D_ConfigLayer:0000000000000000 HAL_DMA2D_ConfigLayer
     /tmp/ccdAsAmP.s:2542   .text.HAL_DMA2D_ConfigLayer:00000000000000f8 $d
     /tmp/ccdAsAmP.s:2549   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 $t
     /tmp/ccdAsAmP.s:2556   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 HAL_DMA2D_ConfigCLUT
     /tmp/ccdAsAmP.s:2652   .text.HAL_DMA2D_ConfigCLUT:0000000000000078 $d
     /tmp/ccdAsAmP.s:2657   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 $t
     /tmp/ccdAsAmP.s:2664   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 HAL_DMA2D_ProgramLineEvent
     /tmp/ccdAsAmP.s:2721   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 $t
     /tmp/ccdAsAmP.s:2728   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 HAL_DMA2D_EnableDeadTime
     /tmp/ccdAsAmP.s:2771   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 $t
     /tmp/ccdAsAmP.s:2778   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 HAL_DMA2D_DisableDeadTime
     /tmp/ccdAsAmP.s:2821   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 $t
     /tmp/ccdAsAmP.s:2828   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 HAL_DMA2D_ConfigDeadTime
     /tmp/ccdAsAmP.s:2883   .text.HAL_DMA2D_GetState:0000000000000000 $t
     /tmp/ccdAsAmP.s:2890   .text.HAL_DMA2D_GetState:0000000000000000 HAL_DMA2D_GetState
     /tmp/ccdAsAmP.s:2907   .text.HAL_DMA2D_GetError:0000000000000000 $t
     /tmp/ccdAsAmP.s:2914   .text.HAL_DMA2D_GetError:0000000000000000 HAL_DMA2D_GetError

UNDEFINED SYMBOLS
HAL_GetTick
