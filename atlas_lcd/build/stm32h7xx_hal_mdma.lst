ARM GAS  /tmp/ccDcfjiT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_mdma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MDMA_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	MDMA_SetConfig:
  24              	.LFB160:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @file    stm32h7xx_hal_mdma.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         functionalities of the Master Direct Memory Access (MDMA) peripheral:
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Initialization/de-initialization functions
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + I/O operation functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Peripheral State and errors functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   @verbatim
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ==============================================================================
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                         ##### How to use this driver #####
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   [..]
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#) Enable and configure the peripheral to be connected to the MDMA Channel
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (except for internal SRAM/FLASH memories: no initialization is
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        necessary) please refer to Reference manual for connection between peripherals
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        and MDMA requests.
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#)
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        For a given Channel use HAL_MDMA_Init function to program the required configuration through
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        transfer request , channel priority, data endianness, Source increment, destination incremen
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        source data size, destination data size, data alignment, source Burst, destination Burst ,
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        buffer Transfer Length, Transfer Trigger Mode (buffer transfer, block transfer, repeated blo
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        or full transfer) source and destination block address offset, mask address and data.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        If using the MDMA in linked list mode then use function HAL_MDMA_LinkedList_CreateNode to fi
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that parameters given to the function HAL_MDMA_Init corresponds always to the node zero
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Use function HAL_MDMA_LinkedList_AddNode to connect the created node to the linked list at a
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        User can make a linked list circular using function HAL_MDMA_LinkedList_EnableCircularMode ,
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        last node of the list to the first one in order to make the list circular.
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        In this case the linked list will loop on node 1 : first node connected after the initial tr
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -@-   The initial transfer itself (node 0 corresponding to the Init).
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             User can disable the circular mode using function HAL_MDMA_LinkedList_DisableCircularMo
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             the connection between last node and first one.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Function HAL_MDMA_LinkedList_RemoveNode can be used to remove (disconnect) a node from the t
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        When a linked list is circular (last node connected to first one), if removing node1  (node 
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        the linked list remains circular and node 2 becomes the first one.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that if the linked list is made circular the transfer will loop infinitely (or until ab
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (+) User can select the transfer trigger mode (parameter TransferTriggerMode) to define the 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****            transfer upon a request :
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BUFFER_TRANSFER : each request triggers a transfer of BufferTransferLength d
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with BufferTransferLength defined within the HAL_MDMA_Init.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BLOCK_TRANSFER : each request triggers a transfer of a block
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size defined within the function HAL_MDMA_Start/HAL_MDMA_Start_IT
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_REPEAT_BLOCK_TRANSFER : each request triggers a transfer of a number of bloc
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size and number of blocks defined within the function HAL_MDMA_Start/HAL_
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_FULL_TRANSFER : each request triggers a full transfer
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               all blocks and all nodes(if a linked list has been created using HAL_MDMA_LinkedList_
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Polling mode IO operation ***
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =================================
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start() to start MDMA transfer after the configuration of Source
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               address and destination address and the Length of data to be transferred.
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_PollForTransfer() to poll for the end of current transfer or a transfer 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              In this case a fixed Timeout can be configured by User depending from his application.
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort() function to abort the current transfer : blocking method this AP
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               when the abort ends or timeout (should not be called from an interrupt service routin
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Interrupt mode IO operation ***
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      ===================================
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Configure the MDMA interrupt priority using HAL_NVIC_SetPriority()
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Enable the MDMA IRQ handler using HAL_NVIC_EnableIRQ()
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start_IT() to start MDMA transfer after the configuration of
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Source address and destination address and the Length of data to be transferred. In t
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               case the MDMA interrupt is configured.
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_IRQHandler() called under MDMA_IRQHandler() Interrupt subroutine
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) At the end of data transfer HAL_MDMA_IRQHandler() function is executed and user can
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               add his own function by customization of function pointer XferCpltCallback and
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               XferErrorCallback (i.e a member of MDMA handle structure).
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort_IT() function to abort the current transfer : non-blocking method.
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               then the callback XferAbortCallback (if specified  by the user) is asserted once the 
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (could be called from an interrupt service routine).
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use functions HAL_MDMA_RegisterCallback and HAL_MDMA_UnRegisterCallback respectevely 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               from the following list :
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferCpltCallback            : transfer complete callback.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBufferCpltCallback      : buffer transfer complete callback.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBlockCpltCallback       : block transfer complete callback.
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferRepeatBlockCpltCallback : repeated block transfer complete callback.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferErrorCallback           : transfer error callback.
ARM GAS  /tmp/ccDcfjiT.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferAbortCallback           : transfer abort complete callback.
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          (+)  If the transfer Request corresponds to SW request (MDMA_REQUEST_SW) User can use func
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               trigger requests manually. Function HAL_MDMA_GenerateSWRequest must be used with the 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) This function returns an error if used while the Transfer has ended or not start
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) If used while the current request has not been served yet (current request trans
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                 this function returns an error and the new request is ignored.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Generally this function should be used in conjunctions with the MDMA callbacks:
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 1:
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for buffer transfer complete (using callback ID set to H
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the buffer transfer complete callback is asserted first buffer has been
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    request using HAL_MDMA_GenerateSWRequest.
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 2:
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for block transfer complete (using callback ID HAL_MDMA_
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the block transfer complete callback is asserted the first block has be
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    for a new block transfer request using HAL_MDMA_GenerateSWRequest.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  Use HAL_MDMA_GetState() function to return the MDMA state and HAL_MDMA_GetError() in case
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** MDMA HAL driver macros list ***
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =============================================
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..]
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Below the list of most used macros in MDMA HAL driver.
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE: Enable the specified MDMA Channel.
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE: Disable the specified MDMA Channel.
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_FLAG: Get the MDMA Channel pending flags.
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_CLEAR_FLAG: Clear the MDMA Channel pending flags.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE_IT: Enable the specified MDMA Channel interrupts.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE_IT: Disable the specified MDMA Channel interrupts.
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_IT_SOURCE: Check whether the specified MDMA Channel interrupt has occurred
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..]
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (@) You can refer to the header file of the MDMA HAL driver for more useful macros.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     @endverbatim
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @attention
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * All rights reserved.</center></h2>
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * the "License"; You may not use this file except in compliance with the
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * License. You may obtain a copy of the License at:
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        opensource.org/licenses/BSD-3-Clause
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
ARM GAS  /tmp/ccDcfjiT.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Includes ------------------------------------------------------------------*/
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #include "stm32h7xx_hal.h"
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup STM32H7xx_HAL_Driver
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @defgroup MDMA  MDMA
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief MDMA HAL module driver
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #ifdef HAL_MDMA_MODULE_ENABLED
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private typedef -----------------------------------------------------------*/
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private constants ---------------------------------------------------------*/
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Constants
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  * @{
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  */
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_TIMEOUT_MDMA_ABORT    5U    /* 5 ms */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_MDMA_CHANNEL_SIZE     0x40U /* an MDMA instance channel size is 64 byte  */
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private macro -------------------------------------------------------------*/
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private variables ---------------------------------------------------------*/
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private function prototypes -----------------------------------------------*/
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions_Prototypes
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma);
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions MDMA Exported Functions
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group1
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              ##### Initialization and de-initialization functions  #####
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This section provides functions allowing to :
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Initialize and de-initialize the MDMA channel.
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Register and Unregister MDMA callbacks
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_Init() function follows the MDMA channel configuration procedures as described in
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     reference manual.
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_DeInit function allows to deinitialize the MDMA channel.
ARM GAS  /tmp/ccDcfjiT.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     HAL_MDMA_RegisterCallback and  HAL_MDMA_UnRegisterCallback functions allows
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     respectevely to register/unregister an MDMA callback function.
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA according to the specified
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef and create the associated handle.
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart = HAL_GetTick();
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_STREAM_ALL_INSTANCE(hmdma->Instance));
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(hmdma->Init.Priority));
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(hmdma->Init.Endianness));
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(hmdma->Init.Request));
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(hmdma->Init.SourceInc));
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(hmdma->Init.DestinationInc));
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(hmdma->Init.SourceDataSize));
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(hmdma->Init.DestDataSize));
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(hmdma->Init.DataAlignment));
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(hmdma->Init.SourceBurst));
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(hmdma->Init.DestBurst));
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(hmdma->Init.BufferTransferLength));
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(hmdma->Init.TransferTriggerMode));
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Allocate lock resource */
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Change MDMA peripheral state */
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_BUSY;
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the MDMA channel */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check if the MDMA channel is effectively disabled */
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccDcfjiT.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Update error code */
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state */
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA channel registers */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_Init(hmdma);
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the MDMA first/last linkedlist node addresses and node counter */
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0;
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0;
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  DeInitializes the MDMA peripheral
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_DeInit(MDMA_HandleTypeDef *hmdma)
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the selected MDMA Channelx */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset MDMA Channel control register */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR  = 0;
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR = 0;
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = 0;
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = 0;
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBRUR = 0;
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = 0;
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTBR = 0;
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMAR = 0;
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMDR = 0;
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all flags */
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_F
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the  MDMA first/last linkedlist node addresses and node counter */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0;
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0;
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_RESET;
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Config the Post request Mask address and Mask data
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma      : pointer to a MDMA_HandleTypeDef structure that contains
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskAddress: specifies the address to be updated (written) with MaskData after a reques
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskData:    specifies the value to be written to MaskAddress after a request is served
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                      MaskAddress and MaskData could be used to automatically clear a peripheral
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_ConfigPostRequestMask(MDMA_HandleTypeDef *hmdma, uint32_t MaskAddress, u
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if HW request set Post Request MaskAddress and MaskData,  */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Set the HW request clear Mask and Data */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMAR = MaskAddress;
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMDR = MaskData;
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by SW : BWM could be set to 1 or 0.
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by a peripheral :
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address not set (0) => BWM must be set to 0
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address set (different than 0) => BWM could be set to 1 or 0
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */
ARM GAS  /tmp/ccDcfjiT.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(MaskAddress == 0U)
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Return error status */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status =  HAL_ERROR;
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Register callbacks
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                pointer to a MDMA_HandleTypeDef structure that contains
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pCallback:            pointer to callbacsk function.
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_RegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef C
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = pCallback;
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = pCallback;
ARM GAS  /tmp/ccDcfjiT.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = pCallback;
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = pCallback;
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = pCallback;
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = pCallback;
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  UnRegister callbacks
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                 pointer to a MDMA_HandleTypeDef structure that contains
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               a HAL_MDMA_CallbackIDTypeDef ENUM as parameter.
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_UnRegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case   HAL_MDMA_XFER_ALL_CB_ID:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status = HAL_ERROR;
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status = HAL_ERROR;
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group2
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
ARM GAS  /tmp/ccDcfjiT.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  Linked list operation functions  #####
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Create a linked list node
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Add a node to the MDMA linked list
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Remove a node from the MDMA linked list
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Enable/Disable linked list circular mode
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes an MDMA Link Node according to the specified
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the pMDMA_LinkedListNodeConfig .
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode: Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         registers configurations.
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNodeConfig: Pointer to a MDMA_LinkNodeConfTypeDef structure that contains
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Linked List Node.
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_CreateNode(MDMA_LinkNodeTypeDef *pNode, MDMA_LinkNodeConfType
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral state */
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNode == NULL) || (pNodeConfig == NULL))
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(pNodeConfig->Init.Priority));
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(pNodeConfig->Init.Endianness));
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(pNodeConfig->Init.Request));
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(pNodeConfig->Init.SourceInc));
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(pNodeConfig->Init.DestinationInc));
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(pNodeConfig->Init.SourceDataSize));
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(pNodeConfig->Init.DestDataSize));
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(pNodeConfig->Init.DataAlignment));
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(pNodeConfig->Init.SourceBurst));
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(pNodeConfig->Init.DestBurst));
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(pNodeConfig->Init.BufferTransferLength));
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(pNodeConfig->Init.TransferTriggerMode));
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.SourceBlockAddressOffset));
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.DestBlockAddressOffset));
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(pNodeConfig->BlockDataLength));
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(pNodeConfig->BlockCount));
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure next Link node Address Register to zero */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CLAR =  0;
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the Link Node registers*/
ARM GAS  /tmp/ccDcfjiT.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTBR   = 0;
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMAR   = 0;
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMDR   = 0;
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->Reserved = 0;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTCR =  pNodeConfig->Init.SourceInc | pNodeConfig->Init.DestinationInc | \
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode*/
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request == MDMA_REQUEST_SW)
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |= MDMA_CTCR_SWRM;
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /*
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by SW : BWM could be set to 1 or 0.
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by a peripheral :
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address not set (0) => BWM must be set to 0
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address set (different than 0) => BWM could be set to 1 or 0
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNodeConfig->Init.Request == MDMA_REQUEST_SW) || (pNodeConfig->PostRequestMaskAddress != 0U))
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |=  MDMA_CTCR_BWM;
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the new CBNDTR Register value */
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR = ((pNodeConfig->BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC;
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.SourceBlockAddressOffset < 0)
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRSUM;
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.SourceBlockAddressOffset);
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = blockoffset & 0x0000FFFFU;
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = (((uint32_t) pNodeConfig->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block destination address offset is negative set the Block Repeat destination address Updat
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.DestBlockAddressOffset < 0)
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRDUM;
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.DestBlockAddressOffset);
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((((uint32_t)pNodeConfig->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_C
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node data length */
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR |=  pNodeConfig->BlockDataLength;
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node destination address */
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CDAR = pNodeConfig->DstAddress;
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node Source address */
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CSAR = pNodeConfig->SrcAddress;
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData,  */
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request != MDMA_REQUEST_SW)
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTBR register  */
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR = pNodeConfig->Init.Request & MDMA_CTBR_TSEL;
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request clear Mask and Data */
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMAR = pNodeConfig->PostRequestMaskAddress;
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMDR = pNodeConfig->PostRequestMaskData;
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->SrcAddress & 0xFF000000U;
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_SBUS;
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->DstAddress & 0xFF000000U;
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_DBUS;
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Connect a node to the linked list.
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma    : Pointer to a MDMA_HandleTypeDef structure that contains
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    the configuration information for the specified MDMA Channel.
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNewNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    to be add to the list.
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param pPrevNode : Pointer to the new node position in the linked list or zero to insert the ne
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    at the end of the list
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_AddNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *pNew
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeInserted = 0;
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNewNode == NULL))
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if this is the first node (after the Inititlization node) */
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U)
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(pPrevNode == NULL)
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if this is the first node after the initialization
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect this node to the node 0 by updating
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = (uint32_t)pNewNode;
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Set the MDMA handle First linked List node*/
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = pNewNode;
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*reset New node link */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNewNode->CLAR = 0;
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle last node address */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress = pNewNode;
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 1;
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress != pNewNode)
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check if the node to insert already exists*/
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNode = hmdma->FirstLinkedListNodeAddress;
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (hal_status == HAL_OK))
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(pNode->CLAR == (uint32_t)pNewNode)
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hal_status = HAL_ERROR; /* error this node already exist in the linked list and it is not
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hal_status == HAL_OK)
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Check if the previous node is the last one in the current list or zero */
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((pPrevNode == hmdma->LastLinkedListNodeAddress) || (pPrevNode == NULL))
ARM GAS  /tmp/ccDcfjiT.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* insert the new node at the end of the list */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNewNode->CLAR = hmdma->LastLinkedListNodeAddress->CLAR;
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)pNewNode;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle last node address */
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress = pNewNode;
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Increment the linked list node counter */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter++;
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /*insert the new node after the pPreviousNode node */
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNode = hmdma->FirstLinkedListNodeAddress;
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           counter = 0;
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           while((counter < hmdma->LinkedListNodeCounter) && (nodeInserted == 0U))
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             counter++;
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             if(pNode == pPrevNode)
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /*Insert the new node after the previous one */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNewNode->CLAR = pNode->CLAR;
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode->CLAR = (uint32_t)pNewNode;
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /* Increment the linked list node counter */
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               hmdma->LinkedListNodeCounter++;
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               nodeInserted = 1;
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             else
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(nodeInserted == 0U)
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hal_status = HAL_ERROR;
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status;
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
ARM GAS  /tmp/ccDcfjiT.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disconnect/Remove a node from the transfer linked list.
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 to be removed from the list.
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_RemoveNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *p
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeDeleted = 0;
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNode == NULL))
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress == pNode) /* Deleting first node */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Delete 1st node */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->LastLinkedListNodeAddress == pNode)
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*if the last node is at the same time the first one (1 single node after the init node 0)
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         then update the last node too */
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = 0;
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress  = 0;
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 0;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = 0;
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((uint32_t)hmdma->FirstLinkedListNodeAddress == hmdma->LastLinkedListNodeAddress->CLAR)
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if last node is looping to first (circular list) one update the last node connection *
ARM GAS  /tmp/ccDcfjiT.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = pNode->CLAR;
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if deleting the first node after the initialization
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect the next node to the node 0 by updating
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = pNode->CLAR;
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = (MDMA_LinkNodeTypeDef *)hmdma->Instance->CLAR;
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle node counter */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter--;
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else /* Deleting any other node */
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*Deleted node is not the first one : find it  */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       ptmpNode = hmdma->FirstLinkedListNodeAddress;
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (nodeDeleted == 0U))
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(ptmpNode->CLAR == ((uint32_t)pNode))
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if deleting the last node */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(pNode == hmdma->LastLinkedListNodeAddress)
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             /*Update the linked list last node address in the handle*/
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hmdma->LastLinkedListNodeAddress = ptmpNode;
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* update the next node link after deleting pMDMA_LinkedListNode */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode->CLAR = pNode->CLAR;
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           nodeDeleted = 1;
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle node counter */
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter--;
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode = (MDMA_LinkNodeTypeDef *)ptmpNode->CLAR;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(nodeDeleted == 0U)
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* last node reashed without finding the node to delete : return error */
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status;
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
ARM GAS  /tmp/ccDcfjiT.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Make the linked list circular by connecting the last node to the first.
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_EnableCircularMode(MDMA_HandleTypeDef *hmdma)
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to enable circular mode Last Node should be connected to first node */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disable the linked list circular mode by setting the last node connection to null
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_DisableCircularMode(MDMA_HandleTypeDef *hmdma)
ARM GAS  /tmp/ccDcfjiT.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to disable circular mode Last Node should be connected to NULL */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = 0;
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group3
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  IO operation functions  #####
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and Start MDMA transfer
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Start MDMA transfer with interrupt
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Abort MDMA transfer
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Poll for transfer complete
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Generate a SW request (when Request is set to MDMA_REQUEST_SW)
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Handle MDMA interrupt request
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
ARM GAS  /tmp/ccDcfjiT.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer.
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddres
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount));
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
ARM GAS  /tmp/ccDcfjiT.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer with interrupts enabled.
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start_IT(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAdd
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount));
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable Common interrupts i.e Transfer Error IT and Channel Transfer Complete IT*/
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBlockCpltCallback != NULL)
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Block transfer complete Callback is set enable the corresponding IT*/
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferRepeatBlockCpltCallback != NULL)
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Repeated Block transfer complete Callback is set enable the corresponding IT*/
ARM GAS  /tmp/ccDcfjiT.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBufferCpltCallback != NULL)
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if buffer transfer complete Callback is set enable the corresponding IT*/
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer.
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @note  After disabling a MDMA Channel, a check for wait until the MDMA Channel is
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        effectively disabled is added. If a Channel is disabled
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        while a data transfer is ongoing, the current data will be transferred
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        and the Channel will be effectively disabled only after the transfer of
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        this single data is finished.
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart =  HAL_GetTick();
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccDcfjiT.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable all the transfer interrupts */
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFT
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if the MDMA Channel is effectively disabled */
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check for the Timeout */
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the MDMA state */
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_ERROR;
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Clear all interrupt flags */
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDM
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change the MDMA state*/
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer in Interrupt mode.
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort_IT(MDMA_HandleTypeDef *hmdma)
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
ARM GAS  /tmp/ccDcfjiT.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set Abort State  */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the stream */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Polling for transfer complete.
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:          pointer to a MDMA_HandleTypeDef structure that contains
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        the configuration information for the specified MDMA Channel.
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CompleteLevel: Specifies the MDMA level complete.
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  Timeout:       Timeout duration.
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_PollForTransfer(MDMA_HandleTypeDef *hmdma, HAL_MDMA_LevelCompleteTypeDef
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart;
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_LEVEL_COMPLETE(CompleteLevel));
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the level transfer complete flag */
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   levelFlag = ((CompleteLevel == HAL_MDMA_FULL_TRANSFER)  ? MDMA_FLAG_CTC  : \
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                MDMA_FLAG_BRT);
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get timeout */
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   tickstart = HAL_GetTick();
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while(__HAL_MDMA_GET_FLAG(hmdma, levelFlag) == 0U)
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error */
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (void) HAL_MDMA_Abort(hmdma); /* if error then abort the current transfer */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         Note that the Abort function will
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Clear all transfer flags
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Unlock
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Set the State
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
ARM GAS  /tmp/ccDcfjiT.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(Timeout != HAL_MAX_DELAY)
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0U))
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         (void) HAL_MDMA_Abort(hmdma); /* if timeout then abort the current transfer */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Note that the Abort function will
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Clear all transfer flags
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Unlock
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Set the State
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         */
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear the transfer level flag */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_BLOCK_TRANSFER)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT));
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_REPEAT_BLOCK_TRANSFER)
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT | MDMA_FLAG_BRT));
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_FULL_TRANSFER)
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC | MDMA_FLAG_CTC));
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Generate an MDMA SW request trigger to activate the request on the given Channel.
ARM GAS  /tmp/ccDcfjiT.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Stream.
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_GenerateSWRequest(MDMA_HandleTypeDef *hmdma)
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t request_mode;
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the softawre request mode */
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   request_mode = hmdma->Instance->CTCR & MDMA_CTCR_SWRM;
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma->Instance->CCR &  MDMA_CCR_EN) == 0U)
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if no Transfer on going (MDMA enable bit not set) retrun error */
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(((hmdma->Instance->CISR &  MDMA_CISR_CRQA) != 0U) || (request_mode == 0U))
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if an MDMA ongoing request has not yet end or if request mode is not SW request retrun error
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_BUSY;
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the SW request bit to activate the request on the Channel */
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CCR |= MDMA_CCR_SWRQ;
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_OK;
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Handles MDMA interrupt request.
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** void HAL_MDMA_IRQHandler(MDMA_HandleTypeDef *hmdma)
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __IO uint32_t count = 0;
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t generalIntFlag, errorFlag;
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* General Interrupt Flag management ****************************************/
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANN
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((MDMA->GISR0 & generalIntFlag) == 0U)
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return; /* the  General interrupt flag for the current channel is down , nothing to do */
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Transfer Error Interrupt management ***************************************/
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable the transfer error interrupt */
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error error */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the transfer error flags */
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Buffer Transfer Complete Interrupt management ******************************/
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the buffer transfer complete flag */
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBufferCpltCallback != NULL)
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Buffer transfer callback */
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBufferCpltCallback(hmdma);
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Block Transfer Complete Interrupt management ******************************/
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the block transfer complete flag */
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBlockCpltCallback != NULL)
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Block transfer callback */
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBlockCpltCallback(hmdma);
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Repeated Block Transfer Complete Interrupt management ******************************/
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the repeat block transfer complete flag */
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferRepeatBlockCpltCallback != NULL)
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Repeated Block transfer callback */
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferRepeatBlockCpltCallback(hmdma);
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Channel Transfer Complete Interrupt management ***********************************/
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable all the transfer interrupts */
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_B
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(HAL_MDMA_STATE_ABORT == hmdma->State)
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
ARM GAS  /tmp/ccDcfjiT.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the DMA state */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_READY;
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(hmdma->XferAbortCallback != NULL)
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->XferAbortCallback(hmdma);
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return;
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the Channel Transfer Complete flag */
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Process Unlocked */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_UNLOCK(hmdma);
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change MDMA peripheral state */
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferCpltCallback != NULL)
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Channel Transfer Complete callback */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferCpltCallback(hmdma);
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* manage error case */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     do
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if (++count > timeout)
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         break;
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to error if MDMA disable fails */
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to Ready if MDMA disable success */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;
ARM GAS  /tmp/ccDcfjiT.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if (hmdma->XferErrorCallback != NULL)
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Transfer error callback */
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback(hmdma);
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group4
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                     ##### State and Errors functions #####
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This subsection provides functions allowing to
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Check the MDMA state
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Get error code
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Returns the MDMA state.
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL state
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_MDMA_StateTypeDef HAL_MDMA_GetState(MDMA_HandleTypeDef *hmdma)
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->State;
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Return the MDMA error code
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : pointer to a MDMA_HandleTypeDef structure that contains
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *              the configuration information for the specified MDMA Channel.
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval MDMA Error Code
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** uint32_t HAL_MDMA_GetError(MDMA_HandleTypeDef *hmdma)
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->ErrorCode;
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
ARM GAS  /tmp/ccDcfjiT.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Sets the MDMA Transfer parameter.
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress: The source memory Buffer address
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress: The destination memory Buffer address
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount: The number of blocks to be transfered
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
  26              		.loc 1 1762 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 70B4     		push	{r4, r5, r6}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 6, -4
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA Channel data length */
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
  38              		.loc 1 1766 0
  39 0002 0568     		ldr	r5, [r0]
  40 0004 6E69     		ldr	r6, [r5, #20]
  41 0006 1F4C     		ldr	r4, .L8
  42 0008 3440     		ands	r4, r4, r6
  43 000a C3F31003 		ubfx	r3, r3, #0, #17
  44              	.LVL1:
  45 000e 1C43     		orrs	r4, r4, r3
  46 0010 6C61     		str	r4, [r5, #20]
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA block repeat count */
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos)
  47              		.loc 1 1769 0
  48 0012 0568     		ldr	r5, [r0]
  49 0014 6B69     		ldr	r3, [r5, #20]
  50 0016 C3F31303 		ubfx	r3, r3, #0, #20
  51 001a 039C     		ldr	r4, [sp, #12]
  52 001c 013C     		subs	r4, r4, #1
  53 001e 43EA0453 		orr	r3, r3, r4, lsl #20
  54 0022 6B61     		str	r3, [r5, #20]
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all interrupt flags */
ARM GAS  /tmp/ccDcfjiT.s 			page 33


1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MD
  55              		.loc 1 1772 0
  56 0024 0368     		ldr	r3, [r0]
  57 0026 1F24     		movs	r4, #31
  58 0028 5C60     		str	r4, [r3, #4]
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel destination address */
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = DstAddress;
  59              		.loc 1 1775 0
  60 002a 0368     		ldr	r3, [r0]
  61 002c DA61     		str	r2, [r3, #28]
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel Source address */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = SrcAddress;
  62              		.loc 1 1778 0
  63 002e 0368     		ldr	r3, [r0]
  64 0030 9961     		str	r1, [r3, #24]
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = SrcAddress & 0xFF000000U;
  65              		.loc 1 1780 0
  66 0032 01F07F41 		and	r1, r1, #-16777216
  67              	.LVL2:
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
  68              		.loc 1 1781 0
  69 0036 0029     		cmp	r1, #0
  70 0038 18BF     		it	ne
  71 003a B1F1005F 		cmpne	r1, #536870912
  72 003e 15D1     		bne	.L2
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
  73              		.loc 1 1784 0
  74 0040 0168     		ldr	r1, [r0]
  75              	.LVL3:
  76 0042 8B6A     		ldr	r3, [r1, #40]
  77              	.LVL4:
  78 0044 43F48033 		orr	r3, r3, #65536
  79 0048 8B62     		str	r3, [r1, #40]
  80              	.L3:
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as source (read operation) on channel x */
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = DstAddress & 0xFF000000U;
  81              		.loc 1 1792 0
  82 004a 02F07F42 		and	r2, r2, #-16777216
  83              	.LVL5:
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
  84              		.loc 1 1793 0
  85 004e 002A     		cmp	r2, #0
  86 0050 18BF     		it	ne
  87 0052 B2F1005F 		cmpne	r2, #536870912
  88 0056 0FD0     		beq	.L7
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 34


1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as destination (write operation) on channel x */
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
  89              		.loc 1 1801 0
  90 0058 0268     		ldr	r2, [r0]
  91              	.LVL6:
  92 005a 936A     		ldr	r3, [r2, #40]
  93 005c 23F40033 		bic	r3, r3, #131072
  94 0060 9362     		str	r3, [r2, #40]
  95              	.L5:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the linked list register to the first node of the list */
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
  96              		.loc 1 1805 0
  97 0062 C26D     		ldr	r2, [r0, #92]
  98 0064 0368     		ldr	r3, [r0]
  99 0066 5A62     		str	r2, [r3, #36]
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 100              		.loc 1 1806 0
 101 0068 70BC     		pop	{r4, r5, r6}
 102              	.LCFI1:
 103              		.cfi_remember_state
 104              		.cfi_restore 6
 105              		.cfi_restore 5
 106              		.cfi_restore 4
 107              		.cfi_def_cfa_offset 0
 108              	.LVL7:
 109 006a 7047     		bx	lr
 110              	.LVL8:
 111              	.L2:
 112              	.LCFI2:
 113              		.cfi_restore_state
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 114              		.loc 1 1789 0
 115 006c 0168     		ldr	r1, [r0]
 116              	.LVL9:
 117 006e 8B6A     		ldr	r3, [r1, #40]
 118              	.LVL10:
 119 0070 23F48033 		bic	r3, r3, #65536
 120 0074 8B62     		str	r3, [r1, #40]
 121 0076 E8E7     		b	.L3
 122              	.LVL11:
 123              	.L7:
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 124              		.loc 1 1796 0
 125 0078 0268     		ldr	r2, [r0]
 126              	.LVL12:
 127 007a 936A     		ldr	r3, [r2, #40]
 128 007c 43F40033 		orr	r3, r3, #131072
 129 0080 9362     		str	r3, [r2, #40]
 130 0082 EEE7     		b	.L5
 131              	.L9:
ARM GAS  /tmp/ccDcfjiT.s 			page 35


 132              		.align	2
 133              	.L8:
 134 0084 0000FEFF 		.word	-131072
 135              		.cfi_endproc
 136              	.LFE160:
 138              		.section	.text.MDMA_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-d16
 145              	MDMA_Init:
 146              	.LFB161:
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA handle according to the specified
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 147              		.loc 1 1816 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL13:
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Prepare the MDMA Channel configuration */
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 153              		.loc 1 1820 0
 154 0000 C368     		ldr	r3, [r0, #12]
 155 0002 0169     		ldr	r1, [r0, #16]
 156 0004 0268     		ldr	r2, [r0]
 157 0006 0B43     		orrs	r3, r3, r1
 158 0008 D360     		str	r3, [r2, #12]
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 159              		.loc 1 1823 0
 160 000a 4369     		ldr	r3, [r0, #20]
 161 000c 8269     		ldr	r2, [r0, #24]
 162 000e 1343     		orrs	r3, r3, r2
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 163              		.loc 1 1824 0
 164 0010 C269     		ldr	r2, [r0, #28]
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 165              		.loc 1 1823 0
 166 0012 1343     		orrs	r3, r3, r2
 167              		.loc 1 1824 0
 168 0014 026A     		ldr	r2, [r0, #32]
 169 0016 1343     		orrs	r3, r3, r2
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 170              		.loc 1 1825 0
ARM GAS  /tmp/ccDcfjiT.s 			page 36


 171 0018 426A     		ldr	r2, [r0, #36]
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 172              		.loc 1 1824 0
 173 001a 1343     		orrs	r3, r3, r2
 174              		.loc 1 1825 0
 175 001c C26A     		ldr	r2, [r0, #44]
 176 001e 1343     		orrs	r3, r3, r2
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 177              		.loc 1 1826 0
 178 0020 026B     		ldr	r2, [r0, #48]
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 179              		.loc 1 1825 0
 180 0022 1343     		orrs	r3, r3, r2
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 181              		.loc 1 1827 0
 182 0024 826A     		ldr	r2, [r0, #40]
 183 0026 013A     		subs	r2, r2, #1
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 184              		.loc 1 1826 0
 185 0028 43EA8243 		orr	r3, r3, r2, lsl #18
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.TransferTriggerMode;
 186              		.loc 1 1828 0
 187 002c 8168     		ldr	r1, [r0, #8]
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 188              		.loc 1 1823 0
 189 002e 0268     		ldr	r2, [r0]
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 190              		.loc 1 1827 0
 191 0030 0B43     		orrs	r3, r3, r1
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 192              		.loc 1 1823 0
 193 0032 1361     		str	r3, [r2, #16]
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode */
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request == MDMA_REQUEST_SW)
 194              		.loc 1 1831 0
 195 0034 4368     		ldr	r3, [r0, #4]
 196 0036 B3F1804F 		cmp	r3, #1073741824
 197 003a 1BD0     		beq	.L18
 198              	.L11:
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by SW : BWM could be set to 1 or 0.
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by a peripheral :
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address not set (0) => BWM must be set to 0
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address set (different than 0) => BWM could be set to 1 or 0
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     */
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset CBNDTR Register */
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 199              		.loc 1 1843 0
 200 003c 0368     		ldr	r3, [r0]
 201 003e 0022     		movs	r2, #0
 202 0040 5A61     		str	r2, [r3, #20]
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 37


1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.SourceBlockAddressOffset < 0)
 203              		.loc 1 1846 0
 204 0042 436B     		ldr	r3, [r0, #52]
 205 0044 9342     		cmp	r3, r2
 206 0046 1BDB     		blt	.L19
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 207              		.loc 1 1856 0
 208 0048 0268     		ldr	r2, [r0]
 209 004a 9BB2     		uxth	r3, r3
 210 004c 1362     		str	r3, [r2, #32]
 211              	.L13:
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If block destination address offset is negative set the Block Repeat destination address Updat
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.DestBlockAddressOffset < 0)
 212              		.loc 1 1860 0
 213 004e 836B     		ldr	r3, [r0, #56]
 214 0050 002B     		cmp	r3, #0
 215 0052 20DB     		blt	.L20
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : destination repeat block offset */
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MD
 216              		.loc 1 1870 0
 217 0054 0168     		ldr	r1, [r0]
 218 0056 0A6A     		ldr	r2, [r1, #32]
 219 0058 42EA0343 		orr	r3, r2, r3, lsl #16
 220 005c 0B62     		str	r3, [r1, #32]
 221              	.L15:
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request != MDMA_REQUEST_SW)
 222              		.loc 1 1874 0
 223 005e 4368     		ldr	r3, [r0, #4]
 224 0060 B3F1804F 		cmp	r3, #1073741824
 225 0064 24D0     		beq	.L16
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTRB register  */
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 226              		.loc 1 1877 0
ARM GAS  /tmp/ccDcfjiT.s 			page 38


 227 0066 0268     		ldr	r2, [r0]
 228 0068 DBB2     		uxtb	r3, r3
 229 006a 9362     		str	r3, [r2, #40]
 230              	.L17:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else /* SW request : reset the CTBR register */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = 0;
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write Link Address Register */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR =  0;
 231              		.loc 1 1885 0
 232 006c 0368     		ldr	r3, [r0]
 233 006e 0022     		movs	r2, #0
 234 0070 5A62     		str	r2, [r3, #36]
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 235              		.loc 1 1886 0
 236 0072 7047     		bx	lr
 237              	.L18:
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 238              		.loc 1 1839 0
 239 0074 0268     		ldr	r2, [r0]
 240 0076 1369     		ldr	r3, [r2, #16]
 241 0078 43F04043 		orr	r3, r3, #-1073741824
 242 007c 1361     		str	r3, [r2, #16]
 243 007e DDE7     		b	.L11
 244              	.L19:
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
 245              		.loc 1 1848 0
 246 0080 0268     		ldr	r2, [r0]
 247 0082 5369     		ldr	r3, [r2, #20]
 248 0084 43F48023 		orr	r3, r3, #262144
 249 0088 5361     		str	r3, [r2, #20]
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
 250              		.loc 1 1850 0
 251 008a 436B     		ldr	r3, [r0, #52]
 252 008c 5B42     		negs	r3, r3
 253              	.LVL14:
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 254              		.loc 1 1851 0
 255 008e 0268     		ldr	r2, [r0]
 256 0090 9BB2     		uxth	r3, r3
 257              	.LVL15:
 258 0092 1362     		str	r3, [r2, #32]
 259              	.LVL16:
 260 0094 DBE7     		b	.L13
 261              	.L20:
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : destination repeat block offset */
 262              		.loc 1 1862 0
 263 0096 0268     		ldr	r2, [r0]
 264 0098 5369     		ldr	r3, [r2, #20]
 265 009a 43F40023 		orr	r3, r3, #524288
 266 009e 5361     		str	r3, [r2, #20]
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 267              		.loc 1 1864 0
 268 00a0 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/ccDcfjiT.s 			page 39


 269 00a2 5A42     		negs	r2, r3
 270              	.LVL17:
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 271              		.loc 1 1865 0
 272 00a4 0168     		ldr	r1, [r0]
 273 00a6 0B6A     		ldr	r3, [r1, #32]
 274 00a8 43EA0243 		orr	r3, r3, r2, lsl #16
 275 00ac 0B62     		str	r3, [r1, #32]
 276 00ae D6E7     		b	.L15
 277              	.LVL18:
 278              	.L16:
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 279              		.loc 1 1881 0
 280 00b0 0368     		ldr	r3, [r0]
 281 00b2 0022     		movs	r2, #0
 282 00b4 9A62     		str	r2, [r3, #40]
 283 00b6 D9E7     		b	.L17
 284              		.cfi_endproc
 285              	.LFE161:
 287              		.section	.text.HAL_MDMA_Init,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_MDMA_Init
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	HAL_MDMA_Init:
 296              	.LFB141:
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart = HAL_GetTick();
 297              		.loc 1 220 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL19:
 302 0000 38B5     		push	{r3, r4, r5, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 16
 305              		.cfi_offset 3, -16
 306              		.cfi_offset 4, -12
 307              		.cfi_offset 5, -8
 308              		.cfi_offset 14, -4
 309 0002 0446     		mov	r4, r0
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 310              		.loc 1 221 0
 311 0004 FFF7FEFF 		bl	HAL_GetTick
 312              	.LVL20:
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 313              		.loc 1 224 0
 314 0008 44B3     		cbz	r4, .L25
 315 000a 0546     		mov	r5, r0
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 316              		.loc 1 248 0
 317 000c 0023     		movs	r3, #0
 318 000e 84F83C30 		strb	r3, [r4, #60]
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 319              		.loc 1 251 0
 320 0012 0223     		movs	r3, #2
ARM GAS  /tmp/ccDcfjiT.s 			page 40


 321 0014 84F83D30 		strb	r3, [r4, #61]
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 322              		.loc 1 254 0
 323 0018 2268     		ldr	r2, [r4]
 324 001a D368     		ldr	r3, [r2, #12]
 325 001c 23F00103 		bic	r3, r3, #1
 326 0020 D360     		str	r3, [r2, #12]
 327              	.LVL21:
 328              	.L23:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 329              		.loc 1 257 0
 330 0022 2368     		ldr	r3, [r4]
 331 0024 DB68     		ldr	r3, [r3, #12]
 332 0026 13F0010F 		tst	r3, #1
 333 002a 0BD0     		beq	.L27
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 334              		.loc 1 260 0
 335 002c FFF7FEFF 		bl	HAL_GetTick
 336              	.LVL22:
 337 0030 401B     		subs	r0, r0, r5
 338 0032 0528     		cmp	r0, #5
 339 0034 F5D9     		bls	.L23
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 340              		.loc 1 263 0
 341 0036 4023     		movs	r3, #64
 342 0038 A366     		str	r3, [r4, #104]
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 343              		.loc 1 266 0
 344 003a 0323     		movs	r3, #3
 345 003c 84F83D30 		strb	r3, [r4, #61]
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 346              		.loc 1 268 0
 347 0040 0120     		movs	r0, #1
 348 0042 0AE0     		b	.L22
 349              	.L27:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 350              		.loc 1 273 0
 351 0044 2046     		mov	r0, r4
 352 0046 FFF7FEFF 		bl	MDMA_Init
 353              	.LVL23:
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0;
 354              		.loc 1 276 0
 355 004a 0020     		movs	r0, #0
 356 004c E065     		str	r0, [r4, #92]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;
 357              		.loc 1 277 0
 358 004e 2066     		str	r0, [r4, #96]
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 359              		.loc 1 278 0
 360 0050 6066     		str	r0, [r4, #100]
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 361              		.loc 1 281 0
 362 0052 A066     		str	r0, [r4, #104]
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 363              		.loc 1 284 0
 364 0054 0123     		movs	r3, #1
 365 0056 84F83D30 		strb	r3, [r4, #61]
ARM GAS  /tmp/ccDcfjiT.s 			page 41


 366              	.LVL24:
 367              	.L22:
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 368              		.loc 1 287 0
 369 005a 38BD     		pop	{r3, r4, r5, pc}
 370              	.LVL25:
 371              	.L25:
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 372              		.loc 1 226 0
 373 005c 0120     		movs	r0, #1
 374              	.LVL26:
 375 005e FCE7     		b	.L22
 376              		.cfi_endproc
 377              	.LFE141:
 379              		.section	.text.HAL_MDMA_DeInit,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_MDMA_DeInit
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv5-d16
 387              	HAL_MDMA_DeInit:
 388              	.LFB142:
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 389              		.loc 1 296 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              	.LVL27:
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 395              		.loc 1 299 0
 396 0000 0346     		mov	r3, r0
 397 0002 0028     		cmp	r0, #0
 398 0004 25D0     		beq	.L30
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 399              		.loc 1 305 0
 400 0006 0168     		ldr	r1, [r0]
 401 0008 CA68     		ldr	r2, [r1, #12]
 402 000a 22F00102 		bic	r2, r2, #1
 403 000e CA60     		str	r2, [r1, #12]
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR = 0;
 404              		.loc 1 308 0
 405 0010 0268     		ldr	r2, [r0]
 406 0012 0020     		movs	r0, #0
 407              	.LVL28:
 408 0014 D060     		str	r0, [r2, #12]
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 409              		.loc 1 309 0
 410 0016 1A68     		ldr	r2, [r3]
 411 0018 1061     		str	r0, [r2, #16]
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = 0;
 412              		.loc 1 310 0
 413 001a 1A68     		ldr	r2, [r3]
 414 001c 5061     		str	r0, [r2, #20]
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = 0;
 415              		.loc 1 311 0
ARM GAS  /tmp/ccDcfjiT.s 			page 42


 416 001e 1A68     		ldr	r2, [r3]
 417 0020 9061     		str	r0, [r2, #24]
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBRUR = 0;
 418              		.loc 1 312 0
 419 0022 1A68     		ldr	r2, [r3]
 420 0024 D061     		str	r0, [r2, #28]
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = 0;
 421              		.loc 1 313 0
 422 0026 1A68     		ldr	r2, [r3]
 423 0028 1062     		str	r0, [r2, #32]
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTBR = 0;
 424              		.loc 1 314 0
 425 002a 1A68     		ldr	r2, [r3]
 426 002c 5062     		str	r0, [r2, #36]
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMAR = 0;
 427              		.loc 1 315 0
 428 002e 1A68     		ldr	r2, [r3]
 429 0030 9062     		str	r0, [r2, #40]
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMDR = 0;
 430              		.loc 1 316 0
 431 0032 1A68     		ldr	r2, [r3]
 432 0034 1063     		str	r0, [r2, #48]
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 433              		.loc 1 317 0
 434 0036 1A68     		ldr	r2, [r3]
 435 0038 5063     		str	r0, [r2, #52]
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 436              		.loc 1 320 0
 437 003a 1A68     		ldr	r2, [r3]
 438 003c 1F21     		movs	r1, #31
 439 003e 5160     		str	r1, [r2, #4]
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0;
 440              		.loc 1 323 0
 441 0040 D865     		str	r0, [r3, #92]
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;
 442              		.loc 1 324 0
 443 0042 1866     		str	r0, [r3, #96]
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 444              		.loc 1 325 0
 445 0044 5866     		str	r0, [r3, #100]
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 446              		.loc 1 328 0
 447 0046 9866     		str	r0, [r3, #104]
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 448              		.loc 1 331 0
 449 0048 83F83D00 		strb	r0, [r3, #61]
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 450              		.loc 1 334 0
 451 004c 83F83C00 		strb	r0, [r3, #60]
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 452              		.loc 1 336 0
 453 0050 7047     		bx	lr
 454              	.LVL29:
 455              	.L30:
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 456              		.loc 1 301 0
 457 0052 0120     		movs	r0, #1
ARM GAS  /tmp/ccDcfjiT.s 			page 43


 458              	.LVL30:
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 459              		.loc 1 337 0
 460 0054 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE142:
 464              		.section	.text.HAL_MDMA_ConfigPostRequestMask,"ax",%progbits
 465              		.align	1
 466              		.global	HAL_MDMA_ConfigPostRequestMask
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv5-d16
 472              	HAL_MDMA_ConfigPostRequestMask:
 473              	.LFB143:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 474              		.loc 1 349 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479              	.LVL31:
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 480              		.loc 1 353 0
 481 0000 80B3     		cbz	r0, .L35
 482 0002 0346     		mov	r3, r0
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 483              		.loc 1 359 0
 484 0004 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 485              	.LVL32:
 486 0008 0128     		cmp	r0, #1
 487 000a 2DD0     		beq	.L36
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 488              		.loc 1 359 0 is_stmt 0 discriminator 2
 489 000c 0120     		movs	r0, #1
 490 000e 83F83C00 		strb	r0, [r3, #60]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 491              		.loc 1 361 0 is_stmt 1 discriminator 2
 492 0012 93F83D00 		ldrb	r0, [r3, #61]	@ zero_extendqisi2
 493 0016 C0B2     		uxtb	r0, r0
 494 0018 0128     		cmp	r0, #1
 495 001a 04D0     		beq	.L44
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 496              		.loc 1 394 0
 497 001c 0120     		movs	r0, #1
 498              	.LVL33:
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 499              		.loc 1 397 0
 500 001e 0022     		movs	r2, #0
 501              	.LVL34:
 502 0020 83F83C20 		strb	r2, [r3, #60]
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 503              		.loc 1 400 0
 504 0024 7047     		bx	lr
 505              	.LVL35:
 506              	.L44:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
ARM GAS  /tmp/ccDcfjiT.s 			page 44


 507              		.loc 1 349 0
 508 0026 10B4     		push	{r4}
 509              	.LCFI4:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 4, -4
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 512              		.loc 1 364 0
 513 0028 1868     		ldr	r0, [r3]
 514 002a 0469     		ldr	r4, [r0, #16]
 515 002c 14F0804F 		tst	r4, #1073741824
 516 0030 11D1     		bne	.L38
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMDR = MaskData;
 517              		.loc 1 367 0
 518 0032 0163     		str	r1, [r0, #48]
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 519              		.loc 1 368 0
 520 0034 1868     		ldr	r0, [r3]
 521 0036 4263     		str	r2, [r0, #52]
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 522              		.loc 1 376 0
 523 0038 31B9     		cbnz	r1, .L34
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 524              		.loc 1 378 0
 525 003a 1968     		ldr	r1, [r3]
 526              	.LVL36:
 527 003c 0A69     		ldr	r2, [r1, #16]
 528              	.LVL37:
 529 003e 22F00042 		bic	r2, r2, #-2147483648
 530 0042 0A61     		str	r2, [r1, #16]
 531              	.LVL38:
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 532              		.loc 1 350 0
 533 0044 0020     		movs	r0, #0
 534 0046 07E0     		b	.L33
 535              	.LVL39:
 536              	.L34:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 537              		.loc 1 382 0
 538 0048 1968     		ldr	r1, [r3]
 539              	.LVL40:
 540 004a 0A69     		ldr	r2, [r1, #16]
 541              	.LVL41:
 542 004c 42F00042 		orr	r2, r2, #-2147483648
 543 0050 0A61     		str	r2, [r1, #16]
 544              	.LVL42:
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 545              		.loc 1 350 0
 546 0052 0020     		movs	r0, #0
 547 0054 00E0     		b	.L33
 548              	.LVL43:
 549              	.L38:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 550              		.loc 1 388 0
 551 0056 0120     		movs	r0, #1
 552              	.LVL44:
 553              	.L33:
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 45


 554              		.loc 1 397 0
 555 0058 0022     		movs	r2, #0
 556 005a 83F83C20 		strb	r2, [r3, #60]
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 557              		.loc 1 400 0
 558 005e 5DF8044B 		ldr	r4, [sp], #4
 559              	.LCFI5:
 560              		.cfi_restore 4
 561              		.cfi_def_cfa_offset 0
 562 0062 7047     		bx	lr
 563              	.LVL45:
 564              	.L35:
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 565              		.loc 1 355 0
 566 0064 0120     		movs	r0, #1
 567              	.LVL46:
 568 0066 7047     		bx	lr
 569              	.LVL47:
 570              	.L36:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 571              		.loc 1 359 0
 572 0068 0220     		movs	r0, #2
 573 006a 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE143:
 577              		.section	.text.HAL_MDMA_RegisterCallback,"ax",%progbits
 578              		.align	1
 579              		.global	HAL_MDMA_RegisterCallback
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-d16
 585              	HAL_MDMA_RegisterCallback:
 586              	.LFB144:
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 587              		.loc 1 411 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              	.LVL48:
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 593              		.loc 1 415 0
 594 0000 0346     		mov	r3, r0
 595 0002 58B3     		cbz	r0, .L55
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 596              		.loc 1 421 0
 597 0004 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 598              	.LVL49:
 599 0008 0128     		cmp	r0, #1
 600 000a 29D0     		beq	.L56
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 601              		.loc 1 421 0 is_stmt 0 discriminator 2
 602 000c 0120     		movs	r0, #1
 603 000e 83F83C00 		strb	r0, [r3, #60]
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 604              		.loc 1 423 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccDcfjiT.s 			page 46


 605 0012 93F83D00 		ldrb	r0, [r3, #61]	@ zero_extendqisi2
 606 0016 C0B2     		uxtb	r0, r0
 607 0018 0128     		cmp	r0, #1
 608 001a 04D0     		beq	.L59
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 609              		.loc 1 458 0
 610 001c 0120     		movs	r0, #1
 611              	.L47:
 612              	.LVL50:
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 613              		.loc 1 462 0
 614 001e 0022     		movs	r2, #0
 615              	.LVL51:
 616 0020 83F83C20 		strb	r2, [r3, #60]
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 617              		.loc 1 464 0
 618 0024 7047     		bx	lr
 619              	.LVL52:
 620              	.L59:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 621              		.loc 1 425 0
 622 0026 0529     		cmp	r1, #5
 623 0028 16D8     		bhi	.L58
 624 002a DFE801F0 		tbb	[pc, r1]
 625              	.L49:
 626 002e 03       		.byte	(.L48-.L49)/2
 627 002f 06       		.byte	(.L50-.L49)/2
 628 0030 09       		.byte	(.L51-.L49)/2
 629 0031 0C       		.byte	(.L52-.L49)/2
 630 0032 0F       		.byte	(.L53-.L49)/2
 631 0033 12       		.byte	(.L54-.L49)/2
 632              		.p2align 1
 633              	.L48:
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 634              		.loc 1 428 0
 635 0034 5A64     		str	r2, [r3, #68]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 636              		.loc 1 412 0
 637 0036 0020     		movs	r0, #0
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 638              		.loc 1 429 0
 639 0038 F1E7     		b	.L47
 640              	.L50:
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 641              		.loc 1 432 0
 642 003a 9A64     		str	r2, [r3, #72]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 643              		.loc 1 412 0
 644 003c 0020     		movs	r0, #0
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 645              		.loc 1 433 0
 646 003e EEE7     		b	.L47
 647              	.L51:
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 648              		.loc 1 436 0
 649 0040 DA64     		str	r2, [r3, #76]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 47


 650              		.loc 1 412 0
 651 0042 0020     		movs	r0, #0
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 652              		.loc 1 437 0
 653 0044 EBE7     		b	.L47
 654              	.L52:
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 655              		.loc 1 440 0
 656 0046 1A65     		str	r2, [r3, #80]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 657              		.loc 1 412 0
 658 0048 0020     		movs	r0, #0
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 659              		.loc 1 441 0
 660 004a E8E7     		b	.L47
 661              	.L53:
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 662              		.loc 1 444 0
 663 004c 5A65     		str	r2, [r3, #84]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 664              		.loc 1 412 0
 665 004e 0020     		movs	r0, #0
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 666              		.loc 1 445 0
 667 0050 E5E7     		b	.L47
 668              	.L54:
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 669              		.loc 1 448 0
 670 0052 9A65     		str	r2, [r3, #88]
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 671              		.loc 1 412 0
 672 0054 0020     		movs	r0, #0
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 673              		.loc 1 449 0
 674 0056 E2E7     		b	.L47
 675              	.L58:
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 676              		.loc 1 412 0
 677 0058 0020     		movs	r0, #0
 678 005a E0E7     		b	.L47
 679              	.LVL53:
 680              	.L55:
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 681              		.loc 1 417 0
 682 005c 0120     		movs	r0, #1
 683              	.LVL54:
 684 005e 7047     		bx	lr
 685              	.L56:
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 686              		.loc 1 421 0
 687 0060 0220     		movs	r0, #2
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 688              		.loc 1 465 0
 689 0062 7047     		bx	lr
 690              		.cfi_endproc
 691              	.LFE144:
 693              		.section	.text.HAL_MDMA_UnRegisterCallback,"ax",%progbits
ARM GAS  /tmp/ccDcfjiT.s 			page 48


 694              		.align	1
 695              		.global	HAL_MDMA_UnRegisterCallback
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv5-d16
 701              	HAL_MDMA_UnRegisterCallback:
 702              	.LFB145:
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 703              		.loc 1 476 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708              	.LVL55:
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 709              		.loc 1 480 0
 710 0000 0346     		mov	r3, r0
 711 0002 0028     		cmp	r0, #0
 712 0004 34D0     		beq	.L71
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 713              		.loc 1 486 0
 714 0006 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 715 000a 012A     		cmp	r2, #1
 716 000c 32D0     		beq	.L72
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 717              		.loc 1 486 0 is_stmt 0 discriminator 2
 718 000e 0122     		movs	r2, #1
 719 0010 80F83C20 		strb	r2, [r0, #60]
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 720              		.loc 1 488 0 is_stmt 1 discriminator 2
 721 0014 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 722 0018 D2B2     		uxtb	r2, r2
 723 001a 012A     		cmp	r2, #1
 724 001c 04D0     		beq	.L75
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 725              		.loc 1 532 0
 726 001e 0120     		movs	r0, #1
 727              	.LVL56:
 728              	.L62:
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 729              		.loc 1 536 0
 730 0020 0022     		movs	r2, #0
 731 0022 83F83C20 		strb	r2, [r3, #60]
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 732              		.loc 1 538 0
 733 0026 7047     		bx	lr
 734              	.LVL57:
 735              	.L75:
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 736              		.loc 1 490 0
 737 0028 0629     		cmp	r1, #6
 738 002a 1FD8     		bhi	.L74
 739 002c DFE801F0 		tbb	[pc, r1]
 740              	.L64:
 741 0030 04       		.byte	(.L63-.L64)/2
 742 0031 07       		.byte	(.L65-.L64)/2
ARM GAS  /tmp/ccDcfjiT.s 			page 49


 743 0032 0A       		.byte	(.L66-.L64)/2
 744 0033 0D       		.byte	(.L67-.L64)/2
 745 0034 10       		.byte	(.L68-.L64)/2
 746 0035 13       		.byte	(.L69-.L64)/2
 747 0036 16       		.byte	(.L70-.L64)/2
 748 0037 00       		.p2align 1
 749              	.L63:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 750              		.loc 1 493 0
 751 0038 0020     		movs	r0, #0
 752              	.LVL58:
 753 003a 5864     		str	r0, [r3, #68]
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 754              		.loc 1 494 0
 755 003c F0E7     		b	.L62
 756              	.LVL59:
 757              	.L65:
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 758              		.loc 1 497 0
 759 003e 0020     		movs	r0, #0
 760              	.LVL60:
 761 0040 9864     		str	r0, [r3, #72]
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 762              		.loc 1 498 0
 763 0042 EDE7     		b	.L62
 764              	.LVL61:
 765              	.L66:
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 766              		.loc 1 501 0
 767 0044 0020     		movs	r0, #0
 768              	.LVL62:
 769 0046 D864     		str	r0, [r3, #76]
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 770              		.loc 1 502 0
 771 0048 EAE7     		b	.L62
 772              	.LVL63:
 773              	.L67:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 774              		.loc 1 505 0
 775 004a 0020     		movs	r0, #0
 776              	.LVL64:
 777 004c 1865     		str	r0, [r3, #80]
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 778              		.loc 1 506 0
 779 004e E7E7     		b	.L62
 780              	.LVL65:
 781              	.L68:
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 782              		.loc 1 509 0
 783 0050 0020     		movs	r0, #0
 784              	.LVL66:
 785 0052 5865     		str	r0, [r3, #84]
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 786              		.loc 1 510 0
 787 0054 E4E7     		b	.L62
 788              	.LVL67:
 789              	.L69:
ARM GAS  /tmp/ccDcfjiT.s 			page 50


 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 790              		.loc 1 513 0
 791 0056 0020     		movs	r0, #0
 792              	.LVL68:
 793 0058 9865     		str	r0, [r3, #88]
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 794              		.loc 1 514 0
 795 005a E1E7     		b	.L62
 796              	.LVL69:
 797              	.L70:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 798              		.loc 1 517 0
 799 005c 0020     		movs	r0, #0
 800              	.LVL70:
 801 005e 5864     		str	r0, [r3, #68]
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 802              		.loc 1 518 0
 803 0060 9864     		str	r0, [r3, #72]
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 804              		.loc 1 519 0
 805 0062 D864     		str	r0, [r3, #76]
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 806              		.loc 1 520 0
 807 0064 1865     		str	r0, [r3, #80]
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 808              		.loc 1 521 0
 809 0066 5865     		str	r0, [r3, #84]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 810              		.loc 1 522 0
 811 0068 9865     		str	r0, [r3, #88]
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 812              		.loc 1 523 0
 813 006a D9E7     		b	.L62
 814              	.LVL71:
 815              	.L74:
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 816              		.loc 1 526 0
 817 006c 0120     		movs	r0, #1
 818              	.LVL72:
 819 006e D7E7     		b	.L62
 820              	.LVL73:
 821              	.L71:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 822              		.loc 1 482 0
 823 0070 0120     		movs	r0, #1
 824              	.LVL74:
 825 0072 7047     		bx	lr
 826              	.LVL75:
 827              	.L72:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 828              		.loc 1 486 0
 829 0074 0220     		movs	r0, #2
 830              	.LVL76:
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 831              		.loc 1 539 0
 832 0076 7047     		bx	lr
 833              		.cfi_endproc
ARM GAS  /tmp/ccDcfjiT.s 			page 51


 834              	.LFE145:
 836              		.section	.text.HAL_MDMA_LinkedList_CreateNode,"ax",%progbits
 837              		.align	1
 838              		.global	HAL_MDMA_LinkedList_CreateNode
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv5-d16
 844              	HAL_MDMA_LinkedList_CreateNode:
 845              	.LFB146:
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
 846              		.loc 1 570 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL77:
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 852              		.loc 1 575 0
 853 0000 0246     		mov	r2, r0
 854 0002 0B46     		mov	r3, r1
 855 0004 B1FA81F1 		clz	r1, r1
 856              	.LVL78:
 857 0008 4909     		lsrs	r1, r1, #5
 858 000a 0028     		cmp	r0, #0
 859 000c 08BF     		it	eq
 860 000e 0121     		moveq	r1, #1
 861 0010 0029     		cmp	r1, #0
 862 0012 7BD1     		bne	.L87
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 863              		.loc 1 601 0
 864 0014 4161     		str	r1, [r0, #20]
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMAR   = 0;
 865              		.loc 1 604 0
 866 0016 8161     		str	r1, [r0, #24]
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMDR   = 0;
 867              		.loc 1 605 0
 868 0018 0162     		str	r1, [r0, #32]
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->Reserved = 0;
 869              		.loc 1 606 0
 870 001a 4162     		str	r1, [r0, #36]
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 871              		.loc 1 607 0
 872 001c C161     		str	r1, [r0, #28]
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 873              		.loc 1 610 0
 874 001e 1969     		ldr	r1, [r3, #16]
 875 0020 5869     		ldr	r0, [r3, #20]
 876              	.LVL79:
 877 0022 0143     		orrs	r1, r1, r0
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 878              		.loc 1 611 0
 879 0024 9869     		ldr	r0, [r3, #24]
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 880              		.loc 1 610 0
 881 0026 0143     		orrs	r1, r1, r0
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
ARM GAS  /tmp/ccDcfjiT.s 			page 52


 882              		.loc 1 611 0
 883 0028 D869     		ldr	r0, [r3, #28]
 884 002a 0143     		orrs	r1, r1, r0
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 885              		.loc 1 612 0
 886 002c 186A     		ldr	r0, [r3, #32]
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 887              		.loc 1 611 0
 888 002e 0143     		orrs	r1, r1, r0
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 889              		.loc 1 612 0
 890 0030 986A     		ldr	r0, [r3, #40]
 891 0032 0143     		orrs	r1, r1, r0
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 892              		.loc 1 613 0
 893 0034 D86A     		ldr	r0, [r3, #44]
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 894              		.loc 1 612 0
 895 0036 0143     		orrs	r1, r1, r0
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 896              		.loc 1 614 0
 897 0038 586A     		ldr	r0, [r3, #36]
 898 003a 0138     		subs	r0, r0, #1
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 899              		.loc 1 613 0
 900 003c 41EA8041 		orr	r1, r1, r0, lsl #18
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 901              		.loc 1 615 0
 902 0040 5868     		ldr	r0, [r3, #4]
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 903              		.loc 1 614 0
 904 0042 0143     		orrs	r1, r1, r0
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 905              		.loc 1 610 0
 906 0044 1160     		str	r1, [r2]
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 907              		.loc 1 618 0
 908 0046 1968     		ldr	r1, [r3]
 909 0048 B1F1804F 		cmp	r1, #1073741824
 910 004c 45D0     		beq	.L89
 911              	.L78:
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 912              		.loc 1 629 0
 913 004e 1968     		ldr	r1, [r3]
 914 0050 B1F1804F 		cmp	r1, #1073741824
 915 0054 01D0     		beq	.L79
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 916              		.loc 1 629 0 is_stmt 0 discriminator 1
 917 0056 996C     		ldr	r1, [r3, #72]
 918 0058 19B1     		cbz	r1, .L80
 919              	.L79:
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 920              		.loc 1 631 0 is_stmt 1
 921 005a 1168     		ldr	r1, [r2]
 922 005c 41F00041 		orr	r1, r1, #-2147483648
 923 0060 1160     		str	r1, [r2]
 924              	.L80:
ARM GAS  /tmp/ccDcfjiT.s 			page 53


 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 925              		.loc 1 635 0
 926 0062 596C     		ldr	r1, [r3, #68]
 927 0064 0139     		subs	r1, r1, #1
 928 0066 0905     		lsls	r1, r1, #20
 929 0068 5160     		str	r1, [r2, #4]
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 930              		.loc 1 638 0
 931 006a 196B     		ldr	r1, [r3, #48]
 932 006c 0029     		cmp	r1, #0
 933 006e 39DB     		blt	.L90
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 934              		.loc 1 648 0
 935 0070 89B2     		uxth	r1, r1
 936 0072 1161     		str	r1, [r2, #16]
 937              	.L82:
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 938              		.loc 1 652 0
 939 0074 596B     		ldr	r1, [r3, #52]
 940 0076 0029     		cmp	r1, #0
 941 0078 3DDB     		blt	.L91
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 942              		.loc 1 662 0
 943 007a 1069     		ldr	r0, [r2, #16]
 944 007c 40EA0141 		orr	r1, r0, r1, lsl #16
 945 0080 1161     		str	r1, [r2, #16]
 946              	.L84:
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 947              		.loc 1 666 0
 948 0082 5168     		ldr	r1, [r2, #4]
 949 0084 186C     		ldr	r0, [r3, #64]
 950 0086 0143     		orrs	r1, r1, r0
 951 0088 5160     		str	r1, [r2, #4]
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 952              		.loc 1 669 0
 953 008a D96B     		ldr	r1, [r3, #60]
 954 008c D160     		str	r1, [r2, #12]
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 955              		.loc 1 672 0
 956 008e 996B     		ldr	r1, [r3, #56]
 957 0090 9160     		str	r1, [r2, #8]
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 958              		.loc 1 675 0
 959 0092 1968     		ldr	r1, [r3]
 960 0094 B1F1804F 		cmp	r1, #1073741824
 961 0098 05D0     		beq	.L85
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request clear Mask and Data */
 962              		.loc 1 678 0
 963 009a C9B2     		uxtb	r1, r1
 964 009c 9161     		str	r1, [r2, #24]
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMDR = pNodeConfig->PostRequestMaskData;
 965              		.loc 1 680 0
 966 009e 996C     		ldr	r1, [r3, #72]
 967 00a0 1162     		str	r1, [r2, #32]
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 968              		.loc 1 681 0
 969 00a2 D96C     		ldr	r1, [r3, #76]
ARM GAS  /tmp/ccDcfjiT.s 			page 54


 970 00a4 5162     		str	r1, [r2, #36]
 971              	.L85:
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 972              		.loc 1 684 0
 973 00a6 996B     		ldr	r1, [r3, #56]
 974 00a8 01F07F41 		and	r1, r1, #-16777216
 975              	.LVL80:
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 976              		.loc 1 685 0
 977 00ac 0029     		cmp	r1, #0
 978 00ae 18BF     		it	ne
 979 00b0 B1F1005F 		cmpne	r1, #536870912
 980 00b4 03D1     		bne	.L86
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 981              		.loc 1 688 0
 982 00b6 9169     		ldr	r1, [r2, #24]
 983              	.LVL81:
 984 00b8 41F48031 		orr	r1, r1, #65536
 985 00bc 9161     		str	r1, [r2, #24]
 986              	.LVL82:
 987              	.L86:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 988              		.loc 1 691 0
 989 00be DB6B     		ldr	r3, [r3, #60]
 990              	.LVL83:
 991 00c0 03F07F43 		and	r3, r3, #-16777216
 992              	.LVL84:
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 993              		.loc 1 692 0
 994 00c4 002B     		cmp	r3, #0
 995 00c6 18BF     		it	ne
 996 00c8 B3F1005F 		cmpne	r3, #536870912
 997 00cc 20D1     		bne	.L88
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 998              		.loc 1 695 0
 999 00ce 9369     		ldr	r3, [r2, #24]
 1000              	.LVL85:
 1001 00d0 43F40033 		orr	r3, r3, #131072
 1002 00d4 9361     		str	r3, [r2, #24]
 1003              	.LVL86:
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1004              		.loc 1 698 0
 1005 00d6 0020     		movs	r0, #0
 1006 00d8 7047     		bx	lr
 1007              	.LVL87:
 1008              	.L89:
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1009              		.loc 1 620 0
 1010 00da 1168     		ldr	r1, [r2]
 1011 00dc 41F08041 		orr	r1, r1, #1073741824
 1012 00e0 1160     		str	r1, [r2]
 1013 00e2 B4E7     		b	.L78
 1014              	.L90:
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 1015              		.loc 1 640 0
 1016 00e4 5168     		ldr	r1, [r2, #4]
 1017 00e6 41F48021 		orr	r1, r1, #262144
ARM GAS  /tmp/ccDcfjiT.s 			page 55


 1018 00ea 5160     		str	r1, [r2, #4]
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = blockoffset & 0x0000FFFFU;
 1019              		.loc 1 642 0
 1020 00ec 196B     		ldr	r1, [r3, #48]
 1021 00ee 4942     		negs	r1, r1
 1022              	.LVL88:
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1023              		.loc 1 643 0
 1024 00f0 89B2     		uxth	r1, r1
 1025              	.LVL89:
 1026 00f2 1161     		str	r1, [r2, #16]
 1027              	.LVL90:
 1028 00f4 BEE7     		b	.L82
 1029              	.L91:
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 1030              		.loc 1 654 0
 1031 00f6 5168     		ldr	r1, [r2, #4]
 1032 00f8 41F40021 		orr	r1, r1, #524288
 1033 00fc 5160     		str	r1, [r2, #4]
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 1034              		.loc 1 656 0
 1035 00fe 596B     		ldr	r1, [r3, #52]
 1036 0100 4842     		negs	r0, r1
 1037              	.LVL91:
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1038              		.loc 1 657 0
 1039 0102 1169     		ldr	r1, [r2, #16]
 1040 0104 41EA0041 		orr	r1, r1, r0, lsl #16
 1041 0108 1161     		str	r1, [r2, #16]
 1042 010a BAE7     		b	.L84
 1043              	.LVL92:
 1044              	.L87:
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1045              		.loc 1 577 0
 1046 010c 0120     		movs	r0, #1
 1047              	.LVL93:
 1048 010e 7047     		bx	lr
 1049              	.LVL94:
 1050              	.L88:
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1051              		.loc 1 698 0
 1052 0110 0020     		movs	r0, #0
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1053              		.loc 1 699 0
 1054 0112 7047     		bx	lr
 1055              		.cfi_endproc
 1056              	.LFE146:
 1058              		.section	.text.HAL_MDMA_LinkedList_AddNode,"ax",%progbits
 1059              		.align	1
 1060              		.global	HAL_MDMA_LinkedList_AddNode
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu fpv5-d16
 1066              	HAL_MDMA_LinkedList_AddNode:
 1067              	.LFB147:
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
ARM GAS  /tmp/ccDcfjiT.s 			page 56


 1068              		.loc 1 713 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL95:
 1074 0000 F0B4     		push	{r4, r5, r6, r7}
 1075              	.LCFI6:
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 4, -16
 1078              		.cfi_offset 5, -12
 1079              		.cfi_offset 6, -8
 1080              		.cfi_offset 7, -4
 1081              	.LVL96:
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1082              		.loc 1 719 0
 1083 0002 0D46     		mov	r5, r1
 1084 0004 B1FA81F1 		clz	r1, r1
 1085              	.LVL97:
 1086 0008 4909     		lsrs	r1, r1, #5
 1087 000a 0028     		cmp	r0, #0
 1088 000c 08BF     		it	eq
 1089 000e 0121     		moveq	r1, #1
 1090 0010 0029     		cmp	r1, #0
 1091 0012 61D1     		bne	.L107
 1092 0014 0346     		mov	r3, r0
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1093              		.loc 1 725 0
 1094 0016 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 1095 001a 0129     		cmp	r1, #1
 1096 001c 5FD0     		beq	.L108
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1097              		.loc 1 725 0 is_stmt 0 discriminator 2
 1098 001e 0121     		movs	r1, #1
 1099 0020 80F83C10 		strb	r1, [r0, #60]
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1100              		.loc 1 727 0 is_stmt 1 discriminator 2
 1101 0024 90F83D10 		ldrb	r1, [r0, #61]	@ zero_extendqisi2
 1102 0028 C9B2     		uxtb	r1, r1
 1103 002a 0129     		cmp	r1, #1
 1104 002c 4FD1     		bne	.L94
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1105              		.loc 1 730 0
 1106 002e 0221     		movs	r1, #2
 1107 0030 80F83D10 		strb	r1, [r0, #61]
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1108              		.loc 1 733 0
 1109 0034 C76D     		ldr	r7, [r0, #92]
 1110 0036 2FB1     		cbz	r7, .L115
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1111              		.loc 1 757 0
 1112 0038 AF42     		cmp	r7, r5
 1113 003a 15D0     		beq	.L116
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (hal_status == HAL_OK))
 1114              		.loc 1 760 0
 1115 003c 3C46     		mov	r4, r7
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 57


 1116              		.loc 1 716 0
 1117 003e 0020     		movs	r0, #0
 1118              	.LVL98:
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1119              		.loc 1 715 0
 1120 0040 0146     		mov	r1, r0
 1121 0042 15E0     		b	.L97
 1122              	.LVL99:
 1123              	.L115:
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1124              		.loc 1 735 0
 1125 0044 3AB1     		cbz	r2, .L117
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1126              		.loc 1 754 0
 1127 0046 0120     		movs	r0, #1
 1128              	.LVL100:
 1129              	.L96:
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1130              		.loc 1 820 0
 1131 0048 0022     		movs	r2, #0
 1132 004a 83F83C20 		strb	r2, [r3, #60]
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1133              		.loc 1 822 0
 1134 004e 0122     		movs	r2, #1
 1135 0050 83F83D20 		strb	r2, [r3, #61]
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1136              		.loc 1 824 0
 1137 0054 41E0     		b	.L93
 1138              	.LVL101:
 1139              	.L117:
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Set the MDMA handle First linked List node*/
 1140              		.loc 1 740 0
 1141 0056 0268     		ldr	r2, [r0]
 1142              	.LVL102:
 1143 0058 5562     		str	r5, [r2, #36]
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1144              		.loc 1 742 0
 1145 005a C565     		str	r5, [r0, #92]
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1146              		.loc 1 745 0
 1147 005c 0020     		movs	r0, #0
 1148              	.LVL103:
 1149 005e 6861     		str	r0, [r5, #20]
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1150              		.loc 1 748 0
 1151 0060 1D66     		str	r5, [r3, #96]
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1152              		.loc 1 750 0
 1153 0062 0122     		movs	r2, #1
 1154 0064 5A66     		str	r2, [r3, #100]
 1155 0066 EFE7     		b	.L96
 1156              	.LVL104:
 1157              	.L116:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1158              		.loc 1 816 0
 1159 0068 0120     		movs	r0, #1
 1160              	.LVL105:
ARM GAS  /tmp/ccDcfjiT.s 			page 58


 1161 006a EDE7     		b	.L96
 1162              	.LVL106:
 1163              	.L98:
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 1164              		.loc 1 767 0
 1165 006c 6469     		ldr	r4, [r4, #20]
 1166              	.LVL107:
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1167              		.loc 1 768 0
 1168 006e 0131     		adds	r1, r1, #1
 1169              	.LVL108:
 1170              	.L97:
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1171              		.loc 1 761 0
 1172 0070 5E6E     		ldr	r6, [r3, #100]
 1173 0072 8E42     		cmp	r6, r1
 1174 0074 05D9     		bls	.L99
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1175              		.loc 1 761 0 is_stmt 0 discriminator 1
 1176 0076 20B9     		cbnz	r0, .L99
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1177              		.loc 1 763 0 is_stmt 1
 1178 0078 6669     		ldr	r6, [r4, #20]
 1179 007a AE42     		cmp	r6, r5
 1180 007c F6D1     		bne	.L98
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1181              		.loc 1 765 0
 1182 007e 0120     		movs	r0, #1
 1183              	.LVL109:
 1184 0080 F4E7     		b	.L98
 1185              	.LVL110:
 1186              	.L99:
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1187              		.loc 1 771 0
 1188 0082 0028     		cmp	r0, #0
 1189 0084 E0D1     		bne	.L96
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1190              		.loc 1 774 0
 1191 0086 196E     		ldr	r1, [r3, #96]
 1192              	.LVL111:
 1193 0088 9142     		cmp	r1, r2
 1194 008a 03D0     		beq	.L101
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1195              		.loc 1 774 0 is_stmt 0 discriminator 1
 1196 008c 12B1     		cbz	r2, .L101
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1197              		.loc 1 715 0 is_stmt 1
 1198 008e 0026     		movs	r6, #0
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           while((counter < hmdma->LinkedListNodeCounter) && (nodeInserted == 0U))
 1199              		.loc 1 788 0
 1200 0090 3146     		mov	r1, r6
 1201 0092 0FE0     		b	.L102
 1202              	.L101:
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)pNewNode;
 1203              		.loc 1 777 0
 1204 0094 4A69     		ldr	r2, [r1, #20]
 1205              	.LVL112:
ARM GAS  /tmp/ccDcfjiT.s 			page 59


 1206 0096 6A61     		str	r2, [r5, #20]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle last node address */
 1207              		.loc 1 778 0
 1208 0098 1A6E     		ldr	r2, [r3, #96]
 1209 009a 5561     		str	r5, [r2, #20]
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Increment the linked list node counter */
 1210              		.loc 1 780 0
 1211 009c 1D66     		str	r5, [r3, #96]
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1212              		.loc 1 782 0
 1213 009e 5A6E     		ldr	r2, [r3, #100]
 1214 00a0 0132     		adds	r2, r2, #1
 1215 00a2 5A66     		str	r2, [r3, #100]
 1216 00a4 D0E7     		b	.L96
 1217              	.LVL113:
 1218              	.L118:
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode->CLAR = (uint32_t)pNewNode;
 1219              		.loc 1 795 0
 1220 00a6 7C69     		ldr	r4, [r7, #20]
 1221 00a8 6C61     		str	r4, [r5, #20]
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /* Increment the linked list node counter */
 1222              		.loc 1 796 0
 1223 00aa 7D61     		str	r5, [r7, #20]
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               nodeInserted = 1;
 1224              		.loc 1 798 0
 1225 00ac 5C6E     		ldr	r4, [r3, #100]
 1226 00ae 0134     		adds	r4, r4, #1
 1227 00b0 5C66     		str	r4, [r3, #100]
 1228              	.LVL114:
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 1229              		.loc 1 799 0
 1230 00b2 0126     		movs	r6, #1
 1231              	.LVL115:
 1232              	.L102:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1233              		.loc 1 789 0
 1234 00b4 5C6E     		ldr	r4, [r3, #100]
 1235 00b6 8C42     		cmp	r4, r1
 1236 00b8 05D9     		bls	.L105
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1237              		.loc 1 789 0 is_stmt 0 discriminator 1
 1238 00ba 26B9     		cbnz	r6, .L105
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             if(pNode == pPrevNode)
 1239              		.loc 1 791 0 is_stmt 1
 1240 00bc 0131     		adds	r1, r1, #1
 1241              	.LVL116:
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 1242              		.loc 1 792 0
 1243 00be 9742     		cmp	r7, r2
 1244 00c0 F1D0     		beq	.L118
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 1245              		.loc 1 803 0
 1246 00c2 7F69     		ldr	r7, [r7, #20]
 1247              	.LVL117:
 1248 00c4 F6E7     		b	.L102
 1249              	.L105:
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
ARM GAS  /tmp/ccDcfjiT.s 			page 60


 1250              		.loc 1 807 0
 1251 00c6 002E     		cmp	r6, #0
 1252 00c8 BED1     		bne	.L96
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 1253              		.loc 1 809 0
 1254 00ca 0120     		movs	r0, #1
 1255              	.LVL118:
 1256 00cc BCE7     		b	.L96
 1257              	.LVL119:
 1258              	.L94:
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1259              		.loc 1 829 0
 1260 00ce 0022     		movs	r2, #0
 1261              	.LVL120:
 1262 00d0 80F83C20 		strb	r2, [r0, #60]
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1263              		.loc 1 832 0
 1264 00d4 0220     		movs	r0, #2
 1265              	.LVL121:
 1266 00d6 00E0     		b	.L93
 1267              	.LVL122:
 1268              	.L107:
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1269              		.loc 1 721 0
 1270 00d8 0120     		movs	r0, #1
 1271              	.LVL123:
 1272              	.L93:
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1273              		.loc 1 834 0
 1274 00da F0BC     		pop	{r4, r5, r6, r7}
 1275              	.LCFI7:
 1276              		.cfi_remember_state
 1277              		.cfi_restore 7
 1278              		.cfi_restore 6
 1279              		.cfi_restore 5
 1280              		.cfi_restore 4
 1281              		.cfi_def_cfa_offset 0
 1282              	.LVL124:
 1283 00dc 7047     		bx	lr
 1284              	.LVL125:
 1285              	.L108:
 1286              	.LCFI8:
 1287              		.cfi_restore_state
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1288              		.loc 1 725 0
 1289 00de 0220     		movs	r0, #2
 1290              	.LVL126:
 1291 00e0 FBE7     		b	.L93
 1292              		.cfi_endproc
 1293              	.LFE147:
 1295              		.section	.text.HAL_MDMA_LinkedList_RemoveNode,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_MDMA_LinkedList_RemoveNode
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv5-d16
ARM GAS  /tmp/ccDcfjiT.s 			page 61


 1303              	HAL_MDMA_LinkedList_RemoveNode:
 1304              	.LFB148:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 1305              		.loc 1 846 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL127:
 1311 0000 30B4     		push	{r4, r5}
 1312              	.LCFI9:
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 4, -8
 1315              		.cfi_offset 5, -4
 1316              	.LVL128:
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1317              		.loc 1 852 0
 1318 0002 0C46     		mov	r4, r1
 1319 0004 B1FA81F1 		clz	r1, r1
 1320              	.LVL129:
 1321 0008 4909     		lsrs	r1, r1, #5
 1322 000a 0028     		cmp	r0, #0
 1323 000c 08BF     		it	eq
 1324 000e 0121     		moveq	r1, #1
 1325 0010 0029     		cmp	r1, #0
 1326 0012 62D1     		bne	.L131
 1327 0014 0346     		mov	r3, r0
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1328              		.loc 1 858 0
 1329 0016 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1330 001a 012A     		cmp	r2, #1
 1331 001c 60D0     		beq	.L132
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1332              		.loc 1 858 0 is_stmt 0 discriminator 2
 1333 001e 0122     		movs	r2, #1
 1334 0020 80F83C20 		strb	r2, [r0, #60]
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1335              		.loc 1 860 0 is_stmt 1 discriminator 2
 1336 0024 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1337 0028 D2B2     		uxtb	r2, r2
 1338 002a 012A     		cmp	r2, #1
 1339 002c 50D1     		bne	.L121
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1340              		.loc 1 863 0
 1341 002e 0222     		movs	r2, #2
 1342 0030 80F83D20 		strb	r2, [r0, #61]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1343              		.loc 1 866 0
 1344 0034 C26D     		ldr	r2, [r0, #92]
 1345 0036 002A     		cmp	r2, #0
 1346 0038 3ED0     		beq	.L133
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1347              		.loc 1 866 0 is_stmt 0 discriminator 1
 1348 003a 016E     		ldr	r1, [r0, #96]
 1349 003c 0029     		cmp	r1, #0
 1350 003e 43D0     		beq	.L134
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccDcfjiT.s 			page 62


 1351              		.loc 1 866 0 discriminator 2
 1352 0040 406E     		ldr	r0, [r0, #100]
 1353              	.LVL130:
 1354 0042 0028     		cmp	r0, #0
 1355 0044 42D0     		beq	.L135
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1356              		.loc 1 870 0 is_stmt 1
 1357 0046 A242     		cmp	r2, r4
 1358 0048 02D0     		beq	.L139
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1359              		.loc 1 848 0
 1360 004a 0025     		movs	r5, #0
 1361 004c 2946     		mov	r1, r5
 1362 004e 22E0     		b	.L123
 1363              	.L139:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1364              		.loc 1 873 0
 1365 0050 A142     		cmp	r1, r4
 1366 0052 0DD0     		beq	.L140
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1367              		.loc 1 886 0
 1368 0054 4869     		ldr	r0, [r1, #20]
 1369 0056 8242     		cmp	r2, r0
 1370 0058 11D0     		beq	.L141
 1371              	.L125:
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = (MDMA_LinkNodeTypeDef *)hmdma->Instance->CLAR;
 1372              		.loc 1 895 0
 1373 005a 1A68     		ldr	r2, [r3]
 1374 005c 6169     		ldr	r1, [r4, #20]
 1375 005e 5162     		str	r1, [r2, #36]
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle node counter */
 1376              		.loc 1 896 0
 1377 0060 1A68     		ldr	r2, [r3]
 1378 0062 526A     		ldr	r2, [r2, #36]
 1379 0064 DA65     		str	r2, [r3, #92]
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1380              		.loc 1 898 0
 1381 0066 5A6E     		ldr	r2, [r3, #100]
 1382 0068 013A     		subs	r2, r2, #1
 1383 006a 5A66     		str	r2, [r3, #100]
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1384              		.loc 1 849 0
 1385 006c 0020     		movs	r0, #0
 1386 006e 24E0     		b	.L122
 1387              	.L140:
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress  = 0;
 1388              		.loc 1 878 0
 1389 0070 0020     		movs	r0, #0
 1390 0072 D865     		str	r0, [r3, #92]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 0;
 1391              		.loc 1 879 0
 1392 0074 1866     		str	r0, [r3, #96]
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1393              		.loc 1 880 0
 1394 0076 5866     		str	r0, [r3, #100]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1395              		.loc 1 882 0
ARM GAS  /tmp/ccDcfjiT.s 			page 63


 1396 0078 1A68     		ldr	r2, [r3]
 1397 007a 5062     		str	r0, [r2, #36]
 1398 007c 1DE0     		b	.L122
 1399              	.L141:
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1400              		.loc 1 889 0
 1401 007e 6269     		ldr	r2, [r4, #20]
 1402 0080 4A61     		str	r2, [r1, #20]
 1403 0082 EAE7     		b	.L125
 1404              	.LVL131:
 1405              	.L143:
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1406              		.loc 1 911 0
 1407 0084 186E     		ldr	r0, [r3, #96]
 1408 0086 A042     		cmp	r0, r4
 1409 0088 0FD0     		beq	.L142
 1410              	.L127:
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           nodeDeleted = 1;
 1411              		.loc 1 917 0
 1412 008a 6069     		ldr	r0, [r4, #20]
 1413 008c 5061     		str	r0, [r2, #20]
 1414              	.LVL132:
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1415              		.loc 1 920 0
 1416 008e 586E     		ldr	r0, [r3, #100]
 1417 0090 0138     		subs	r0, r0, #1
 1418 0092 5866     		str	r0, [r3, #100]
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle node counter */
 1419              		.loc 1 918 0
 1420 0094 0125     		movs	r5, #1
 1421              	.LVL133:
 1422              	.L123:
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1423              		.loc 1 905 0
 1424 0096 586E     		ldr	r0, [r3, #100]
 1425 0098 8842     		cmp	r0, r1
 1426 009a 08D9     		bls	.L129
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1427              		.loc 1 905 0 is_stmt 0 discriminator 1
 1428 009c 3DB9     		cbnz	r5, .L129
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(ptmpNode->CLAR == ((uint32_t)pNode))
 1429              		.loc 1 907 0 is_stmt 1
 1430 009e 0131     		adds	r1, r1, #1
 1431              	.LVL134:
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1432              		.loc 1 908 0
 1433 00a0 5069     		ldr	r0, [r2, #20]
 1434 00a2 A042     		cmp	r0, r4
 1435 00a4 EED0     		beq	.L143
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1436              		.loc 1 924 0
 1437 00a6 5269     		ldr	r2, [r2, #20]
 1438              	.LVL135:
 1439 00a8 F5E7     		b	.L123
 1440              	.L142:
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 1441              		.loc 1 914 0
ARM GAS  /tmp/ccDcfjiT.s 			page 64


 1442 00aa 1A66     		str	r2, [r3, #96]
 1443 00ac EDE7     		b	.L127
 1444              	.L129:
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1445              		.loc 1 928 0
 1446 00ae 0DB9     		cbnz	r5, .L144
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1447              		.loc 1 931 0
 1448 00b0 0120     		movs	r0, #1
 1449 00b2 02E0     		b	.L122
 1450              	.L144:
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1451              		.loc 1 849 0
 1452 00b4 0020     		movs	r0, #0
 1453 00b6 00E0     		b	.L122
 1454              	.LVL136:
 1455              	.L133:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1456              		.loc 1 868 0
 1457 00b8 0120     		movs	r0, #1
 1458              	.LVL137:
 1459              	.L122:
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1460              		.loc 1 936 0
 1461 00ba 0022     		movs	r2, #0
 1462 00bc 83F83C20 		strb	r2, [r3, #60]
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1463              		.loc 1 938 0
 1464 00c0 0122     		movs	r2, #1
 1465 00c2 83F83D20 		strb	r2, [r3, #61]
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1466              		.loc 1 940 0
 1467 00c6 09E0     		b	.L120
 1468              	.LVL138:
 1469              	.L134:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1470              		.loc 1 868 0
 1471 00c8 0120     		movs	r0, #1
 1472              	.LVL139:
 1473 00ca F6E7     		b	.L122
 1474              	.L135:
 1475 00cc 0120     		movs	r0, #1
 1476 00ce F4E7     		b	.L122
 1477              	.LVL140:
 1478              	.L121:
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1479              		.loc 1 945 0
 1480 00d0 0022     		movs	r2, #0
 1481 00d2 80F83C20 		strb	r2, [r0, #60]
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1482              		.loc 1 948 0
 1483 00d6 0220     		movs	r0, #2
 1484              	.LVL141:
 1485 00d8 00E0     		b	.L120
 1486              	.LVL142:
 1487              	.L131:
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
ARM GAS  /tmp/ccDcfjiT.s 			page 65


 1488              		.loc 1 854 0
 1489 00da 0120     		movs	r0, #1
 1490              	.LVL143:
 1491              	.L120:
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1492              		.loc 1 950 0
 1493 00dc 30BC     		pop	{r4, r5}
 1494              	.LCFI10:
 1495              		.cfi_remember_state
 1496              		.cfi_restore 5
 1497              		.cfi_restore 4
 1498              		.cfi_def_cfa_offset 0
 1499              	.LVL144:
 1500 00de 7047     		bx	lr
 1501              	.LVL145:
 1502              	.L132:
 1503              	.LCFI11:
 1504              		.cfi_restore_state
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1505              		.loc 1 858 0
 1506 00e0 0220     		movs	r0, #2
 1507              	.LVL146:
 1508 00e2 FBE7     		b	.L120
 1509              		.cfi_endproc
 1510              	.LFE148:
 1512              		.section	.text.HAL_MDMA_LinkedList_EnableCircularMode,"ax",%progbits
 1513              		.align	1
 1514              		.global	HAL_MDMA_LinkedList_EnableCircularMode
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu fpv5-d16
 1520              	HAL_MDMA_LinkedList_EnableCircularMode:
 1521              	.LFB149:
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1522              		.loc 1 959 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
 1527              	.LVL147:
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1528              		.loc 1 963 0
 1529 0000 0346     		mov	r3, r0
 1530 0002 28B3     		cbz	r0, .L148
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1531              		.loc 1 969 0
 1532 0004 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1533 0008 012A     		cmp	r2, #1
 1534 000a 23D0     		beq	.L149
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1535              		.loc 1 969 0 is_stmt 0 discriminator 2
 1536 000c 0122     		movs	r2, #1
 1537 000e 80F83C20 		strb	r2, [r0, #60]
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1538              		.loc 1 971 0 is_stmt 1 discriminator 2
 1539 0012 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
ARM GAS  /tmp/ccDcfjiT.s 			page 66


 1540 0016 D2B2     		uxtb	r2, r2
 1541 0018 012A     		cmp	r2, #1
 1542 001a 07D0     		beq	.L154
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1543              		.loc 1 960 0
 1544 001c 0020     		movs	r0, #0
 1545              	.LVL148:
 1546              	.L147:
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1547              		.loc 1 989 0
 1548 001e 0022     		movs	r2, #0
 1549 0020 83F83C20 		strb	r2, [r3, #60]
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1550              		.loc 1 991 0
 1551 0024 0122     		movs	r2, #1
 1552 0026 83F83D20 		strb	r2, [r3, #61]
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1553              		.loc 1 993 0
 1554 002a 7047     		bx	lr
 1555              	.LVL149:
 1556              	.L154:
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1557              		.loc 1 974 0
 1558 002c 0222     		movs	r2, #2
 1559 002e 80F83D20 		strb	r2, [r0, #61]
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1560              		.loc 1 977 0
 1561 0032 C26D     		ldr	r2, [r0, #92]
 1562 0034 32B1     		cbz	r2, .L151
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1563              		.loc 1 977 0 is_stmt 0 discriminator 1
 1564 0036 016E     		ldr	r1, [r0, #96]
 1565 0038 31B1     		cbz	r1, .L152
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1566              		.loc 1 977 0 discriminator 2
 1567 003a 406E     		ldr	r0, [r0, #100]
 1568              	.LVL150:
 1569 003c 30B1     		cbz	r0, .L153
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1570              		.loc 1 984 0 is_stmt 1
 1571 003e 4A61     		str	r2, [r1, #20]
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1572              		.loc 1 960 0
 1573 0040 0020     		movs	r0, #0
 1574 0042 ECE7     		b	.L147
 1575              	.LVL151:
 1576              	.L151:
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1577              		.loc 1 979 0
 1578 0044 0120     		movs	r0, #1
 1579              	.LVL152:
 1580 0046 EAE7     		b	.L147
 1581              	.LVL153:
 1582              	.L152:
 1583 0048 0120     		movs	r0, #1
 1584              	.LVL154:
 1585 004a E8E7     		b	.L147
ARM GAS  /tmp/ccDcfjiT.s 			page 67


 1586              	.L153:
 1587 004c 0120     		movs	r0, #1
 1588 004e E6E7     		b	.L147
 1589              	.LVL155:
 1590              	.L148:
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1591              		.loc 1 965 0
 1592 0050 0120     		movs	r0, #1
 1593              	.LVL156:
 1594 0052 7047     		bx	lr
 1595              	.LVL157:
 1596              	.L149:
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1597              		.loc 1 969 0
 1598 0054 0220     		movs	r0, #2
 1599              	.LVL158:
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1600              		.loc 1 994 0
 1601 0056 7047     		bx	lr
 1602              		.cfi_endproc
 1603              	.LFE149:
 1605              		.section	.text.HAL_MDMA_LinkedList_DisableCircularMode,"ax",%progbits
 1606              		.align	1
 1607              		.global	HAL_MDMA_LinkedList_DisableCircularMode
 1608              		.syntax unified
 1609              		.thumb
 1610              		.thumb_func
 1611              		.fpu fpv5-d16
 1613              	HAL_MDMA_LinkedList_DisableCircularMode:
 1614              	.LFB150:
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 1615              		.loc 1 1003 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620              	.LVL159:
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1621              		.loc 1 1007 0
 1622 0000 0346     		mov	r3, r0
 1623 0002 28B3     		cbz	r0, .L158
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1624              		.loc 1 1013 0
 1625 0004 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1626 0008 012A     		cmp	r2, #1
 1627 000a 23D0     		beq	.L159
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1628              		.loc 1 1013 0 is_stmt 0 discriminator 2
 1629 000c 0122     		movs	r2, #1
 1630 000e 80F83C20 		strb	r2, [r0, #60]
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1631              		.loc 1 1015 0 is_stmt 1 discriminator 2
 1632 0012 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1633 0016 D2B2     		uxtb	r2, r2
 1634 0018 012A     		cmp	r2, #1
 1635 001a 07D0     		beq	.L164
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 68


 1636              		.loc 1 1004 0
 1637 001c 0020     		movs	r0, #0
 1638              	.LVL160:
 1639              	.L157:
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1640              		.loc 1 1033 0
 1641 001e 0022     		movs	r2, #0
 1642 0020 83F83C20 		strb	r2, [r3, #60]
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1643              		.loc 1 1035 0
 1644 0024 0122     		movs	r2, #1
 1645 0026 83F83D20 		strb	r2, [r3, #61]
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1646              		.loc 1 1037 0
 1647 002a 7047     		bx	lr
 1648              	.LVL161:
 1649              	.L164:
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1650              		.loc 1 1018 0
 1651 002c 0222     		movs	r2, #2
 1652 002e 80F83D20 		strb	r2, [r0, #61]
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1653              		.loc 1 1021 0
 1654 0032 C26D     		ldr	r2, [r0, #92]
 1655 0034 32B1     		cbz	r2, .L161
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1656              		.loc 1 1021 0 is_stmt 0 discriminator 1
 1657 0036 026E     		ldr	r2, [r0, #96]
 1658 0038 32B1     		cbz	r2, .L162
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1659              		.loc 1 1021 0 discriminator 2
 1660 003a 416E     		ldr	r1, [r0, #100]
 1661 003c 31B1     		cbz	r1, .L163
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1662              		.loc 1 1028 0 is_stmt 1
 1663 003e 0020     		movs	r0, #0
 1664              	.LVL162:
 1665 0040 5061     		str	r0, [r2, #20]
 1666 0042 ECE7     		b	.L157
 1667              	.LVL163:
 1668              	.L161:
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1669              		.loc 1 1023 0
 1670 0044 0120     		movs	r0, #1
 1671              	.LVL164:
 1672 0046 EAE7     		b	.L157
 1673              	.LVL165:
 1674              	.L162:
 1675 0048 0120     		movs	r0, #1
 1676              	.LVL166:
 1677 004a E8E7     		b	.L157
 1678              	.LVL167:
 1679              	.L163:
 1680 004c 0120     		movs	r0, #1
 1681              	.LVL168:
 1682 004e E6E7     		b	.L157
 1683              	.LVL169:
ARM GAS  /tmp/ccDcfjiT.s 			page 69


 1684              	.L158:
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1685              		.loc 1 1009 0
 1686 0050 0120     		movs	r0, #1
 1687              	.LVL170:
 1688 0052 7047     		bx	lr
 1689              	.LVL171:
 1690              	.L159:
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1691              		.loc 1 1013 0
 1692 0054 0220     		movs	r0, #2
 1693              	.LVL172:
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1694              		.loc 1 1038 0
 1695 0056 7047     		bx	lr
 1696              		.cfi_endproc
 1697              	.LFE150:
 1699              		.section	.text.HAL_MDMA_Start,"ax",%progbits
 1700              		.align	1
 1701              		.global	HAL_MDMA_Start
 1702              		.syntax unified
 1703              		.thumb
 1704              		.thumb_func
 1705              		.fpu fpv5-d16
 1707              	HAL_MDMA_Start:
 1708              	.LFB151:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1709              		.loc 1 1074 0
 1710              		.cfi_startproc
 1711              		@ args = 4, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713              	.LVL173:
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1714              		.loc 1 1080 0
 1715 0000 0028     		cmp	r0, #0
 1716 0002 35D0     		beq	.L168
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1717              		.loc 1 1074 0
 1718 0004 30B5     		push	{r4, r5, lr}
 1719              	.LCFI12:
 1720              		.cfi_def_cfa_offset 12
 1721              		.cfi_offset 4, -12
 1722              		.cfi_offset 5, -8
 1723              		.cfi_offset 14, -4
 1724 0006 83B0     		sub	sp, sp, #12
 1725              	.LCFI13:
 1726              		.cfi_def_cfa_offset 24
 1727 0008 0446     		mov	r4, r0
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1728              		.loc 1 1086 0
 1729 000a 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 1730              	.LVL174:
 1731 000e 0128     		cmp	r0, #1
 1732 0010 30D0     		beq	.L169
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1733              		.loc 1 1086 0 is_stmt 0 discriminator 2
 1734 0012 0120     		movs	r0, #1
ARM GAS  /tmp/ccDcfjiT.s 			page 70


 1735 0014 84F83C00 		strb	r0, [r4, #60]
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1736              		.loc 1 1088 0 is_stmt 1 discriminator 2
 1737 0018 94F83D00 		ldrb	r0, [r4, #61]	@ zero_extendqisi2
 1738 001c C0B2     		uxtb	r0, r0
 1739 001e 0128     		cmp	r0, #1
 1740 0020 05D0     		beq	.L175
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1741              		.loc 1 1114 0
 1742 0022 0023     		movs	r3, #0
 1743              	.LVL175:
 1744 0024 84F83C30 		strb	r3, [r4, #60]
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1745              		.loc 1 1117 0
 1746 0028 0220     		movs	r0, #2
 1747              	.LVL176:
 1748              	.L166:
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1749              		.loc 1 1121 0
 1750 002a 03B0     		add	sp, sp, #12
 1751              	.LCFI14:
 1752              		.cfi_remember_state
 1753              		.cfi_def_cfa_offset 12
 1754              		@ sp needed
 1755 002c 30BD     		pop	{r4, r5, pc}
 1756              	.LVL177:
 1757              	.L175:
 1758              	.LCFI15:
 1759              		.cfi_restore_state
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1760              		.loc 1 1091 0
 1761 002e 0220     		movs	r0, #2
 1762 0030 84F83D00 		strb	r0, [r4, #61]
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1763              		.loc 1 1094 0
 1764 0034 0020     		movs	r0, #0
 1765 0036 A066     		str	r0, [r4, #104]
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1766              		.loc 1 1097 0
 1767 0038 2568     		ldr	r5, [r4]
 1768 003a E868     		ldr	r0, [r5, #12]
 1769 003c 20F00100 		bic	r0, r0, #1
 1770 0040 E860     		str	r0, [r5, #12]
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1771              		.loc 1 1100 0
 1772 0042 0698     		ldr	r0, [sp, #24]
 1773 0044 0090     		str	r0, [sp]
 1774 0046 2046     		mov	r0, r4
 1775 0048 FFF7FEFF 		bl	MDMA_SetConfig
 1776              	.LVL178:
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1777              		.loc 1 1103 0
 1778 004c 2268     		ldr	r2, [r4]
 1779 004e D368     		ldr	r3, [r2, #12]
 1780 0050 43F00103 		orr	r3, r3, #1
 1781 0054 D360     		str	r3, [r2, #12]
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccDcfjiT.s 			page 71


 1782              		.loc 1 1105 0
 1783 0056 6368     		ldr	r3, [r4, #4]
 1784 0058 B3F1804F 		cmp	r3, #1073741824
 1785 005c 01D0     		beq	.L176
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1786              		.loc 1 1120 0
 1787 005e 0020     		movs	r0, #0
 1788 0060 E3E7     		b	.L166
 1789              	.L176:
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1790              		.loc 1 1108 0
 1791 0062 2268     		ldr	r2, [r4]
 1792 0064 D368     		ldr	r3, [r2, #12]
 1793 0066 43F48033 		orr	r3, r3, #65536
 1794 006a D360     		str	r3, [r2, #12]
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1795              		.loc 1 1120 0
 1796 006c 0020     		movs	r0, #0
 1797 006e DCE7     		b	.L166
 1798              	.LVL179:
 1799              	.L168:
 1800              	.LCFI16:
 1801              		.cfi_def_cfa_offset 0
 1802              		.cfi_restore 4
 1803              		.cfi_restore 5
 1804              		.cfi_restore 14
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1805              		.loc 1 1082 0
 1806 0070 0120     		movs	r0, #1
 1807              	.LVL180:
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1808              		.loc 1 1121 0
 1809 0072 7047     		bx	lr
 1810              	.LVL181:
 1811              	.L169:
 1812              	.LCFI17:
 1813              		.cfi_def_cfa_offset 24
 1814              		.cfi_offset 4, -12
 1815              		.cfi_offset 5, -8
 1816              		.cfi_offset 14, -4
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1817              		.loc 1 1086 0
 1818 0074 0220     		movs	r0, #2
 1819 0076 D8E7     		b	.L166
 1820              		.cfi_endproc
 1821              	.LFE151:
 1823              		.section	.text.HAL_MDMA_Start_IT,"ax",%progbits
 1824              		.align	1
 1825              		.global	HAL_MDMA_Start_IT
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu fpv5-d16
 1831              	HAL_MDMA_Start_IT:
 1832              	.LFB152:
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1833              		.loc 1 1134 0
ARM GAS  /tmp/ccDcfjiT.s 			page 72


 1834              		.cfi_startproc
 1835              		@ args = 4, pretend = 0, frame = 0
 1836              		@ frame_needed = 0, uses_anonymous_args = 0
 1837              	.LVL182:
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1838              		.loc 1 1140 0
 1839 0000 0028     		cmp	r0, #0
 1840 0002 4FD0     		beq	.L183
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1841              		.loc 1 1134 0
 1842 0004 30B5     		push	{r4, r5, lr}
 1843              	.LCFI18:
 1844              		.cfi_def_cfa_offset 12
 1845              		.cfi_offset 4, -12
 1846              		.cfi_offset 5, -8
 1847              		.cfi_offset 14, -4
 1848 0006 83B0     		sub	sp, sp, #12
 1849              	.LCFI19:
 1850              		.cfi_def_cfa_offset 24
 1851 0008 0446     		mov	r4, r0
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1852              		.loc 1 1146 0
 1853 000a 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 1854              	.LVL183:
 1855 000e 0128     		cmp	r0, #1
 1856 0010 4AD0     		beq	.L184
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1857              		.loc 1 1146 0 is_stmt 0 discriminator 2
 1858 0012 0120     		movs	r0, #1
 1859 0014 84F83C00 		strb	r0, [r4, #60]
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1860              		.loc 1 1148 0 is_stmt 1 discriminator 2
 1861 0018 94F83D00 		ldrb	r0, [r4, #61]	@ zero_extendqisi2
 1862 001c C0B2     		uxtb	r0, r0
 1863 001e 0128     		cmp	r0, #1
 1864 0020 05D0     		beq	.L190
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1865              		.loc 1 1195 0
 1866 0022 0023     		movs	r3, #0
 1867              	.LVL184:
 1868 0024 84F83C30 		strb	r3, [r4, #60]
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1869              		.loc 1 1198 0
 1870 0028 0220     		movs	r0, #2
 1871              	.LVL185:
 1872              	.L178:
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1873              		.loc 1 1202 0
 1874 002a 03B0     		add	sp, sp, #12
 1875              	.LCFI20:
 1876              		.cfi_remember_state
 1877              		.cfi_def_cfa_offset 12
 1878              		@ sp needed
 1879 002c 30BD     		pop	{r4, r5, pc}
 1880              	.LVL186:
 1881              	.L190:
 1882              	.LCFI21:
ARM GAS  /tmp/ccDcfjiT.s 			page 73


 1883              		.cfi_restore_state
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1884              		.loc 1 1151 0
 1885 002e 0220     		movs	r0, #2
 1886 0030 84F83D00 		strb	r0, [r4, #61]
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1887              		.loc 1 1154 0
 1888 0034 0020     		movs	r0, #0
 1889 0036 A066     		str	r0, [r4, #104]
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1890              		.loc 1 1157 0
 1891 0038 2568     		ldr	r5, [r4]
 1892 003a E868     		ldr	r0, [r5, #12]
 1893 003c 20F00100 		bic	r0, r0, #1
 1894 0040 E860     		str	r0, [r5, #12]
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1895              		.loc 1 1160 0
 1896 0042 0698     		ldr	r0, [sp, #24]
 1897 0044 0090     		str	r0, [sp]
 1898 0046 2046     		mov	r0, r4
 1899 0048 FFF7FEFF 		bl	MDMA_SetConfig
 1900              	.LVL187:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1901              		.loc 1 1163 0
 1902 004c 2268     		ldr	r2, [r4]
 1903 004e D368     		ldr	r3, [r2, #12]
 1904 0050 43F00603 		orr	r3, r3, #6
 1905 0054 D360     		str	r3, [r2, #12]
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1906              		.loc 1 1165 0
 1907 0056 E36C     		ldr	r3, [r4, #76]
 1908 0058 23B1     		cbz	r3, .L180
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1909              		.loc 1 1168 0
 1910 005a 2268     		ldr	r2, [r4]
 1911 005c D368     		ldr	r3, [r2, #12]
 1912 005e 43F01003 		orr	r3, r3, #16
 1913 0062 D360     		str	r3, [r2, #12]
 1914              	.L180:
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1915              		.loc 1 1171 0
 1916 0064 236D     		ldr	r3, [r4, #80]
 1917 0066 23B1     		cbz	r3, .L181
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1918              		.loc 1 1174 0
 1919 0068 2268     		ldr	r2, [r4]
 1920 006a D368     		ldr	r3, [r2, #12]
 1921 006c 43F00803 		orr	r3, r3, #8
 1922 0070 D360     		str	r3, [r2, #12]
 1923              	.L181:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1924              		.loc 1 1177 0
 1925 0072 A36C     		ldr	r3, [r4, #72]
 1926 0074 23B1     		cbz	r3, .L182
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1927              		.loc 1 1180 0
 1928 0076 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccDcfjiT.s 			page 74


 1929 0078 D368     		ldr	r3, [r2, #12]
 1930 007a 43F02003 		orr	r3, r3, #32
 1931 007e D360     		str	r3, [r2, #12]
 1932              	.L182:
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1933              		.loc 1 1184 0
 1934 0080 2268     		ldr	r2, [r4]
 1935 0082 D368     		ldr	r3, [r2, #12]
 1936 0084 43F00103 		orr	r3, r3, #1
 1937 0088 D360     		str	r3, [r2, #12]
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1938              		.loc 1 1186 0
 1939 008a 6368     		ldr	r3, [r4, #4]
 1940 008c B3F1804F 		cmp	r3, #1073741824
 1941 0090 01D0     		beq	.L191
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1942              		.loc 1 1201 0
 1943 0092 0020     		movs	r0, #0
 1944 0094 C9E7     		b	.L178
 1945              	.L191:
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1946              		.loc 1 1189 0
 1947 0096 2268     		ldr	r2, [r4]
 1948 0098 D368     		ldr	r3, [r2, #12]
 1949 009a 43F48033 		orr	r3, r3, #65536
 1950 009e D360     		str	r3, [r2, #12]
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1951              		.loc 1 1201 0
 1952 00a0 0020     		movs	r0, #0
 1953 00a2 C2E7     		b	.L178
 1954              	.LVL188:
 1955              	.L183:
 1956              	.LCFI22:
 1957              		.cfi_def_cfa_offset 0
 1958              		.cfi_restore 4
 1959              		.cfi_restore 5
 1960              		.cfi_restore 14
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1961              		.loc 1 1142 0
 1962 00a4 0120     		movs	r0, #1
 1963              	.LVL189:
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1964              		.loc 1 1202 0
 1965 00a6 7047     		bx	lr
 1966              	.LVL190:
 1967              	.L184:
 1968              	.LCFI23:
 1969              		.cfi_def_cfa_offset 24
 1970              		.cfi_offset 4, -12
 1971              		.cfi_offset 5, -8
 1972              		.cfi_offset 14, -4
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1973              		.loc 1 1146 0
 1974 00a8 0220     		movs	r0, #2
 1975 00aa BEE7     		b	.L178
 1976              		.cfi_endproc
 1977              	.LFE152:
ARM GAS  /tmp/ccDcfjiT.s 			page 75


 1979              		.section	.text.HAL_MDMA_Abort,"ax",%progbits
 1980              		.align	1
 1981              		.global	HAL_MDMA_Abort
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu fpv5-d16
 1987              	HAL_MDMA_Abort:
 1988              	.LFB153:
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart =  HAL_GetTick();
 1989              		.loc 1 1217 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              	.LVL191:
 1994 0000 38B5     		push	{r3, r4, r5, lr}
 1995              	.LCFI24:
 1996              		.cfi_def_cfa_offset 16
 1997              		.cfi_offset 3, -16
 1998              		.cfi_offset 4, -12
 1999              		.cfi_offset 5, -8
 2000              		.cfi_offset 14, -4
 2001 0002 0446     		mov	r4, r0
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2002              		.loc 1 1218 0
 2003 0004 FFF7FEFF 		bl	HAL_GetTick
 2004              	.LVL192:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2005              		.loc 1 1221 0
 2006 0008 002C     		cmp	r4, #0
 2007 000a 35D0     		beq	.L197
 2008 000c 0546     		mov	r5, r0
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2009              		.loc 1 1226 0
 2010 000e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 2011 0012 DBB2     		uxtb	r3, r3
 2012 0014 022B     		cmp	r3, #2
 2013 0016 06D0     		beq	.L194
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2014              		.loc 1 1228 0
 2015 0018 8023     		movs	r3, #128
 2016 001a A366     		str	r3, [r4, #104]
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2017              		.loc 1 1231 0
 2018 001c 0023     		movs	r3, #0
 2019 001e 84F83C30 		strb	r3, [r4, #60]
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2020              		.loc 1 1233 0
 2021 0022 0120     		movs	r0, #1
 2022              	.LVL193:
 2023              	.L193:
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2024              		.loc 1 1273 0
 2025 0024 38BD     		pop	{r3, r4, r5, pc}
 2026              	.LVL194:
 2027              	.L194:
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccDcfjiT.s 			page 76


 2028              		.loc 1 1238 0
 2029 0026 2268     		ldr	r2, [r4]
 2030 0028 D368     		ldr	r3, [r2, #12]
 2031 002a 23F03E03 		bic	r3, r3, #62
 2032 002e D360     		str	r3, [r2, #12]
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2033              		.loc 1 1241 0
 2034 0030 2268     		ldr	r2, [r4]
 2035 0032 D368     		ldr	r3, [r2, #12]
 2036 0034 23F00103 		bic	r3, r3, #1
 2037 0038 D360     		str	r3, [r2, #12]
 2038              	.LVL195:
 2039              	.L195:
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2040              		.loc 1 1244 0
 2041 003a 2368     		ldr	r3, [r4]
 2042 003c DA68     		ldr	r2, [r3, #12]
 2043 003e 12F0010F 		tst	r2, #1
 2044 0042 10D0     		beq	.L199
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2045              		.loc 1 1247 0
 2046 0044 FFF7FEFF 		bl	HAL_GetTick
 2047              	.LVL196:
 2048 0048 401B     		subs	r0, r0, r5
 2049 004a 0528     		cmp	r0, #5
 2050 004c F5D9     		bls	.L195
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2051              		.loc 1 1250 0
 2052 004e A36E     		ldr	r3, [r4, #104]
 2053 0050 43F04003 		orr	r3, r3, #64
 2054 0054 A366     		str	r3, [r4, #104]
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2055              		.loc 1 1253 0
 2056 0056 0023     		movs	r3, #0
 2057 0058 84F83C30 		strb	r3, [r4, #60]
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2058              		.loc 1 1256 0
 2059 005c 0323     		movs	r3, #3
 2060 005e 84F83D30 		strb	r3, [r4, #61]
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2061              		.loc 1 1258 0
 2062 0062 0120     		movs	r0, #1
 2063 0064 DEE7     		b	.L193
 2064              	.L199:
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2065              		.loc 1 1263 0
 2066 0066 1F22     		movs	r2, #31
 2067 0068 5A60     		str	r2, [r3, #4]
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2068              		.loc 1 1266 0
 2069 006a 0020     		movs	r0, #0
 2070 006c 84F83C00 		strb	r0, [r4, #60]
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2071              		.loc 1 1269 0
 2072 0070 0123     		movs	r3, #1
 2073 0072 84F83D30 		strb	r3, [r4, #61]
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
ARM GAS  /tmp/ccDcfjiT.s 			page 77


 2074              		.loc 1 1272 0
 2075 0076 D5E7     		b	.L193
 2076              	.LVL197:
 2077              	.L197:
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2078              		.loc 1 1223 0
 2079 0078 0120     		movs	r0, #1
 2080              	.LVL198:
 2081 007a D3E7     		b	.L193
 2082              		.cfi_endproc
 2083              	.LFE153:
 2085              		.section	.text.HAL_MDMA_Abort_IT,"ax",%progbits
 2086              		.align	1
 2087              		.global	HAL_MDMA_Abort_IT
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2091              		.fpu fpv5-d16
 2093              	HAL_MDMA_Abort_IT:
 2094              	.LFB154:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 2095              		.loc 1 1282 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              		@ link register save eliminated.
 2100              	.LVL199:
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2101              		.loc 1 1284 0
 2102 0000 90B1     		cbz	r0, .L203
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2103              		.loc 1 1289 0
 2104 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2105 0006 DBB2     		uxtb	r3, r3
 2106 0008 022B     		cmp	r3, #2
 2107 000a 03D0     		beq	.L202
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2108              		.loc 1 1292 0
 2109 000c 8023     		movs	r3, #128
 2110 000e 8366     		str	r3, [r0, #104]
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2111              		.loc 1 1294 0
 2112 0010 0120     		movs	r0, #1
 2113              	.LVL200:
 2114 0012 7047     		bx	lr
 2115              	.LVL201:
 2116              	.L202:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2117              		.loc 1 1299 0
 2118 0014 0423     		movs	r3, #4
 2119 0016 80F83D30 		strb	r3, [r0, #61]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2120              		.loc 1 1302 0
 2121 001a 0268     		ldr	r2, [r0]
 2122 001c D368     		ldr	r3, [r2, #12]
 2123 001e 23F00103 		bic	r3, r3, #1
 2124 0022 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccDcfjiT.s 			page 78


1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2125              		.loc 1 1305 0
 2126 0024 0020     		movs	r0, #0
 2127              	.LVL202:
 2128 0026 7047     		bx	lr
 2129              	.LVL203:
 2130              	.L203:
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2131              		.loc 1 1286 0
 2132 0028 0120     		movs	r0, #1
 2133              	.LVL204:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2134              		.loc 1 1306 0
 2135 002a 7047     		bx	lr
 2136              		.cfi_endproc
 2137              	.LFE154:
 2139              		.section	.text.HAL_MDMA_PollForTransfer,"ax",%progbits
 2140              		.align	1
 2141              		.global	HAL_MDMA_PollForTransfer
 2142              		.syntax unified
 2143              		.thumb
 2144              		.thumb_func
 2145              		.fpu fpv5-d16
 2147              	HAL_MDMA_PollForTransfer:
 2148              	.LFB155:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
 2149              		.loc 1 1317 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 0
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153              	.LVL205:
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2154              		.loc 1 1325 0
 2155 0000 0028     		cmp	r0, #0
 2156 0002 00F08480 		beq	.L222
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
 2157              		.loc 1 1317 0
 2158 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2159              	.LCFI25:
 2160              		.cfi_def_cfa_offset 24
 2161              		.cfi_offset 4, -24
 2162              		.cfi_offset 5, -20
 2163              		.cfi_offset 6, -16
 2164              		.cfi_offset 7, -12
 2165              		.cfi_offset 8, -8
 2166              		.cfi_offset 14, -4
 2167 000a 0446     		mov	r4, r0
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2168              		.loc 1 1330 0
 2169 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2170 0010 DBB2     		uxtb	r3, r3
 2171 0012 022B     		cmp	r3, #2
 2172 0014 04D0     		beq	.L206
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2173              		.loc 1 1333 0
 2174 0016 8023     		movs	r3, #128
 2175 0018 8366     		str	r3, [r0, #104]
ARM GAS  /tmp/ccDcfjiT.s 			page 79


1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2176              		.loc 1 1335 0
 2177 001a 0120     		movs	r0, #1
 2178              	.LVL206:
 2179              	.L205:
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2180              		.loc 1 1455 0
 2181 001c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2182              	.LVL207:
 2183              	.L206:
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2184              		.loc 1 1339 0
 2185 0020 39B1     		cbz	r1, .L223
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
 2186              		.loc 1 1340 0
 2187 0022 0129     		cmp	r1, #1
 2188 0024 27D0     		beq	.L224
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                MDMA_FLAG_BRT);
 2189              		.loc 1 1341 0
 2190 0026 0229     		cmp	r1, #2
 2191 0028 01D0     		beq	.L231
 2192 002a 0426     		movs	r6, #4
 2193 002c 02E0     		b	.L207
 2194              	.L231:
 2195 002e 0826     		movs	r6, #8
 2196 0030 00E0     		b	.L207
 2197              	.L223:
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2198              		.loc 1 1339 0
 2199 0032 0226     		movs	r6, #2
 2200              	.L207:
 2201 0034 1546     		mov	r5, r2
 2202 0036 0F46     		mov	r7, r1
 2203              	.LVL208:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2204              		.loc 1 1346 0 discriminator 3
 2205 0038 FFF7FEFF 		bl	HAL_GetTick
 2206              	.LVL209:
 2207 003c 8046     		mov	r8, r0
 2208              	.LVL210:
 2209              	.L216:
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2210              		.loc 1 1348 0
 2211 003e 2368     		ldr	r3, [r4]
 2212 0040 1868     		ldr	r0, [r3]
 2213 0042 3042     		tst	r0, r6
 2214 0044 47D1     		bne	.L232
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2215              		.loc 1 1350 0
 2216 0046 1868     		ldr	r0, [r3]
 2217 0048 10F0010F 		tst	r0, #1
 2218 004c 15D1     		bne	.L233
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2219              		.loc 1 1404 0
 2220 004e B5F1FF3F 		cmp	r5, #-1
 2221 0052 F4D0     		beq	.L216
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
ARM GAS  /tmp/ccDcfjiT.s 			page 80


 2222              		.loc 1 1406 0
 2223 0054 FFF7FEFF 		bl	HAL_GetTick
 2224              	.LVL211:
 2225 0058 A0EB0800 		sub	r0, r0, r8
 2226 005c A842     		cmp	r0, r5
 2227 005e 01D8     		bhi	.L217
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2228              		.loc 1 1406 0 is_stmt 0 discriminator 1
 2229 0060 002D     		cmp	r5, #0
 2230 0062 ECD1     		bne	.L216
 2231              	.L217:
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2232              		.loc 1 1409 0 is_stmt 1
 2233 0064 A36E     		ldr	r3, [r4, #104]
 2234 0066 43F04003 		orr	r3, r3, #64
 2235 006a A366     		str	r3, [r4, #104]
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2236              		.loc 1 1411 0
 2237 006c 2046     		mov	r0, r4
 2238 006e FFF7FEFF 		bl	HAL_MDMA_Abort
 2239              	.LVL212:
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2240              		.loc 1 1420 0
 2241 0072 0120     		movs	r0, #1
 2242 0074 D2E7     		b	.L205
 2243              	.LVL213:
 2244              	.L224:
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
 2245              		.loc 1 1340 0
 2246 0076 1026     		movs	r6, #16
 2247 0078 DCE7     		b	.L207
 2248              	.LVL214:
 2249              	.L233:
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2250              		.loc 1 1353 0
 2251 007a 9B68     		ldr	r3, [r3, #8]
 2252              	.LVL215:
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2253              		.loc 1 1355 0
 2254 007c 13F0800F 		tst	r3, #128
 2255 0080 24D1     		bne	.L210
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2256              		.loc 1 1358 0
 2257 0082 A26E     		ldr	r2, [r4, #104]
 2258 0084 42F00102 		orr	r2, r2, #1
 2259 0088 A266     		str	r2, [r4, #104]
 2260              	.L211:
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2261              		.loc 1 1366 0
 2262 008a 13F4007F 		tst	r3, #512
 2263 008e 03D0     		beq	.L212
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2264              		.loc 1 1369 0
 2265 0090 A26E     		ldr	r2, [r4, #104]
 2266 0092 42F00402 		orr	r2, r2, #4
 2267 0096 A266     		str	r2, [r4, #104]
 2268              	.L212:
ARM GAS  /tmp/ccDcfjiT.s 			page 81


1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2269              		.loc 1 1372 0
 2270 0098 13F4807F 		tst	r3, #256
 2271 009c 03D0     		beq	.L213
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2272              		.loc 1 1375 0
 2273 009e A26E     		ldr	r2, [r4, #104]
 2274 00a0 42F00802 		orr	r2, r2, #8
 2275 00a4 A266     		str	r2, [r4, #104]
 2276              	.L213:
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2277              		.loc 1 1378 0
 2278 00a6 13F4806F 		tst	r3, #1024
 2279 00aa 03D0     		beq	.L214
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2280              		.loc 1 1381 0
 2281 00ac A26E     		ldr	r2, [r4, #104]
 2282 00ae 42F01002 		orr	r2, r2, #16
 2283 00b2 A266     		str	r2, [r4, #104]
 2284              	.L214:
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2285              		.loc 1 1384 0
 2286 00b4 13F4006F 		tst	r3, #2048
 2287 00b8 03D0     		beq	.L215
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2288              		.loc 1 1387 0
 2289 00ba A36E     		ldr	r3, [r4, #104]
 2290              	.LVL216:
 2291 00bc 43F02003 		orr	r3, r3, #32
 2292 00c0 A366     		str	r3, [r4, #104]
 2293              	.L215:
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2294              		.loc 1 1390 0
 2295 00c2 2046     		mov	r0, r4
 2296 00c4 FFF7FEFF 		bl	HAL_MDMA_Abort
 2297              	.LVL217:
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2298              		.loc 1 1399 0
 2299 00c8 0120     		movs	r0, #1
 2300 00ca A7E7     		b	.L205
 2301              	.LVL218:
 2302              	.L210:
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2303              		.loc 1 1363 0
 2304 00cc A26E     		ldr	r2, [r4, #104]
 2305 00ce 42F00202 		orr	r2, r2, #2
 2306 00d2 A266     		str	r2, [r4, #104]
 2307 00d4 D9E7     		b	.L211
 2308              	.LVL219:
 2309              	.L232:
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2310              		.loc 1 1426 0
 2311 00d6 012F     		cmp	r7, #1
 2312 00d8 0DD0     		beq	.L234
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2313              		.loc 1 1431 0
 2314 00da 022F     		cmp	r7, #2
ARM GAS  /tmp/ccDcfjiT.s 			page 82


 2315 00dc 0FD0     		beq	.L235
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2316              		.loc 1 1436 0
 2317 00de 032F     		cmp	r7, #3
 2318 00e0 11D0     		beq	.L236
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2319              		.loc 1 1440 0
 2320 00e2 B7B9     		cbnz	r7, .L226
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2321              		.loc 1 1442 0
 2322 00e4 1E22     		movs	r2, #30
 2323 00e6 5A60     		str	r2, [r3, #4]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2324              		.loc 1 1445 0
 2325 00e8 0020     		movs	r0, #0
 2326 00ea 84F83C00 		strb	r0, [r4, #60]
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2327              		.loc 1 1447 0
 2328 00ee 0123     		movs	r3, #1
 2329 00f0 84F83D30 		strb	r3, [r4, #61]
 2330 00f4 92E7     		b	.L205
 2331              	.L234:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2332              		.loc 1 1428 0
 2333 00f6 1022     		movs	r2, #16
 2334 00f8 5A60     		str	r2, [r3, #4]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2335              		.loc 1 1454 0
 2336 00fa 0020     		movs	r0, #0
 2337 00fc 8EE7     		b	.L205
 2338              	.L235:
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2339              		.loc 1 1433 0
 2340 00fe 1822     		movs	r2, #24
 2341 0100 5A60     		str	r2, [r3, #4]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2342              		.loc 1 1454 0
 2343 0102 0020     		movs	r0, #0
 2344 0104 8AE7     		b	.L205
 2345              	.L236:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2346              		.loc 1 1438 0
 2347 0106 1C22     		movs	r2, #28
 2348 0108 5A60     		str	r2, [r3, #4]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2349              		.loc 1 1454 0
 2350 010a 0020     		movs	r0, #0
 2351 010c 86E7     		b	.L205
 2352              	.LVL220:
 2353              	.L222:
 2354              	.LCFI26:
 2355              		.cfi_def_cfa_offset 0
 2356              		.cfi_restore 4
 2357              		.cfi_restore 5
 2358              		.cfi_restore 6
 2359              		.cfi_restore 7
 2360              		.cfi_restore 8
ARM GAS  /tmp/ccDcfjiT.s 			page 83


 2361              		.cfi_restore 14
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2362              		.loc 1 1327 0
 2363 010e 0120     		movs	r0, #1
 2364              	.LVL221:
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2365              		.loc 1 1455 0
 2366 0110 7047     		bx	lr
 2367              	.LVL222:
 2368              	.L226:
 2369              	.LCFI27:
 2370              		.cfi_def_cfa_offset 24
 2371              		.cfi_offset 4, -24
 2372              		.cfi_offset 5, -20
 2373              		.cfi_offset 6, -16
 2374              		.cfi_offset 7, -12
 2375              		.cfi_offset 8, -8
 2376              		.cfi_offset 14, -4
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2377              		.loc 1 1451 0
 2378 0112 0120     		movs	r0, #1
 2379 0114 82E7     		b	.L205
 2380              		.cfi_endproc
 2381              	.LFE155:
 2383              		.section	.text.HAL_MDMA_GenerateSWRequest,"ax",%progbits
 2384              		.align	1
 2385              		.global	HAL_MDMA_GenerateSWRequest
 2386              		.syntax unified
 2387              		.thumb
 2388              		.thumb_func
 2389              		.fpu fpv5-d16
 2391              	HAL_MDMA_GenerateSWRequest:
 2392              	.LFB156:
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t request_mode;
 2393              		.loc 1 1464 0
 2394              		.cfi_startproc
 2395              		@ args = 0, pretend = 0, frame = 0
 2396              		@ frame_needed = 0, uses_anonymous_args = 0
 2397              		@ link register save eliminated.
 2398              	.LVL223:
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2399              		.loc 1 1468 0
 2400 0000 0146     		mov	r1, r0
 2401 0002 D8B1     		cbz	r0, .L242
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2402              		.loc 1 1474 0
 2403 0004 0368     		ldr	r3, [r0]
 2404 0006 1A69     		ldr	r2, [r3, #16]
 2405 0008 02F08042 		and	r2, r2, #1073741824
 2406              	.LVL224:
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2407              		.loc 1 1476 0
 2408 000c D868     		ldr	r0, [r3, #12]
 2409              	.LVL225:
 2410 000e 10F0010F 		tst	r0, #1
 2411 0012 0AD0     		beq	.L243
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 84


 2412              		.loc 1 1483 0
 2413 0014 1868     		ldr	r0, [r3]
 2414 0016 10F4803F 		tst	r0, #65536
 2415 001a 0AD1     		bne	.L240
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2416              		.loc 1 1483 0 is_stmt 0 discriminator 1
 2417 001c 4AB1     		cbz	r2, .L240
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2418              		.loc 1 1493 0 is_stmt 1
 2419 001e DA68     		ldr	r2, [r3, #12]
 2420              	.LVL226:
 2421 0020 42F48032 		orr	r2, r2, #65536
 2422 0024 DA60     		str	r2, [r3, #12]
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2423              		.loc 1 1495 0
 2424 0026 0020     		movs	r0, #0
 2425 0028 7047     		bx	lr
 2426              	.LVL227:
 2427              	.L243:
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2428              		.loc 1 1479 0
 2429 002a 8023     		movs	r3, #128
 2430 002c 8B66     		str	r3, [r1, #104]
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2431              		.loc 1 1481 0
 2432 002e 0120     		movs	r0, #1
 2433 0030 7047     		bx	lr
 2434              	.L240:
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2435              		.loc 1 1486 0
 2436 0032 4FF48073 		mov	r3, #256
 2437 0036 8B66     		str	r3, [r1, #104]
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2438              		.loc 1 1488 0
 2439 0038 0120     		movs	r0, #1
 2440 003a 7047     		bx	lr
 2441              	.LVL228:
 2442              	.L242:
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2443              		.loc 1 1470 0
 2444 003c 0120     		movs	r0, #1
 2445              	.LVL229:
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2446              		.loc 1 1497 0
 2447 003e 7047     		bx	lr
 2448              		.cfi_endproc
 2449              	.LFE156:
 2451              		.section	.text.HAL_MDMA_IRQHandler,"ax",%progbits
 2452              		.align	1
 2453              		.global	HAL_MDMA_IRQHandler
 2454              		.syntax unified
 2455              		.thumb
 2456              		.thumb_func
 2457              		.fpu fpv5-d16
 2459              	HAL_MDMA_IRQHandler:
 2460              	.LFB157:
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __IO uint32_t count = 0;
ARM GAS  /tmp/ccDcfjiT.s 			page 85


 2461              		.loc 1 1506 0
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 8
 2464              		@ frame_needed = 0, uses_anonymous_args = 0
 2465              	.LVL230:
 2466 0000 30B5     		push	{r4, r5, lr}
 2467              	.LCFI28:
 2468              		.cfi_def_cfa_offset 12
 2469              		.cfi_offset 4, -12
 2470              		.cfi_offset 5, -8
 2471              		.cfi_offset 14, -4
 2472 0002 83B0     		sub	sp, sp, #12
 2473              	.LCFI29:
 2474              		.cfi_def_cfa_offset 24
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 2475              		.loc 1 1507 0
 2476 0004 0023     		movs	r3, #0
 2477 0006 0193     		str	r3, [sp, #4]
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2478              		.loc 1 1508 0
 2479 0008 664B     		ldr	r3, .L264
 2480 000a 1D68     		ldr	r5, [r3]
 2481 000c 664B     		ldr	r3, .L264+4
 2482 000e A3FB0535 		umull	r3, r5, r3, r5
 2483              	.LVL231:
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((MDMA->GISR0 & generalIntFlag) == 0U)
 2484              		.loc 1 1513 0
 2485 0012 0168     		ldr	r1, [r0]
 2486 0014 654B     		ldr	r3, .L264+8
 2487 0016 0B44     		add	r3, r3, r1
 2488 0018 C3F38413 		ubfx	r3, r3, #6, #5
 2489 001c 0122     		movs	r2, #1
 2490 001e 02FA03F3 		lsl	r3, r2, r3
 2491              	.LVL232:
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2492              		.loc 1 1514 0
 2493 0022 4FF0A442 		mov	r2, #1375731712
 2494 0026 1268     		ldr	r2, [r2]
 2495 0028 1A42     		tst	r2, r3
 2496 002a 00F0A480 		beq	.L244
 2497 002e AD0A     		lsrs	r5, r5, #10
 2498              	.LVL233:
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2499              		.loc 1 1520 0
 2500 0030 0B68     		ldr	r3, [r1]
 2501              	.LVL234:
 2502 0032 13F0010F 		tst	r3, #1
 2503 0036 2FD0     		beq	.L246
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2504              		.loc 1 1522 0
 2505 0038 CB68     		ldr	r3, [r1, #12]
 2506 003a 13F0020F 		tst	r3, #2
 2507 003e 2BD0     		beq	.L246
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2508              		.loc 1 1525 0
 2509 0040 CB68     		ldr	r3, [r1, #12]
 2510 0042 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccDcfjiT.s 			page 86


 2511 0046 CB60     		str	r3, [r1, #12]
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2512              		.loc 1 1528 0
 2513 0048 0268     		ldr	r2, [r0]
 2514 004a 9368     		ldr	r3, [r2, #8]
 2515              	.LVL235:
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2516              		.loc 1 1530 0
 2517 004c 13F0800F 		tst	r3, #128
 2518 0050 40F09380 		bne	.L247
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2519              		.loc 1 1533 0
 2520 0054 816E     		ldr	r1, [r0, #104]
 2521              	.LVL236:
 2522 0056 41F00101 		orr	r1, r1, #1
 2523 005a 8166     		str	r1, [r0, #104]
 2524              	.L248:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2525              		.loc 1 1541 0
 2526 005c 13F4007F 		tst	r3, #512
 2527 0060 03D0     		beq	.L249
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2528              		.loc 1 1544 0
 2529 0062 816E     		ldr	r1, [r0, #104]
 2530 0064 41F00401 		orr	r1, r1, #4
 2531 0068 8166     		str	r1, [r0, #104]
 2532              	.L249:
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2533              		.loc 1 1547 0
 2534 006a 13F4807F 		tst	r3, #256
 2535 006e 03D0     		beq	.L250
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2536              		.loc 1 1550 0
 2537 0070 816E     		ldr	r1, [r0, #104]
 2538 0072 41F00801 		orr	r1, r1, #8
 2539 0076 8166     		str	r1, [r0, #104]
 2540              	.L250:
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2541              		.loc 1 1553 0
 2542 0078 13F4806F 		tst	r3, #1024
 2543 007c 03D0     		beq	.L251
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2544              		.loc 1 1556 0
 2545 007e 816E     		ldr	r1, [r0, #104]
 2546 0080 41F01001 		orr	r1, r1, #16
 2547 0084 8166     		str	r1, [r0, #104]
 2548              	.L251:
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2549              		.loc 1 1559 0
 2550 0086 13F4006F 		tst	r3, #2048
 2551 008a 03D0     		beq	.L252
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2552              		.loc 1 1562 0
 2553 008c 836E     		ldr	r3, [r0, #104]
 2554              	.LVL237:
 2555 008e 43F02003 		orr	r3, r3, #32
 2556 0092 8366     		str	r3, [r0, #104]
ARM GAS  /tmp/ccDcfjiT.s 			page 87


 2557              	.L252:
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2558              		.loc 1 1566 0
 2559 0094 0123     		movs	r3, #1
 2560 0096 5360     		str	r3, [r2, #4]
 2561              	.L246:
 2562 0098 0446     		mov	r4, r0
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2563              		.loc 1 1571 0
 2564 009a 0368     		ldr	r3, [r0]
 2565 009c 1A68     		ldr	r2, [r3]
 2566 009e 12F0100F 		tst	r2, #16
 2567 00a2 08D0     		beq	.L253
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2568              		.loc 1 1573 0
 2569 00a4 DA68     		ldr	r2, [r3, #12]
 2570 00a6 12F0200F 		tst	r2, #32
 2571 00aa 04D0     		beq	.L253
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2572              		.loc 1 1576 0
 2573 00ac 1022     		movs	r2, #16
 2574 00ae 5A60     		str	r2, [r3, #4]
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2575              		.loc 1 1578 0
 2576 00b0 836C     		ldr	r3, [r0, #72]
 2577 00b2 03B1     		cbz	r3, .L253
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2578              		.loc 1 1581 0
 2579 00b4 9847     		blx	r3
 2580              	.LVL238:
 2581              	.L253:
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2582              		.loc 1 1587 0
 2583 00b6 2368     		ldr	r3, [r4]
 2584 00b8 1A68     		ldr	r2, [r3]
 2585 00ba 12F0080F 		tst	r2, #8
 2586 00be 09D0     		beq	.L254
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2587              		.loc 1 1589 0
 2588 00c0 DA68     		ldr	r2, [r3, #12]
 2589 00c2 12F0100F 		tst	r2, #16
 2590 00c6 05D0     		beq	.L254
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2591              		.loc 1 1592 0
 2592 00c8 0822     		movs	r2, #8
 2593 00ca 5A60     		str	r2, [r3, #4]
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2594              		.loc 1 1594 0
 2595 00cc E36C     		ldr	r3, [r4, #76]
 2596 00ce 0BB1     		cbz	r3, .L254
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2597              		.loc 1 1597 0
 2598 00d0 2046     		mov	r0, r4
 2599 00d2 9847     		blx	r3
 2600              	.LVL239:
 2601              	.L254:
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccDcfjiT.s 			page 88


 2602              		.loc 1 1603 0
 2603 00d4 2368     		ldr	r3, [r4]
 2604 00d6 1A68     		ldr	r2, [r3]
 2605 00d8 12F0040F 		tst	r2, #4
 2606 00dc 09D0     		beq	.L255
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2607              		.loc 1 1605 0
 2608 00de DA68     		ldr	r2, [r3, #12]
 2609 00e0 12F0080F 		tst	r2, #8
 2610 00e4 05D0     		beq	.L255
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2611              		.loc 1 1608 0
 2612 00e6 0422     		movs	r2, #4
 2613 00e8 5A60     		str	r2, [r3, #4]
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2614              		.loc 1 1610 0
 2615 00ea 236D     		ldr	r3, [r4, #80]
 2616 00ec 0BB1     		cbz	r3, .L255
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2617              		.loc 1 1613 0
 2618 00ee 2046     		mov	r0, r4
 2619 00f0 9847     		blx	r3
 2620              	.LVL240:
 2621              	.L255:
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2622              		.loc 1 1619 0
 2623 00f2 2368     		ldr	r3, [r4]
 2624 00f4 1A68     		ldr	r2, [r3]
 2625 00f6 12F0020F 		tst	r2, #2
 2626 00fa 19D0     		beq	.L256
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2627              		.loc 1 1621 0
 2628 00fc DA68     		ldr	r2, [r3, #12]
 2629 00fe 12F0040F 		tst	r2, #4
 2630 0102 15D0     		beq	.L256
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2631              		.loc 1 1624 0
 2632 0104 DA68     		ldr	r2, [r3, #12]
 2633 0106 22F03E02 		bic	r2, r2, #62
 2634 010a DA60     		str	r2, [r3, #12]
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2635              		.loc 1 1626 0
 2636 010c 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 2637 0110 DBB2     		uxtb	r3, r3
 2638 0112 042B     		cmp	r3, #4
 2639 0114 36D0     		beq	.L263
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2640              		.loc 1 1642 0
 2641 0116 2368     		ldr	r3, [r4]
 2642 0118 0222     		movs	r2, #2
 2643 011a 5A60     		str	r2, [r3, #4]
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2644              		.loc 1 1645 0
 2645 011c 0023     		movs	r3, #0
 2646 011e 84F83C30 		strb	r3, [r4, #60]
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2647              		.loc 1 1648 0
ARM GAS  /tmp/ccDcfjiT.s 			page 89


 2648 0122 0123     		movs	r3, #1
 2649 0124 84F83D30 		strb	r3, [r4, #61]
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2650              		.loc 1 1650 0
 2651 0128 636C     		ldr	r3, [r4, #68]
 2652 012a 0BB1     		cbz	r3, .L256
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2653              		.loc 1 1653 0
 2654 012c 2046     		mov	r0, r4
 2655 012e 9847     		blx	r3
 2656              	.LVL241:
 2657              	.L256:
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2658              		.loc 1 1659 0
 2659 0130 A36E     		ldr	r3, [r4, #104]
 2660 0132 03B3     		cbz	r3, .L244
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2661              		.loc 1 1661 0
 2662 0134 0423     		movs	r3, #4
 2663 0136 84F83D30 		strb	r3, [r4, #61]
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2664              		.loc 1 1664 0
 2665 013a 2268     		ldr	r2, [r4]
 2666 013c D368     		ldr	r3, [r2, #12]
 2667 013e 23F00103 		bic	r3, r3, #1
 2668 0142 D360     		str	r3, [r2, #12]
 2669              	.L259:
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2670              		.loc 1 1668 0
 2671 0144 019B     		ldr	r3, [sp, #4]
 2672 0146 0133     		adds	r3, r3, #1
 2673 0148 0193     		str	r3, [sp, #4]
 2674 014a AB42     		cmp	r3, r5
 2675 014c 04D8     		bhi	.L258
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2676              		.loc 1 1673 0
 2677 014e 2368     		ldr	r3, [r4]
 2678 0150 DB68     		ldr	r3, [r3, #12]
 2679 0152 13F0010F 		tst	r3, #1
 2680 0156 F5D1     		bne	.L259
 2681              	.L258:
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2682              		.loc 1 1676 0
 2683 0158 0023     		movs	r3, #0
 2684 015a 84F83C30 		strb	r3, [r4, #60]
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2685              		.loc 1 1678 0
 2686 015e 2368     		ldr	r3, [r4]
 2687 0160 DB68     		ldr	r3, [r3, #12]
 2688 0162 13F0010F 		tst	r3, #1
 2689 0166 19D0     		beq	.L260
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2690              		.loc 1 1681 0
 2691 0168 0323     		movs	r3, #3
 2692 016a 84F83D30 		strb	r3, [r4, #61]
 2693              	.L261:
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccDcfjiT.s 			page 90


 2694              		.loc 1 1690 0
 2695 016e 636D     		ldr	r3, [r4, #84]
 2696 0170 0BB1     		cbz	r3, .L244
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2697              		.loc 1 1693 0
 2698 0172 2046     		mov	r0, r4
 2699 0174 9847     		blx	r3
 2700              	.LVL242:
 2701              	.L244:
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2702              		.loc 1 1696 0
 2703 0176 03B0     		add	sp, sp, #12
 2704              	.LCFI30:
 2705              		.cfi_remember_state
 2706              		.cfi_def_cfa_offset 12
 2707              		@ sp needed
 2708 0178 30BD     		pop	{r4, r5, pc}
 2709              	.LVL243:
 2710              	.L247:
 2711              	.LCFI31:
 2712              		.cfi_restore_state
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2713              		.loc 1 1538 0
 2714 017a 816E     		ldr	r1, [r0, #104]
 2715              	.LVL244:
 2716 017c 41F00201 		orr	r1, r1, #2
 2717 0180 8166     		str	r1, [r0, #104]
 2718 0182 6BE7     		b	.L248
 2719              	.LVL245:
 2720              	.L263:
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2721              		.loc 1 1629 0
 2722 0184 0023     		movs	r3, #0
 2723 0186 84F83C30 		strb	r3, [r4, #60]
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2724              		.loc 1 1632 0
 2725 018a 0123     		movs	r3, #1
 2726 018c 84F83D30 		strb	r3, [r4, #61]
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 2727              		.loc 1 1634 0
 2728 0190 A36D     		ldr	r3, [r4, #88]
 2729 0192 002B     		cmp	r3, #0
 2730 0194 EFD0     		beq	.L244
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 2731              		.loc 1 1636 0
 2732 0196 2046     		mov	r0, r4
 2733 0198 9847     		blx	r3
 2734              	.LVL246:
 2735 019a ECE7     		b	.L244
 2736              	.L260:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2737              		.loc 1 1686 0
 2738 019c 0123     		movs	r3, #1
 2739 019e 84F83D30 		strb	r3, [r4, #61]
 2740 01a2 E4E7     		b	.L261
 2741              	.L265:
 2742              		.align	2
ARM GAS  /tmp/ccDcfjiT.s 			page 91


 2743              	.L264:
 2744 01a4 00000000 		.word	SystemCoreClock
 2745 01a8 B5814E1B 		.word	458129845
 2746 01ac C0FFFFAD 		.word	-1375731776
 2747              		.cfi_endproc
 2748              	.LFE157:
 2750              		.section	.text.HAL_MDMA_GetState,"ax",%progbits
 2751              		.align	1
 2752              		.global	HAL_MDMA_GetState
 2753              		.syntax unified
 2754              		.thumb
 2755              		.thumb_func
 2756              		.fpu fpv5-d16
 2758              	HAL_MDMA_GetState:
 2759              	.LFB158:
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->State;
 2760              		.loc 1 1724 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 0
 2763              		@ frame_needed = 0, uses_anonymous_args = 0
 2764              		@ link register save eliminated.
 2765              	.LVL247:
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2766              		.loc 1 1725 0
 2767 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2768              	.LVL248:
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2769              		.loc 1 1726 0
 2770 0004 7047     		bx	lr
 2771              		.cfi_endproc
 2772              	.LFE158:
 2774              		.section	.text.HAL_MDMA_GetError,"ax",%progbits
 2775              		.align	1
 2776              		.global	HAL_MDMA_GetError
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2780              		.fpu fpv5-d16
 2782              	HAL_MDMA_GetError:
 2783              	.LFB159:
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->ErrorCode;
 2784              		.loc 1 1735 0
 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 0
 2787              		@ frame_needed = 0, uses_anonymous_args = 0
 2788              		@ link register save eliminated.
 2789              	.LVL249:
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2790              		.loc 1 1736 0
 2791 0000 806E     		ldr	r0, [r0, #104]
 2792              	.LVL250:
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2793              		.loc 1 1737 0
 2794 0002 7047     		bx	lr
 2795              		.cfi_endproc
 2796              	.LFE159:
 2798              		.text
ARM GAS  /tmp/ccDcfjiT.s 			page 92


 2799              	.Letext0:
 2800              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2801              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2802              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2803              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2804              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 2805              		.file 7 "/usr/include/newlib/sys/lock.h"
 2806              		.file 8 "/usr/include/newlib/sys/_types.h"
 2807              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2808              		.file 10 "/usr/include/newlib/sys/reent.h"
 2809              		.file 11 "/usr/include/newlib/math.h"
 2810              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2811              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 2812              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2813              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccDcfjiT.s 			page 93


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_mdma.c
     /tmp/ccDcfjiT.s:17     .text.MDMA_SetConfig:0000000000000000 $t
     /tmp/ccDcfjiT.s:23     .text.MDMA_SetConfig:0000000000000000 MDMA_SetConfig
     /tmp/ccDcfjiT.s:134    .text.MDMA_SetConfig:0000000000000084 $d
     /tmp/ccDcfjiT.s:139    .text.MDMA_Init:0000000000000000 $t
     /tmp/ccDcfjiT.s:145    .text.MDMA_Init:0000000000000000 MDMA_Init
     /tmp/ccDcfjiT.s:288    .text.HAL_MDMA_Init:0000000000000000 $t
     /tmp/ccDcfjiT.s:295    .text.HAL_MDMA_Init:0000000000000000 HAL_MDMA_Init
     /tmp/ccDcfjiT.s:380    .text.HAL_MDMA_DeInit:0000000000000000 $t
     /tmp/ccDcfjiT.s:387    .text.HAL_MDMA_DeInit:0000000000000000 HAL_MDMA_DeInit
     /tmp/ccDcfjiT.s:465    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 $t
     /tmp/ccDcfjiT.s:472    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 HAL_MDMA_ConfigPostRequestMask
     /tmp/ccDcfjiT.s:578    .text.HAL_MDMA_RegisterCallback:0000000000000000 $t
     /tmp/ccDcfjiT.s:585    .text.HAL_MDMA_RegisterCallback:0000000000000000 HAL_MDMA_RegisterCallback
     /tmp/ccDcfjiT.s:626    .text.HAL_MDMA_RegisterCallback:000000000000002e $d
     /tmp/ccDcfjiT.s:632    .text.HAL_MDMA_RegisterCallback:0000000000000034 $t
     /tmp/ccDcfjiT.s:694    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccDcfjiT.s:701    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 HAL_MDMA_UnRegisterCallback
     /tmp/ccDcfjiT.s:741    .text.HAL_MDMA_UnRegisterCallback:0000000000000030 $d
     /tmp/ccDcfjiT.s:837    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 $t
     /tmp/ccDcfjiT.s:844    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 HAL_MDMA_LinkedList_CreateNode
     /tmp/ccDcfjiT.s:1059   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 $t
     /tmp/ccDcfjiT.s:1066   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 HAL_MDMA_LinkedList_AddNode
     /tmp/ccDcfjiT.s:1296   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 $t
     /tmp/ccDcfjiT.s:1303   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 HAL_MDMA_LinkedList_RemoveNode
     /tmp/ccDcfjiT.s:1513   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 $t
     /tmp/ccDcfjiT.s:1520   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 HAL_MDMA_LinkedList_EnableCircularMode
     /tmp/ccDcfjiT.s:1606   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 $t
     /tmp/ccDcfjiT.s:1613   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 HAL_MDMA_LinkedList_DisableCircularMode
     /tmp/ccDcfjiT.s:1700   .text.HAL_MDMA_Start:0000000000000000 $t
     /tmp/ccDcfjiT.s:1707   .text.HAL_MDMA_Start:0000000000000000 HAL_MDMA_Start
     /tmp/ccDcfjiT.s:1824   .text.HAL_MDMA_Start_IT:0000000000000000 $t
     /tmp/ccDcfjiT.s:1831   .text.HAL_MDMA_Start_IT:0000000000000000 HAL_MDMA_Start_IT
     /tmp/ccDcfjiT.s:1980   .text.HAL_MDMA_Abort:0000000000000000 $t
     /tmp/ccDcfjiT.s:1987   .text.HAL_MDMA_Abort:0000000000000000 HAL_MDMA_Abort
     /tmp/ccDcfjiT.s:2086   .text.HAL_MDMA_Abort_IT:0000000000000000 $t
     /tmp/ccDcfjiT.s:2093   .text.HAL_MDMA_Abort_IT:0000000000000000 HAL_MDMA_Abort_IT
     /tmp/ccDcfjiT.s:2140   .text.HAL_MDMA_PollForTransfer:0000000000000000 $t
     /tmp/ccDcfjiT.s:2147   .text.HAL_MDMA_PollForTransfer:0000000000000000 HAL_MDMA_PollForTransfer
     /tmp/ccDcfjiT.s:2384   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 $t
     /tmp/ccDcfjiT.s:2391   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 HAL_MDMA_GenerateSWRequest
     /tmp/ccDcfjiT.s:2452   .text.HAL_MDMA_IRQHandler:0000000000000000 $t
     /tmp/ccDcfjiT.s:2459   .text.HAL_MDMA_IRQHandler:0000000000000000 HAL_MDMA_IRQHandler
     /tmp/ccDcfjiT.s:2744   .text.HAL_MDMA_IRQHandler:00000000000001a4 $d
     /tmp/ccDcfjiT.s:2751   .text.HAL_MDMA_GetState:0000000000000000 $t
     /tmp/ccDcfjiT.s:2758   .text.HAL_MDMA_GetState:0000000000000000 HAL_MDMA_GetState
     /tmp/ccDcfjiT.s:2775   .text.HAL_MDMA_GetError:0000000000000000 $t
     /tmp/ccDcfjiT.s:2782   .text.HAL_MDMA_GetError:0000000000000000 HAL_MDMA_GetError
     /tmp/ccDcfjiT.s:748    .text.HAL_MDMA_UnRegisterCallback:0000000000000037 $d
     /tmp/ccDcfjiT.s:748    .text.HAL_MDMA_UnRegisterCallback:0000000000000038 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
