ARM GAS  /tmp/cciIUTkn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SWD_Init,"ax",%progbits
  17              		.align	1
  18              		.global	SWD_Init
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	SWD_Init:
  25              	.LFB143:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** #include "octospi.h"
  24:Core/Src/main.c **** #include "ltdc_mod.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cciIUTkn.s 			page 2


  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** void SWD_Init(void);
  56:Core/Src/main.c **** void SWO_PrintData(uint32_t * addr, uint32_t count);
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** __attribute__((section(".fb1"))) uint8_t fb[272*480];
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** uint8_t aTxBuffer[] = "****Memory-mapped OSPI communication********Memory-mapped OSPI communication
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/cciIUTkn.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   MX_OCTOSPI1_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   HAL_Delay(100);
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_REG_EN_GPIO_Port, LCD_REG_EN_Pin, GPIO_PIN_SET);
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   MX_LTDC_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   MX_TIM2_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 105:Core/Src/main.c ****   /* Enable I-Cache */
 106:Core/Src/main.c ****   //SCB_EnableICache();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Enable D-Cache */
 109:Core/Src/main.c ****   //SCB_EnableDCache();
 110:Core/Src/main.c ****   /* USER CODE END 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Infinite loop */
 113:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_RESET);
 116:Core/Src/main.c **** for(uint16_t y = 0; y < 272; y++) {
 117:Core/Src/main.c ****     for(uint16_t x = 0; x < 480; x++) {       
 118:Core/Src/main.c ****         fb[x+(y*480)] = 0;
 119:Core/Src/main.c ****     }
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   uint16_t xoffset = 0;
 123:Core/Src/main.c ****   uint16_t yoffset = 0;
 124:Core/Src/main.c ****   uint32_t address = 0;
 125:Core/Src/main.c ****   uint16_t index;
 126:Core/Src/main.c ****  __IO uint32_t *mem_addr;
 127:Core/Src/main.c ****   while (1)
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c ****     /*// Intensive Access -----------------------------------------------
 130:Core/Src/main.c ****     mem_addr = (__IO uint32_t *)(OCTOSPI1_BASE + address);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     for (index = 0; index < 121; (index += 4))
 133:Core/Src/main.c ****     {
 134:Core/Src/main.c ****       // Writing Sequence ---------------------------------------------------
 135:Core/Src/main.c ****       *mem_addr = *(uint32_t *)&aTxBuffer[index];
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****       //HAL_Delay(1);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****       // Reading Sequence ---------------------------------------------------
 140:Core/Src/main.c ****       if (*mem_addr != *(uint32_t *)&aTxBuffer[index])
 141:Core/Src/main.c ****       {
 142:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_R_GPIO_Port, LED_R_Pin, GPIO_PIN_SET);
 143:Core/Src/main.c ****       }
 144:Core/Src/main.c ****       mem_addr++;
 145:Core/Src/main.c ****     }
 146:Core/Src/main.c **** 
ARM GAS  /tmp/cciIUTkn.s 			page 4


 147:Core/Src/main.c ****     HAL_Delay(100);
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     address += 256;
 150:Core/Src/main.c ****     if(address >= 16384)
 151:Core/Src/main.c ****     {
 152:Core/Src/main.c ****       address = 0;
 153:Core/Src/main.c ****     }*/
 154:Core/Src/main.c ****     
 155:Core/Src/main.c ****     for(uint16_t y = 0; y < 272; y++) {
 156:Core/Src/main.c ****         for(uint16_t x = 0; x < 480; x++) {       
 157:Core/Src/main.c ****             fb[x+(y*480)] = ((x+xoffset)>>4) + ((y+yoffset)>>2);
 158:Core/Src/main.c ****         }
 159:Core/Src/main.c ****     }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_C_GPIO_Port, LED_C_Pin);
 162:Core/Src/main.c ****     HAL_Delay(16);
 163:Core/Src/main.c ****     xoffset+=2;
 164:Core/Src/main.c ****     yoffset+=sin(xoffset/100)*2;
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     //fb[0] = 0xFF0000FF;
 170:Core/Src/main.c ****     //fb[480] = 0xFF00FF00;
 171:Core/Src/main.c ****     //fb[480*272] = 0xFFFF0000;
 172:Core/Src/main.c ****     //fb[(480*272)-480] = 0xFFFF00FF;
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     /*for(uint16_t y = 0; y < 272; y++) {
 175:Core/Src/main.c ****         for(uint16_t x = 0; x < 480; x++) {       
 176:Core/Src/main.c ****             //img[x+(y*240)] = 0xFFFFFFFF*(y==x);
 177:Core/Src/main.c ****             fb[x+(y*480)] = (y/68 == 0) ? x : (y/68 == 1) ? x << 8 : (y/68 == 2) ? x << 16: (x | x 
 178:Core/Src/main.c ****         }
 179:Core/Src/main.c ****     }*/
 180:Core/Src/main.c ****         
 181:Core/Src/main.c ****   /*while (1)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     for(uint16_t y = 0; y < 128; y++) {
 185:Core/Src/main.c ****         for(uint16_t x = 0; x < 128; x++) {
 186:Core/Src/main.c ****            fb[x+(y*128)] = x+(y*128);
 187:Core/Src/main.c ****         }
 188:Core/Src/main.c ****     }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     HAL_Delay(10);
 191:Core/Src/main.c ****     
 192:Core/Src/main.c ****     //for(uint16_t y = 0; y < 272; y++) {
 193:Core/Src/main.c ****     //    for(uint16_t x = 0; x < 480; x++) {       
 194:Core/Src/main.c ****     //        //fb[x+(y*240)] = 0xFFFFFFFF*(y==x);
 195:Core/Src/main.c ****     //        fb[x+(y*480)] = col++;
 196:Core/Src/main.c ****     //        HAL_Delay(1);
 197:Core/Src/main.c ****     //    }
 198:Core/Src/main.c ****     //}
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     //HAL_GPIO_TogglePin(LED_C_GPIO_Port, LED_C_Pin);
 201:Core/Src/main.c ****   }*/
 202:Core/Src/main.c ****   /* USER CODE END 3 */
 203:Core/Src/main.c **** }
ARM GAS  /tmp/cciIUTkn.s 			page 5


 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief System Clock Configuration
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** void SystemClock_Config(void)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 212:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /** Supply configuration update enable
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 218:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 223:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c ****   __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 226:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 227:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 241:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 248:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 249:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 251:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 255:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 256:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cciIUTkn.s 			page 6


 261:Core/Src/main.c ****   }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_OSPI;
 264:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3M = 4;
 265:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3N = 111;
 266:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3P = 2;
 267:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3Q = 2;
 268:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3R = 24;
 269:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 270:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 271:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 272:Core/Src/main.c ****   PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL;
 273:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   __HAL_RCC_CSI_ENABLE() ;
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE() ;
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   HAL_EnableCompensationCell();
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   //__HAL_RCC_CSI_ENABLE() ;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** //  __HAL_RCC_SYSCFG_CLK_ENABLE() ;
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   //HAL_EnableCompensationCell();
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 293:Core/Src/main.c **** void SWD_Init(void)
 294:Core/Src/main.c **** {
  27              		.loc 1 294 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 295:Core/Src/main.c ****   /*
 296:Core/Src/main.c ****     This functions recommends system speed of 400000000Hz and will
 297:Core/Src/main.c ****     use SWO clock speed of 2000000Hz
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****     # GDB OpenOCD commands to connect to this:
 300:Core/Src/main.c ****     monitor tpiu config internal - uart off 400000000
 301:Core/Src/main.c ****     monitor itm port 0 on
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     Code Gen Ref: https://gist.github.com/mofosyne/178ad947fdff0f357eb0e03a42bcef5c
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* Setup SWO and SWO funnel (Note: SWO_BASE and SWTF_BASE not defined in stm32h743xx.h) */
 307:Core/Src/main.c ****   // DBGMCU_CR : Enable D3DBGCKEN D1DBGCKEN TRACECLKEN Clock Domains
 308:Core/Src/main.c ****   DBGMCU->CR =  DBGMCU_CR_DBG_CKD3EN | DBGMCU_CR_DBG_CKD1EN | DBGMCU_CR_DBG_TRACECKEN; // DBGMCU_CR
  32              		.loc 1 308 0
  33 0000 1B4B     		ldr	r3, .L2
  34 0002 4FF4E002 		mov	r2, #7340032
  35 0006 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cciIUTkn.s 			page 7


 309:Core/Src/main.c ****   // SWO_LAR & SWTF_LAR : Unlock SWO and SWO Funnel
 310:Core/Src/main.c ****   *((uint32_t *)(0x5c003fb0)) = 0xC5ACCE55; // SWO_LAR
  36              		.loc 1 310 0
  37 0008 1A4B     		ldr	r3, .L2+4
  38 000a 1B4A     		ldr	r2, .L2+8
  39 000c 1360     		str	r3, [r2]
 311:Core/Src/main.c ****   *((uint32_t *)(0x5c004fb0)) = 0xC5ACCE55; // SWTF_LAR
  40              		.loc 1 311 0
  41 000e 02F58052 		add	r2, r2, #4096
  42 0012 1360     		str	r3, [r2]
 312:Core/Src/main.c ****   // SWO_CODR  : 400000000Hz -> 2000000Hz
 313:Core/Src/main.c ****   // Note: SWOPrescaler = ((sysclock_Hz / SWOSpeed_Hz) - 1) --> 0x0000c7 = 199 = (400000000 / 20000
 314:Core/Src/main.c ****   *((uint32_t *)(0x5c003010)) = ((SystemCoreClock /  2000000) - 1); // SWO_CODR
  43              		.loc 1 314 0
  44 0014 194B     		ldr	r3, .L2+12
  45 0016 1B68     		ldr	r3, [r3]
  46 0018 02F16742 		add	r2, r2, #-419430400
  47 001c 02F5DC12 		add	r2, r2, #1802240
  48 0020 02F6D362 		addw	r2, r2, #3795
  49 0024 A2FB0323 		umull	r2, r3, r2, r3
  50 0028 DB0C     		lsrs	r3, r3, #19
  51 002a 013B     		subs	r3, r3, #1
  52 002c 144A     		ldr	r2, .L2+16
  53 002e 1360     		str	r3, [r2]
 315:Core/Src/main.c ****   // SWO_SPPR : (2:  SWO NRZ, 1:  SWO Manchester encoding)
 316:Core/Src/main.c ****   *((uint32_t *)(0x5c0030f0)) = 0x00000001; // SWO_SPPR
  54              		.loc 1 316 0
  55 0030 144B     		ldr	r3, .L2+20
  56 0032 0122     		movs	r2, #1
  57 0034 1A60     		str	r2, [r3]
 317:Core/Src/main.c ****   // SWTF_CTRL : enable SWO
 318:Core/Src/main.c ****   *((uint32_t *)(0x5c004000)) |= 0x1; // SWTF_CTRL
  58              		.loc 1 318 0
  59 0036 144A     		ldr	r2, .L2+24
  60 0038 1368     		ldr	r3, [r2]
  61 003a 43F00103 		orr	r3, r3, #1
  62 003e 1360     		str	r3, [r2]
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* SWO GPIO Pin Setup */
 321:Core/Src/main.c ****   //RCC_AHB4ENR enable GPIOB clock
 322:Core/Src/main.c ****   *(__IO uint32_t*)(0x580244E0) |= 0x00000002;
  63              		.loc 1 322 0
  64 0040 124A     		ldr	r2, .L2+28
  65 0042 1368     		ldr	r3, [r2]
  66 0044 43F00203 		orr	r3, r3, #2
  67 0048 1360     		str	r3, [r2]
 323:Core/Src/main.c ****   // Configure GPIOB pin 3 as AF
 324:Core/Src/main.c ****   *(__IO uint32_t*)(0x58020400) = (*(__IO uint32_t*)(0x58020400) & 0xffffff3f) | 0x00000080;
  68              		.loc 1 324 0
  69 004a 114A     		ldr	r2, .L2+32
  70 004c 1368     		ldr	r3, [r2]
  71 004e 23F0C003 		bic	r3, r3, #192
  72 0052 43F08003 		orr	r3, r3, #128
  73 0056 1360     		str	r3, [r2]
 325:Core/Src/main.c ****   // Configure GPIOB pin 3 Speed
 326:Core/Src/main.c ****   *(__IO uint32_t*)(0x58020408) |= 0x00000080;
  74              		.loc 1 326 0
ARM GAS  /tmp/cciIUTkn.s 			page 8


  75 0058 0832     		adds	r2, r2, #8
  76 005a 1368     		ldr	r3, [r2]
  77 005c 43F08003 		orr	r3, r3, #128
  78 0060 1360     		str	r3, [r2]
 327:Core/Src/main.c ****   // Force AF0 for GPIOB pin 3
 328:Core/Src/main.c ****   *(__IO uint32_t*)(0x58020420) &= 0xFFFF0FFF;
  79              		.loc 1 328 0
  80 0062 1832     		adds	r2, r2, #24
  81 0064 1368     		ldr	r3, [r2]
  82 0066 23F47043 		bic	r3, r3, #61440
  83 006a 1360     		str	r3, [r2]
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /* Disabling FMC Bank1: After reset FMC_BCR1 = 0x000030DB where MBKEN = 1b meaning that FMC_Bank1 i
 331:Core/Src/main.c ****   //FMC_Bank1->BTCR[0] = 0x000030D2;
 332:Core/Src/main.c **** }
  84              		.loc 1 332 0
  85 006c 7047     		bx	lr
  86              	.L3:
  87 006e 00BF     		.align	2
  88              	.L2:
  89 0070 0010005C 		.word	1543507968
  90 0074 55CEACC5 		.word	-978530731
  91 0078 B03F005C 		.word	1543520176
  92 007c 00000000 		.word	SystemCoreClock
  93 0080 1030005C 		.word	1543516176
  94 0084 F030005C 		.word	1543516400
  95 0088 0040005C 		.word	1543520256
  96 008c E0440258 		.word	1476543712
  97 0090 00040258 		.word	1476527104
  98              		.cfi_endproc
  99              	.LFE143:
 101              		.section	.text.SWO_PrintData,"ax",%progbits
 102              		.align	1
 103              		.global	SWO_PrintData
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-d16
 109              	SWO_PrintData:
 110              	.LFB144:
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** void SWO_PrintData(uint32_t * addr, uint32_t count) {
 111              		.loc 1 334 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL0:
 335:Core/Src/main.c ****     volatile int timeout;
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****     /* Check if Trace Control Register (ITM->TCR at 0xE0000E80) is set */
 338:Core/Src/main.c ****     if ((ITM->TCR&ITM_TCR_ITMENA_Msk) == 0) { /* check Trace Control Register if ITM trace is enabl
 117              		.loc 1 338 0
 118 0000 4FF06043 		mov	r3, #-536870912
 119 0004 D3F8803E 		ldr	r3, [r3, #3712]
 120 0008 13F0010F 		tst	r3, #1
 121 000c 24D0     		beq	.L11
ARM GAS  /tmp/cciIUTkn.s 			page 9


 339:Core/Src/main.c ****         return; /* not enabled? */
 340:Core/Src/main.c ****     }
 341:Core/Src/main.c ****     /* Check if the requested channel stimulus port (ITM->TER at 0xE0000E00) is enabled */
 342:Core/Src/main.c ****     if ((ITM->TER & (1ul<<0))==0) { /* check Trace Enable Register if requested port is enabled */
 122              		.loc 1 342 0
 123 000e 4FF06043 		mov	r3, #-536870912
 124 0012 D3F8003E 		ldr	r3, [r3, #3584]
 125 0016 13F0010F 		tst	r3, #1
 126 001a 1DD0     		beq	.L11
 334:Core/Src/main.c ****     volatile int timeout;
 127              		.loc 1 334 0
 128 001c 10B4     		push	{r4}
 129              	.LCFI0:
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 4, -4
 132 001e 83B0     		sub	sp, sp, #12
 133              	.LCFI1:
 134              		.cfi_def_cfa_offset 16
 135              	.LBB4:
 343:Core/Src/main.c ****         return; /* requested port not enabled? */
 344:Core/Src/main.c ****     }
 345:Core/Src/main.c ****     for(int i = 0; i < count; i++) {
 136              		.loc 1 345 0
 137 0020 0022     		movs	r2, #0
 138              	.L6:
 139              	.LVL1:
 140              		.loc 1 345 0 is_stmt 0 discriminator 1
 141 0022 1446     		mov	r4, r2
 142 0024 8A42     		cmp	r2, r1
 143 0026 0CD2     		bcs	.L4
 346:Core/Src/main.c ****         timeout = 5000; /* arbitrary timeout value */
 144              		.loc 1 346 0 is_stmt 1
 145 0028 41F28833 		movw	r3, #5000
 146 002c 0193     		str	r3, [sp, #4]
 147              	.L7:
 347:Core/Src/main.c ****         while (ITM->PORT[0].u32 == 0) {
 148              		.loc 1 347 0
 149 002e 4FF06043 		mov	r3, #-536870912
 150 0032 1B68     		ldr	r3, [r3]
 151 0034 4BB9     		cbnz	r3, .L14
 348:Core/Src/main.c ****             /* Wait until STIMx is ready, then send data */
 349:Core/Src/main.c ****             timeout--;
 152              		.loc 1 349 0
 153 0036 019B     		ldr	r3, [sp, #4]
 154 0038 013B     		subs	r3, r3, #1
 155 003a 0193     		str	r3, [sp, #4]
 350:Core/Src/main.c ****             if (timeout==0) {
 156              		.loc 1 350 0
 157 003c 019B     		ldr	r3, [sp, #4]
 158 003e 002B     		cmp	r3, #0
 159 0040 F5D1     		bne	.L7
 160              	.L4:
 161              	.LBE4:
 351:Core/Src/main.c ****                 return; /* not able to send */
 352:Core/Src/main.c ****             }
 353:Core/Src/main.c ****         }
 354:Core/Src/main.c ****         ITM->PORT[0].u32 = addr[i];
ARM GAS  /tmp/cciIUTkn.s 			page 10


 355:Core/Src/main.c ****     }
 356:Core/Src/main.c **** }
 162              		.loc 1 356 0
 163 0042 03B0     		add	sp, sp, #12
 164              	.LCFI2:
 165              		.cfi_remember_state
 166              		.cfi_def_cfa_offset 4
 167              		@ sp needed
 168 0044 5DF8044B 		ldr	r4, [sp], #4
 169              	.LCFI3:
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172 0048 7047     		bx	lr
 173              	.L14:
 174              	.LCFI4:
 175              		.cfi_restore_state
 176              	.LBB5:
 354:Core/Src/main.c ****     }
 177              		.loc 1 354 0 discriminator 2
 178 004a 50F82440 		ldr	r4, [r0, r4, lsl #2]
 179 004e 4FF06043 		mov	r3, #-536870912
 180 0052 1C60     		str	r4, [r3]
 345:Core/Src/main.c ****         timeout = 5000; /* arbitrary timeout value */
 181              		.loc 1 345 0 discriminator 2
 182 0054 0132     		adds	r2, r2, #1
 183              	.LVL2:
 184 0056 E4E7     		b	.L6
 185              	.LVL3:
 186              	.L11:
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 0
 189              		.cfi_restore 4
 190 0058 7047     		bx	lr
 191              	.LBE5:
 192              		.cfi_endproc
 193              	.LFE144:
 195              		.section	.text.Error_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	Error_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv5-d16
 203              	Error_Handler:
 204              	.LFB145:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** /* USER CODE END 4 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /**
 362:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 363:Core/Src/main.c ****   * @retval None
 364:Core/Src/main.c ****   */
 365:Core/Src/main.c **** void Error_Handler(void)
 366:Core/Src/main.c **** {
 205              		.loc 1 366 0
 206              		.cfi_startproc
ARM GAS  /tmp/cciIUTkn.s 			page 11


 207              		@ Volatile: function does not return.
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LBB6:
 212              	.LBB7:
 213              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/cciIUTkn.s 			page 12


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cciIUTkn.s 			page 13


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 214              		.loc 2 142 0
 215              		.syntax unified
 216              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 217 0000 72B6     		cpsid i
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.L16:
 222 0002 FEE7     		b	.L16
 223              	.LBE7:
 224              	.LBE6:
 225              		.cfi_endproc
 226              	.LFE145:
 228              		.section	.text.SystemClock_Config,"ax",%progbits
 229              		.align	1
 230              		.global	SystemClock_Config
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-d16
 236              	SystemClock_Config:
 237              	.LFB142:
ARM GAS  /tmp/cciIUTkn.s 			page 14


 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 238              		.loc 1 210 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 296
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 00B5     		push	{lr}
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 14, -4
 246 0002 CBB0     		sub	sp, sp, #300
 247              	.LCFI7:
 248              		.cfi_def_cfa_offset 304
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 249              		.loc 1 211 0
 250 0004 4C22     		movs	r2, #76
 251 0006 0021     		movs	r1, #0
 252 0008 37A8     		add	r0, sp, #220
 253 000a FFF7FEFF 		bl	memset
 254              	.LVL4:
 212:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 255              		.loc 1 212 0
 256 000e 2022     		movs	r2, #32
 257 0010 0021     		movs	r1, #0
 258 0012 2FA8     		add	r0, sp, #188
 259 0014 FFF7FEFF 		bl	memset
 260              	.LVL5:
 213:Core/Src/main.c **** 
 261              		.loc 1 213 0
 262 0018 B422     		movs	r2, #180
 263 001a 0021     		movs	r1, #0
 264 001c 02A8     		add	r0, sp, #8
 265 001e FFF7FEFF 		bl	memset
 266              	.LVL6:
 217:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 267              		.loc 1 217 0
 268 0022 0220     		movs	r0, #2
 269 0024 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 270              	.LVL7:
 271              	.LBB8:
 220:Core/Src/main.c **** 
 272              		.loc 1 220 0
 273 0028 0023     		movs	r3, #0
 274 002a 0093     		str	r3, [sp]
 275 002c 3B4B     		ldr	r3, .L26
 276 002e 9A69     		ldr	r2, [r3, #24]
 277 0030 22F44042 		bic	r2, r2, #49152
 278 0034 9A61     		str	r2, [r3, #24]
 279 0036 9B69     		ldr	r3, [r3, #24]
 280 0038 03F44043 		and	r3, r3, #49152
 281 003c 0093     		str	r3, [sp]
 282 003e 009B     		ldr	r3, [sp]
 283              	.L18:
 284              	.LBE8:
 222:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 285              		.loc 1 222 0 discriminator 1
 286 0040 364B     		ldr	r3, .L26
 287 0042 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cciIUTkn.s 			page 15


 288 0044 13F4005F 		tst	r3, #8192
 289 0048 FAD0     		beq	.L18
 225:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 290              		.loc 1 225 0
 291 004a 354A     		ldr	r2, .L26+4
 292 004c 936A     		ldr	r3, [r2, #40]
 293 004e 23F00303 		bic	r3, r3, #3
 294 0052 43F00203 		orr	r3, r3, #2
 295 0056 9362     		str	r3, [r2, #40]
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 296              		.loc 1 229 0
 297 0058 0122     		movs	r2, #1
 298 005a 3792     		str	r2, [sp, #220]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 299              		.loc 1 230 0
 300 005c 4FF48033 		mov	r3, #65536
 301 0060 3893     		str	r3, [sp, #224]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 302              		.loc 1 231 0
 303 0062 0223     		movs	r3, #2
 304 0064 4093     		str	r3, [sp, #256]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 305              		.loc 1 232 0
 306 0066 4193     		str	r3, [sp, #260]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 307              		.loc 1 233 0
 308 0068 4293     		str	r3, [sp, #264]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 309              		.loc 1 234 0
 310 006a 6421     		movs	r1, #100
 311 006c 4391     		str	r1, [sp, #268]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 312              		.loc 1 235 0
 313 006e 4492     		str	r2, [sp, #272]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 314              		.loc 1 236 0
 315 0070 0422     		movs	r2, #4
 316 0072 4592     		str	r2, [sp, #276]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 317              		.loc 1 237 0
 318 0074 4693     		str	r3, [sp, #280]
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 319              		.loc 1 238 0
 320 0076 0823     		movs	r3, #8
 321 0078 4793     		str	r3, [sp, #284]
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 322              		.loc 1 239 0
 323 007a 0023     		movs	r3, #0
 324 007c 4893     		str	r3, [sp, #288]
 240:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 325              		.loc 1 240 0
 326 007e 4993     		str	r3, [sp, #292]
 241:Core/Src/main.c ****   {
 327              		.loc 1 241 0
 328 0080 37A8     		add	r0, sp, #220
 329 0082 FFF7FEFF 		bl	HAL_RCC_OscConfig
 330              	.LVL8:
ARM GAS  /tmp/cciIUTkn.s 			page 16


 331 0086 0028     		cmp	r0, #0
 332 0088 41D1     		bne	.L23
 247:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 333              		.loc 1 247 0
 334 008a 3F23     		movs	r3, #63
 335 008c 2F93     		str	r3, [sp, #188]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 336              		.loc 1 250 0
 337 008e 0321     		movs	r1, #3
 338 0090 3091     		str	r1, [sp, #192]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 339              		.loc 1 251 0
 340 0092 0023     		movs	r3, #0
 341 0094 3193     		str	r3, [sp, #196]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 342              		.loc 1 252 0
 343 0096 0823     		movs	r3, #8
 344 0098 3293     		str	r3, [sp, #200]
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 345              		.loc 1 253 0
 346 009a 4023     		movs	r3, #64
 347 009c 3393     		str	r3, [sp, #204]
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 348              		.loc 1 254 0
 349 009e 3493     		str	r3, [sp, #208]
 255:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 350              		.loc 1 255 0
 351 00a0 4FF48062 		mov	r2, #1024
 352 00a4 3592     		str	r2, [sp, #212]
 256:Core/Src/main.c **** 
 353              		.loc 1 256 0
 354 00a6 3693     		str	r3, [sp, #216]
 258:Core/Src/main.c ****   {
 355              		.loc 1 258 0
 356 00a8 2FA8     		add	r0, sp, #188
 357 00aa FFF7FEFF 		bl	HAL_RCC_ClockConfig
 358              	.LVL9:
 359 00ae 0028     		cmp	r0, #0
 360 00b0 2FD1     		bne	.L24
 263:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3M = 4;
 361              		.loc 1 263 0
 362 00b2 4FF00853 		mov	r3, #570425344
 363 00b6 0293     		str	r3, [sp, #8]
 264:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3N = 111;
 364              		.loc 1 264 0
 365 00b8 0423     		movs	r3, #4
 366 00ba 0B93     		str	r3, [sp, #44]
 265:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3P = 2;
 367              		.loc 1 265 0
 368 00bc 6F23     		movs	r3, #111
 369 00be 0C93     		str	r3, [sp, #48]
 266:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3Q = 2;
 370              		.loc 1 266 0
 371 00c0 0223     		movs	r3, #2
 372 00c2 0D93     		str	r3, [sp, #52]
 267:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3R = 24;
 373              		.loc 1 267 0
ARM GAS  /tmp/cciIUTkn.s 			page 17


 374 00c4 0E93     		str	r3, [sp, #56]
 268:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 375              		.loc 1 268 0
 376 00c6 1823     		movs	r3, #24
 377 00c8 0F93     		str	r3, [sp, #60]
 269:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 378              		.loc 1 269 0
 379 00ca 4FF48063 		mov	r3, #1024
 380 00ce 1093     		str	r3, [sp, #64]
 270:Core/Src/main.c ****   PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 381              		.loc 1 270 0
 382 00d0 0023     		movs	r3, #0
 383 00d2 1193     		str	r3, [sp, #68]
 271:Core/Src/main.c ****   PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_PLL;
 384              		.loc 1 271 0
 385 00d4 1293     		str	r3, [sp, #72]
 272:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 386              		.loc 1 272 0
 387 00d6 1023     		movs	r3, #16
 388 00d8 1493     		str	r3, [sp, #80]
 273:Core/Src/main.c ****   {
 389              		.loc 1 273 0
 390 00da 02A8     		add	r0, sp, #8
 391 00dc FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 392              	.LVL10:
 393 00e0 C8B9     		cbnz	r0, .L25
 278:Core/Src/main.c **** 
 394              		.loc 1 278 0
 395 00e2 0F4B     		ldr	r3, .L26+4
 396 00e4 1A68     		ldr	r2, [r3]
 397 00e6 42F08002 		orr	r2, r2, #128
 398 00ea 1A60     		str	r2, [r3]
 399              	.LBB9:
 280:Core/Src/main.c **** 
 400              		.loc 1 280 0
 401 00ec D3F8F420 		ldr	r2, [r3, #244]
 402 00f0 42F00202 		orr	r2, r2, #2
 403 00f4 C3F8F420 		str	r2, [r3, #244]
 404 00f8 D3F8F430 		ldr	r3, [r3, #244]
 405 00fc 03F00203 		and	r3, r3, #2
 406 0100 0193     		str	r3, [sp, #4]
 407 0102 019B     		ldr	r3, [sp, #4]
 408              	.LBE9:
 282:Core/Src/main.c **** 
 409              		.loc 1 282 0
 410 0104 FFF7FEFF 		bl	HAL_EnableCompensationCell
 411              	.LVL11:
 290:Core/Src/main.c **** 
 412              		.loc 1 290 0
 413 0108 4BB0     		add	sp, sp, #300
 414              	.LCFI8:
 415              		.cfi_remember_state
 416              		.cfi_def_cfa_offset 4
 417              		@ sp needed
 418 010a 5DF804FB 		ldr	pc, [sp], #4
 419              	.L23:
 420              	.LCFI9:
ARM GAS  /tmp/cciIUTkn.s 			page 18


 421              		.cfi_restore_state
 243:Core/Src/main.c ****   }
 422              		.loc 1 243 0
 423 010e FFF7FEFF 		bl	Error_Handler
 424              	.LVL12:
 425              	.L24:
 260:Core/Src/main.c ****   }
 426              		.loc 1 260 0
 427 0112 FFF7FEFF 		bl	Error_Handler
 428              	.LVL13:
 429              	.L25:
 275:Core/Src/main.c ****   }
 430              		.loc 1 275 0
 431 0116 FFF7FEFF 		bl	Error_Handler
 432              	.LVL14:
 433              	.L27:
 434 011a 00BF     		.align	2
 435              	.L26:
 436 011c 00480258 		.word	1476544512
 437 0120 00440258 		.word	1476543488
 438              		.cfi_endproc
 439              	.LFE142:
 441              		.section	.text.main,"ax",%progbits
 442              		.align	1
 443              		.global	main
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv5-d16
 449              	main:
 450              	.LFB141:
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 451              		.loc 1 72 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 456              	.LCFI10:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 3, -24
 459              		.cfi_offset 4, -20
 460              		.cfi_offset 5, -16
 461              		.cfi_offset 6, -12
 462              		.cfi_offset 7, -8
 463              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 464              		.loc 1 75 0
 465 0002 FFF7FEFF 		bl	HAL_Init
 466              	.LVL15:
  82:Core/Src/main.c **** 
 467              		.loc 1 82 0
 468 0006 FFF7FEFF 		bl	SystemClock_Config
 469              	.LVL16:
  89:Core/Src/main.c **** 
 470              		.loc 1 89 0
 471 000a FFF7FEFF 		bl	MX_GPIO_Init
 472              	.LVL17:
ARM GAS  /tmp/cciIUTkn.s 			page 19


  91:Core/Src/main.c **** 
 473              		.loc 1 91 0
 474 000e FFF7FEFF 		bl	MX_OCTOSPI1_Init
 475              	.LVL18:
  93:Core/Src/main.c **** 
 476              		.loc 1 93 0
 477 0012 6420     		movs	r0, #100
 478 0014 FFF7FEFF 		bl	HAL_Delay
 479              	.LVL19:
  95:Core/Src/main.c **** 
 480              		.loc 1 95 0
 481 0018 0122     		movs	r2, #1
 482 001a 4FF40051 		mov	r1, #8192
 483 001e 3148     		ldr	r0, .L40
 484 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 485              	.LVL20:
  97:Core/Src/main.c **** 
 486              		.loc 1 97 0
 487 0024 FFF7FEFF 		bl	MX_LTDC_Init
 488              	.LVL21:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 489              		.loc 1 99 0
 490 0028 FFF7FEFF 		bl	MX_TIM2_Init
 491              	.LVL22:
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 492              		.loc 1 101 0
 493 002c 0C21     		movs	r1, #12
 494 002e 2E48     		ldr	r0, .L40+4
 495 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 496              	.LVL23:
 115:Core/Src/main.c **** for(uint16_t y = 0; y < 272; y++) {
 497              		.loc 1 115 0
 498 0034 0022     		movs	r2, #0
 499 0036 1021     		movs	r1, #16
 500 0038 2C48     		ldr	r0, .L40+8
 501 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 502              	.LVL24:
 503              	.LBB10:
 116:Core/Src/main.c ****     for(uint16_t x = 0; x < 480; x++) {       
 504              		.loc 1 116 0
 505 003e 0023     		movs	r3, #0
 506              	.LVL25:
 507              	.L29:
 116:Core/Src/main.c ****     for(uint16_t x = 0; x < 480; x++) {       
 508              		.loc 1 116 0 is_stmt 0 discriminator 1
 509 0040 B3F5887F 		cmp	r3, #272
 510 0044 11D3     		bcc	.L36
 511              	.LBE10:
 123:Core/Src/main.c ****   uint32_t address = 0;
 512              		.loc 1 123 0 is_stmt 1
 513 0046 0024     		movs	r4, #0
 122:Core/Src/main.c ****   uint16_t yoffset = 0;
 514              		.loc 1 122 0
 515 0048 2546     		mov	r5, r4
 516 004a 48E0     		b	.L35
 517              	.LVL26:
 518              	.L30:
ARM GAS  /tmp/cciIUTkn.s 			page 20


 519              	.LBB13:
 520              	.LBB11:
 118:Core/Src/main.c ****     }
 521              		.loc 1 118 0 discriminator 3
 522 004c C3EB0310 		rsb	r0, r3, r3, lsl #4
 523 0050 4101     		lsls	r1, r0, #5
 524 0052 1144     		add	r1, r1, r2
 525 0054 2648     		ldr	r0, .L40+12
 526 0056 0024     		movs	r4, #0
 527 0058 4454     		strb	r4, [r0, r1]
 117:Core/Src/main.c ****         fb[x+(y*480)] = 0;
 528              		.loc 1 117 0 discriminator 3
 529 005a 0132     		adds	r2, r2, #1
 530              	.LVL27:
 531 005c 92B2     		uxth	r2, r2
 532              	.LVL28:
 533              	.L31:
 117:Core/Src/main.c ****         fb[x+(y*480)] = 0;
 534              		.loc 1 117 0 is_stmt 0 discriminator 1
 535 005e B2F5F07F 		cmp	r2, #480
 536 0062 F3D3     		bcc	.L30
 537              	.LBE11:
 116:Core/Src/main.c ****     for(uint16_t x = 0; x < 480; x++) {       
 538              		.loc 1 116 0 is_stmt 1 discriminator 2
 539 0064 0133     		adds	r3, r3, #1
 540              	.LVL29:
 541 0066 9BB2     		uxth	r3, r3
 542              	.LVL30:
 543 0068 EAE7     		b	.L29
 544              	.LVL31:
 545              	.L36:
 546              	.LBB12:
 117:Core/Src/main.c ****         fb[x+(y*480)] = 0;
 547              		.loc 1 117 0
 548 006a 0022     		movs	r2, #0
 549 006c F7E7     		b	.L31
 550              	.LVL32:
 551              	.L33:
 552              	.LBE12:
 553              	.LBE13:
 554              	.LBB14:
 555              	.LBB15:
 157:Core/Src/main.c ****         }
 556              		.loc 1 157 0 discriminator 3
 557 006e EF18     		adds	r7, r5, r3
 558 0070 2218     		adds	r2, r4, r0
 559 0072 9210     		asrs	r2, r2, #2
 560 0074 C0EB0016 		rsb	r6, r0, r0, lsl #4
 561 0078 7101     		lsls	r1, r6, #5
 562 007a 1944     		add	r1, r1, r3
 563 007c 02EB2712 		add	r2, r2, r7, asr #4
 564 0080 1B4E     		ldr	r6, .L40+12
 565 0082 7254     		strb	r2, [r6, r1]
 156:Core/Src/main.c ****             fb[x+(y*480)] = ((x+xoffset)>>4) + ((y+yoffset)>>2);
 566              		.loc 1 156 0 discriminator 3
 567 0084 0133     		adds	r3, r3, #1
 568              	.LVL33:
ARM GAS  /tmp/cciIUTkn.s 			page 21


 569 0086 9BB2     		uxth	r3, r3
 570              	.LVL34:
 571              	.L34:
 156:Core/Src/main.c ****             fb[x+(y*480)] = ((x+xoffset)>>4) + ((y+yoffset)>>2);
 572              		.loc 1 156 0 is_stmt 0 discriminator 1
 573 0088 B3F5F07F 		cmp	r3, #480
 574 008c EFD3     		bcc	.L33
 575              	.LBE15:
 155:Core/Src/main.c ****         for(uint16_t x = 0; x < 480; x++) {       
 576              		.loc 1 155 0 is_stmt 1 discriminator 2
 577 008e 0130     		adds	r0, r0, #1
 578              	.LVL35:
 579 0090 80B2     		uxth	r0, r0
 580              	.LVL36:
 581              	.L32:
 155:Core/Src/main.c ****         for(uint16_t x = 0; x < 480; x++) {       
 582              		.loc 1 155 0 is_stmt 0 discriminator 1
 583 0092 B0F5887F 		cmp	r0, #272
 584 0096 01D2     		bcs	.L39
 585              	.LBB16:
 156:Core/Src/main.c ****             fb[x+(y*480)] = ((x+xoffset)>>4) + ((y+yoffset)>>2);
 586              		.loc 1 156 0 is_stmt 1
 587 0098 0023     		movs	r3, #0
 588 009a F5E7     		b	.L34
 589              	.L39:
 590              	.LBE16:
 591              	.LBE14:
 161:Core/Src/main.c ****     HAL_Delay(16);
 592              		.loc 1 161 0
 593 009c 0821     		movs	r1, #8
 594 009e 1348     		ldr	r0, .L40+8
 595              	.LVL37:
 596 00a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 597              	.LVL38:
 162:Core/Src/main.c ****     xoffset+=2;
 598              		.loc 1 162 0
 599 00a4 1020     		movs	r0, #16
 600 00a6 FFF7FEFF 		bl	HAL_Delay
 601              	.LVL39:
 163:Core/Src/main.c ****     yoffset+=sin(xoffset/100)*2;
 602              		.loc 1 163 0
 603 00aa 0235     		adds	r5, r5, #2
 604              	.LVL40:
 605 00ac ADB2     		uxth	r5, r5
 606              	.LVL41:
 164:Core/Src/main.c ****   }
 607              		.loc 1 164 0
 608 00ae 114B     		ldr	r3, .L40+16
 609 00b0 A3FB0523 		umull	r2, r3, r3, r5
 610 00b4 C3F34F13 		ubfx	r3, r3, #5, #16
 611 00b8 00EE103A 		vmov	s0, r3	@ int
 612 00bc B8EEC00B 		vcvt.f64.s32	d0, s0
 613 00c0 FFF7FEFF 		bl	sin
 614              	.LVL42:
 615 00c4 30EE000B 		vadd.f64	d0, d0, d0
 616 00c8 07EE904A 		vmov	s15, r4	@ int
 617 00cc B8EEE77B 		vcvt.f64.s32	d7, s15
ARM GAS  /tmp/cciIUTkn.s 			page 22


 618 00d0 37EE007B 		vadd.f64	d7, d7, d0
 619 00d4 BCEEC77B 		vcvt.u32.f64	s14, d7
 620 00d8 17EE103A 		vmov	r3, s14	@ int
 621 00dc 9CB2     		uxth	r4, r3
 622              	.LVL43:
 623              	.L35:
 624              	.LBB17:
 155:Core/Src/main.c ****         for(uint16_t x = 0; x < 480; x++) {       
 625              		.loc 1 155 0
 626 00de 0020     		movs	r0, #0
 627 00e0 D7E7     		b	.L32
 628              	.L41:
 629 00e2 00BF     		.align	2
 630              	.L40:
 631 00e4 000C0258 		.word	1476529152
 632 00e8 00000000 		.word	htim2
 633 00ec 00080258 		.word	1476528128
 634 00f0 00000000 		.word	fb
 635 00f4 1F85EB51 		.word	1374389535
 636              	.LBE17:
 637              		.cfi_endproc
 638              	.LFE141:
 640              		.global	aTxBuffer
 641              		.global	fb
 642              		.section	.data.aTxBuffer,"aw",%progbits
 643              		.align	2
 646              	aTxBuffer:
 647 0000 2A2A2A2A 		.ascii	"****Memory-mapped OSPI communication********Memory-"
 647      4D656D6F 
 647      72792D6D 
 647      61707065 
 647      64204F53 
 648 0033 6D617070 		.ascii	"mapped OSPI communication********Memory-mapped OSPI"
 648      6564204F 
 648      53504920 
 648      636F6D6D 
 648      756E6963 
 649 0066 20636F6D 		.ascii	" communication****\000"
 649      6D756E69 
 649      63617469 
 649      6F6E2A2A 
 649      2A2A00
 650              		.section	.fb1,"aw",%progbits
 651              		.align	2
 654              	fb:
 655 0000 00000000 		.space	130560
 655      00000000 
 655      00000000 
 655      00000000 
 655      00000000 
 656              		.text
 657              	.Letext0:
 658              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 659              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 660              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 661              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 662              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
ARM GAS  /tmp/cciIUTkn.s 			page 23


 663              		.file 8 "/usr/include/newlib/sys/lock.h"
 664              		.file 9 "/usr/include/newlib/sys/_types.h"
 665              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 666              		.file 11 "/usr/include/newlib/sys/reent.h"
 667              		.file 12 "/usr/include/newlib/math.h"
 668              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 669              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 670              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 671              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 672              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 673              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 674              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 675              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ltdc.h"
 676              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ospi.h"
 677              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 678              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 679              		.file 24 "Core/Inc/octospi.h"
 680              		.file 25 "Core/Inc/ltdc_mod.h"
 681              		.file 26 "Core/Inc/tim.h"
 682              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 683              		.file 28 "Core/Inc/gpio.h"
 684              		.file 29 "Core/Inc/main.h"
 685              		.file 30 "<built-in>"
ARM GAS  /tmp/cciIUTkn.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciIUTkn.s:17     .text.SWD_Init:0000000000000000 $t
     /tmp/cciIUTkn.s:24     .text.SWD_Init:0000000000000000 SWD_Init
     /tmp/cciIUTkn.s:89     .text.SWD_Init:0000000000000070 $d
     /tmp/cciIUTkn.s:102    .text.SWO_PrintData:0000000000000000 $t
     /tmp/cciIUTkn.s:109    .text.SWO_PrintData:0000000000000000 SWO_PrintData
     /tmp/cciIUTkn.s:196    .text.Error_Handler:0000000000000000 $t
     /tmp/cciIUTkn.s:203    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cciIUTkn.s:229    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cciIUTkn.s:236    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cciIUTkn.s:436    .text.SystemClock_Config:000000000000011c $d
     /tmp/cciIUTkn.s:442    .text.main:0000000000000000 $t
     /tmp/cciIUTkn.s:449    .text.main:0000000000000000 main
     /tmp/cciIUTkn.s:631    .text.main:00000000000000e4 $d
     /tmp/cciIUTkn.s:654    .fb1:0000000000000000 fb
     /tmp/cciIUTkn.s:646    .data.aTxBuffer:0000000000000000 aTxBuffer
     /tmp/cciIUTkn.s:643    .data.aTxBuffer:0000000000000000 $d
     /tmp/cciIUTkn.s:651    .fb1:0000000000000000 $d

UNDEFINED SYMBOLS
SystemCoreClock
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_EnableCompensationCell
HAL_Init
MX_GPIO_Init
MX_OCTOSPI1_Init
HAL_Delay
HAL_GPIO_WritePin
MX_LTDC_Init
MX_TIM2_Init
HAL_TIM_PWM_Start
HAL_GPIO_TogglePin
sin
htim2
