ARM GAS  /tmp/ccSOiArA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB345:
  26              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @file    stm32h7xx_hal.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @verbatim
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @endverbatim
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @attention
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccSOiArA.s 			page 2


  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #include "stm32h7xx_hal.h"
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup STM32H7xx_HAL_Driver
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL  HAL
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @brief STM32H7xx HAL Driver version number V1.9.0
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_MAIN   (0x01UL) /*!< [31:24] main version */
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB1   (0x09UL) /*!< [23:16] sub1 version */
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB2   (0x00UL) /*!< [15:8]  sub2 version */
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_RC     (0x00UL) /*!< [7:0]  release candidate */
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION         ((__STM32H7xx_HAL_VERSION_MAIN << 24)\
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB1 << 16)\
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB2 << 8 )\
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_RC))
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     (uint32_t)10   /* 10 ms  */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __IO uint32_t uwTick;
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Private_Functions  HAL Private Functions
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group1 Initialization and de-initialization Functions
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
ARM GAS  /tmp/ccSOiArA.s 			page 3


  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****               ##### Initialization and de-initialization functions #####
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           and the backup domain when enabled.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) De-Initializes common part of the HAL.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           Tick interrupt priority.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              handled in milliseconds basis.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             ISR process will be blocked.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         HAL function), it performs the following:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           "stm32h7xx_hal_msp.c" to do the global low level hardware initialization
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         to have correct HAL operation.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t common_system_clock;
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    /* Configure Cortex-M4 Instruction cache through ART accelerator */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE &&  CORE_CM4 */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Set Interrupt Group Priority */
ARM GAS  /tmp/ccSOiArA.s 			page 4


 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemCoreClock global variable */
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_D1CPRE)
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemD2Clock global variable */
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_HPRE)
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = SystemD2Clock;
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = common_system_clock;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Init the low level hardware */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspInit();
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This function is optional.
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
ARM GAS  /tmp/ccSOiArA.s 			page 5


 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_FORCE_RESET();
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_FORCE_RESET();
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_FORCE_RESET();
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_FORCE_RESET();
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* De-Init the low level hardware */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspDeInit();
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Initializes the MSP.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspInit(void)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  27              		.loc 1 229 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  32              		.loc 1 233 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE345:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-d16
  45              	HAL_MspDeInit:
  46              	.LFB346:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  DeInitializes the MSP.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspDeInit(void)
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  47              		.loc 1 240 0
  48              		.cfi_startproc
ARM GAS  /tmp/ccSOiArA.s 			page 6


  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  52              		.loc 1 244 0
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE346:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	HAL_DeInit:
  66              	.LFB344:
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 188 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 10B5     		push	{r4, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  76              		.loc 1 190 0
  77 0002 1B4B     		ldr	r3, .L5
  78 0004 1B4A     		ldr	r2, .L5+4
  79 0006 DA67     		str	r2, [r3, #124]
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  80              		.loc 1 191 0
  81 0008 0024     		movs	r4, #0
  82 000a DC67     		str	r4, [r3, #124]
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  83              		.loc 1 193 0
  84 000c 1A4A     		ldr	r2, .L5+8
  85 000e C3F88020 		str	r2, [r3, #128]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  86              		.loc 1 194 0
  87 0012 C3F88040 		str	r4, [r3, #128]
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  88              		.loc 1 196 0
  89 0016 194A     		ldr	r2, .L5+12
  90 0018 C3F88420 		str	r2, [r3, #132]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  91              		.loc 1 197 0
  92 001c C3F88440 		str	r4, [r3, #132]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
  93              		.loc 1 199 0
  94 0020 174A     		ldr	r2, .L5+16
  95 0022 C3F88820 		str	r2, [r3, #136]
ARM GAS  /tmp/ccSOiArA.s 			page 7


 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  96              		.loc 1 200 0
  97 0026 C3F88840 		str	r4, [r3, #136]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  98              		.loc 1 202 0
  99 002a 0822     		movs	r2, #8
 100 002c C3F88C20 		str	r2, [r3, #140]
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 101              		.loc 1 203 0
 102 0030 C3F88C40 		str	r4, [r3, #140]
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 103              		.loc 1 205 0
 104 0034 134A     		ldr	r2, .L5+20
 105 0036 C3F89020 		str	r2, [r3, #144]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 106              		.loc 1 206 0
 107 003a C3F89040 		str	r4, [r3, #144]
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 108              		.loc 1 208 0
 109 003e 124A     		ldr	r2, .L5+24
 110 0040 C3F89420 		str	r2, [r3, #148]
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 111              		.loc 1 209 0
 112 0044 C3F89440 		str	r4, [r3, #148]
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 113              		.loc 1 211 0
 114 0048 02F17552 		add	r2, r2, #1027604480
 115 004c 02F5B912 		add	r2, r2, #1515520
 116 0050 02F6BD72 		addw	r2, r2, #4029
 117 0054 C3F89820 		str	r2, [r3, #152]
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118              		.loc 1 212 0
 119 0058 C3F89840 		str	r4, [r3, #152]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 120              		.loc 1 214 0
 121 005c 0B4A     		ldr	r2, .L5+28
 122 005e C3F89C20 		str	r2, [r3, #156]
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 123              		.loc 1 215 0
 124 0062 C3F89C40 		str	r4, [r3, #156]
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 125              		.loc 1 218 0
 126 0066 FFF7FEFF 		bl	HAL_MspDeInit
 127              	.LVL0:
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 128              		.loc 1 222 0
 129 006a 2046     		mov	r0, r4
 130 006c 10BD     		pop	{r4, pc}
 131              	.L6:
 132 006e 00BF     		.align	2
 133              	.L5:
 134 0070 00440258 		.word	1476543488
 135 0074 1150E900 		.word	15290385
 136 0078 23800002 		.word	33587235
 137 007c 71020300 		.word	197233
 138 0080 FF062803 		.word	52954879
 139 0084 FFC3FFEA 		.word	-352336897
ARM GAS  /tmp/ccSOiArA.s 			page 8


 140 0088 36010003 		.word	50331958
 141 008c AADE2004 		.word	69263018
 142              		.cfi_endproc
 143              	.LFE344:
 145              		.section	.text.HAL_InitTick,"ax",%progbits
 146              		.align	1
 147              		.weak	HAL_InitTick
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv5-d16
 153              	HAL_InitTick:
 154              	.LFB347:
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function configures the source of the time base.
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        Tick interrupt priority.
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementation  in user file.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 155              		.loc 1 263 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL1:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if((uint32_t)uwTickFreq == 0UL)
 160              		.loc 1 265 0
 161 0000 104B     		ldr	r3, .L18
 162 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163 0004 0BB9     		cbnz	r3, .L16
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 164              		.loc 1 267 0
 165 0006 0120     		movs	r0, #1
 166              	.LVL2:
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick IRQ priority */
ARM GAS  /tmp/ccSOiArA.s 			page 9


 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 167              		.loc 1 289 0
 168 0008 7047     		bx	lr
 169              	.LVL3:
 170              	.L16:
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 171              		.loc 1 263 0
 172 000a 10B5     		push	{r4, lr}
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 177 000c 0446     		mov	r4, r0
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 178              		.loc 1 271 0
 179 000e 4FF47A70 		mov	r0, #1000
 180              	.LVL4:
 181 0012 B0FBF3F3 		udiv	r3, r0, r3
 182 0016 0C4A     		ldr	r2, .L18+4
 183 0018 1068     		ldr	r0, [r2]
 184 001a B0FBF3F0 		udiv	r0, r0, r3
 185 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 186              	.LVL5:
 187 0022 68B9     		cbnz	r0, .L10
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 188              		.loc 1 277 0
 189 0024 0F2C     		cmp	r4, #15
 190 0026 01D9     		bls	.L17
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 191              		.loc 1 284 0
 192 0028 0120     		movs	r0, #1
 193 002a 0AE0     		b	.L8
 194              	.L17:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 195              		.loc 1 279 0
 196 002c 0022     		movs	r2, #0
 197 002e 2146     		mov	r1, r4
 198 0030 4FF0FF30 		mov	r0, #-1
 199 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 200              	.LVL6:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 201              		.loc 1 280 0
 202 0038 044B     		ldr	r3, .L18+8
 203 003a 1C60     		str	r4, [r3]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/ccSOiArA.s 			page 10


 204              		.loc 1 288 0
 205 003c 0020     		movs	r0, #0
 206 003e 00E0     		b	.L8
 207              	.L10:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 208              		.loc 1 273 0
 209 0040 0120     		movs	r0, #1
 210              	.L8:
 211              		.loc 1 289 0
 212 0042 10BD     		pop	{r4, pc}
 213              	.LVL7:
 214              	.L19:
 215              		.align	2
 216              	.L18:
 217 0044 00000000 		.word	.LANCHOR0
 218 0048 00000000 		.word	SystemCoreClock
 219 004c 00000000 		.word	.LANCHOR1
 220              		.cfi_endproc
 221              	.LFE347:
 223              		.section	.text.HAL_Init,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_Init
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	HAL_Init:
 232              	.LFB343:
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 233              		.loc 1 135 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              	.LCFI2:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 242              		.loc 1 147 0
 243 0002 0320     		movs	r0, #3
 244 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 245              	.LVL8:
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 246              		.loc 1 151 0
 247 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 248              	.LVL9:
 249 000c 0F49     		ldr	r1, .L25
 250 000e 8B69     		ldr	r3, [r1, #24]
 251 0010 C3F30323 		ubfx	r3, r3, #8, #4
 252 0014 0E4A     		ldr	r2, .L25+4
 253 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 254 0018 03F01F03 		and	r3, r3, #31
 255 001c D840     		lsrs	r0, r0, r3
 256              	.LVL10:
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 257              		.loc 1 158 0
ARM GAS  /tmp/ccSOiArA.s 			page 11


 258 001e 8B69     		ldr	r3, [r1, #24]
 259 0020 03F00F03 		and	r3, r3, #15
 260 0024 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 261 0026 03F01F03 		and	r3, r3, #31
 262 002a 20FA03F3 		lsr	r3, r0, r3
 263 002e 094A     		ldr	r2, .L25+8
 264 0030 1360     		str	r3, [r2]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 265              		.loc 1 166 0
 266 0032 094B     		ldr	r3, .L25+12
 267 0034 1860     		str	r0, [r3]
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 268              		.loc 1 170 0
 269 0036 0020     		movs	r0, #0
 270              	.LVL11:
 271 0038 FFF7FEFF 		bl	HAL_InitTick
 272              	.LVL12:
 273 003c 10B1     		cbz	r0, .L24
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 274              		.loc 1 172 0
 275 003e 0124     		movs	r4, #1
 276              	.L21:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 277              		.loc 1 180 0
 278 0040 2046     		mov	r0, r4
 279 0042 10BD     		pop	{r4, pc}
 280              	.L24:
 281 0044 0446     		mov	r4, r0
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 282              		.loc 1 176 0
 283 0046 FFF7FEFF 		bl	HAL_MspInit
 284              	.LVL13:
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 285              		.loc 1 179 0
 286 004a F9E7     		b	.L21
 287              	.L26:
 288              		.align	2
 289              	.L25:
 290 004c 00440258 		.word	1476543488
 291 0050 00000000 		.word	D1CorePrescTable
 292 0054 00000000 		.word	SystemD2Clock
 293 0058 00000000 		.word	SystemCoreClock
 294              		.cfi_endproc
 295              	.LFE343:
 297              		.section	.text.HAL_IncTick,"ax",%progbits
 298              		.align	1
 299              		.weak	HAL_IncTick
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv5-d16
 305              	HAL_IncTick:
 306              	.LFB348:
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/ccSOiArA.s 			page 12


 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group2 HAL Control functions
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    HAL Control functions
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                       ##### HAL Control functions #####
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a tick value in millisecond
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Suspend the time base source interrupt
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Resume the time base source interrupt
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the HAL API driver version
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device identifier
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device revision identifier
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        used as application time base.
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       in Systick ISR.
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *      implementations in user file.
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_IncTick(void)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 307              		.loc 1 328 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 312              		.loc 1 329 0
 313 0000 034B     		ldr	r3, .L28
 314 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 315 0004 034A     		ldr	r2, .L28+4
 316 0006 1168     		ldr	r1, [r2]
 317 0008 0B44     		add	r3, r3, r1
 318 000a 1360     		str	r3, [r2]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 319              		.loc 1 330 0
 320 000c 7047     		bx	lr
 321              	.L29:
 322 000e 00BF     		.align	2
 323              	.L28:
 324 0010 00000000 		.word	.LANCHOR0
 325 0014 00000000 		.word	uwTick
 326              		.cfi_endproc
ARM GAS  /tmp/ccSOiArA.s 			page 13


 327              	.LFE348:
 329              		.section	.text.HAL_GetTick,"ax",%progbits
 330              		.align	1
 331              		.weak	HAL_GetTick
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-d16
 337              	HAL_GetTick:
 338              	.LFB349:
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick value
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 339              		.loc 1 339 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTick;
 344              		.loc 1 340 0
 345 0000 014B     		ldr	r3, .L31
 346 0002 1868     		ldr	r0, [r3]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 347              		.loc 1 341 0
 348 0004 7047     		bx	lr
 349              	.L32:
 350 0006 00BF     		.align	2
 351              	.L31:
 352 0008 00000000 		.word	uwTick
 353              		.cfi_endproc
 354              	.LFE349:
 356              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_GetTickPrio
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu fpv5-d16
 364              	HAL_GetTickPrio:
 365              	.LFB350:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function returns a tick priority.
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick priority
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 366              		.loc 1 348 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccSOiArA.s 			page 14


 370              		@ link register save eliminated.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickPrio;
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 371              		.loc 1 350 0
 372 0000 014B     		ldr	r3, .L34
 373 0002 1868     		ldr	r0, [r3]
 374 0004 7047     		bx	lr
 375              	.L35:
 376 0006 00BF     		.align	2
 377              	.L34:
 378 0008 00000000 		.word	.LANCHOR1
 379              		.cfi_endproc
 380              	.LFE350:
 382              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_SetTickFreq
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv5-d16
 390              	HAL_SetTickFreq:
 391              	.LFB351:
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Set new tick Freq.
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Status
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 392              		.loc 1 357 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL14:
 397 0000 10B5     		push	{r4, lr}
 398              	.LCFI3:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402              	.LVL15:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (uwTickFreq != Freq)
 403              		.loc 1 363 0
 404 0002 084B     		ldr	r3, .L40
 405 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 406 0006 8442     		cmp	r4, r0
 407 0008 09D0     		beq	.L38
 408              	.LVL16:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Back up uwTickFreq frequency */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     prevTickFreq = uwTickFreq;
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccSOiArA.s 			page 15


 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickFreq = Freq;
 409              		.loc 1 370 0
 410 000a 1870     		strb	r0, [r3]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Apply the new tick Freq  */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 411              		.loc 1 373 0
 412 000c 064B     		ldr	r3, .L40+4
 413 000e 1868     		ldr	r0, [r3]
 414              	.LVL17:
 415 0010 FFF7FEFF 		bl	HAL_InitTick
 416              	.LVL18:
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 417              		.loc 1 374 0
 418 0014 0346     		mov	r3, r0
 419 0016 18B1     		cbz	r0, .L37
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Restore previous tick frequency */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       uwTickFreq = prevTickFreq;
 420              		.loc 1 377 0
 421 0018 024A     		ldr	r2, .L40
 422 001a 1470     		strb	r4, [r2]
 423 001c 00E0     		b	.L37
 424              	.LVL19:
 425              	.L38:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 426              		.loc 1 358 0
 427 001e 0023     		movs	r3, #0
 428              	.LVL20:
 429              	.L37:
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return status;
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 430              		.loc 1 382 0
 431 0020 1846     		mov	r0, r3
 432 0022 10BD     		pop	{r4, pc}
 433              	.L41:
 434              		.align	2
 435              	.L40:
 436 0024 00000000 		.word	.LANCHOR0
 437 0028 00000000 		.word	.LANCHOR1
 438              		.cfi_endproc
 439              	.LFE351:
 441              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 442              		.align	1
 443              		.global	HAL_GetTickFreq
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv5-d16
 449              	HAL_GetTickFreq:
 450              	.LFB352:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
ARM GAS  /tmp/ccSOiArA.s 			page 16


 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Return tick frequency.
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick period in Hz
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 451              		.loc 1 389 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickFreq;
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 456              		.loc 1 391 0
 457 0000 014B     		ldr	r3, .L43
 458 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 459 0004 7047     		bx	lr
 460              	.L44:
 461 0006 00BF     		.align	2
 462              	.L43:
 463 0008 00000000 		.word	.LANCHOR0
 464              		.cfi_endproc
 465              	.LFE352:
 467              		.section	.text.HAL_Delay,"ax",%progbits
 468              		.align	1
 469              		.weak	HAL_Delay
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv5-d16
 475              	HAL_Delay:
 476              	.LFB353:
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        on variable incremented.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is incremented.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 477              		.loc 1 405 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL21:
 482 0000 38B5     		push	{r3, r4, r5, lr}
 483              	.LCFI4:
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 3, -16
 486              		.cfi_offset 4, -12
 487              		.cfi_offset 5, -8
 488              		.cfi_offset 14, -4
ARM GAS  /tmp/ccSOiArA.s 			page 17


 489 0002 0446     		mov	r4, r0
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 490              		.loc 1 406 0
 491 0004 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL22:
 493 0008 0546     		mov	r5, r0
 494              	.LVL23:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t wait = Delay;
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 495              		.loc 1 410 0
 496 000a B4F1FF3F 		cmp	r4, #-1
 497 000e 02D0     		beq	.L47
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 498              		.loc 1 412 0
 499 0010 044B     		ldr	r3, .L49
 500 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0014 1C44     		add	r4, r4, r3
 502              	.LVL24:
 503              	.L47:
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 504              		.loc 1 415 0 discriminator 1
 505 0016 FFF7FEFF 		bl	HAL_GetTick
 506              	.LVL25:
 507 001a 401B     		subs	r0, r0, r5
 508 001c A042     		cmp	r0, r4
 509 001e FAD3     		bcc	.L47
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 510              		.loc 1 418 0
 511 0020 38BD     		pop	{r3, r4, r5, pc}
 512              	.LVL26:
 513              	.L50:
 514 0022 00BF     		.align	2
 515              	.L49:
 516 0024 00000000 		.word	.LANCHOR0
 517              		.cfi_endproc
 518              	.LFE353:
 520              		.section	.text.HAL_SuspendTick,"ax",%progbits
 521              		.align	1
 522              		.weak	HAL_SuspendTick
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 526              		.fpu fpv5-d16
 528              	HAL_SuspendTick:
 529              	.LFB354:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Suspend Tick increment.
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
ARM GAS  /tmp/ccSOiArA.s 			page 18


 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is suspended.
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_SuspendTick(void)
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 530              		.loc 1 431 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Disable SysTick Interrupt */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 535              		.loc 1 433 0
 536 0000 024A     		ldr	r2, .L52
 537 0002 1368     		ldr	r3, [r2]
 538 0004 23F00203 		bic	r3, r3, #2
 539 0008 1360     		str	r3, [r2]
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 540              		.loc 1 434 0
 541 000a 7047     		bx	lr
 542              	.L53:
 543              		.align	2
 544              	.L52:
 545 000c 10E000E0 		.word	-536813552
 546              		.cfi_endproc
 547              	.LFE354:
 549              		.section	.text.HAL_ResumeTick,"ax",%progbits
 550              		.align	1
 551              		.weak	HAL_ResumeTick
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv5-d16
 557              	HAL_ResumeTick:
 558              	.LFB355:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Resume Tick increment.
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is resumed.
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_ResumeTick(void)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 559              		.loc 1 447 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Enable SysTick Interrupt */
ARM GAS  /tmp/ccSOiArA.s 			page 19


 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 564              		.loc 1 449 0
 565 0000 024A     		ldr	r2, .L55
 566 0002 1368     		ldr	r3, [r2]
 567 0004 43F00203 		orr	r3, r3, #2
 568 0008 1360     		str	r3, [r2]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 569              		.loc 1 450 0
 570 000a 7047     		bx	lr
 571              	.L56:
 572              		.align	2
 573              	.L55:
 574 000c 10E000E0 		.word	-536813552
 575              		.cfi_endproc
 576              	.LFE355:
 578              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 579              		.align	1
 580              		.global	HAL_GetHalVersion
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu fpv5-d16
 586              	HAL_GetHalVersion:
 587              	.LFB356:
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the HAL revision
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 588              		.loc 1 457 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  return __STM32H7xx_HAL_VERSION;
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 593              		.loc 1 459 0
 594 0000 0048     		ldr	r0, .L58
 595 0002 7047     		bx	lr
 596              	.L59:
 597              		.align	2
 598              	.L58:
 599 0004 00000901 		.word	17367040
 600              		.cfi_endproc
 601              	.LFE356:
 603              		.section	.text.HAL_GetREVID,"ax",%progbits
 604              		.align	1
 605              		.global	HAL_GetREVID
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv5-d16
 611              	HAL_GetREVID:
 612              	.LFB357:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccSOiArA.s 			page 20


 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device revision identifier.
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device revision identifier
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetREVID(void)
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 613              		.loc 1 466 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 618              		.loc 1 467 0
 619 0000 014B     		ldr	r3, .L61
 620 0002 1868     		ldr	r0, [r3]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 621              		.loc 1 468 0
 622 0004 000C     		lsrs	r0, r0, #16
 623 0006 7047     		bx	lr
 624              	.L62:
 625              		.align	2
 626              	.L61:
 627 0008 0010005C 		.word	1543507968
 628              		.cfi_endproc
 629              	.LFE357:
 631              		.section	.text.HAL_GetDEVID,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_GetDEVID
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv5-d16
 639              	HAL_GetDEVID:
 640              	.LFB358:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device identifier.
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 641              		.loc 1 475 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 646              		.loc 1 476 0
 647 0000 024B     		ldr	r3, .L64
 648 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 649              		.loc 1 477 0
 650 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 651 0008 7047     		bx	lr
 652              	.L65:
 653 000a 00BF     		.align	2
 654              	.L64:
ARM GAS  /tmp/ccSOiArA.s 			page 21


 655 000c 0010005C 		.word	1543507968
 656              		.cfi_endproc
 657              	.LFE358:
 659              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 660              		.align	1
 661              		.global	HAL_GetUIDw0
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu fpv5-d16
 667              	HAL_GetUIDw0:
 668              	.LFB359:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 669              		.loc 1 484 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 674              		.loc 1 486 0
 675 0000 014B     		ldr	r3, .L67
 676 0002 1868     		ldr	r0, [r3]
 677 0004 7047     		bx	lr
 678              	.L68:
 679 0006 00BF     		.align	2
 680              	.L67:
 681 0008 00E8F11F 		.word	535947264
 682              		.cfi_endproc
 683              	.LFE359:
 685              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_GetUIDw1
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv5-d16
 693              	HAL_GetUIDw1:
 694              	.LFB360:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 695              		.loc 1 493 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
ARM GAS  /tmp/ccSOiArA.s 			page 22


 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 700              		.loc 1 495 0
 701 0000 014B     		ldr	r3, .L70
 702 0002 1868     		ldr	r0, [r3]
 703 0004 7047     		bx	lr
 704              	.L71:
 705 0006 00BF     		.align	2
 706              	.L70:
 707 0008 04E8F11F 		.word	535947268
 708              		.cfi_endproc
 709              	.LFE360:
 711              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 712              		.align	1
 713              		.global	HAL_GetUIDw2
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu fpv5-d16
 719              	HAL_GetUIDw2:
 720              	.LFB361:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 721              		.loc 1 502 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 726              		.loc 1 504 0
 727 0000 014B     		ldr	r3, .L73
 728 0002 1868     		ldr	r0, [r3]
 729 0004 7047     		bx	lr
 730              	.L74:
 731 0006 00BF     		.align	2
 732              	.L73:
 733 0008 08E8F11F 		.word	535947272
 734              		.cfi_endproc
 735              	.LFE361:
 737              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
 738              		.align	1
 739              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv5-d16
 745              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 746              	.LFB362:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
ARM GAS  /tmp/ccSOiArA.s 			page 23


 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param VoltageScaling  specifies the output voltage to achieve
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.048 V.
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.5 V.
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.5 V.
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.8 V.
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 747              		.loc 1 521 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              	.LVL27:
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 753              		.loc 1 525 0
 754 0000 034A     		ldr	r2, .L76
 755 0002 1368     		ldr	r3, [r2]
 756 0004 23F07003 		bic	r3, r3, #112
 757 0008 1843     		orrs	r0, r0, r3
 758              	.LVL28:
 759 000a 1060     		str	r0, [r2]
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 760              		.loc 1 526 0
 761 000c 7047     		bx	lr
 762              	.L77:
 763 000e 00BF     		.align	2
 764              	.L76:
 765 0010 003C0058 		.word	1476410368
 766              		.cfi_endproc
 767              	.LFE362:
 769              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 770              		.align	1
 771              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv5-d16
 777              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
 778              	.LFB363:
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Mode  specifies the high impedance mode
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFI
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccSOiArA.s 			page 24


 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 779              		.loc 1 537 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL29:
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 785              		.loc 1 541 0
 786 0000 034A     		ldr	r2, .L79
 787 0002 1368     		ldr	r3, [r2]
 788 0004 23F00203 		bic	r3, r3, #2
 789 0008 1843     		orrs	r0, r0, r3
 790              	.LVL30:
 791 000a 1060     		str	r0, [r2]
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 792              		.loc 1 542 0
 793 000c 7047     		bx	lr
 794              	.L80:
 795 000e 00BF     		.align	2
 796              	.L79:
 797 0010 003C0058 		.word	1476410368
 798              		.cfi_endproc
 799              	.LFE363:
 801              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv5-d16
 809              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 810              	.LFB364:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 811              		.loc 1 549 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816              	.LVL31:
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 817              		.loc 1 553 0
 818 0000 034A     		ldr	r2, .L82
ARM GAS  /tmp/ccSOiArA.s 			page 25


 819 0002 5368     		ldr	r3, [r2, #4]
 820 0004 23F03F03 		bic	r3, r3, #63
 821 0008 1843     		orrs	r0, r0, r3
 822              	.LVL32:
 823 000a 5060     		str	r0, [r2, #4]
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 824              		.loc 1 554 0
 825 000c 7047     		bx	lr
 826              	.L83:
 827 000e 00BF     		.align	2
 828              	.L82:
 829 0010 003C0058 		.word	1476410368
 830              		.cfi_endproc
 831              	.LFE364:
 833              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 834              		.align	1
 835              		.global	HAL_SYSCFG_EnableVREFBUF
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv5-d16
 841              	HAL_SYSCFG_EnableVREFBUF:
 842              	.LFB365:
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 843              		.loc 1 561 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 10B5     		push	{r4, lr}
 848              	.LCFI5:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 4, -8
 851              		.cfi_offset 14, -4
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t  tickstart;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 852              		.loc 1 564 0
 853 0002 0B4A     		ldr	r2, .L91
 854 0004 1368     		ldr	r3, [r2]
 855 0006 43F00103 		orr	r3, r3, #1
 856 000a 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Get Start Tick*/
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   tickstart = HAL_GetTick();
 857              		.loc 1 567 0
 858 000c FFF7FEFF 		bl	HAL_GetTick
 859              	.LVL33:
 860 0010 0446     		mov	r4, r0
 861              	.LVL34:
 862              	.L85:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccSOiArA.s 			page 26


 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Wait for VRR bit  */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 863              		.loc 1 570 0
 864 0012 074B     		ldr	r3, .L91
 865 0014 1B68     		ldr	r3, [r3]
 866 0016 13F0080F 		tst	r3, #8
 867 001a 06D1     		bne	.L90
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 868              		.loc 1 572 0
 869 001c FFF7FEFF 		bl	HAL_GetTick
 870              	.LVL35:
 871 0020 001B     		subs	r0, r0, r4
 872 0022 0A28     		cmp	r0, #10
 873 0024 F5D9     		bls	.L85
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_TIMEOUT;
 874              		.loc 1 574 0
 875 0026 0320     		movs	r0, #3
 876 0028 00E0     		b	.L86
 877              	.L90:
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 878              		.loc 1 578 0
 879 002a 0020     		movs	r0, #0
 880              	.L86:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 881              		.loc 1 579 0
 882 002c 10BD     		pop	{r4, pc}
 883              	.LVL36:
 884              	.L92:
 885 002e 00BF     		.align	2
 886              	.L91:
 887 0030 003C0058 		.word	1476410368
 888              		.cfi_endproc
 889              	.LFE365:
 891              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_SYSCFG_DisableVREFBUF
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-d16
 899              	HAL_SYSCFG_DisableVREFBUF:
 900              	.LFB366:
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 901              		.loc 1 587 0
 902              		.cfi_startproc
ARM GAS  /tmp/ccSOiArA.s 			page 27


 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 906              		.loc 1 588 0
 907 0000 024A     		ldr	r2, .L94
 908 0002 1368     		ldr	r3, [r2]
 909 0004 23F00103 		bic	r3, r3, #1
 910 0008 1360     		str	r3, [r2]
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 911              		.loc 1 589 0
 912 000a 7047     		bx	lr
 913              	.L95:
 914              		.align	2
 915              	.L94:
 916 000c 003C0058 		.word	1476410368
 917              		.cfi_endproc
 918              	.LFE366:
 920              		.section	.text.HAL_SYSCFG_ETHInterfaceSelect,"ax",%progbits
 921              		.align	1
 922              		.global	HAL_SYSCFG_ETHInterfaceSelect
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv5-d16
 928              	HAL_SYSCFG_ETHInterfaceSelect:
 929              	.LFB367:
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_EPIS_SEL)
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_ETHInterface: Selects the Ethernet PHY interface
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_MII : Select the Media Independent Interface
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_RMII: Select the Reduced Media Independent Interface
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ETHInterfaceSelect(uint32_t SYSCFG_ETHInterface)
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 930              		.loc 1 601 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL37:
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ETHERNET_CONFIG(SYSCFG_ETHInterface));
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, SYSCFG_PMCR_EPIS_SEL, (uint32_t)(SYSCFG_ETHInterface));
 936              		.loc 1 605 0
 937 0000 034A     		ldr	r2, .L97
 938 0002 5368     		ldr	r3, [r2, #4]
 939 0004 23F46003 		bic	r3, r3, #14680064
 940 0008 1843     		orrs	r0, r0, r3
 941              	.LVL38:
 942 000a 5060     		str	r0, [r2, #4]
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/ccSOiArA.s 			page 28


 943              		.loc 1 606 0
 944 000c 7047     		bx	lr
 945              	.L98:
 946 000e 00BF     		.align	2
 947              	.L97:
 948 0010 00040058 		.word	1476396032
 949              		.cfi_endproc
 950              	.LFE367:
 952              		.section	.text.HAL_SYSCFG_AnalogSwitchConfig,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_SYSCFG_AnalogSwitchConfig
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv5-d16
 960              	HAL_SYSCFG_AnalogSwitchConfig:
 961              	.LFB368:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_EPIS_SEL */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Analog Switch control for dual analog pads.
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_AnalogSwitch: Selects the analog pad
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0 : Select PA0 analog switch
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1:  Select PA1 analog switch
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2 : Select PC2 analog switch
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3:  Select PC3 analog switch
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_SwitchState: Open or Close the analog switch between dual pads (PXn and PXn_C)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_OPEN
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_CLOSE
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_OPEN
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_CLOSE
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_OPEN
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_CLOSE
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_OPEN
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_CLOSE
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 962              		.loc 1 631 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967              	.LVL39:
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 968              		.loc 1 636 0
 969 0000 034A     		ldr	r2, .L100
 970 0002 5368     		ldr	r3, [r2, #4]
 971 0004 23EA0000 		bic	r0, r3, r0
ARM GAS  /tmp/ccSOiArA.s 			page 29


 972              	.LVL40:
 973 0008 0843     		orrs	r0, r0, r1
 974 000a 5060     		str	r0, [r2, #4]
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 975              		.loc 1 637 0
 976 000c 7047     		bx	lr
 977              	.L101:
 978 000e 00BF     		.align	2
 979              	.L100:
 980 0010 00040058 		.word	1476396032
 981              		.cfi_endproc
 982              	.LFE368:
 984              		.section	.text.HAL_SYSCFG_EnableBOOST,"ax",%progbits
 985              		.align	1
 986              		.global	HAL_SYSCFG_EnableBOOST
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv5-d16
 992              	HAL_SYSCFG_EnableBOOST:
 993              	.LFB369:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_BOOSTEN)
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the booster to reduce the total harmonic distortion of the analog
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         switch when the supply voltage is lower than 2.7 V.
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableBOOST(void)
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 994              		.loc 1 649 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 999              		.loc 1 650 0
 1000 0000 024A     		ldr	r2, .L103
 1001 0002 5368     		ldr	r3, [r2, #4]
 1002 0004 43F48073 		orr	r3, r3, #256
 1003 0008 5360     		str	r3, [r2, #4]
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1004              		.loc 1 651 0
 1005 000a 7047     		bx	lr
 1006              	.L104:
 1007              		.align	2
 1008              	.L103:
 1009 000c 00040058 		.word	1476396032
 1010              		.cfi_endproc
 1011              	.LFE369:
 1013              		.section	.text.HAL_SYSCFG_DisableBOOST,"ax",%progbits
 1014              		.align	1
 1015              		.global	HAL_SYSCFG_DisableBOOST
 1016              		.syntax unified
ARM GAS  /tmp/ccSOiArA.s 			page 30


 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu fpv5-d16
 1021              	HAL_SYSCFG_DisableBOOST:
 1022              	.LFB370:
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the booster
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableBOOST(void)
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1023              		.loc 1 661 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 1028              		.loc 1 662 0
 1029 0000 024A     		ldr	r2, .L106
 1030 0002 5368     		ldr	r3, [r2, #4]
 1031 0004 23F48073 		bic	r3, r3, #256
 1032 0008 5360     		str	r3, [r2, #4]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1033              		.loc 1 663 0
 1034 000a 7047     		bx	lr
 1035              	.L107:
 1036              		.align	2
 1037              	.L106:
 1038 000c 00040058 		.word	1476396032
 1039              		.cfi_endproc
 1040              	.LFE370:
 1042              		.section	.text.HAL_SYSCFG_CM7BootAddConfig,"ax",%progbits
 1043              		.align	1
 1044              		.global	HAL_SYSCFG_CM7BootAddConfig
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv5-d16
 1050              	HAL_SYSCFG_CM7BootAddConfig:
 1051              	.LFB371:
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_BOOSTEN */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined (SYSCFG_UR2_BOOT_ADD0) ||  defined (SYSCFG_UR2_BCM7_ADD0)
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM7 address 0 configuration
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM7 Boot Address to be loaded in Address0 or Address1
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM7BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
ARM GAS  /tmp/ccSOiArA.s 			page 31


 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1052              		.loc 1 677 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		@ link register save eliminated.
 1057              	.LVL41:
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 1058              		.loc 1 681 0
 1059 0000 48B1     		cbz	r0, .L111
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD0 */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BCM7_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BCM7_ADD0_Pos)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BOOT_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BOOT_ADD0_Pos)
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD1 */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM7_ADD1, (BootAddress >> 16));
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BOOT_ADD1, (BootAddress >> 16));
 1060              		.loc 1 696 0
 1061 0002 0A4A     		ldr	r2, .L112
 1062 0004 D2F80C03 		ldr	r0, [r2, #780]
 1063              	.LVL42:
 1064 0008 094B     		ldr	r3, .L112+4
 1065 000a 0340     		ands	r3, r3, r0
 1066 000c 43EA1143 		orr	r3, r3, r1, lsr #16
 1067 0010 C2F80C33 		str	r3, [r2, #780]
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1068              		.loc 1 699 0
 1069 0014 7047     		bx	lr
 1070              	.LVL43:
 1071              	.L111:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 1072              		.loc 1 687 0
 1073 0016 0548     		ldr	r0, .L112
 1074              	.LVL44:
 1075 0018 D0F80833 		ldr	r3, [r0, #776]
 1076 001c 9BB2     		uxth	r3, r3
 1077 001e 044A     		ldr	r2, .L112+4
 1078 0020 0A40     		ands	r2, r2, r1
 1079 0022 1343     		orrs	r3, r3, r2
 1080 0024 C0F80833 		str	r3, [r0, #776]
 1081 0028 7047     		bx	lr
 1082              	.L113:
 1083 002a 00BF     		.align	2
 1084              	.L112:
ARM GAS  /tmp/ccSOiArA.s 			page 32


 1085 002c 00040058 		.word	1476396032
 1086 0030 0000FFFF 		.word	-65536
 1087              		.cfi_endproc
 1088              	.LFE371:
 1090              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1091              		.align	1
 1092              		.global	HAL_EnableCompensationCell
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1096              		.fpu fpv5-d16
 1098              	HAL_EnableCompensationCell:
 1099              	.LFB372:
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_UR2_BOOT_ADD0 || SYSCFG_UR2_BCM7_ADD0 */
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM4 address 0 configuration
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM4 Boot Address to be loaded in Address0 or Address1
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM4BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD0 */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM4_ADD0, ((BootAddress >> 16)<< SYSCFG_UR3_BCM4_ADD0_Pos))
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD1 */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR4, SYSCFG_UR4_BCM4_ADD1, (BootAddress >> 16));
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M7 boot
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM7BOOT(void)
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M7 boot
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccSOiArA.s 			page 33


 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM7BOOT(void)
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7) ;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M4 boot
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM4BOOT(void)
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M4 boot
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM4BOOT(void)
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableCompensationCell(void)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1100              		.loc 1 776 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN) ;
 1105              		.loc 1 777 0
 1106 0000 024A     		ldr	r2, .L115
 1107 0002 136A     		ldr	r3, [r2, #32]
 1108 0004 43F00103 		orr	r3, r3, #1
 1109 0008 1362     		str	r3, [r2, #32]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1110              		.loc 1 778 0
 1111 000a 7047     		bx	lr
 1112              	.L116:
 1113              		.align	2
 1114              	.L115:
 1115 000c 00040058 		.word	1476396032
 1116              		.cfi_endproc
 1117              	.LFE372:
 1119              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1120              		.align	1
 1121              		.global	HAL_DisableCompensationCell
 1122              		.syntax unified
ARM GAS  /tmp/ccSOiArA.s 			page 34


 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv5-d16
 1127              	HAL_DisableCompensationCell:
 1128              	.LFB373:
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableCompensationCell(void)
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1129              		.loc 1 787 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN);
 1134              		.loc 1 788 0
 1135 0000 024A     		ldr	r2, .L118
 1136 0002 136A     		ldr	r3, [r2, #32]
 1137 0004 23F00103 		bic	r3, r3, #1
 1138 0008 1362     		str	r3, [r2, #32]
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1139              		.loc 1 789 0
 1140 000a 7047     		bx	lr
 1141              	.L119:
 1142              		.align	2
 1143              	.L118:
 1144 000c 00040058 		.word	1476396032
 1145              		.cfi_endproc
 1146              	.LFE373:
 1148              		.section	.text.HAL_SYSCFG_EnableIOSpeedOptimize,"ax",%progbits
 1149              		.align	1
 1150              		.global	HAL_SYSCFG_EnableIOSpeedOptimize
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1154              		.fpu fpv5-d16
 1156              	HAL_SYSCFG_EnableIOSpeedOptimize:
 1157              	.LFB374:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Enable optimize the I/O speed when the product voltage is low.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableIOSpeedOptimize(void)
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1158              		.loc 1 800 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSOiArA.s 			page 35


 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1163              		.loc 1 802 0
 1164 0000 024A     		ldr	r2, .L121
 1165 0002 136A     		ldr	r3, [r2, #32]
 1166 0004 43F48033 		orr	r3, r3, #65536
 1167 0008 1362     		str	r3, [r2, #32]
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_CCC
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1168              		.loc 1 806 0
 1169 000a 7047     		bx	lr
 1170              	.L122:
 1171              		.align	2
 1172              	.L121:
 1173 000c 00040058 		.word	1476396032
 1174              		.cfi_endproc
 1175              	.LFE374:
 1177              		.section	.text.HAL_SYSCFG_DisableIOSpeedOptimize,"ax",%progbits
 1178              		.align	1
 1179              		.global	HAL_SYSCFG_DisableIOSpeedOptimize
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv5-d16
 1185              	HAL_SYSCFG_DisableIOSpeedOptimize:
 1186              	.LFB375:
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Disable optimize the I/O speed when the product voltage is low.
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableIOSpeedOptimize(void)
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1187              		.loc 1 816 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1192              		.loc 1 818 0
 1193 0000 024A     		ldr	r2, .L124
 1194 0002 136A     		ldr	r3, [r2, #32]
 1195 0004 23F48033 		bic	r3, r3, #65536
 1196 0008 1362     		str	r3, [r2, #32]
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_C
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1197              		.loc 1 822 0
ARM GAS  /tmp/ccSOiArA.s 			page 36


 1198 000a 7047     		bx	lr
 1199              	.L125:
 1200              		.align	2
 1201              	.L124:
 1202 000c 00040058 		.word	1476396032
 1203              		.cfi_endproc
 1204              	.LFE375:
 1206              		.section	.text.HAL_SYSCFG_CompensationCodeSelect,"ax",%progbits
 1207              		.align	1
 1208              		.global	HAL_SYSCFG_CompensationCodeSelect
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1212              		.fpu fpv5-d16
 1214              	HAL_SYSCFG_CompensationCodeSelect:
 1215              	.LFB376:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_CompCode: Selects the code to be applied for the I/O compensation cell
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_CELL_CODE : Select Code from the cell (available in the SYSCFG_CCVR)
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_REGISTER_CODE: Select Code from the SYSCFG compensation cell code register (SYSCF
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeSelect(uint32_t SYSCFG_CompCode)
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1216              		.loc 1 833 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221              	.LVL45:
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_SELECT(SYSCFG_CompCode));
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCSR, SYSCFG_CCCSR_CS, (uint32_t)(SYSCFG_CompCode));
 1222              		.loc 1 836 0
 1223 0000 034A     		ldr	r2, .L127
 1224 0002 136A     		ldr	r3, [r2, #32]
 1225 0004 23F00203 		bic	r3, r3, #2
 1226 0008 1843     		orrs	r0, r0, r3
 1227              	.LVL46:
 1228 000a 1062     		str	r0, [r2, #32]
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1229              		.loc 1 837 0
 1230 000c 7047     		bx	lr
 1231              	.L128:
 1232 000e 00BF     		.align	2
 1233              	.L127:
 1234 0010 00040058 		.word	1476396032
 1235              		.cfi_endproc
 1236              	.LFE376:
 1238              		.section	.text.HAL_SYSCFG_CompensationCodeConfig,"ax",%progbits
 1239              		.align	1
 1240              		.global	HAL_SYSCFG_CompensationCodeConfig
 1241              		.syntax unified
 1242              		.thumb
ARM GAS  /tmp/ccSOiArA.s 			page 37


 1243              		.thumb_func
 1244              		.fpu fpv5-d16
 1246              	HAL_SYSCFG_CompensationCodeConfig:
 1247              	.LFB377:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: PMOS compensation code
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: NMOS compensation code
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1248              		.loc 1 850 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253              	.LVL47:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, SYSCFG_CCCR_NCC|SYSCFG_CCCR_PCC, (((uint32_t)(SYSCFG_PMOSCode)<< 4)|(uin
 1254              		.loc 1 854 0
 1255 0000 044A     		ldr	r2, .L130
 1256 0002 936A     		ldr	r3, [r2, #40]
 1257 0004 23F0FF03 		bic	r3, r3, #255
 1258 0008 41EA0010 		orr	r0, r1, r0, lsl #4
 1259              	.LVL48:
 1260 000c 0343     		orrs	r3, r3, r0
 1261 000e 9362     		str	r3, [r2, #40]
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1262              		.loc 1 855 0
 1263 0010 7047     		bx	lr
 1264              	.L131:
 1265 0012 00BF     		.align	2
 1266              	.L130:
 1267 0014 00040058 		.word	1476396032
 1268              		.cfi_endproc
 1269              	.LFE377:
 1271              		.section	.text.HAL_SYSCFG_ADC2ALT_Rout0Config,"ax",%progbits
 1272              		.align	1
 1273              		.global	HAL_SYSCFG_ADC2ALT_Rout0Config
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1277              		.fpu fpv5-d16
 1279              	HAL_SYSCFG_ADC2ALT_Rout0Config:
 1280              	.LFB378:
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCR_NCC_MMC)
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
ARM GAS  /tmp/ccSOiArA.s 			page 38


 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: VDDMMC PMOS compensation code
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: VDDMMC NMOS compensation code
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VDDMMC_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, (SYSCFG_CCCR_NCC_MMC | SYSCFG_CCCR_PCC_MMC), (((uint32_t)(SYSCFG_PMOSCod
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_CCCR_NCC_MMC */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT0)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout0 This parameter can be a value of :
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_DAC1_1   DAC1_out1 connected to ADC2 VINP[16]
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_VBAT4    VBAT/4 connected to ADC2 VINP[16]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout0Config(uint32_t Adc2AltRout0)
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1281              		.loc 1 884 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286              	.LVL49:
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT0(Adc2AltRout0));
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT0, Adc2AltRout0);
 1287              		.loc 1 888 0
 1288 0000 034A     		ldr	r2, .L133
 1289 0002 136B     		ldr	r3, [r2, #48]
 1290 0004 23F00103 		bic	r3, r3, #1
 1291 0008 1843     		orrs	r0, r0, r3
 1292              	.LVL50:
 1293 000a 1063     		str	r0, [r2, #48]
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1294              		.loc 1 889 0
 1295 000c 7047     		bx	lr
 1296              	.L134:
 1297 000e 00BF     		.align	2
 1298              	.L133:
 1299 0010 00040058 		.word	1476396032
 1300              		.cfi_endproc
 1301              	.LFE378:
 1303              		.section	.text.HAL_SYSCFG_ADC2ALT_Rout1Config,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_SYSCFG_ADC2ALT_Rout1Config
 1306              		.syntax unified
 1307              		.thumb
 1308              		.thumb_func
ARM GAS  /tmp/ccSOiArA.s 			page 39


 1309              		.fpu fpv5-d16
 1311              	HAL_SYSCFG_ADC2ALT_Rout1Config:
 1312              	.LFB379:
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT0*/
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT1)
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout1  This parameter can be a value of :
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_DAC1_2   DAC1_out2 connected to ADC2 VINP[17]
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_VREFINT  VREFINT connected to ADC2 VINP[17]
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout1Config(uint32_t Adc2AltRout1)
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1313              		.loc 1 902 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 0
 1316              		@ frame_needed = 0, uses_anonymous_args = 0
 1317              		@ link register save eliminated.
 1318              	.LVL51:
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT1(Adc2AltRout1));
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT1, Adc2AltRout1);
 1319              		.loc 1 906 0
 1320 0000 034A     		ldr	r2, .L136
 1321 0002 136B     		ldr	r3, [r2, #48]
 1322 0004 23F00203 		bic	r3, r3, #2
 1323 0008 1843     		orrs	r0, r0, r3
 1324              	.LVL52:
 1325 000a 1063     		str	r0, [r2, #48]
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1326              		.loc 1 907 0
 1327 000c 7047     		bx	lr
 1328              	.L137:
 1329 000e 00BF     		.align	2
 1330              	.L136:
 1331 0010 00040058 		.word	1476396032
 1332              		.cfi_endproc
 1333              	.LFE379:
 1335              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 1336              		.align	1
 1337              		.global	HAL_DBGMCU_EnableDBGSleepMode
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv5-d16
 1343              	HAL_DBGMCU_EnableDBGSleepMode:
 1344              	.LFB380:
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT1*/
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
ARM GAS  /tmp/ccSOiArA.s 			page 40


 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain SLEEP mode
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGSleepMode(void)
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1345              		.loc 1 918 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1350              		.loc 1 919 0
 1351 0000 024A     		ldr	r2, .L139
 1352 0002 5368     		ldr	r3, [r2, #4]
 1353 0004 43F00103 		orr	r3, r3, #1
 1354 0008 5360     		str	r3, [r2, #4]
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1355              		.loc 1 920 0
 1356 000a 7047     		bx	lr
 1357              	.L140:
 1358              		.align	2
 1359              	.L139:
 1360 000c 0010005C 		.word	1543507968
 1361              		.cfi_endproc
 1362              	.LFE380:
 1364              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1365              		.align	1
 1366              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu fpv5-d16
 1372              	HAL_DBGMCU_DisableDBGSleepMode:
 1373              	.LFB381:
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain SLEEP mode
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGSleepMode(void)
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1374              		.loc 1 927 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              		@ link register save eliminated.
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1379              		.loc 1 928 0
 1380 0000 024A     		ldr	r2, .L142
 1381 0002 5368     		ldr	r3, [r2, #4]
 1382 0004 23F00103 		bic	r3, r3, #1
 1383 0008 5360     		str	r3, [r2, #4]
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1384              		.loc 1 929 0
 1385 000a 7047     		bx	lr
 1386              	.L143:
 1387              		.align	2
ARM GAS  /tmp/ccSOiArA.s 			page 41


 1388              	.L142:
 1389 000c 0010005C 		.word	1543507968
 1390              		.cfi_endproc
 1391              	.LFE381:
 1393              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1394              		.align	1
 1395              		.global	HAL_DBGMCU_EnableDBGStopMode
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv5-d16
 1401              	HAL_DBGMCU_EnableDBGStopMode:
 1402              	.LFB382:
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STOP mode
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStopMode(void)
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1403              		.loc 1 937 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1408              		.loc 1 938 0
 1409 0000 024A     		ldr	r2, .L145
 1410 0002 5368     		ldr	r3, [r2, #4]
 1411 0004 43F00203 		orr	r3, r3, #2
 1412 0008 5360     		str	r3, [r2, #4]
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1413              		.loc 1 939 0
 1414 000a 7047     		bx	lr
 1415              	.L146:
 1416              		.align	2
 1417              	.L145:
 1418 000c 0010005C 		.word	1543507968
 1419              		.cfi_endproc
 1420              	.LFE382:
 1422              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1423              		.align	1
 1424              		.global	HAL_DBGMCU_DisableDBGStopMode
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv5-d16
 1430              	HAL_DBGMCU_DisableDBGStopMode:
 1431              	.LFB383:
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STOP mode
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStopMode(void)
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
ARM GAS  /tmp/ccSOiArA.s 			page 42


 1432              		.loc 1 946 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1437              		.loc 1 947 0
 1438 0000 024A     		ldr	r2, .L148
 1439 0002 5368     		ldr	r3, [r2, #4]
 1440 0004 23F00203 		bic	r3, r3, #2
 1441 0008 5360     		str	r3, [r2, #4]
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1442              		.loc 1 948 0
 1443 000a 7047     		bx	lr
 1444              	.L149:
 1445              		.align	2
 1446              	.L148:
 1447 000c 0010005C 		.word	1543507968
 1448              		.cfi_endproc
 1449              	.LFE383:
 1451              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1452              		.align	1
 1453              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu fpv5-d16
 1459              	HAL_DBGMCU_EnableDBGStandbyMode:
 1460              	.LFB384:
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STANDBY mode
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStandbyMode(void)
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1461              		.loc 1 955 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 1465              		@ link register save eliminated.
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1466              		.loc 1 956 0
 1467 0000 024A     		ldr	r2, .L151
 1468 0002 5368     		ldr	r3, [r2, #4]
 1469 0004 43F00403 		orr	r3, r3, #4
 1470 0008 5360     		str	r3, [r2, #4]
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1471              		.loc 1 957 0
 1472 000a 7047     		bx	lr
 1473              	.L152:
 1474              		.align	2
 1475              	.L151:
 1476 000c 0010005C 		.word	1543507968
 1477              		.cfi_endproc
 1478              	.LFE384:
 1480              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
ARM GAS  /tmp/ccSOiArA.s 			page 43


 1481              		.align	1
 1482              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1486              		.fpu fpv5-d16
 1488              	HAL_DBGMCU_DisableDBGStandbyMode:
 1489              	.LFB385:
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STANDBY mode
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStandbyMode(void)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1490              		.loc 1 964 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1495              		.loc 1 965 0
 1496 0000 024A     		ldr	r2, .L154
 1497 0002 5368     		ldr	r3, [r2, #4]
 1498 0004 23F00403 		bic	r3, r3, #4
 1499 0008 5360     		str	r3, [r2, #4]
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1500              		.loc 1 966 0
 1501 000a 7047     		bx	lr
 1502              	.L155:
 1503              		.align	2
 1504              	.L154:
 1505 000c 0010005C 		.word	1543507968
 1506              		.cfi_endproc
 1507              	.LFE385:
 1509              		.section	.text.HAL_EnableDomain3DBGStopMode,"ax",%progbits
 1510              		.align	1
 1511              		.global	HAL_EnableDomain3DBGStopMode
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu fpv5-d16
 1517              	HAL_EnableDomain3DBGStopMode:
 1518              	.LFB386:
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGSleepMode(void)
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 SLEEP mode
ARM GAS  /tmp/ccSOiArA.s 			page 44


 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGSleepMode(void)
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STOP mode
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStopMode(void)
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STOP mode
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStopMode(void)
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STANDBY mode
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStandbyMode(void)
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STANDBY mode
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStandbyMode(void)
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STOP mode
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStopMode(void)
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1519              		.loc 1 1029 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1524              		.loc 1 1030 0
ARM GAS  /tmp/ccSOiArA.s 			page 45


 1525 0000 024A     		ldr	r2, .L157
 1526 0002 5368     		ldr	r3, [r2, #4]
 1527 0004 43F08003 		orr	r3, r3, #128
 1528 0008 5360     		str	r3, [r2, #4]
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1529              		.loc 1 1031 0
 1530 000a 7047     		bx	lr
 1531              	.L158:
 1532              		.align	2
 1533              	.L157:
 1534 000c 0010005C 		.word	1543507968
 1535              		.cfi_endproc
 1536              	.LFE386:
 1538              		.section	.text.HAL_DisableDomain3DBGStopMode,"ax",%progbits
 1539              		.align	1
 1540              		.global	HAL_DisableDomain3DBGStopMode
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv5-d16
 1546              	HAL_DisableDomain3DBGStopMode:
 1547              	.LFB387:
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STOP mode
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStopMode(void)
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1548              		.loc 1 1037 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              		@ link register save eliminated.
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1553              		.loc 1 1038 0
 1554 0000 024A     		ldr	r2, .L160
 1555 0002 5368     		ldr	r3, [r2, #4]
 1556 0004 23F08003 		bic	r3, r3, #128
 1557 0008 5360     		str	r3, [r2, #4]
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1558              		.loc 1 1039 0
 1559 000a 7047     		bx	lr
 1560              	.L161:
 1561              		.align	2
 1562              	.L160:
 1563 000c 0010005C 		.word	1543507968
 1564              		.cfi_endproc
 1565              	.LFE387:
 1567              		.section	.text.HAL_EnableDomain3DBGStandbyMode,"ax",%progbits
 1568              		.align	1
 1569              		.global	HAL_EnableDomain3DBGStandbyMode
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1573              		.fpu fpv5-d16
 1575              	HAL_EnableDomain3DBGStandbyMode:
 1576              	.LFB388:
ARM GAS  /tmp/ccSOiArA.s 			page 46


1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STANDBY mode
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStandbyMode(void)
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1577              		.loc 1 1046 0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1582              		.loc 1 1047 0
 1583 0000 024A     		ldr	r2, .L163
 1584 0002 5368     		ldr	r3, [r2, #4]
 1585 0004 43F48073 		orr	r3, r3, #256
 1586 0008 5360     		str	r3, [r2, #4]
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1587              		.loc 1 1048 0
 1588 000a 7047     		bx	lr
 1589              	.L164:
 1590              		.align	2
 1591              	.L163:
 1592 000c 0010005C 		.word	1543507968
 1593              		.cfi_endproc
 1594              	.LFE388:
 1596              		.section	.text.HAL_DisableDomain3DBGStandbyMode,"ax",%progbits
 1597              		.align	1
 1598              		.global	HAL_DisableDomain3DBGStandbyMode
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv5-d16
 1604              	HAL_DisableDomain3DBGStandbyMode:
 1605              	.LFB389:
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STANDBY mode
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStandbyMode(void)
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1606              		.loc 1 1055 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1611              		.loc 1 1056 0
 1612 0000 024A     		ldr	r2, .L166
 1613 0002 5368     		ldr	r3, [r2, #4]
 1614 0004 23F48073 		bic	r3, r3, #256
 1615 0008 5360     		str	r3, [r2, #4]
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1616              		.loc 1 1057 0
 1617 000a 7047     		bx	lr
ARM GAS  /tmp/ccSOiArA.s 			page 47


 1618              	.L167:
 1619              		.align	2
 1620              	.L166:
 1621 000c 0010005C 		.word	1543507968
 1622              		.cfi_endproc
 1623              	.LFE389:
 1625              		.section	.text.HAL_SetFMCMemorySwappingConfig,"ax",%progbits
 1626              		.align	1
 1627              		.global	HAL_SetFMCMemorySwappingConfig
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1631              		.fpu fpv5-d16
 1633              	HAL_SetFMCMemorySwappingConfig:
 1634              	.LFB390:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Set the FMC Memory Mapping Swapping config.
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BankMapConfig: Defines the FMC Bank mapping configuration. This parameter can be
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL state
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SetFMCMemorySwappingConfig(uint32_t BankMapConfig)
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1635              		.loc 1 1066 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 1640              	.LVL53:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_FMC_SWAPBMAP_MODE(BankMapConfig));
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP, BankMapConfig);
 1641              		.loc 1 1069 0
 1642 0000 034A     		ldr	r2, .L169
 1643 0002 1368     		ldr	r3, [r2]
 1644 0004 23F04073 		bic	r3, r3, #50331648
 1645 0008 1843     		orrs	r0, r0, r3
 1646              	.LVL54:
 1647 000a 1060     		str	r0, [r2]
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1648              		.loc 1 1070 0
 1649 000c 7047     		bx	lr
 1650              	.L170:
 1651 000e 00BF     		.align	2
 1652              	.L169:
 1653 0010 00400052 		.word	1375748096
 1654              		.cfi_endproc
 1655              	.LFE390:
 1657              		.section	.text.HAL_GetFMCMemorySwappingConfig,"ax",%progbits
 1658              		.align	1
 1659              		.global	HAL_GetFMCMemorySwappingConfig
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1663              		.fpu fpv5-d16
 1665              	HAL_GetFMCMemorySwappingConfig:
ARM GAS  /tmp/ccSOiArA.s 			page 48


 1666              	.LFB391:
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Get FMC Bank mapping mode.
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval The FMC Bank mapping mode. This parameter can be
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetFMCMemorySwappingConfig(void)
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1667              		.loc 1 1078 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 0
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              		@ link register save eliminated.
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return READ_BIT(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP);
 1672              		.loc 1 1079 0
 1673 0000 024B     		ldr	r3, .L172
 1674 0002 1868     		ldr	r0, [r3]
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1675              		.loc 1 1080 0
 1676 0004 00F04070 		and	r0, r0, #50331648
 1677 0008 7047     		bx	lr
 1678              	.L173:
 1679 000a 00BF     		.align	2
 1680              	.L172:
 1681 000c 00400052 		.word	1375748096
 1682              		.cfi_endproc
 1683              	.LFE391:
 1685              		.section	.text.HAL_EXTI_EdgeConfig,"ax",%progbits
 1686              		.align	1
 1687              		.global	HAL_EXTI_EdgeConfig
 1688              		.syntax unified
 1689              		.thumb
 1690              		.thumb_func
 1691              		.fpu fpv5-d16
 1693              	HAL_EXTI_EdgeConfig:
 1694              	.LFB392:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line edge
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note    No edge configuration for direct lines but for configurable lines:(EXTI_LINE0..EXTI_LI
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 and EXTI_LINE86.
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Edge: Specifies  EXTI line Edge used.
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_RISING_EDGE : Configurable line, with Rising edge trigger detection
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_FALLING_EDGE: Configurable line, with Falling edge trigger detection
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_EdgeConfig(uint32_t EXTI_Line , uint32_t EXTI_Edge )
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1695              		.loc 1 1095 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699              		@ link register save eliminated.
ARM GAS  /tmp/ccSOiArA.s 			page 49


 1700              	.LVL55:
 1701 0000 70B4     		push	{r4, r5, r6}
 1702              	.LCFI6:
 1703              		.cfi_def_cfa_offset 12
 1704              		.cfi_offset 4, -12
 1705              		.cfi_offset 5, -8
 1706              		.cfi_offset 6, -4
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_EDGE_LINE(EXTI_Edge));
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Clear Rising Falling edge configuration */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1707              		.loc 1 1101 0
 1708 0002 4309     		lsrs	r3, r0, #5
 1709 0004 5D01     		lsls	r5, r3, #5
 1710 0006 0F4C     		ldr	r4, .L178
 1711 0008 2E59     		ldr	r6, [r5, r4]
 1712 000a 00F01F00 		and	r0, r0, #31
 1713              	.LVL56:
 1714 000e 0122     		movs	r2, #1
 1715 0010 02FA00F0 		lsl	r0, r2, r0
 1716 0014 C243     		mvns	r2, r0
 1717 0016 1640     		ands	r6, r6, r2
 1718 0018 2E51     		str	r6, [r5, r4]
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint
 1719              		.loc 1 1102 0
 1720 001a 03F13073 		add	r3, r3, #46137344
 1721 001e 5B01     		lsls	r3, r3, #5
 1722 0020 1E68     		ldr	r6, [r3]
 1723 0022 3240     		ands	r2, r2, r6
 1724 0024 1A60     		str	r2, [r3]
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_RISING_EDGE) == EXTI_RISING_EDGE)
 1725              		.loc 1 1104 0
 1726 0026 11F4801F 		tst	r1, #1048576
 1727 002a 02D0     		beq	.L175
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1728              		.loc 1 1106 0
 1729 002c 1A68     		ldr	r2, [r3]
 1730 002e 0243     		orrs	r2, r2, r0
 1731 0030 1A60     		str	r2, [r3]
 1732              	.L175:
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_FALLING_EDGE) == EXTI_FALLING_EDGE)
 1733              		.loc 1 1108 0
 1734 0032 11F4001F 		tst	r1, #2097152
 1735 0036 02D0     		beq	.L174
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1736              		.loc 1 1110 0
 1737 0038 2B59     		ldr	r3, [r5, r4]
 1738 003a 1843     		orrs	r0, r0, r3
 1739 003c 2851     		str	r0, [r5, r4]
 1740              	.L174:
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
ARM GAS  /tmp/ccSOiArA.s 			page 50


1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1741              		.loc 1 1112 0
 1742 003e 70BC     		pop	{r4, r5, r6}
 1743              	.LCFI7:
 1744              		.cfi_restore 6
 1745              		.cfi_restore 5
 1746              		.cfi_restore 4
 1747              		.cfi_def_cfa_offset 0
 1748 0040 7047     		bx	lr
 1749              	.L179:
 1750 0042 00BF     		.align	2
 1751              	.L178:
 1752 0044 04000058 		.word	1476395012
 1753              		.cfi_endproc
 1754              	.LFE392:
 1756              		.section	.text.HAL_EXTI_GenerateSWInterrupt,"ax",%progbits
 1757              		.align	1
 1758              		.global	HAL_EXTI_GenerateSWInterrupt
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1762              		.fpu fpv5-d16
 1764              	HAL_EXTI_GenerateSWInterrupt:
 1765              	.LFB393:
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          (EXTI_LINE0..EXTI_LINE21),EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1766              		.loc 1 1121 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 1771              	.LVL57:
 1772 0000 10B4     		push	{r4}
 1773              	.LCFI8:
 1774              		.cfi_def_cfa_offset 4
 1775              		.cfi_offset 4, -4
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->SWIER1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1776              		.loc 1 1125 0
 1777 0002 20F01F04 		bic	r4, r0, #31
 1778 0006 0649     		ldr	r1, .L182
 1779 0008 6358     		ldr	r3, [r4, r1]
 1780 000a 00F01F00 		and	r0, r0, #31
 1781              	.LVL58:
 1782 000e 0122     		movs	r2, #1
 1783 0010 02FA00F0 		lsl	r0, r2, r0
 1784 0014 1843     		orrs	r0, r0, r3
 1785 0016 6050     		str	r0, [r4, r1]
ARM GAS  /tmp/ccSOiArA.s 			page 51


1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1786              		.loc 1 1126 0
 1787 0018 5DF8044B 		ldr	r4, [sp], #4
 1788              	.LCFI9:
 1789              		.cfi_restore 4
 1790              		.cfi_def_cfa_offset 0
 1791 001c 7047     		bx	lr
 1792              	.L183:
 1793 001e 00BF     		.align	2
 1794              	.L182:
 1795 0020 08000058 		.word	1476395016
 1796              		.cfi_endproc
 1797              	.LFE393:
 1799              		.section	.text.HAL_EXTI_D1_ClearFlag,"ax",%progbits
 1800              		.align	1
 1801              		.global	HAL_EXTI_D1_ClearFlag
 1802              		.syntax unified
 1803              		.thumb
 1804              		.thumb_func
 1805              		.fpu fpv5-d16
 1807              	HAL_EXTI_D1_ClearFlag:
 1808              	.LFB394:
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D1
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_ClearFlag(uint32_t EXTI_Line)
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1809              		.loc 1 1136 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813              		@ link register save eliminated.
 1814              	.LVL59:
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
 1815              		.loc 1 1139 0
 1816 0000 00F01F02 		and	r2, r0, #31
 1817 0004 4009     		lsrs	r0, r0, #5
 1818              	.LVL60:
 1819 0006 0001     		lsls	r0, r0, #4
 1820 0008 0123     		movs	r3, #1
 1821 000a 9340     		lsls	r3, r3, r2
 1822 000c 014A     		ldr	r2, .L185
 1823 000e 8350     		str	r3, [r0, r2]
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1824              		.loc 1 1141 0
 1825 0010 7047     		bx	lr
 1826              	.L186:
 1827 0012 00BF     		.align	2
 1828              	.L185:
ARM GAS  /tmp/ccSOiArA.s 			page 52


 1829 0014 88000058 		.word	1476395144
 1830              		.cfi_endproc
 1831              	.LFE394:
 1833              		.section	.text.HAL_EXTI_D1_EventInputConfig,"ax",%progbits
 1834              		.align	1
 1835              		.global	HAL_EXTI_D1_EventInputConfig
 1836              		.syntax unified
 1837              		.thumb
 1838              		.thumb_func
 1839              		.fpu fpv5-d16
 1841              	HAL_EXTI_D1_EventInputConfig:
 1842              	.LFB395:
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D2
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_ClearFlag(uint32_t EXTI_Line)
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D1
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1843              		.loc 1 1171 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              		@ link register save eliminated.
 1848              	.LVL61:
 1849 0000 70B4     		push	{r4, r5, r6}
 1850              	.LCFI10:
 1851              		.cfi_def_cfa_offset 12
 1852              		.cfi_offset 4, -12
 1853              		.cfi_offset 5, -8
 1854              		.cfi_offset 6, -4
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
ARM GAS  /tmp/ccSOiArA.s 			page 53


1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
 1855              		.loc 1 1176 0
 1856 0002 11F4803F 		tst	r1, #65536
 1857 0006 0CD0     		beq	.L188
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      if( EXTI_LineCmd == 0UL)
 1858              		.loc 1 1178 0
 1859 0008 E2B9     		cbnz	r2, .L189
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        /* Clear EXTI line configuration */
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1860              		.loc 1 1181 0
 1861 000a 1A4B     		ldr	r3, .L194
 1862 000c 03EB5013 		add	r3, r3, r0, lsr #5
 1863 0010 1B01     		lsls	r3, r3, #4
 1864 0012 1C68     		ldr	r4, [r3]
 1865 0014 00F01F06 		and	r6, r0, #31
 1866 0018 0125     		movs	r5, #1
 1867 001a B540     		lsls	r5, r5, r6
 1868 001c 24EA0504 		bic	r4, r4, r5
 1869 0020 1C60     		str	r4, [r3]
 1870              	.L188:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      else
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
 1871              		.loc 1 1189 0
 1872 0022 11F4003F 		tst	r1, #131072
 1873 0026 0BD0     		beq	.L187
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
 1874              		.loc 1 1191 0
 1875 0028 C2B1     		cbz	r2, .L193
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
 1876              		.loc 1 1198 0
 1877 002a 4309     		lsrs	r3, r0, #5
 1878 002c 1B01     		lsls	r3, r3, #4
 1879 002e 124C     		ldr	r4, .L194+4
 1880 0030 1A59     		ldr	r2, [r3, r4]
 1881              	.LVL62:
 1882 0032 00F01F00 		and	r0, r0, #31
 1883              	.LVL63:
 1884 0036 0121     		movs	r1, #1
 1885              	.LVL64:
 1886 0038 01FA00F0 		lsl	r0, r1, r0
 1887 003c 1043     		orrs	r0, r0, r2
ARM GAS  /tmp/ccSOiArA.s 			page 54


 1888 003e 1851     		str	r0, [r3, r4]
 1889              	.L187:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1890              		.loc 1 1201 0
 1891 0040 70BC     		pop	{r4, r5, r6}
 1892              	.LCFI11:
 1893              		.cfi_remember_state
 1894              		.cfi_restore 6
 1895              		.cfi_restore 5
 1896              		.cfi_restore 4
 1897              		.cfi_def_cfa_offset 0
 1898 0042 7047     		bx	lr
 1899              	.LVL65:
 1900              	.L189:
 1901              	.LCFI12:
 1902              		.cfi_restore_state
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
 1903              		.loc 1 1185 0
 1904 0044 0B4B     		ldr	r3, .L194
 1905 0046 03EB5013 		add	r3, r3, r0, lsr #5
 1906 004a 1B01     		lsls	r3, r3, #4
 1907 004c 1C68     		ldr	r4, [r3]
 1908 004e 00F01F06 		and	r6, r0, #31
 1909 0052 0125     		movs	r5, #1
 1910 0054 B540     		lsls	r5, r5, r6
 1911 0056 2C43     		orrs	r4, r4, r5
 1912 0058 1C60     		str	r4, [r3]
 1913 005a E2E7     		b	.L188
 1914              	.L193:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1915              		.loc 1 1194 0
 1916 005c 4309     		lsrs	r3, r0, #5
 1917 005e 1B01     		lsls	r3, r3, #4
 1918 0060 0549     		ldr	r1, .L194+4
 1919              	.LVL66:
 1920 0062 5A58     		ldr	r2, [r3, r1]
 1921              	.LVL67:
 1922 0064 00F01F04 		and	r4, r0, #31
 1923 0068 0120     		movs	r0, #1
 1924              	.LVL68:
 1925 006a A040     		lsls	r0, r0, r4
 1926 006c 22EA0000 		bic	r0, r2, r0
 1927 0070 5850     		str	r0, [r3, r1]
 1928 0072 E5E7     		b	.L187
 1929              	.L195:
 1930              		.align	2
 1931              	.L194:
 1932 0074 08008005 		.word	92274696
 1933 0078 84000058 		.word	1476395140
 1934              		.cfi_endproc
 1935              	.LFE395:
 1937              		.section	.text.HAL_EXTI_D3_EventInputConfig,"ax",%progbits
 1938              		.align	1
 1939              		.global	HAL_EXTI_D3_EventInputConfig
 1940              		.syntax unified
ARM GAS  /tmp/ccSOiArA.s 			page 55


 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu fpv5-d16
 1945              	HAL_EXTI_D3_EventInputConfig:
 1946              	.LFB396:
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D2
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)),(u
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (ui
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D3
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0...EXTI_LINE15),(EXTI_LINE19...EXTI_LINE21),EXTI_LINE25, EXTI_LINE34,
ARM GAS  /tmp/ccSOiArA.s 			page 56


1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE35,EXTI_LINE41,(EXTI_LINE48...EXTI_LINE53)
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_ClearSrc: Specifies the clear source of D3 pending event.
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH6_CLEAR : BDMA ch6 event selected as D3 domain pendclear source
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH7_CLEAR : BDMA ch7 event selected as D3 domain pendclear source
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM4_OUT_CLEAR : LPTIM4 out selected as D3 domain pendclear source
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM5_OUT_CLEAR : LPTIM5 out selected as D3 domain pendclear source
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D3_EventInputConfig(uint32_t EXTI_Line, uint32_t EXTI_LineCmd , uint32_t EXTI_ClearSr
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1947              		.loc 1 1265 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952              	.LVL69:
 1953 0000 70B4     		push	{r4, r5, r6}
 1954              	.LCFI13:
 1955              		.cfi_def_cfa_offset 12
 1956              		.cfi_offset 4, -12
 1957              		.cfi_offset 5, -8
 1958              		.cfi_offset 6, -4
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __IO uint32_t *pRegv;
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_LINE(EXTI_Line));
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_CLEAR(EXTI_ClearSrc));
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( EXTI_LineCmd == 0UL)
 1959              		.loc 1 1272 0
 1960 0002 F9B9     		cbnz	r1, .L197
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) + ((EXTI_Line >> 5 ) * 0x20UL)),(uin
 1961              		.loc 1 1275 0
 1962 0004 20F01F03 		bic	r3, r0, #31
 1963 0008 164D     		ldr	r5, .L203
 1964 000a 5959     		ldr	r1, [r3, r5]
 1965              	.LVL70:
 1966 000c 00F01F06 		and	r6, r0, #31
 1967 0010 0124     		movs	r4, #1
 1968 0012 B440     		lsls	r4, r4, r6
 1969 0014 21EA0401 		bic	r1, r1, r4
 1970 0018 5951     		str	r1, [r3, r5]
 1971              	.L198:
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) +((EXTI_Line >> 5 ) * 0x20UL)), (uint3
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(((EXTI_Line>>4)%2UL) == 0UL)
 1972              		.loc 1 1282 0
 1973 001a 10F0100F 		tst	r0, #16
 1974 001e 1CD0     		beq	.L202
ARM GAS  /tmp/ccSOiArA.s 			page 57


1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1L)) + ((EXTI_Line >> 5 ) * 0x20UL));
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1H)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1975              		.loc 1 1288 0
 1976 0020 20F01F03 		bic	r3, r0, #31
 1977 0024 1049     		ldr	r1, .L203+4
 1978 0026 1944     		add	r1, r1, r3
 1979              	.LVL71:
 1980              	.L200:
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(*pRegv, (uint32_t)(3UL << ((EXTI_Line*2UL) & 0x1FUL)), (uint32_t)(EXTI_ClearSrc << ((E
 1981              		.loc 1 1290 0
 1982 0028 0B68     		ldr	r3, [r1]
 1983 002a 4000     		lsls	r0, r0, #1
 1984              	.LVL72:
 1985 002c 00F01E00 		and	r0, r0, #30
 1986 0030 0324     		movs	r4, #3
 1987 0032 8440     		lsls	r4, r4, r0
 1988 0034 23EA0403 		bic	r3, r3, r4
 1989 0038 02FA00F0 		lsl	r0, r2, r0
 1990 003c 1843     		orrs	r0, r0, r3
 1991 003e 0860     		str	r0, [r1]
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1992              		.loc 1 1292 0
 1993 0040 70BC     		pop	{r4, r5, r6}
 1994              	.LCFI14:
 1995              		.cfi_remember_state
 1996              		.cfi_restore 6
 1997              		.cfi_restore 5
 1998              		.cfi_restore 4
 1999              		.cfi_def_cfa_offset 0
 2000 0042 7047     		bx	lr
 2001              	.LVL73:
 2002              	.L197:
 2003              	.LCFI15:
 2004              		.cfi_restore_state
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 2005              		.loc 1 1279 0
 2006 0044 20F01F03 		bic	r3, r0, #31
 2007 0048 064D     		ldr	r5, .L203
 2008 004a 5959     		ldr	r1, [r3, r5]
 2009              	.LVL74:
 2010 004c 00F01F06 		and	r6, r0, #31
 2011 0050 0124     		movs	r4, #1
 2012 0052 B440     		lsls	r4, r4, r6
 2013 0054 2143     		orrs	r1, r1, r4
 2014 0056 5951     		str	r1, [r3, r5]
 2015 0058 DFE7     		b	.L198
 2016              	.L202:
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 2017              		.loc 1 1284 0
 2018 005a 20F01F03 		bic	r3, r0, #31
 2019 005e 0349     		ldr	r1, .L203+8
ARM GAS  /tmp/ccSOiArA.s 			page 58


 2020 0060 1944     		add	r1, r1, r3
 2021              	.LVL75:
 2022 0062 E1E7     		b	.L200
 2023              	.L204:
 2024              		.align	2
 2025              	.L203:
 2026 0064 0C000058 		.word	1476395020
 2027 0068 14000058 		.word	1476395028
 2028 006c 10000058 		.word	1476395024
 2029              		.cfi_endproc
 2030              	.LFE396:
 2032              		.global	uwTickFreq
 2033              		.global	uwTickPrio
 2034              		.comm	uwTick,4,4
 2035              		.section	.data.uwTickFreq,"aw",%progbits
 2036              		.set	.LANCHOR0,. + 0
 2039              	uwTickFreq:
 2040 0000 01       		.byte	1
 2041              		.section	.data.uwTickPrio,"aw",%progbits
 2042              		.align	2
 2043              		.set	.LANCHOR1,. + 0
 2046              	uwTickPrio:
 2047 0000 10000000 		.word	16
 2048              		.text
 2049              	.Letext0:
 2050              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2051              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2052              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2053              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2054              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 2055              		.file 7 "/usr/include/newlib/sys/lock.h"
 2056              		.file 8 "/usr/include/newlib/sys/_types.h"
 2057              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2058              		.file 10 "/usr/include/newlib/sys/reent.h"
 2059              		.file 11 "/usr/include/newlib/math.h"
 2060              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2061              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2062              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 2063              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 2064              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 2065              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/ccSOiArA.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal.c
     /tmp/ccSOiArA.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccSOiArA.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccSOiArA.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccSOiArA.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccSOiArA.s:58     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccSOiArA.s:65     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccSOiArA.s:134    .text.HAL_DeInit:0000000000000070 $d
     /tmp/ccSOiArA.s:146    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccSOiArA.s:153    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccSOiArA.s:217    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccSOiArA.s:224    .text.HAL_Init:0000000000000000 $t
     /tmp/ccSOiArA.s:231    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccSOiArA.s:290    .text.HAL_Init:000000000000004c $d
     /tmp/ccSOiArA.s:298    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccSOiArA.s:305    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccSOiArA.s:324    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccSOiArA.s:330    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccSOiArA.s:337    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccSOiArA.s:352    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccSOiArA.s:357    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccSOiArA.s:364    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccSOiArA.s:378    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccSOiArA.s:383    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccSOiArA.s:390    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccSOiArA.s:436    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccSOiArA.s:442    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccSOiArA.s:449    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccSOiArA.s:463    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccSOiArA.s:468    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccSOiArA.s:475    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccSOiArA.s:516    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccSOiArA.s:521    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccSOiArA.s:528    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccSOiArA.s:545    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccSOiArA.s:550    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccSOiArA.s:557    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccSOiArA.s:574    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccSOiArA.s:579    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccSOiArA.s:586    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccSOiArA.s:599    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccSOiArA.s:604    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccSOiArA.s:611    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccSOiArA.s:627    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccSOiArA.s:632    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccSOiArA.s:639    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccSOiArA.s:655    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccSOiArA.s:660    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccSOiArA.s:667    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccSOiArA.s:681    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccSOiArA.s:686    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccSOiArA.s:693    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccSOiArA.s:707    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccSOiArA.s:712    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccSOiArA.s:719    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccSOiArA.s 			page 60


     /tmp/ccSOiArA.s:733    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccSOiArA.s:738    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:745    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
     /tmp/ccSOiArA.s:765    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000010 $d
     /tmp/ccSOiArA.s:770    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:777    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
     /tmp/ccSOiArA.s:797    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000010 $d
     /tmp/ccSOiArA.s:802    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:809    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
     /tmp/ccSOiArA.s:829    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000010 $d
     /tmp/ccSOiArA.s:834    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 $t
     /tmp/ccSOiArA.s:841    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 HAL_SYSCFG_EnableVREFBUF
     /tmp/ccSOiArA.s:887    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000030 $d
     /tmp/ccSOiArA.s:892    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 $t
     /tmp/ccSOiArA.s:899    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 HAL_SYSCFG_DisableVREFBUF
     /tmp/ccSOiArA.s:916    .text.HAL_SYSCFG_DisableVREFBUF:000000000000000c $d
     /tmp/ccSOiArA.s:921    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 $t
     /tmp/ccSOiArA.s:928    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 HAL_SYSCFG_ETHInterfaceSelect
     /tmp/ccSOiArA.s:948    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000010 $d
     /tmp/ccSOiArA.s:953    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:960    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 HAL_SYSCFG_AnalogSwitchConfig
     /tmp/ccSOiArA.s:980    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000010 $d
     /tmp/ccSOiArA.s:985    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 $t
     /tmp/ccSOiArA.s:992    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 HAL_SYSCFG_EnableBOOST
     /tmp/ccSOiArA.s:1009   .text.HAL_SYSCFG_EnableBOOST:000000000000000c $d
     /tmp/ccSOiArA.s:1014   .text.HAL_SYSCFG_DisableBOOST:0000000000000000 $t
     /tmp/ccSOiArA.s:1021   .text.HAL_SYSCFG_DisableBOOST:0000000000000000 HAL_SYSCFG_DisableBOOST
     /tmp/ccSOiArA.s:1038   .text.HAL_SYSCFG_DisableBOOST:000000000000000c $d
     /tmp/ccSOiArA.s:1043   .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1050   .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 HAL_SYSCFG_CM7BootAddConfig
     /tmp/ccSOiArA.s:1085   .text.HAL_SYSCFG_CM7BootAddConfig:000000000000002c $d
     /tmp/ccSOiArA.s:1091   .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccSOiArA.s:1098   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccSOiArA.s:1115   .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccSOiArA.s:1120   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccSOiArA.s:1127   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccSOiArA.s:1144   .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccSOiArA.s:1149   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccSOiArA.s:1156   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_EnableIOSpeedOptimize
     /tmp/ccSOiArA.s:1173   .text.HAL_SYSCFG_EnableIOSpeedOptimize:000000000000000c $d
     /tmp/ccSOiArA.s:1178   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccSOiArA.s:1185   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_DisableIOSpeedOptimize
     /tmp/ccSOiArA.s:1202   .text.HAL_SYSCFG_DisableIOSpeedOptimize:000000000000000c $d
     /tmp/ccSOiArA.s:1207   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 $t
     /tmp/ccSOiArA.s:1214   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 HAL_SYSCFG_CompensationCodeSelect
     /tmp/ccSOiArA.s:1234   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000010 $d
     /tmp/ccSOiArA.s:1239   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1246   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 HAL_SYSCFG_CompensationCodeConfig
     /tmp/ccSOiArA.s:1267   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000014 $d
     /tmp/ccSOiArA.s:1272   .text.HAL_SYSCFG_ADC2ALT_Rout0Config:0000000000000000 $t
     /tmp/ccSOiArA.s:1279   .text.HAL_SYSCFG_ADC2ALT_Rout0Config:0000000000000000 HAL_SYSCFG_ADC2ALT_Rout0Config
     /tmp/ccSOiArA.s:1299   .text.HAL_SYSCFG_ADC2ALT_Rout0Config:0000000000000010 $d
     /tmp/ccSOiArA.s:1304   .text.HAL_SYSCFG_ADC2ALT_Rout1Config:0000000000000000 $t
     /tmp/ccSOiArA.s:1311   .text.HAL_SYSCFG_ADC2ALT_Rout1Config:0000000000000000 HAL_SYSCFG_ADC2ALT_Rout1Config
     /tmp/ccSOiArA.s:1331   .text.HAL_SYSCFG_ADC2ALT_Rout1Config:0000000000000010 $d
     /tmp/ccSOiArA.s:1336   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1343   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
ARM GAS  /tmp/ccSOiArA.s 			page 61


     /tmp/ccSOiArA.s:1360   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccSOiArA.s:1365   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1372   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccSOiArA.s:1389   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccSOiArA.s:1394   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1401   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccSOiArA.s:1418   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccSOiArA.s:1423   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1430   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccSOiArA.s:1447   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccSOiArA.s:1452   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1459   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccSOiArA.s:1476   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccSOiArA.s:1481   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1488   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccSOiArA.s:1505   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccSOiArA.s:1510   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1517   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 HAL_EnableDomain3DBGStopMode
     /tmp/ccSOiArA.s:1534   .text.HAL_EnableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccSOiArA.s:1539   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1546   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 HAL_DisableDomain3DBGStopMode
     /tmp/ccSOiArA.s:1563   .text.HAL_DisableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccSOiArA.s:1568   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1575   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 HAL_EnableDomain3DBGStandbyMode
     /tmp/ccSOiArA.s:1592   .text.HAL_EnableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccSOiArA.s:1597   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccSOiArA.s:1604   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 HAL_DisableDomain3DBGStandbyMode
     /tmp/ccSOiArA.s:1621   .text.HAL_DisableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccSOiArA.s:1626   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1633   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 HAL_SetFMCMemorySwappingConfig
     /tmp/ccSOiArA.s:1653   .text.HAL_SetFMCMemorySwappingConfig:0000000000000010 $d
     /tmp/ccSOiArA.s:1658   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1665   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 HAL_GetFMCMemorySwappingConfig
     /tmp/ccSOiArA.s:1681   .text.HAL_GetFMCMemorySwappingConfig:000000000000000c $d
     /tmp/ccSOiArA.s:1686   .text.HAL_EXTI_EdgeConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1693   .text.HAL_EXTI_EdgeConfig:0000000000000000 HAL_EXTI_EdgeConfig
     /tmp/ccSOiArA.s:1752   .text.HAL_EXTI_EdgeConfig:0000000000000044 $d
     /tmp/ccSOiArA.s:1757   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 $t
     /tmp/ccSOiArA.s:1764   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 HAL_EXTI_GenerateSWInterrupt
     /tmp/ccSOiArA.s:1795   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000020 $d
     /tmp/ccSOiArA.s:1800   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 $t
     /tmp/ccSOiArA.s:1807   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 HAL_EXTI_D1_ClearFlag
     /tmp/ccSOiArA.s:1829   .text.HAL_EXTI_D1_ClearFlag:0000000000000014 $d
     /tmp/ccSOiArA.s:1834   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1841   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 HAL_EXTI_D1_EventInputConfig
     /tmp/ccSOiArA.s:1932   .text.HAL_EXTI_D1_EventInputConfig:0000000000000074 $d
     /tmp/ccSOiArA.s:1938   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 $t
     /tmp/ccSOiArA.s:1945   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 HAL_EXTI_D3_EventInputConfig
     /tmp/ccSOiArA.s:2026   .text.HAL_EXTI_D3_EventInputConfig:0000000000000064 $d
     /tmp/ccSOiArA.s:2039   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccSOiArA.s:2046   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccSOiArA.s:2042   .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
ARM GAS  /tmp/ccSOiArA.s 			page 62


HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
D1CorePrescTable
SystemD2Clock
