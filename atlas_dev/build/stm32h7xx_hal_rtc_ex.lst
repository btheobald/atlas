ARM GAS  /tmp/cco2AszO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rtc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RTCEx_SetTimeStamp
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_RTCEx_SetTimeStamp:
  25              	.LFB343:
  26              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @file    stm32h7xx_hal_rtc_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           + Extended RTC features functions
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Outputs configuration ***
ARM GAS  /tmp/cco2AszO.s 			page 2


  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   =============================
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]  The RTC has 2 different outputs:
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_ALARM: this output is used to manage the RTC Alarm A, Alarm B
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         and WaKeUp signals.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To output the selected RTC signal, use the HAL_RTC_Init() function.
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) RTC_CALIB: this output is 512Hz signal or 1Hz.
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         To enable the RTC_CALIB, use the HAL_RTCEx_SetCalibrationOutPut() function.
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Two pins can be used as RTC_ALARM or RTC_CALIB (PC13, PB2) managed on
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         the RTC_OR register.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) When the RTC_CALIB or RTC_ALARM output is selected, the RTC_OUT pin is
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         automatically configured in output alternate function.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Smooth digital Calibration configuration ***
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ================================================
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Configure the RTC Original Digital Calibration Value and the corresponding
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         calibration cycle period (32s,16s and 8s) using the HAL_RTCEx_SetSmoothCalib()
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC TimeStamp using the HAL_RTCEx_SetTimeStamp() function.
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp_IT() function.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===============================
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC internal TimeStamp using the HAL_RTCEx_SetInternalTimeStamp() function.
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         User has to check internal timestamp occurrence using __HAL_RTC_INTERNAL_TIMESTAMP_GET_FLAG
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ============================
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level)
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         Pull-UP using the HAL_RTCEx_SetTamper() function. You can configure RTC Tamper
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) The default configuration of the Tamper erases the backup registers. To avoid
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         erase, enable the NoErase field on the RTC_TAMPCR register.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ===========================================
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         function.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    @endverbatim
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
ARM GAS  /tmp/cco2AszO.s 			page 3


  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @attention
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * All rights reserved.</center></h2>
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * License. You may obtain a copy of the License at:
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ******************************************************************************
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #include "stm32h7xx_hal.h"
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #define TAMP_ALL (TAMP_CR1_TAMP1E | TAMP_CR1_TAMP2E | TAMP_CR1_TAMP3E)
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
ARM GAS  /tmp/cco2AszO.s 			page 4


 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
  27              		.loc 1 164 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  33              		.loc 1 175 0
  34 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
  35              	.LVL1:
  36 0004 012A     		cmp	r2, #1
  37 0006 23D0     		beq	.L3
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
  38              		.loc 1 164 0 discriminator 2
  39 0008 30B4     		push	{r4, r5}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 4, -8
  43              		.cfi_offset 5, -4
  44              		.loc 1 175 0 discriminator 2
  45 000a 0122     		movs	r2, #1
  46 000c 80F82020 		strb	r2, [r0, #32]
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  47              		.loc 1 177 0 discriminator 2
  48 0010 0223     		movs	r3, #2
  49 0012 80F82130 		strb	r3, [r0, #33]
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
ARM GAS  /tmp/cco2AszO.s 			page 5


 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  50              		.loc 1 180 0 discriminator 2
  51 0016 0468     		ldr	r4, [r0]
  52 0018 A568     		ldr	r5, [r4, #8]
  53 001a A3F60B03 		subw	r3, r3, #2059
  54 001e 2B40     		ands	r3, r3, r5
  55              	.LVL2:
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
  56              		.loc 1 182 0 discriminator 2
  57 0020 0B43     		orrs	r3, r3, r1
  58              	.LVL3:
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  59              		.loc 1 185 0 discriminator 2
  60 0022 CA21     		movs	r1, #202
  61              	.LVL4:
  62 0024 6162     		str	r1, [r4, #36]
  63 0026 0168     		ldr	r1, [r0]
  64 0028 5324     		movs	r4, #83
  65 002a 4C62     		str	r4, [r1, #36]
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  66              		.loc 1 188 0 discriminator 2
  67 002c 0168     		ldr	r1, [r0]
  68 002e 8B60     		str	r3, [r1, #8]
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  69              		.loc 1 190 0 discriminator 2
  70 0030 0168     		ldr	r1, [r0]
  71 0032 8B68     		ldr	r3, [r1, #8]
  72              	.LVL5:
  73 0034 43F40063 		orr	r3, r3, #2048
  74 0038 8B60     		str	r3, [r1, #8]
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  75              		.loc 1 193 0 discriminator 2
  76 003a 0368     		ldr	r3, [r0]
  77 003c FF21     		movs	r1, #255
  78 003e 5962     		str	r1, [r3, #36]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  79              		.loc 1 196 0 discriminator 2
  80 0040 80F82120 		strb	r2, [r0, #33]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  81              		.loc 1 199 0 discriminator 2
  82 0044 0023     		movs	r3, #0
  83 0046 80F82030 		strb	r3, [r0, #32]
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
  84              		.loc 1 201 0 discriminator 2
ARM GAS  /tmp/cco2AszO.s 			page 6


  85 004a 1846     		mov	r0, r3
  86              	.LVL6:
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
  87              		.loc 1 202 0 discriminator 2
  88 004c 30BC     		pop	{r4, r5}
  89              	.LCFI1:
  90              		.cfi_restore 5
  91              		.cfi_restore 4
  92              		.cfi_def_cfa_offset 0
  93              	.LVL7:
  94 004e 7047     		bx	lr
  95              	.LVL8:
  96              	.L3:
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
  97              		.loc 1 175 0
  98 0050 0220     		movs	r0, #2
  99              	.LVL9:
 100              		.loc 1 202 0
 101 0052 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE343:
 105              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 106              		.align	1
 107              		.global	HAL_RTCEx_SetTimeStamp_IT
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv5-d16
 113              	HAL_RTCEx_SetTimeStamp_IT:
 114              	.LFB344:
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         activated.
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 115              		.loc 1 223 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL10:
ARM GAS  /tmp/cco2AszO.s 			page 7


 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 121              		.loc 1 234 0
 122 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 123              	.LVL11:
 124 0004 012A     		cmp	r2, #1
 125 0006 33D0     		beq	.L10
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 126              		.loc 1 223 0 discriminator 2
 127 0008 30B4     		push	{r4, r5}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 5, -4
 132              		.loc 1 234 0 discriminator 2
 133 000a 0122     		movs	r2, #1
 134 000c 80F82020 		strb	r2, [r0, #32]
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 135              		.loc 1 236 0 discriminator 2
 136 0010 0223     		movs	r3, #2
 137 0012 80F82130 		strb	r3, [r0, #33]
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 138              		.loc 1 239 0 discriminator 2
 139 0016 0468     		ldr	r4, [r0]
 140 0018 A568     		ldr	r5, [r4, #8]
 141 001a A3F60B03 		subw	r3, r3, #2059
 142 001e 2B40     		ands	r3, r3, r5
 143              	.LVL12:
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 144              		.loc 1 241 0 discriminator 2
 145 0020 0B43     		orrs	r3, r3, r1
 146              	.LVL13:
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 147              		.loc 1 244 0 discriminator 2
 148 0022 CA21     		movs	r1, #202
 149              	.LVL14:
 150 0024 6162     		str	r1, [r4, #36]
 151 0026 0168     		ldr	r1, [r0]
 152 0028 5324     		movs	r4, #83
 153 002a 4C62     		str	r4, [r1, #36]
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
ARM GAS  /tmp/cco2AszO.s 			page 8


 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 154              		.loc 1 247 0 discriminator 2
 155 002c 0168     		ldr	r1, [r0]
 156 002e 8B60     		str	r3, [r1, #8]
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 157              		.loc 1 249 0 discriminator 2
 158 0030 0168     		ldr	r1, [r0]
 159 0032 8B68     		ldr	r3, [r1, #8]
 160              	.LVL15:
 161 0034 43F40063 		orr	r3, r3, #2048
 162 0038 8B60     		str	r3, [r1, #8]
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc, RTC_IT_TS);
 163              		.loc 1 252 0 discriminator 2
 164 003a 0168     		ldr	r1, [r0]
 165 003c 8B68     		ldr	r3, [r1, #8]
 166 003e 43F40043 		orr	r3, r3, #32768
 167 0042 8B60     		str	r3, [r1, #8]
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 168              		.loc 1 256 0 discriminator 2
 169 0044 0B49     		ldr	r1, .L15
 170 0046 0B68     		ldr	r3, [r1]
 171 0048 43F48023 		orr	r3, r3, #262144
 172 004c 0B60     		str	r3, [r1]
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 173              		.loc 1 259 0 discriminator 2
 174 004e 4FF0B041 		mov	r1, #1476395008
 175 0052 0B68     		ldr	r3, [r1]
 176 0054 43F48023 		orr	r3, r3, #262144
 177 0058 0B60     		str	r3, [r1]
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 178              		.loc 1 262 0 discriminator 2
 179 005a 0368     		ldr	r3, [r0]
 180 005c FF21     		movs	r1, #255
 181 005e 5962     		str	r1, [r3, #36]
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 182              		.loc 1 264 0 discriminator 2
 183 0060 80F82120 		strb	r2, [r0, #33]
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 184              		.loc 1 267 0 discriminator 2
 185 0064 0023     		movs	r3, #0
 186 0066 80F82030 		strb	r3, [r0, #32]
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 187              		.loc 1 269 0 discriminator 2
ARM GAS  /tmp/cco2AszO.s 			page 9


 188 006a 1846     		mov	r0, r3
 189              	.LVL16:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 190              		.loc 1 270 0 discriminator 2
 191 006c 30BC     		pop	{r4, r5}
 192              	.LCFI3:
 193              		.cfi_restore 5
 194              		.cfi_restore 4
 195              		.cfi_def_cfa_offset 0
 196              	.LVL17:
 197 006e 7047     		bx	lr
 198              	.LVL18:
 199              	.L10:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 200              		.loc 1 234 0
 201 0070 0220     		movs	r0, #2
 202              	.LVL19:
 203              		.loc 1 270 0
 204 0072 7047     		bx	lr
 205              	.L16:
 206              		.align	2
 207              	.L15:
 208 0074 80000058 		.word	1476395136
 209              		.cfi_endproc
 210              	.LFE344:
 212              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_RTCEx_DeactivateTimeStamp
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	HAL_RTCEx_DeactivateTimeStamp:
 221              	.LFB345:
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 222              		.loc 1 278 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL20:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 228              		.loc 1 282 0
 229 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 230 0004 012B     		cmp	r3, #1
 231 0006 22D0     		beq	.L19
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
ARM GAS  /tmp/cco2AszO.s 			page 10


 232              		.loc 1 278 0 discriminator 2
 233 0008 10B4     		push	{r4}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 4, -4
 237              		.loc 1 282 0 discriminator 2
 238 000a 0122     		movs	r2, #1
 239 000c 80F82020 		strb	r2, [r0, #32]
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 240              		.loc 1 284 0 discriminator 2
 241 0010 0223     		movs	r3, #2
 242 0012 80F82130 		strb	r3, [r0, #33]
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 243              		.loc 1 287 0 discriminator 2
 244 0016 0368     		ldr	r3, [r0]
 245 0018 CA21     		movs	r1, #202
 246 001a 5962     		str	r1, [r3, #36]
 247 001c 0368     		ldr	r3, [r0]
 248 001e 5321     		movs	r1, #83
 249 0020 5962     		str	r1, [r3, #36]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 250              		.loc 1 290 0 discriminator 2
 251 0022 0168     		ldr	r1, [r0]
 252 0024 8B68     		ldr	r3, [r1, #8]
 253 0026 23F40043 		bic	r3, r3, #32768
 254 002a 8B60     		str	r3, [r1, #8]
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 255              		.loc 1 293 0 discriminator 2
 256 002c 0168     		ldr	r1, [r0]
 257 002e 8C68     		ldr	r4, [r1, #8]
 258 0030 084B     		ldr	r3, .L24
 259 0032 2340     		ands	r3, r3, r4
 260              	.LVL21:
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 261              		.loc 1 296 0 discriminator 2
 262 0034 8B60     		str	r3, [r1, #8]
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 263              		.loc 1 299 0 discriminator 2
 264 0036 0368     		ldr	r3, [r0]
 265              	.LVL22:
 266 0038 FF21     		movs	r1, #255
 267              	.LVL23:
 268 003a 5962     		str	r1, [r3, #36]
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 269              		.loc 1 301 0 discriminator 2
ARM GAS  /tmp/cco2AszO.s 			page 11


 270 003c 80F82120 		strb	r2, [r0, #33]
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 271              		.loc 1 304 0 discriminator 2
 272 0040 0023     		movs	r3, #0
 273 0042 80F82030 		strb	r3, [r0, #32]
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 274              		.loc 1 306 0 discriminator 2
 275 0046 1846     		mov	r0, r3
 276              	.LVL24:
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 277              		.loc 1 307 0 discriminator 2
 278 0048 5DF8044B 		ldr	r4, [sp], #4
 279              	.LCFI5:
 280              		.cfi_restore 4
 281              		.cfi_def_cfa_offset 0
 282              	.LVL25:
 283 004c 7047     		bx	lr
 284              	.LVL26:
 285              	.L19:
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 286              		.loc 1 282 0
 287 004e 0220     		movs	r0, #2
 288              	.LVL27:
 289              		.loc 1 307 0
 290 0050 7047     		bx	lr
 291              	.L25:
 292 0052 00BF     		.align	2
 293              	.L24:
 294 0054 F7F7FFFF 		.word	-2057
 295              		.cfi_endproc
 296              	.LFE345:
 298              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 299              		.align	1
 300              		.global	HAL_RTCEx_SetInternalTimeStamp
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv5-d16
 306              	HAL_RTCEx_SetInternalTimeStamp:
 307              	.LFB346:
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal TimeStamp.
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 308              		.loc 1 316 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
ARM GAS  /tmp/cco2AszO.s 			page 12


 313              	.LVL28:
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 314              		.loc 1 318 0
 315 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 316 0004 012B     		cmp	r3, #1
 317 0006 1AD0     		beq	.L28
 318              		.loc 1 318 0 is_stmt 0 discriminator 2
 319 0008 0122     		movs	r2, #1
 320 000a 80F82020 		strb	r2, [r0, #32]
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 321              		.loc 1 320 0 is_stmt 1 discriminator 2
 322 000e 0223     		movs	r3, #2
 323 0010 80F82130 		strb	r3, [r0, #33]
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 324              		.loc 1 323 0 discriminator 2
 325 0014 0368     		ldr	r3, [r0]
 326 0016 CA21     		movs	r1, #202
 327 0018 5962     		str	r1, [r3, #36]
 328 001a 0368     		ldr	r3, [r0]
 329 001c 5321     		movs	r1, #83
 330 001e 5962     		str	r1, [r3, #36]
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 331              		.loc 1 326 0 discriminator 2
 332 0020 0168     		ldr	r1, [r0]
 333 0022 8B68     		ldr	r3, [r1, #8]
 334 0024 43F08073 		orr	r3, r3, #16777216
 335 0028 8B60     		str	r3, [r1, #8]
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 336              		.loc 1 329 0 discriminator 2
 337 002a 0368     		ldr	r3, [r0]
 338 002c FF21     		movs	r1, #255
 339 002e 5962     		str	r1, [r3, #36]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 340              		.loc 1 332 0 discriminator 2
 341 0030 80F82120 		strb	r2, [r0, #33]
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 342              		.loc 1 335 0 discriminator 2
 343 0034 0023     		movs	r3, #0
 344 0036 80F82030 		strb	r3, [r0, #32]
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 345              		.loc 1 337 0 discriminator 2
 346 003a 1846     		mov	r0, r3
 347              	.LVL29:
 348 003c 7047     		bx	lr
ARM GAS  /tmp/cco2AszO.s 			page 13


 349              	.LVL30:
 350              	.L28:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 351              		.loc 1 318 0
 352 003e 0220     		movs	r0, #2
 353              	.LVL31:
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 354              		.loc 1 338 0
 355 0040 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE346:
 359              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 360              		.align	1
 361              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv5-d16
 367              	HAL_RTCEx_DeactivateInternalTimeStamp:
 368              	.LFB347:
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal TimeStamp.
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 369              		.loc 1 346 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 375              		.loc 1 348 0
 376 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 377 0004 012B     		cmp	r3, #1
 378 0006 1AD0     		beq	.L31
 379              		.loc 1 348 0 is_stmt 0 discriminator 2
 380 0008 0122     		movs	r2, #1
 381 000a 80F82020 		strb	r2, [r0, #32]
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 382              		.loc 1 350 0 is_stmt 1 discriminator 2
 383 000e 0223     		movs	r3, #2
 384 0010 80F82130 		strb	r3, [r0, #33]
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 385              		.loc 1 353 0 discriminator 2
 386 0014 0368     		ldr	r3, [r0]
 387 0016 CA21     		movs	r1, #202
 388 0018 5962     		str	r1, [r3, #36]
 389 001a 0368     		ldr	r3, [r0]
 390 001c 5321     		movs	r1, #83
ARM GAS  /tmp/cco2AszO.s 			page 14


 391 001e 5962     		str	r1, [r3, #36]
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 392              		.loc 1 356 0 discriminator 2
 393 0020 0168     		ldr	r1, [r0]
 394 0022 8B68     		ldr	r3, [r1, #8]
 395 0024 23F08073 		bic	r3, r3, #16777216
 396 0028 8B60     		str	r3, [r1, #8]
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 397              		.loc 1 359 0 discriminator 2
 398 002a 0368     		ldr	r3, [r0]
 399 002c FF21     		movs	r1, #255
 400 002e 5962     		str	r1, [r3, #36]
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 401              		.loc 1 361 0 discriminator 2
 402 0030 80F82120 		strb	r2, [r0, #33]
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 403              		.loc 1 364 0 discriminator 2
 404 0034 0023     		movs	r3, #0
 405 0036 80F82030 		strb	r3, [r0, #32]
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 406              		.loc 1 366 0 discriminator 2
 407 003a 1846     		mov	r0, r3
 408              	.LVL33:
 409 003c 7047     		bx	lr
 410              	.LVL34:
 411              	.L31:
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 412              		.loc 1 348 0
 413 003e 0220     		movs	r0, #2
 414              	.LVL35:
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 415              		.loc 1 367 0
 416 0040 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE347:
 420              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 421              		.align	1
 422              		.global	HAL_RTCEx_GetTimeStamp
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv5-d16
 428              	HAL_RTCEx_GetTimeStamp:
 429              	.LFB348:
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
ARM GAS  /tmp/cco2AszO.s 			page 15


 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 430              		.loc 1 381 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL36:
 435 0000 70B5     		push	{r4, r5, r6, lr}
 436              	.LCFI6:
 437              		.cfi_def_cfa_offset 16
 438              		.cfi_offset 4, -16
 439              		.cfi_offset 5, -12
 440              		.cfi_offset 6, -8
 441              		.cfi_offset 14, -4
 442 0002 0646     		mov	r6, r0
 443 0004 0C46     		mov	r4, r1
 444 0006 1546     		mov	r5, r2
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmptime;
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpdate;
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 445              		.loc 1 389 0
 446 0008 0168     		ldr	r1, [r0]
 447              	.LVL37:
 448 000a 086B     		ldr	r0, [r1, #48]
 449              	.LVL38:
 450 000c 204A     		ldr	r2, .L36
 451              	.LVL39:
 452 000e 0240     		ands	r2, r2, r0
 453              	.LVL40:
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 454              		.loc 1 390 0
 455 0010 486B     		ldr	r0, [r1, #52]
 456 0012 2049     		ldr	r1, .L36+4
 457 0014 0140     		ands	r1, r1, r0
 458              	.LVL41:
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Hours      = (uint8_t)((tmptime & (RTC_TSTR_HT  | RTC_TSTR_HU))  >> RTC_TSTR_HU_Pos);
 459              		.loc 1 393 0
 460 0016 C2F30540 		ubfx	r0, r2, #16, #6
 461 001a 2070     		strb	r0, [r4]
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Minutes    = (uint8_t)((tmptime & (RTC_TSTR_MNT | RTC_TSTR_MNU)) >> RTC_TSTR_MNU_Pos)
 462              		.loc 1 394 0
 463 001c C2F30620 		ubfx	r0, r2, #8, #7
 464 0020 6070     		strb	r0, [r4, #1]
ARM GAS  /tmp/cco2AszO.s 			page 16


 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->Seconds    = (uint8_t)((tmptime & (RTC_TSTR_ST  | RTC_TSTR_SU))  >> RTC_TSTR_SU_Pos);
 465              		.loc 1 395 0
 466 0022 A270     		strb	r2, [r4, #2]
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TSTR_PM))                 >> RTC_TSTR_PM_Pos);
 467              		.loc 1 396 0
 468 0024 920D     		lsrs	r2, r2, #22
 469              	.LVL42:
 470 0026 E270     		strb	r2, [r4, #3]
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 471              		.loc 1 397 0
 472 0028 3268     		ldr	r2, [r6]
 473 002a 926B     		ldr	r2, [r2, #56]
 474 002c 6260     		str	r2, [r4, #4]
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Year    = 0U;
 475              		.loc 1 400 0
 476 002e 0022     		movs	r2, #0
 477 0030 EA70     		strb	r2, [r5, #3]
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Month   = (uint8_t)((tmpdate & (RTC_TSDR_MT | RTC_TSDR_MU)) >> RTC_TSDR_MU_Pos);
 478              		.loc 1 401 0
 479 0032 C1F30422 		ubfx	r2, r1, #8, #5
 480 0036 6A70     		strb	r2, [r5, #1]
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->Date    = (uint8_t)((tmpdate & (RTC_TSDR_DT | RTC_TSDR_DU)) >> RTC_TSDR_DU_Pos);
 481              		.loc 1 402 0
 482 0038 A970     		strb	r1, [r5, #2]
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_TSDR_WDU))              >> RTC_TSDR_WDU_Pos);
 483              		.loc 1 403 0
 484 003a C1F34231 		ubfx	r1, r1, #13, #3
 485              	.LVL43:
 486 003e 2970     		strb	r1, [r5]
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (Format == RTC_FORMAT_BIN)
 487              		.loc 1 406 0
 488 0040 6BB1     		cbz	r3, .L35
 489              	.LVL44:
 490              	.L33:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Hours   = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Month   = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_ITSF);
 491              		.loc 1 420 0
 492 0042 3168     		ldr	r1, [r6]
 493 0044 CA68     		ldr	r2, [r1, #12]
 494 0046 D2B2     		uxtb	r2, r2
 495 0048 134B     		ldr	r3, .L36+8
ARM GAS  /tmp/cco2AszO.s 			page 17


 496 004a 1343     		orrs	r3, r3, r2
 497 004c CB60     		str	r3, [r1, #12]
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 498              		.loc 1 421 0
 499 004e 3268     		ldr	r2, [r6]
 500 0050 D368     		ldr	r3, [r2, #12]
 501 0052 DBB2     		uxtb	r3, r3
 502 0054 63F40863 		orn	r3, r3, #2176
 503 0058 D360     		str	r3, [r2, #12]
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 504              		.loc 1 424 0
 505 005a 0020     		movs	r0, #0
 506 005c 70BD     		pop	{r4, r5, r6, pc}
 507              	.LVL45:
 508              	.L35:
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 509              		.loc 1 409 0
 510 005e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 511 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 512              	.LVL46:
 513 0064 2070     		strb	r0, [r4]
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 514              		.loc 1 410 0
 515 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 516 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 517              	.LVL47:
 518 006c 6070     		strb	r0, [r4, #1]
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 519              		.loc 1 411 0
 520 006e A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 521 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 522              	.LVL48:
 523 0074 A070     		strb	r0, [r4, #2]
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->Date    = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 524              		.loc 1 414 0
 525 0076 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 526 0078 FFF7FEFF 		bl	RTC_Bcd2ToByte
 527              	.LVL49:
 528 007c 6870     		strb	r0, [r5, #1]
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 529              		.loc 1 415 0
 530 007e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 531 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 532              	.LVL50:
 533 0084 A870     		strb	r0, [r5, #2]
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 534              		.loc 1 416 0
 535 0086 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 536 0088 FFF7FEFF 		bl	RTC_Bcd2ToByte
 537              	.LVL51:
 538 008c 2870     		strb	r0, [r5]
 539 008e D8E7     		b	.L33
 540              	.L37:
 541              		.align	2
 542              	.L36:
ARM GAS  /tmp/cco2AszO.s 			page 18


 543 0090 7F7F7F00 		.word	8355711
 544 0094 3FFFFF00 		.word	16777023
 545 0098 7FFFFDFF 		.word	-131201
 546              		.cfi_endproc
 547              	.LFE348:
 549              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 550              		.align	1
 551              		.global	HAL_RTCEx_SetTamper
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv5-d16
 557              	HAL_RTCEx_SetTamper:
 558              	.LFB349:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### Tamper functions #####
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ==============================================================================
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Before calling any tamper or internal tamper function, you have to call first
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTC_Init() function.
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) In that ine you can select to output tamper event on RTC pin.
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable the Tamper and configure the Tamper filter count, trigger Edge
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       or Level according to the Tamper filter (if equal to 0 Edge else Level)
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       value, sampling frequency, NoErase, MaskFlag, precharge or discharge and
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       Pull-UP, timestamp using the HAL_RTCEx_SetTamper() function.
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       You can configure Tamper with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) The default configuration of the Tamper erases the backup registers. To avoid
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       erase, enable the NoErase field on the TAMP_TAMPCR register.
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   (+) Enable Internal Tamper and configure it with interrupt, timestamp using
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       the HAL_RTCEx_SetInternalTamper() function.
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 19


 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configuration register 2 */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= (sTamper->Tamper);
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
ARM GAS  /tmp/cco2AszO.s 			page 20


 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined (RTC_TAMPCR_TAMP1E)
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper.
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 559              		.loc 1 534 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564              	.LVL52:
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 565              		.loc 1 550 0
 566 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 567 0004 012B     		cmp	r3, #1
 568 0006 6DD0     		beq	.L54
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 569              		.loc 1 534 0 discriminator 2
 570 0008 30B4     		push	{r4, r5}
 571              	.LCFI7:
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 4, -8
 574              		.cfi_offset 5, -4
 575              		.loc 1 550 0 discriminator 2
 576 000a 0123     		movs	r3, #1
 577 000c 80F82030 		strb	r3, [r0, #32]
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 578              		.loc 1 552 0 discriminator 2
 579 0010 0223     		movs	r3, #2
 580 0012 80F82130 		strb	r3, [r0, #33]
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 581              		.loc 1 555 0 discriminator 2
 582 0016 0568     		ldr	r5, [r0]
 583 0018 2A6C     		ldr	r2, [r5, #64]
ARM GAS  /tmp/cco2AszO.s 			page 21


 584              	.LVL53:
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 585              		.loc 1 558 0 discriminator 2
 586 001a 0B68     		ldr	r3, [r1]
 587 001c 1A43     		orrs	r2, r2, r3
 588              	.LVL54:
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the bit (located just next to the tamper enable bit) */
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 589              		.loc 1 561 0 discriminator 2
 590 001e 8C68     		ldr	r4, [r1, #8]
 591 0020 022C     		cmp	r4, #2
 592 0022 18BF     		it	ne
 593 0024 082C     		cmpne	r4, #8
 594 0026 3AD1     		bne	.L40
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 595              		.loc 1 564 0
 596 0028 42EA4302 		orr	r2, r2, r3, lsl #1
 597              	.LVL55:
 598              	.L41:
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 599              		.loc 1 573 0
 600 002c CC68     		ldr	r4, [r1, #12]
 601 002e 002C     		cmp	r4, #0
 602 0030 38D0     		beq	.L42
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 603              		.loc 1 576 0
 604 0032 13F0010F 		tst	r3, #1
 605 0036 01D0     		beq	.L43
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 606              		.loc 1 578 0
 607 0038 42F40032 		orr	r2, r2, #131072
 608              	.LVL56:
 609              	.L43:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 610              		.loc 1 582 0
 611 003c 13F0080F 		tst	r3, #8
 612 0040 01D0     		beq	.L44
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
ARM GAS  /tmp/cco2AszO.s 			page 22


 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 613              		.loc 1 584 0
 614 0042 42F48012 		orr	r2, r2, #1048576
 615              	.LVL57:
 616              	.L44:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 617              		.loc 1 588 0
 618 0046 13F0200F 		tst	r3, #32
 619 004a 01D0     		beq	.L45
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 620              		.loc 1 590 0
 621 004c 42F40002 		orr	r2, r2, #8388608
 622              	.LVL58:
 623              	.L45:
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 624              		.loc 1 617 0
 625 0050 0C69     		ldr	r4, [r1, #16]
 626 0052 BCB3     		cbz	r4, .L48
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 627              		.loc 1 620 0
 628 0054 13F0010F 		tst	r3, #1
 629 0058 01D0     		beq	.L49
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 630              		.loc 1 622 0
ARM GAS  /tmp/cco2AszO.s 			page 23


 631 005a 42F48022 		orr	r2, r2, #262144
 632              	.LVL59:
 633              	.L49:
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 634              		.loc 1 626 0
 635 005e 13F0080F 		tst	r3, #8
 636 0062 01D0     		beq	.L50
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 637              		.loc 1 628 0
 638 0064 42F40012 		orr	r2, r2, #2097152
 639              	.LVL60:
 640              	.L50:
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 641              		.loc 1 632 0
 642 0068 13F0200F 		tst	r3, #32
 643 006c 01D0     		beq	.L51
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 644              		.loc 1 634 0
 645 006e 42F08072 		orr	r2, r2, #16777216
 646              	.LVL61:
 647              	.L51:
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 648              		.loc 1 661 0
ARM GAS  /tmp/cco2AszO.s 			page 24


 649 0072 1D4C     		ldr	r4, .L59
 650 0074 1440     		ands	r4, r4, r2
 651              	.LVL62:
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 652              		.loc 1 666 0
 653 0076 4B69     		ldr	r3, [r1, #20]
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 654              		.loc 1 667 0
 655 0078 8A69     		ldr	r2, [r1, #24]
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 656              		.loc 1 666 0
 657 007a 1343     		orrs	r3, r3, r2
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 658              		.loc 1 668 0
 659 007c CA69     		ldr	r2, [r1, #28]
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 660              		.loc 1 667 0
 661 007e 1343     		orrs	r3, r3, r2
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 662              		.loc 1 669 0
 663 0080 0A6A     		ldr	r2, [r1, #32]
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 664              		.loc 1 668 0
 665 0082 1343     		orrs	r3, r3, r2
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 666              		.loc 1 670 0
 667 0084 4A6A     		ldr	r2, [r1, #36]
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 668              		.loc 1 669 0
 669 0086 1343     		orrs	r3, r3, r2
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 670              		.loc 1 666 0
 671 0088 2343     		orrs	r3, r3, r4
 672              	.LVL63:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 673              		.loc 1 673 0
 674 008a 2B64     		str	r3, [r5, #64]
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 675              		.loc 1 675 0
 676 008c 0123     		movs	r3, #1
 677              	.LVL64:
 678 008e 80F82130 		strb	r3, [r0, #33]
 679              	.LVL65:
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 680              		.loc 1 678 0
 681 0092 0023     		movs	r3, #0
 682 0094 80F82030 		strb	r3, [r0, #32]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 25


 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 683              		.loc 1 680 0
 684 0098 1846     		mov	r0, r3
 685              	.LVL66:
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 686              		.loc 1 681 0
 687 009a 30BC     		pop	{r4, r5}
 688              	.LCFI8:
 689              		.cfi_remember_state
 690              		.cfi_restore 5
 691              		.cfi_restore 4
 692              		.cfi_def_cfa_offset 0
 693 009c 7047     		bx	lr
 694              	.LVL67:
 695              	.L40:
 696              	.LCFI9:
 697              		.cfi_restore_state
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 698              		.loc 1 569 0
 699 009e 22EA4302 		bic	r2, r2, r3, lsl #1
 700              	.LVL68:
 701 00a2 C3E7     		b	.L41
 702              	.L42:
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 703              		.loc 1 597 0
 704 00a4 13F0010F 		tst	r3, #1
 705 00a8 01D0     		beq	.L46
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 706              		.loc 1 599 0
 707 00aa 22F40032 		bic	r2, r2, #131072
 708              	.LVL69:
 709              	.L46:
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 710              		.loc 1 603 0
 711 00ae 13F0080F 		tst	r3, #8
 712 00b2 01D0     		beq	.L47
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 713              		.loc 1 605 0
 714 00b4 22F48012 		bic	r2, r2, #1048576
 715              	.LVL70:
 716              	.L47:
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 717              		.loc 1 609 0
 718 00b8 13F0200F 		tst	r3, #32
 719 00bc C8D0     		beq	.L45
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 720              		.loc 1 611 0
 721 00be 22F40002 		bic	r2, r2, #8388608
 722              	.LVL71:
 723 00c2 C5E7     		b	.L45
 724              	.L48:
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 725              		.loc 1 641 0
 726 00c4 13F0010F 		tst	r3, #1
 727 00c8 01D0     		beq	.L52
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 728              		.loc 1 643 0
ARM GAS  /tmp/cco2AszO.s 			page 26


 729 00ca 22F48022 		bic	r2, r2, #262144
 730              	.LVL72:
 731              	.L52:
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 732              		.loc 1 647 0
 733 00ce 13F0080F 		tst	r3, #8
 734 00d2 01D0     		beq	.L53
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 735              		.loc 1 649 0
 736 00d4 22F40012 		bic	r2, r2, #2097152
 737              	.LVL73:
 738              	.L53:
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 739              		.loc 1 653 0
 740 00d8 13F0200F 		tst	r3, #32
 741 00dc C9D0     		beq	.L51
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 742              		.loc 1 655 0
 743 00de 22F08072 		bic	r2, r2, #16777216
 744              	.LVL74:
 745 00e2 C6E7     		b	.L51
 746              	.LVL75:
 747              	.L54:
 748              	.LCFI10:
 749              		.cfi_def_cfa_offset 0
 750              		.cfi_restore 4
 751              		.cfi_restore 5
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 752              		.loc 1 550 0
 753 00e4 0220     		movs	r0, #2
 754              	.LVL76:
 755              		.loc 1 681 0
 756 00e6 7047     		bx	lr
 757              	.L60:
 758              		.align	2
 759              	.L59:
 760 00e8 7F00FFFF 		.word	-65409
 761              		.cfi_endproc
 762              	.LFE349:
 764              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_RTCEx_SetTamper_IT
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 770              		.fpu fpv5-d16
 772              	HAL_RTCEx_SetTamper_IT:
 773              	.LFB350:
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/cco2AszO.s 			page 27


 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy configuration register into temporary variable */
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the bits that are going to be configured and leave the others unchanged */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter)            | (sTamper->SamplingFrequency) | \
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 28


 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure RTC Tamper Interrupt: EXTI configuration */
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER |= sTamper->Tamper;
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 |= sTamper->Tamper;
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef * hrtc, RTC_TamperTypeDef * sTamper)
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 774              		.loc 1 770 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL77:
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER_CONFIG_CORRECT(sTamper->Filter, sTamper->Trigger));
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 780              		.loc 1 787 0
 781 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 782 0004 012B     		cmp	r3, #1
 783 0006 7BD0     		beq	.L77
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 784              		.loc 1 770 0 discriminator 2
 785 0008 30B4     		push	{r4, r5}
 786              	.LCFI11:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 4, -8
 789              		.cfi_offset 5, -4
ARM GAS  /tmp/cco2AszO.s 			page 29


 790              		.loc 1 787 0 discriminator 2
 791 000a 0123     		movs	r3, #1
 792 000c 80F82030 		strb	r3, [r0, #32]
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 793              		.loc 1 789 0 discriminator 2
 794 0010 0223     		movs	r3, #2
 795 0012 80F82130 		strb	r3, [r0, #33]
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy control register into temporary variable */
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 796              		.loc 1 792 0 discriminator 2
 797 0016 0468     		ldr	r4, [r0]
 798 0018 226C     		ldr	r2, [r4, #64]
 799              	.LVL78:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable selected tamper */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (sTamper->Tamper);
 800              		.loc 1 795 0 discriminator 2
 801 001a 0B68     		ldr	r3, [r1]
 802 001c 1A43     		orrs	r2, r2, r3
 803              	.LVL79:
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit (located just next to the tamper enable bit) */
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
 804              		.loc 1 798 0 discriminator 2
 805 001e 8D68     		ldr	r5, [r1, #8]
 806 0020 022D     		cmp	r5, #2
 807 0022 18BF     		it	ne
 808 0024 082D     		cmpne	r5, #8
 809 0026 48D1     		bne	.L63
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Set the tamper trigger bit */
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg |= (uint32_t)(sTamper->Tamper << 1U);
 810              		.loc 1 801 0
 811 0028 42EA4302 		orr	r2, r2, r3, lsl #1
 812              	.LVL80:
 813              	.L64:
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the tamper trigger bit */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     tmpreg &= (uint32_t)~(sTamper->Tamper << 1U);
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
 814              		.loc 1 810 0
 815 002c CD68     		ldr	r5, [r1, #12]
 816 002e 002D     		cmp	r5, #0
 817 0030 46D0     		beq	.L65
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 818              		.loc 1 813 0
 819 0032 13F0010F 		tst	r3, #1
 820 0036 01D0     		beq	.L66
ARM GAS  /tmp/cco2AszO.s 			page 30


 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1NOERASE);
 821              		.loc 1 815 0
 822 0038 42F40032 		orr	r2, r2, #131072
 823              	.LVL81:
 824              	.L66:
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 825              		.loc 1 819 0
 826 003c 13F0080F 		tst	r3, #8
 827 0040 01D0     		beq	.L67
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2NOERASE);
 828              		.loc 1 821 0
 829 0042 42F48012 		orr	r2, r2, #1048576
 830              	.LVL82:
 831              	.L67:
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 832              		.loc 1 825 0
 833 0046 13F0200F 		tst	r3, #32
 834 004a 01D0     		beq	.L68
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3NOERASE);
 835              		.loc 1 827 0
 836 004c 42F40002 		orr	r2, r2, #8388608
 837              	.LVL83:
 838              	.L68:
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1NOERASE);
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2NOERASE);
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3NOERASE);
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 31


 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
 839              		.loc 1 854 0
 840 0050 0D69     		ldr	r5, [r1, #16]
 841 0052 002D     		cmp	r5, #0
 842 0054 44D0     		beq	.L71
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 843              		.loc 1 857 0
 844 0056 13F0010F 		tst	r3, #1
 845 005a 01D0     		beq	.L72
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP1MF);
 846              		.loc 1 859 0
 847 005c 42F48022 		orr	r2, r2, #262144
 848              	.LVL84:
 849              	.L72:
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
 850              		.loc 1 863 0
 851 0060 13F0080F 		tst	r3, #8
 852 0064 01D0     		beq	.L73
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP2MF);
 853              		.loc 1 865 0
 854 0066 42F40012 		orr	r2, r2, #2097152
 855              	.LVL85:
 856              	.L73:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 857              		.loc 1 869 0
 858 006a 13F0200F 		tst	r3, #32
 859 006e 01D0     		beq	.L74
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg |= (uint32_t)(RTC_TAMPCR_TAMP3MF);
 860              		.loc 1 871 0
 861 0070 42F08072 		orr	r2, r2, #16777216
 862              	.LVL86:
 863              	.L74:
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_1) != 0U)
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP1MF);
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_2) != 0U)
ARM GAS  /tmp/cco2AszO.s 			page 32


 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP2MF);
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((sTamper->Tamper & RTC_TAMPER_3) != 0U)
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tmpreg &= (uint32_t)~(RTC_TAMPCR_TAMP3MF);
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clearing remaining fields before setting them */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg &= ~(RTC_TAMPERFILTER_MASK            | RTC_TAMPERSAMPLINGFREQ_RTCCLK_MASK | \
 864              		.loc 1 898 0
 865 0074 234D     		ldr	r5, .L82
 866 0076 1540     		ands	r5, r5, r2
 867              	.LVL87:
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TAMPERPRECHARGEDURATION_MASK | RTC_TAMPER_PULLUP_MASK             | \
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               RTC_TIMESTAMPONTAMPERDETECTION_MASK);
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set remaining parameters of desired configuration into temporary variable */
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= ((uint32_t)sTamper->Filter            | \
 868              		.loc 1 903 0
 869 0078 4B69     		ldr	r3, [r1, #20]
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 870              		.loc 1 904 0
 871 007a 8A69     		ldr	r2, [r1, #24]
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 872              		.loc 1 903 0
 873 007c 1343     		orrs	r3, r3, r2
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 874              		.loc 1 905 0
 875 007e CA69     		ldr	r2, [r1, #28]
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 876              		.loc 1 904 0
 877 0080 1343     		orrs	r3, r3, r2
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 878              		.loc 1 906 0
 879 0082 0A6A     		ldr	r2, [r1, #32]
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->PrechargeDuration | \
 880              		.loc 1 905 0
 881 0084 1343     		orrs	r3, r3, r2
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TimeStampOnTamperDetection);
 882              		.loc 1 907 0
 883 0086 4A6A     		ldr	r2, [r1, #36]
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->TamperPullUp      | \
 884              		.loc 1 906 0
 885 0088 1343     		orrs	r3, r3, r2
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              (uint32_t)sTamper->SamplingFrequency | \
 886              		.loc 1 903 0
 887 008a 2B43     		orrs	r3, r3, r5
 888              	.LVL88:
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmpreg |= (uint32_t)sTamper->Interrupt;
 889              		.loc 1 910 0
ARM GAS  /tmp/cco2AszO.s 			page 33


 890 008c 4A68     		ldr	r2, [r1, #4]
 891 008e 1343     		orrs	r3, r3, r2
 892              	.LVL89:
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Copy desired configuration into configuration register */
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR = tmpreg;
 893              		.loc 1 913 0
 894 0090 2364     		str	r3, [r4, #64]
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 895              		.loc 1 917 0
 896 0092 1D4A     		ldr	r2, .L82+4
 897 0094 1368     		ldr	r3, [r2]
 898              	.LVL90:
 899 0096 43F48023 		orr	r3, r3, #262144
 900 009a 1360     		str	r3, [r2]
 901              	.LVL91:
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 902              		.loc 1 920 0
 903 009c 4FF0B042 		mov	r2, #1476395008
 904 00a0 1368     		ldr	r3, [r2]
 905 00a2 43F48023 		orr	r3, r3, #262144
 906 00a6 1360     		str	r3, [r2]
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 907              		.loc 1 922 0
 908 00a8 0123     		movs	r3, #1
 909 00aa 80F82130 		strb	r3, [r0, #33]
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 910              		.loc 1 925 0
 911 00ae 0023     		movs	r3, #0
 912 00b0 80F82030 		strb	r3, [r0, #32]
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 913              		.loc 1 927 0
 914 00b4 1846     		mov	r0, r3
 915              	.LVL92:
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 916              		.loc 1 928 0
 917 00b6 30BC     		pop	{r4, r5}
 918              	.LCFI12:
 919              		.cfi_remember_state
 920              		.cfi_restore 5
 921              		.cfi_restore 4
 922              		.cfi_def_cfa_offset 0
 923 00b8 7047     		bx	lr
 924              	.LVL93:
 925              	.L63:
 926              	.LCFI13:
 927              		.cfi_restore_state
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/cco2AszO.s 			page 34


 928              		.loc 1 806 0
 929 00ba 22EA4302 		bic	r2, r2, r3, lsl #1
 930              	.LVL94:
 931 00be B5E7     		b	.L64
 932              	.L65:
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 933              		.loc 1 834 0
 934 00c0 13F0010F 		tst	r3, #1
 935 00c4 01D0     		beq	.L69
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 936              		.loc 1 836 0
 937 00c6 22F40032 		bic	r2, r2, #131072
 938              	.LVL95:
 939              	.L69:
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 940              		.loc 1 840 0
 941 00ca 13F0080F 		tst	r3, #8
 942 00ce 01D0     		beq	.L70
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 943              		.loc 1 842 0
 944 00d0 22F48012 		bic	r2, r2, #1048576
 945              	.LVL96:
 946              	.L70:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 947              		.loc 1 846 0
 948 00d4 13F0200F 		tst	r3, #32
 949 00d8 BAD0     		beq	.L68
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 950              		.loc 1 848 0
 951 00da 22F40002 		bic	r2, r2, #8388608
 952              	.LVL97:
 953 00de B7E7     		b	.L68
 954              	.L71:
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 955              		.loc 1 878 0
 956 00e0 13F0010F 		tst	r3, #1
 957 00e4 01D0     		beq	.L75
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 958              		.loc 1 880 0
 959 00e6 22F48022 		bic	r2, r2, #262144
 960              	.LVL98:
 961              	.L75:
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 962              		.loc 1 884 0
 963 00ea 13F0080F 		tst	r3, #8
 964 00ee 01D0     		beq	.L76
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 965              		.loc 1 886 0
 966 00f0 22F40012 		bic	r2, r2, #2097152
 967              	.LVL99:
 968              	.L76:
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 969              		.loc 1 890 0
 970 00f4 13F0200F 		tst	r3, #32
 971 00f8 BCD0     		beq	.L74
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 972              		.loc 1 892 0
ARM GAS  /tmp/cco2AszO.s 			page 35


 973 00fa 22F08072 		bic	r2, r2, #16777216
 974              	.LVL100:
 975 00fe B9E7     		b	.L74
 976              	.LVL101:
 977              	.L77:
 978              	.LCFI14:
 979              		.cfi_def_cfa_offset 0
 980              		.cfi_restore 4
 981              		.cfi_restore 5
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 982              		.loc 1 787 0
 983 0100 0220     		movs	r0, #2
 984              	.LVL102:
 985              		.loc 1 928 0
 986 0102 7047     		bx	lr
 987              	.L83:
 988              		.align	2
 989              	.L82:
 990 0104 7F00FFFF 		.word	-65409
 991 0108 80000058 		.word	1476395136
 992              		.cfi_endproc
 993              	.LFE350:
 995              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 996              		.align	1
 997              		.global	HAL_RTCEx_DeactivateTamper
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv5-d16
 1003              	HAL_RTCEx_DeactivateTamper:
 1004              	.LFB351:
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be a combination of the following values:
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR1 &= ~Tamper;
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->IER &= ~Tamper;
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper flags in SR register by setting corresponding bits in SCR register *
ARM GAS  /tmp/cco2AszO.s 			page 36


 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = Tamper;
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the selected tamper configuration (trigger, mask flag, and no-erase) */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->CR2 &= ~((Tamper << TAMP_CR2_TAMP1TRG_Pos) | (Tamper << TAMP_CR2_TAMP1MSK_Pos) | (Tamper <<
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be any combination of the following values:
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_3
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef * hrtc, uint32_t Tamper)
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1005              		.loc 1 975 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010              	.LVL103:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1011              		.loc 1 979 0
 1012 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1013 0004 012B     		cmp	r3, #1
 1014 0006 2DD0     		beq	.L89
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 1015              		.loc 1 975 0 discriminator 2
 1016 0008 10B4     		push	{r4}
 1017              	.LCFI15:
 1018              		.cfi_def_cfa_offset 4
 1019              		.cfi_offset 4, -4
 1020              		.loc 1 979 0 discriminator 2
 1021 000a 0123     		movs	r3, #1
 1022 000c 80F82030 		strb	r3, [r0, #32]
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1023              		.loc 1 981 0 discriminator 2
 1024 0010 0223     		movs	r3, #2
 1025 0012 80F82130 		strb	r3, [r0, #33]
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= ((uint32_t)~Tamper);
 1026              		.loc 1 984 0 discriminator 2
 1027 0016 0268     		ldr	r2, [r0]
 1028 0018 136C     		ldr	r3, [r2, #64]
 1029 001a 23EA0103 		bic	r3, r3, r1
 1030 001e 1364     		str	r3, [r2, #64]
ARM GAS  /tmp/cco2AszO.s 			page 37


 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper interrupt */
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0U)
 1031              		.loc 1 988 0 discriminator 2
 1032 0020 11F0010F 		tst	r1, #1
 1033 0024 04D0     		beq	.L86
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1));
 1034              		.loc 1 990 0
 1035 0026 0268     		ldr	r2, [r0]
 1036 0028 146C     		ldr	r4, [r2, #64]
 1037 002a 0F4B     		ldr	r3, .L94
 1038 002c 2340     		ands	r3, r3, r4
 1039 002e 1364     		str	r3, [r2, #64]
 1040              	.L86:
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0U)
 1041              		.loc 1 994 0
 1042 0030 11F0080F 		tst	r1, #8
 1043 0034 04D0     		beq	.L87
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2));
 1044              		.loc 1 996 0
 1045 0036 0268     		ldr	r2, [r0]
 1046 0038 146C     		ldr	r4, [r2, #64]
 1047 003a 0C4B     		ldr	r3, .L94+4
 1048 003c 2340     		ands	r3, r3, r4
 1049 003e 1364     		str	r3, [r2, #64]
 1050              	.L87:
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0U)
 1051              		.loc 1 1000 0
 1052 0040 11F0200F 		tst	r1, #32
 1053 0044 04D0     		beq	.L88
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3));
 1054              		.loc 1 1002 0
 1055 0046 0268     		ldr	r2, [r0]
 1056 0048 116C     		ldr	r1, [r2, #64]
 1057              	.LVL104:
 1058 004a 094B     		ldr	r3, .L94+8
 1059 004c 0B40     		ands	r3, r3, r1
 1060 004e 1364     		str	r3, [r2, #64]
 1061              	.L88:
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1062              		.loc 1 1006 0
 1063 0050 0123     		movs	r3, #1
 1064 0052 80F82130 		strb	r3, [r0, #33]
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 38


1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1065              		.loc 1 1009 0
 1066 0056 0023     		movs	r3, #0
 1067 0058 80F82030 		strb	r3, [r0, #32]
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1068              		.loc 1 1011 0
 1069 005c 1846     		mov	r0, r3
 1070              	.LVL105:
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1071              		.loc 1 1012 0
 1072 005e 5DF8044B 		ldr	r4, [sp], #4
 1073              	.LCFI16:
 1074              		.cfi_restore 4
 1075              		.cfi_def_cfa_offset 0
 1076 0062 7047     		bx	lr
 1077              	.LVL106:
 1078              	.L89:
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1079              		.loc 1 979 0
 1080 0064 0220     		movs	r0, #2
 1081              	.LVL107:
 1082              		.loc 1 1012 0
 1083 0066 7047     		bx	lr
 1084              	.L95:
 1085              		.align	2
 1086              	.L94:
 1087 0068 FBFFFEFF 		.word	-65541
 1088 006c FBFFF7FF 		.word	-524293
 1089 0070 FBFFBFFF 		.word	-4194309
 1090              		.cfi_endproc
 1091              	.LFE351:
 1093              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1094              		.align	1
 1095              		.weak	HAL_RTCEx_TimeStampEventCallback
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv5-d16
 1101              	HAL_RTCEx_TimeStampEventCallback:
 1102              	.LFB353:
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper(RTC_HandleTypeDef *hrtc, RTC_InternalTamperTypeDef *s
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 39


1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-Stamp on internal tamper */
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set Internal Tamper in interrupt mode
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sIntTamper Pointer to Internal Tamper Structure.
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTamper_IT(RTC_HandleTypeDef *hrtc, RTC_InternalTamperTypeDef
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(sIntTamper->IntTamper));
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sIntTamper->TimeStampOnTamperDetection));
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Time-stamp on internal tamper */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->CR, RTC_CR_TAMPTS) != sIntTamper->TimeStampOnTamperDetection)
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sIntTamper->TimeStampOnTamperDetection);
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Interrupt enable register */
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->IER, sIntTamper->IntTamper);
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Control register 1 */
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   SET_BIT(TAMP->CR1, sIntTamper->IntTamper);
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal Tamper.
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper Selected internal tamper event.
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTamper(RTC_HandleTypeDef *hrtc, uint32_t IntTamper)
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
ARM GAS  /tmp/cco2AszO.s 			page 40


1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, IntTamper);
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt mode configuration */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, IntTamper);
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear internal tamper interrupt */
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR1_TAMP1AM)
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set all active Tampers at the same time.
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  sAllTamper Pointer to active Tamper Structure.
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveTampers(RTC_HandleTypeDef *hrtc, RTC_ActiveTampersTypeDef *sAl
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t IER, CR1, CR2, ATCR1, CR, i, tickstart;
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #ifdef  USE_FULL_ASSERT
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_ERASE_MODE(sAllTamper->TampInput[i].NoErase));
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sAllTamper->TampInput[i].MaskFlag));
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Mask flag only supported by TAMPER 1, 2 and 3 */
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     assert_param(!((sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE) && (i > RTC_T
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sAllTamper->TimeStampOnTamperDetection));
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* #ifdef  USE_FULL_ASSERT */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must not be already enabled */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR, TAMP_ATOR_INITS) != 0U)
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Disable all active tampers with HAL_RTCEx_DeactivateActiveTampers */
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (HAL_RTCEx_DeactivateActiveTampers(hrtc) != HAL_OK)
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set TimeStamp on tamper detection */
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR = READ_REG(RTC->CR);
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((CR & RTC_CR_TAMPTS) != (sAllTamper->TimeStampOnTamperDetection))
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     MODIFY_REG(RTC->CR, RTC_CR_TAMPTS, sAllTamper->TimeStampOnTamperDetection);
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR1 = READ_REG(TAMP->CR1);
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR2 = READ_REG(TAMP->CR2);
ARM GAS  /tmp/cco2AszO.s 			page 41


1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   IER = READ_REG(TAMP->IER);
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set common parameters */
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   ATCR1 = (sAllTamper->ActiveFilter | (sAllTamper->ActiveOutputChangePeriod << TAMP_ATCR1_ATPER_Pos
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set specific parameters for each active tamper inputs if enable */
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_TAMP_NB; i++)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (sAllTamper->TampInput[i].Enable != RTC_ATAMP_DISABLE)
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       CR1 |= (TAMP_CR1_TAMP1E << i);
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       ATCR1 |= (TAMP_ATCR1_TAMP1AM << i);
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Interrupt != RTC_ATAMP_INTERRUPT_DISABLE)
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* RTC Tamper Interrupt Configuration: EXTI configuration */
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Interrupt enable register */
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         IER |= (TAMP_IER_TAMP1IE << i);
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1MSK << i);
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         CR2 |= (TAMP_CR2_TAMP1NOERASE << i);
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Set ATOSHARE and configure ATOSELx[] in case of output sharing */
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (sAllTamper->TampInput[i].Output != i)
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= TAMP_ATCR1_ATOSHARE;
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         ATCR1 |= sAllTamper->TampInput[i].Output << ((2u * i) + TAMP_ATCR1_ATOSEL1_Pos);
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->IER, IER);
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR1, ATCR1);
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->ATCR2, ATCR2);
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR2, CR2);
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->CR1, CR1);
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write seed */
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, sAllTamper->Seed[i]);
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 42


1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if Time out is reached exit */
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0u)
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR1_TAMP1AM */
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATSEEDR_SEED)
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a new seed. Active tamper must be enabled.
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  pSeed Pointer to active tamper seed values.
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetActiveSeed(RTC_HandleTypeDef *hrtc, uint32_t *pSeed)
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t i, tickstart;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Active Tampers must be enabled */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(TAMP->ATOR,  TAMP_ATOR_INITS) == 0U)
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   for (i = 0; i < RTC_ATAMP_SEED_NB_UINT32; i++)
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     WRITE_REG(TAMP->ATSEEDR, pSeed[i]);
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC SEEDF flag is set and if Time out is reached exit */
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->ATOR,  TAMP_ATOR_SEEDF) != 0U)
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATSEEDR_SEED */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR1_TAMP1AM)
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate all Active Tampers at the same time.
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/cco2AszO.s 			page 43


1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateActiveTampers(RTC_HandleTypeDef *hrtc)
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get Active tampers */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t ATamp_mask = READ_BIT(TAMP->ATCR1, TAMP_ALL);
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable all actives tampers but not passives tampers */
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR1, ATamp_mask);
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable no erase and mask */
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->CR2, (ATamp_mask | ((ATamp_mask & (TAMP_ATCR1_TAMP1AM | TAMP_ATCR1_TAMP2AM | TAMP
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear tamper interrupt and event flags (WO register) of all actives tampers but not passives t
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, ATamp_mask);
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear all active tampers interrupt mode configuration but not passives tampers */
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->IER, ATamp_mask);
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR1, TAMP_ALL | TAMP_ATCR1_ATCKSEL | TAMP_ATCR1_ATPER | \
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR1_ATOSHARE | TAMP_ATCR1_FLTEN);
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_ATCR2_ATOSEL1)
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(TAMP->ATCR2, TAMP_ATCR2_ATOSEL1 | TAMP_ATCR2_ATOSEL2 | TAMP_ATCR2_ATOSEL3 | TAMP_ATCR2_
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             TAMP_ATCR2_ATOSEL5 | TAMP_ATCR2_ATOSEL6 | TAMP_ATCR2_ATOSEL7 | TAMP_ATCR2_ATOSEL8);
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR2_ATOSEL1 */
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_ATCR1_TAMP1AM */
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_MISR_TSMF)
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on TAMPER registers base address */
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET);
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_TSMF) != 0u)
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/cco2AszO.s 			page 44


1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call TimeStampEvent registered Callback */
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->TimeStampEventCallback(hrtc);
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_TimeStampEventCallback(hrtc);
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Not immediately clear flags because the content of RTC_TSTR and RTC_TSDR are cleared when TS
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CTSF;
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get interrupt status */
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp = tamp->MISR;
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Immediately clear flags */
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tamp->SCR = tmp;
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP1E)
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper1 status */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_1) == RTC_TAMPER_1)
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 1 Event registered Callback */
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper1EventCallback(hrtc);
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper1 callback */
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper1EventCallback(hrtc);
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP1E */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP2E)
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper2 status */
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_2) == RTC_TAMPER_2)
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 2 Event registered Callback */
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper2EventCallback(hrtc);
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper2 callback */
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper2EventCallback(hrtc);
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP2E */
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_TAMP3E)
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Tamper3 status */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_3) == RTC_TAMPER_3)
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Tamper 3 Event registered Callback */
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Tamper3EventCallback(hrtc);
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Tamper3 callback */
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper3EventCallback(hrtc);
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_TAMP3E */
ARM GAS  /tmp/cco2AszO.s 			page 45


1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_1) == RTC_INT_TAMPER_1)
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper1EventCallback(hrtc);
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper1EventCallback(hrtc);
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP2E)
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_2) == RTC_INT_TAMPER_2)
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper2EventCallback(hrtc);
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper2EventCallback(hrtc);
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP2E */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP3E)
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_3) == RTC_INT_TAMPER_3)
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper3EventCallback(hrtc);
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper3EventCallback(hrtc);
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP3E */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP4E)
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_4) == RTC_INT_TAMPER_4)
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper4EventCallback(hrtc);
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper4EventCallback(hrtc);
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP4E */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 46


1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP5E)
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_5) == RTC_INT_TAMPER_5)
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper5EventCallback(hrtc);
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper5EventCallback(hrtc);
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP5E */
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP6E)
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_6) == RTC_INT_TAMPER_6)
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper6EventCallback(hrtc);
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper6EventCallback(hrtc);
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP6E */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP8E)
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check Internal Tamper status */
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((tmp & RTC_INT_TAMPER_8) == RTC_INT_TAMPER_8)
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event registered callback */
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->InternalTamper8EventCallback(hrtc);
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call Internal Tamper Event by-default callback */
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_InternalTamper8EventCallback(hrtc);
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP8E */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_MISR_TSMF */
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_TSF)
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/cco2AszO.s 			page 47


1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_TAMPER_TIMESTAMP_EXTID2_CLEAR_FLAG();
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* SINGLE_CORE */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != 0U)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != 0U)
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit (this will clear timestamp time and date registe
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP1E)
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper1 interrupt source enable status */
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != 0U)
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper1 Interrupt */
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != 0U)
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper1 callback */
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP1E */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP2E)
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper2 interrupt source enable status */
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != 0U)
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper2 Interrupt */
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != 0U)
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper2 callback */
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
ARM GAS  /tmp/cco2AszO.s 			page 48


1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP2E */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPCR_TAMP3E)
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the Tamper3 interrupts source enable status */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != 0U)
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Get the pending status of the Tamper3 Interrupt */
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != 0U)
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Tamper3 callback */
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPCR_TAMP3E */
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_TSF */
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1103              		.loc 1 1579 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 1108              	.LVL108:
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1109              		.loc 1 1586 0
 1110 0000 7047     		bx	lr
 1111              		.cfi_endproc
 1112              	.LFE353:
 1114              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
ARM GAS  /tmp/cco2AszO.s 			page 49


 1115              		.align	1
 1116              		.weak	HAL_RTCEx_Tamper1EventCallback
 1117              		.syntax unified
 1118              		.thumb
 1119              		.thumb_func
 1120              		.fpu fpv5-d16
 1122              	HAL_RTCEx_Tamper1EventCallback:
 1123              	.LFB354:
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_1)
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef * hrtc)
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1124              		.loc 1 1605 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		@ link register save eliminated.
 1129              	.LVL109:
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1130              		.loc 1 1612 0
 1131 0000 7047     		bx	lr
 1132              		.cfi_endproc
 1133              	.LFE354:
 1135              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1136              		.align	1
 1137              		.weak	HAL_RTCEx_Tamper2EventCallback
 1138              		.syntax unified
 1139              		.thumb
 1140              		.thumb_func
 1141              		.fpu fpv5-d16
 1143              	HAL_RTCEx_Tamper2EventCallback:
 1144              	.LFB355:
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_1 */
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_2)
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
ARM GAS  /tmp/cco2AszO.s 			page 50


1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef * hrtc)
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1145              		.loc 1 1622 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
 1150              	.LVL110:
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1151              		.loc 1 1629 0
 1152 0000 7047     		bx	lr
 1153              		.cfi_endproc
 1154              	.LFE355:
 1156              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 1157              		.align	1
 1158              		.weak	HAL_RTCEx_Tamper3EventCallback
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv5-d16
 1164              	HAL_RTCEx_Tamper3EventCallback:
 1165              	.LFB356:
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_2 */
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_3)
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef * hrtc)
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1166              		.loc 1 1639 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171              	.LVL111:
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1172              		.loc 1 1646 0
 1173 0000 7047     		bx	lr
ARM GAS  /tmp/cco2AszO.s 			page 51


 1174              		.cfi_endproc
 1175              	.LFE356:
 1177              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 1178              		.align	1
 1179              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv5-d16
 1185              	HAL_RTCEx_TamperTimeStampIRQHandler:
 1186              	.LFB352:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 1187              		.loc 1 1475 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              	.LVL112:
 1192 0000 10B5     		push	{r4, lr}
 1193              	.LCFI17:
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 4, -8
 1196              		.cfi_offset 14, -4
 1197 0002 0446     		mov	r4, r0
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
 1198              		.loc 1 1487 0
 1199 0004 2A4B     		ldr	r3, .L110
 1200 0006 4FF48022 		mov	r2, #262144
 1201 000a 9A60     		str	r2, [r3, #8]
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1202              		.loc 1 1491 0
 1203 000c 0368     		ldr	r3, [r0]
 1204 000e 9A68     		ldr	r2, [r3, #8]
 1205 0010 12F4004F 		tst	r2, #32768
 1206 0014 03D0     		beq	.L101
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1207              		.loc 1 1494 0
 1208 0016 DB68     		ldr	r3, [r3, #12]
 1209 0018 13F4006F 		tst	r3, #2048
 1210 001c 1ED1     		bne	.L106
 1211              	.LVL113:
 1212              	.L101:
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1213              		.loc 1 1510 0
 1214 001e 2268     		ldr	r2, [r4]
 1215 0020 116C     		ldr	r1, [r2, #64]
 1216 0022 244B     		ldr	r3, .L110+4
 1217 0024 0B40     		ands	r3, r3, r1
 1218 0026 1BB1     		cbz	r3, .L102
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1219              		.loc 1 1513 0
 1220 0028 D368     		ldr	r3, [r2, #12]
 1221 002a 13F4005F 		tst	r3, #8192
 1222 002e 1ED1     		bne	.L107
 1223              	.L102:
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1224              		.loc 1 1530 0
 1225 0030 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cco2AszO.s 			page 52


 1226 0032 116C     		ldr	r1, [r2, #64]
 1227 0034 204B     		ldr	r3, .L110+8
 1228 0036 0B40     		ands	r3, r3, r1
 1229 0038 1BB1     		cbz	r3, .L103
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1230              		.loc 1 1533 0
 1231 003a D368     		ldr	r3, [r2, #12]
 1232 003c 13F4804F 		tst	r3, #16384
 1233 0040 1ED1     		bne	.L108
 1234              	.L103:
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 1235              		.loc 1 1550 0
 1236 0042 2268     		ldr	r2, [r4]
 1237 0044 116C     		ldr	r1, [r2, #64]
 1238 0046 1D4B     		ldr	r3, .L110+12
 1239 0048 0B40     		ands	r3, r3, r1
 1240 004a 1BB1     		cbz	r3, .L104
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 1241              		.loc 1 1553 0
 1242 004c D368     		ldr	r3, [r2, #12]
 1243 004e 13F4004F 		tst	r3, #32768
 1244 0052 1ED1     		bne	.L109
 1245              	.L104:
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1246              		.loc 1 1569 0
 1247 0054 0123     		movs	r3, #1
 1248 0056 84F82130 		strb	r3, [r4, #33]
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_TSF */
 1249              		.loc 1 1570 0
 1250 005a 10BD     		pop	{r4, pc}
 1251              	.LVL114:
 1252              	.L106:
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 1253              		.loc 1 1500 0
 1254 005c FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 1255              	.LVL115:
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1256              		.loc 1 1504 0
 1257 0060 2268     		ldr	r2, [r4]
 1258 0062 D368     		ldr	r3, [r2, #12]
 1259 0064 DBB2     		uxtb	r3, r3
 1260 0066 63F40863 		orn	r3, r3, #2176
 1261 006a D360     		str	r3, [r2, #12]
 1262 006c D7E7     		b	.L101
 1263              	.L107:
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1264              		.loc 1 1516 0
 1265 006e D368     		ldr	r3, [r2, #12]
 1266 0070 DBB2     		uxtb	r3, r3
 1267 0072 63F40253 		orn	r3, r3, #8320
 1268 0076 D360     		str	r3, [r2, #12]
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 1269              		.loc 1 1522 0
 1270 0078 2046     		mov	r0, r4
 1271 007a FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 1272              	.LVL116:
 1273 007e D7E7     		b	.L102
ARM GAS  /tmp/cco2AszO.s 			page 53


 1274              	.L108:
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1275              		.loc 1 1536 0
 1276 0080 D368     		ldr	r3, [r2, #12]
 1277 0082 DBB2     		uxtb	r3, r3
 1278 0084 63F48143 		orn	r3, r3, #16512
 1279 0088 D360     		str	r3, [r2, #12]
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 1280              		.loc 1 1542 0
 1281 008a 2046     		mov	r0, r4
 1282 008c FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 1283              	.LVL117:
 1284 0090 D7E7     		b	.L103
 1285              	.L109:
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1286              		.loc 1 1556 0
 1287 0092 D368     		ldr	r3, [r2, #12]
 1288 0094 DBB2     		uxtb	r3, r3
 1289 0096 43F07F43 		orr	r3, r3, #-16777216
 1290 009a 43F47F03 		orr	r3, r3, #16711680
 1291 009e 43F4FE43 		orr	r3, r3, #32512
 1292 00a2 43F07F03 		orr	r3, r3, #127
 1293 00a6 D360     		str	r3, [r2, #12]
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 1294              		.loc 1 1562 0
 1295 00a8 2046     		mov	r0, r4
 1296 00aa FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 1297              	.LVL118:
 1298 00ae D1E7     		b	.L104
 1299              	.L111:
 1300              		.align	2
 1301              	.L110:
 1302 00b0 80000058 		.word	1476395136
 1303 00b4 04000100 		.word	65540
 1304 00b8 04000800 		.word	524292
 1305 00bc 04004000 		.word	4194308
 1306              		.cfi_endproc
 1307              	.LFE352:
 1309              		.section	.text.HAL_RTCEx_InternalTamper1EventCallback,"ax",%progbits
 1310              		.align	1
 1311              		.weak	HAL_RTCEx_InternalTamper1EventCallback
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu fpv5-d16
 1317              	HAL_RTCEx_InternalTamper1EventCallback:
 1318              	.LFB357:
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_3 */
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 1 callback.
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper1EventCallback(RTC_HandleTypeDef *hrtc)
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1319              		.loc 1 1655 0
ARM GAS  /tmp/cco2AszO.s 			page 54


 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              		@ link register save eliminated.
 1324              	.LVL119:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper1EventCallback could be implemented in the user file
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1325              		.loc 1 1662 0
 1326 0000 7047     		bx	lr
 1327              		.cfi_endproc
 1328              	.LFE357:
 1330              		.section	.text.HAL_RTCEx_InternalTamper2EventCallback,"ax",%progbits
 1331              		.align	1
 1332              		.weak	HAL_RTCEx_InternalTamper2EventCallback
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu fpv5-d16
 1338              	HAL_RTCEx_InternalTamper2EventCallback:
 1339              	.LFB358:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 2 callback.
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper2EventCallback(RTC_HandleTypeDef *hrtc)
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1340              		.loc 1 1670 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
 1345              	.LVL120:
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper2EventCallback could be implemented in the user file
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1346              		.loc 1 1677 0
 1347 0000 7047     		bx	lr
 1348              		.cfi_endproc
 1349              	.LFE358:
 1351              		.section	.text.HAL_RTCEx_InternalTamper3EventCallback,"ax",%progbits
 1352              		.align	1
 1353              		.weak	HAL_RTCEx_InternalTamper3EventCallback
 1354              		.syntax unified
 1355              		.thumb
 1356              		.thumb_func
 1357              		.fpu fpv5-d16
ARM GAS  /tmp/cco2AszO.s 			page 55


 1359              	HAL_RTCEx_InternalTamper3EventCallback:
 1360              	.LFB359:
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 3 callback.
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper3EventCallback(RTC_HandleTypeDef *hrtc)
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1361              		.loc 1 1685 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365              		@ link register save eliminated.
 1366              	.LVL121:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper3EventCallback could be implemented in the user file
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1367              		.loc 1 1692 0
 1368 0000 7047     		bx	lr
 1369              		.cfi_endproc
 1370              	.LFE359:
 1372              		.section	.text.HAL_RTCEx_InternalTamper4EventCallback,"ax",%progbits
 1373              		.align	1
 1374              		.weak	HAL_RTCEx_InternalTamper4EventCallback
 1375              		.syntax unified
 1376              		.thumb
 1377              		.thumb_func
 1378              		.fpu fpv5-d16
 1380              	HAL_RTCEx_InternalTamper4EventCallback:
 1381              	.LFB360:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 4 callback.
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper4EventCallback(RTC_HandleTypeDef *hrtc)
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1382              		.loc 1 1700 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387              	.LVL122:
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper4EventCallback could be implemented in the user file
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/cco2AszO.s 			page 56


 1388              		.loc 1 1707 0
 1389 0000 7047     		bx	lr
 1390              		.cfi_endproc
 1391              	.LFE360:
 1393              		.section	.text.HAL_RTCEx_InternalTamper5EventCallback,"ax",%progbits
 1394              		.align	1
 1395              		.weak	HAL_RTCEx_InternalTamper5EventCallback
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv5-d16
 1401              	HAL_RTCEx_InternalTamper5EventCallback:
 1402              	.LFB361:
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 5 callback.
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper5EventCallback(RTC_HandleTypeDef *hrtc)
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1403              		.loc 1 1715 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LVL123:
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper5EventCallback could be implemented in the user file
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1409              		.loc 1 1722 0
 1410 0000 7047     		bx	lr
 1411              		.cfi_endproc
 1412              	.LFE361:
 1414              		.section	.text.HAL_RTCEx_InternalTamper6EventCallback,"ax",%progbits
 1415              		.align	1
 1416              		.weak	HAL_RTCEx_InternalTamper6EventCallback
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv5-d16
 1422              	HAL_RTCEx_InternalTamper6EventCallback:
 1423              	.LFB362:
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 6 callback.
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper6EventCallback(RTC_HandleTypeDef *hrtc)
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1424              		.loc 1 1730 0
 1425              		.cfi_startproc
ARM GAS  /tmp/cco2AszO.s 			page 57


 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429              	.LVL124:
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper6EventCallback could be implemented in the user file
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1430              		.loc 1 1737 0
 1431 0000 7047     		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE362:
 1435              		.section	.text.HAL_RTCEx_InternalTamper8EventCallback,"ax",%progbits
 1436              		.align	1
 1437              		.weak	HAL_RTCEx_InternalTamper8EventCallback
 1438              		.syntax unified
 1439              		.thumb
 1440              		.thumb_func
 1441              		.fpu fpv5-d16
 1443              	HAL_RTCEx_InternalTamper8EventCallback:
 1444              	.LFB363:
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper 8 callback.
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_InternalTamper8EventCallback(RTC_HandleTypeDef *hrtc)
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1445              		.loc 1 1745 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 1450              	.LVL125:
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_InternalTamper8EventCallback could be implemented in the user file
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1451              		.loc 1 1752 0
 1452 0000 7047     		bx	lr
 1453              		.cfi_endproc
 1454              	.LFE363:
 1456              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1457              		.align	1
 1458              		.global	HAL_RTCEx_PollForTimeStampEvent
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv5-d16
 1464              	HAL_RTCEx_PollForTimeStampEvent:
ARM GAS  /tmp/cco2AszO.s 			page 58


 1465              	.LFB364:
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  *
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1466              		.loc 1 1770 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              	.LVL126:
 1471 0000 70B5     		push	{r4, r5, r6, lr}
 1472              	.LCFI18:
 1473              		.cfi_def_cfa_offset 16
 1474              		.cfi_offset 4, -16
 1475              		.cfi_offset 5, -12
 1476              		.cfi_offset 6, -8
 1477              		.cfi_offset 14, -4
 1478 0002 0446     		mov	r4, r0
 1479 0004 0D46     		mov	r5, r1
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1480              		.loc 1 1771 0
 1481 0006 FFF7FEFF 		bl	HAL_GetTick
 1482              	.LVL127:
 1483 000a 0646     		mov	r6, r0
 1484              	.LVL128:
 1485              	.L123:
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == 0U)
 1486              		.loc 1 1773 0
 1487 000c 2368     		ldr	r3, [r4]
 1488 000e DA68     		ldr	r2, [r3, #12]
 1489 0010 12F4006F 		tst	r2, #2048
 1490 0014 1BD1     		bne	.L127
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != 0U)
 1491              		.loc 1 1775 0
 1492 0016 DA68     		ldr	r2, [r3, #12]
 1493 0018 12F4805F 		tst	r2, #4096
 1494 001c 0DD1     		bne	.L128
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 59


1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_ERROR;
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1495              		.loc 1 1786 0
 1496 001e B5F1FF3F 		cmp	r5, #-1
 1497 0022 F3D0     		beq	.L123
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1498              		.loc 1 1788 0
 1499 0024 FFF7FEFF 		bl	HAL_GetTick
 1500              	.LVL129:
 1501 0028 801B     		subs	r0, r0, r6
 1502 002a A842     		cmp	r0, r5
 1503 002c 01D8     		bhi	.L124
 1504              		.loc 1 1788 0 is_stmt 0 discriminator 1
 1505 002e 002D     		cmp	r5, #0
 1506 0030 ECD1     		bne	.L123
 1507              	.L124:
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1508              		.loc 1 1790 0 is_stmt 1
 1509 0032 0320     		movs	r0, #3
 1510 0034 84F82100 		strb	r0, [r4, #33]
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1511              		.loc 1 1791 0
 1512 0038 0DE0     		b	.L122
 1513              	.L128:
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1514              		.loc 1 1778 0
 1515 003a DA68     		ldr	r2, [r3, #12]
 1516 003c D2B2     		uxtb	r2, r2
 1517 003e 62F48452 		orn	r2, r2, #4224
 1518 0042 DA60     		str	r2, [r3, #12]
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1519              		.loc 1 1781 0
 1520 0044 0423     		movs	r3, #4
 1521 0046 84F82130 		strb	r3, [r4, #33]
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
 1522              		.loc 1 1783 0
 1523 004a 0120     		movs	r0, #1
 1524 004c 03E0     		b	.L122
 1525              	.L127:
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1526              		.loc 1 1797 0
 1527 004e 0123     		movs	r3, #1
 1528 0050 84F82130 		strb	r3, [r4, #33]
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
ARM GAS  /tmp/cco2AszO.s 			page 60


 1529              		.loc 1 1799 0
 1530 0054 0020     		movs	r0, #0
 1531              	.L122:
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1532              		.loc 1 1800 0
 1533 0056 70BD     		pop	{r4, r5, r6, pc}
 1534              		.cfi_endproc
 1535              	.LFE364:
 1537              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1538              		.align	1
 1539              		.global	HAL_RTCEx_PollForTamper1Event
 1540              		.syntax unified
 1541              		.thumb
 1542              		.thumb_func
 1543              		.fpu fpv5-d16
 1545              	HAL_RTCEx_PollForTamper1Event:
 1546              	.LFB365:
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** * @{
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** */
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_1)
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper1 Polling.
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1547              		.loc 1 1820 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL130:
 1552 0000 70B5     		push	{r4, r5, r6, lr}
 1553              	.LCFI19:
 1554              		.cfi_def_cfa_offset 16
 1555              		.cfi_offset 4, -16
 1556              		.cfi_offset 5, -12
 1557              		.cfi_offset 6, -8
 1558              		.cfi_offset 14, -4
 1559 0002 0446     		mov	r4, r0
 1560 0004 0D46     		mov	r5, r1
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1561              		.loc 1 1821 0
 1562 0006 FFF7FEFF 		bl	HAL_GetTick
 1563              	.LVL131:
 1564 000a 0646     		mov	r6, r0
 1565              	.LVL132:
ARM GAS  /tmp/cco2AszO.s 			page 61


 1566              	.L131:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) == 0U)
 1567              		.loc 1 1824 0
 1568 000c 2368     		ldr	r3, [r4]
 1569 000e DA68     		ldr	r2, [r3, #12]
 1570 0010 12F4005F 		tst	r2, #8192
 1571 0014 0DD1     		bne	.L136
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1572              		.loc 1 1826 0
 1573 0016 B5F1FF3F 		cmp	r5, #-1
 1574 001a F7D0     		beq	.L131
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1575              		.loc 1 1828 0
 1576 001c FFF7FEFF 		bl	HAL_GetTick
 1577              	.LVL133:
 1578 0020 801B     		subs	r0, r0, r6
 1579 0022 A842     		cmp	r0, r5
 1580 0024 01D8     		bhi	.L132
 1581              		.loc 1 1828 0 is_stmt 0 discriminator 1
 1582 0026 002D     		cmp	r5, #0
 1583 0028 F0D1     		bne	.L131
 1584              	.L132:
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1585              		.loc 1 1830 0 is_stmt 1
 1586 002a 0320     		movs	r0, #3
 1587 002c 84F82100 		strb	r0, [r4, #33]
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1588              		.loc 1 1831 0
 1589 0030 08E0     		b	.L133
 1590              	.L136:
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 1591              		.loc 1 1837 0
 1592 0032 DA68     		ldr	r2, [r3, #12]
 1593 0034 D2B2     		uxtb	r2, r2
 1594 0036 62F40252 		orn	r2, r2, #8320
 1595 003a DA60     		str	r2, [r3, #12]
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1596              		.loc 1 1840 0
 1597 003c 0123     		movs	r3, #1
 1598 003e 84F82130 		strb	r3, [r4, #33]
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1599              		.loc 1 1842 0
 1600 0042 0020     		movs	r0, #0
 1601              	.L133:
ARM GAS  /tmp/cco2AszO.s 			page 62


1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1602              		.loc 1 1843 0
 1603 0044 70BD     		pop	{r4, r5, r6, pc}
 1604              		.cfi_endproc
 1605              	.LFE365:
 1607              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1608              		.align	1
 1609              		.global	HAL_RTCEx_PollForTamper2Event
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv5-d16
 1615              	HAL_RTCEx_PollForTamper2Event:
 1616              	.LFB366:
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_1 */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_2)
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper2 Polling.
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1617              		.loc 1 1854 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              	.LVL134:
 1622 0000 70B5     		push	{r4, r5, r6, lr}
 1623              	.LCFI20:
 1624              		.cfi_def_cfa_offset 16
 1625              		.cfi_offset 4, -16
 1626              		.cfi_offset 5, -12
 1627              		.cfi_offset 6, -8
 1628              		.cfi_offset 14, -4
 1629 0002 0446     		mov	r4, r0
 1630 0004 0D46     		mov	r5, r1
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1631              		.loc 1 1855 0
 1632 0006 FFF7FEFF 		bl	HAL_GetTick
 1633              	.LVL135:
 1634 000a 0646     		mov	r6, r0
 1635              	.LVL136:
 1636              	.L139:
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == 0U)
 1637              		.loc 1 1858 0
 1638 000c 2368     		ldr	r3, [r4]
 1639 000e DA68     		ldr	r2, [r3, #12]
 1640 0010 12F4804F 		tst	r2, #16384
 1641 0014 0DD1     		bne	.L144
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1642              		.loc 1 1860 0
ARM GAS  /tmp/cco2AszO.s 			page 63


 1643 0016 B5F1FF3F 		cmp	r5, #-1
 1644 001a F7D0     		beq	.L139
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1645              		.loc 1 1862 0
 1646 001c FFF7FEFF 		bl	HAL_GetTick
 1647              	.LVL137:
 1648 0020 801B     		subs	r0, r0, r6
 1649 0022 A842     		cmp	r0, r5
 1650 0024 01D8     		bhi	.L140
 1651              		.loc 1 1862 0 is_stmt 0 discriminator 1
 1652 0026 002D     		cmp	r5, #0
 1653 0028 F0D1     		bne	.L139
 1654              	.L140:
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1655              		.loc 1 1864 0 is_stmt 1
 1656 002a 0320     		movs	r0, #3
 1657 002c 84F82100 		strb	r0, [r4, #33]
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1658              		.loc 1 1865 0
 1659 0030 08E0     		b	.L141
 1660              	.L144:
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1661              		.loc 1 1871 0
 1662 0032 DA68     		ldr	r2, [r3, #12]
 1663 0034 D2B2     		uxtb	r2, r2
 1664 0036 62F48142 		orn	r2, r2, #16512
 1665 003a DA60     		str	r2, [r3, #12]
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1666              		.loc 1 1874 0
 1667 003c 0123     		movs	r3, #1
 1668 003e 84F82130 		strb	r3, [r4, #33]
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1669              		.loc 1 1876 0
 1670 0042 0020     		movs	r0, #0
 1671              	.L141:
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1672              		.loc 1 1877 0
 1673 0044 70BD     		pop	{r4, r5, r6, pc}
 1674              		.cfi_endproc
 1675              	.LFE366:
 1677              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 1678              		.align	1
 1679              		.global	HAL_RTCEx_PollForTamper3Event
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv5-d16
ARM GAS  /tmp/cco2AszO.s 			page 64


 1685              	HAL_RTCEx_PollForTamper3Event:
 1686              	.LFB367:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_2 */
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER_3)
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Tamper3 Polling.
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1687              		.loc 1 1888 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              	.LVL138:
 1692 0000 70B5     		push	{r4, r5, r6, lr}
 1693              	.LCFI21:
 1694              		.cfi_def_cfa_offset 16
 1695              		.cfi_offset 4, -16
 1696              		.cfi_offset 5, -12
 1697              		.cfi_offset 6, -8
 1698              		.cfi_offset 14, -4
 1699 0002 0446     		mov	r4, r0
 1700 0004 0D46     		mov	r5, r1
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1701              		.loc 1 1889 0
 1702 0006 FFF7FEFF 		bl	HAL_GetTick
 1703              	.LVL139:
 1704 000a 0646     		mov	r6, r0
 1705              	.LVL140:
 1706              	.L147:
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == 0U)
 1707              		.loc 1 1892 0
 1708 000c 2368     		ldr	r3, [r4]
 1709 000e DA68     		ldr	r2, [r3, #12]
 1710 0010 12F4004F 		tst	r2, #32768
 1711 0014 0DD1     		bne	.L152
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1712              		.loc 1 1894 0
 1713 0016 B5F1FF3F 		cmp	r5, #-1
 1714 001a F7D0     		beq	.L147
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1715              		.loc 1 1896 0
 1716 001c FFF7FEFF 		bl	HAL_GetTick
 1717              	.LVL141:
 1718 0020 801B     		subs	r0, r0, r6
 1719 0022 A842     		cmp	r0, r5
 1720 0024 01D8     		bhi	.L148
 1721              		.loc 1 1896 0 is_stmt 0 discriminator 1
 1722 0026 002D     		cmp	r5, #0
ARM GAS  /tmp/cco2AszO.s 			page 65


 1723 0028 F0D1     		bne	.L147
 1724              	.L148:
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1725              		.loc 1 1898 0 is_stmt 1
 1726 002a 0320     		movs	r0, #3
 1727 002c 84F82100 		strb	r0, [r4, #33]
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1728              		.loc 1 1899 0
 1729 0030 0EE0     		b	.L149
 1730              	.L152:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 1731              		.loc 1 1905 0
 1732 0032 DA68     		ldr	r2, [r3, #12]
 1733 0034 D2B2     		uxtb	r2, r2
 1734 0036 42F07F42 		orr	r2, r2, #-16777216
 1735 003a 42F47F02 		orr	r2, r2, #16711680
 1736 003e 42F4FE42 		orr	r2, r2, #32512
 1737 0042 42F07F02 		orr	r2, r2, #127
 1738 0046 DA60     		str	r2, [r3, #12]
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1739              		.loc 1 1908 0
 1740 0048 0123     		movs	r3, #1
 1741 004a 84F82130 		strb	r3, [r4, #33]
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 1742              		.loc 1 1910 0
 1743 004e 0020     		movs	r0, #0
 1744              	.L149:
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1745              		.loc 1 1911 0
 1746 0050 70BD     		pop	{r4, r5, r6, pc}
 1747              		.cfi_endproc
 1748              	.LFE367:
 1750              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 1751              		.align	1
 1752              		.global	HAL_RTCEx_SetWakeUpTimer
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv5-d16
 1758              	HAL_RTCEx_SetWakeUpTimer:
 1759              	.LFB368:
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER_3 */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_CR1_ITAMP1E)
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Internal Tamper event polling.
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  IntTamper selected tamper.
ARM GAS  /tmp/cco2AszO.s 			page 66


1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be any combination of existing internal tampers.
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForInternalTamperEvent(RTC_HandleTypeDef *hrtc, uint32_t IntTamper,
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_INTERNAL_TAMPER(IntTamper));
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (READ_BIT(TAMP->SR, IntTamper) != IntTamper)
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   WRITE_REG(TAMP->SCR, IntTamper);
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_CR1_ITAMP1E */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
ARM GAS  /tmp/cco2AszO.s 			page 67


 1760              		.loc 1 1975 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL142:
 1765 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1766              	.LCFI22:
 1767              		.cfi_def_cfa_offset 24
 1768              		.cfi_offset 3, -24
 1769              		.cfi_offset 4, -20
 1770              		.cfi_offset 5, -16
 1771              		.cfi_offset 6, -12
 1772              		.cfi_offset 7, -8
 1773              		.cfi_offset 14, -4
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1774              		.loc 1 1983 0
 1775 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1776 0006 012B     		cmp	r3, #1
 1777 0008 46D0     		beq	.L158
 1778 000a 1646     		mov	r6, r2
 1779 000c 0D46     		mov	r5, r1
 1780 000e 0446     		mov	r4, r0
 1781              		.loc 1 1983 0 is_stmt 0 discriminator 2
 1782 0010 0123     		movs	r3, #1
 1783 0012 80F82030 		strb	r3, [r0, #32]
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1784              		.loc 1 1985 0 is_stmt 1 discriminator 2
 1785 0016 0223     		movs	r3, #2
 1786 0018 80F82130 		strb	r3, [r0, #33]
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1787              		.loc 1 1988 0 discriminator 2
 1788 001c 0368     		ldr	r3, [r0]
 1789 001e CA22     		movs	r2, #202
 1790              	.LVL143:
 1791 0020 5A62     		str	r2, [r3, #36]
 1792 0022 0368     		ldr	r3, [r0]
 1793 0024 5322     		movs	r2, #83
 1794 0026 5A62     		str	r2, [r3, #36]
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 1795              		.loc 1 1991 0 discriminator 2
 1796 0028 1C4B     		ldr	r3, .L161
 1797 002a 9A68     		ldr	r2, [r3, #8]
 1798 002c 22F48062 		bic	r2, r2, #1024
 1799 0030 9A60     		str	r2, [r3, #8]
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 68


1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR / RTC_ISR to make sure the access to wakeup autoreload
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_INITF)
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
 1800              		.loc 1 1997 0 discriminator 2
 1801 0032 DB68     		ldr	r3, [r3, #12]
 1802 0034 13F0400F 		tst	r3, #64
 1803 0038 16D0     		beq	.L160
 1804              	.LVL144:
 1805              	.L155:
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_INITF */
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_INITF)
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_INITF */
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_WUTWF)
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_WUTWF */
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTWF)
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t CR_tmp = hrtc->Instance->CR;
 1806              		.loc 1 2028 0
 1807 003a 2168     		ldr	r1, [r4]
 1808 003c 8B68     		ldr	r3, [r1, #8]
 1809              	.LVL145:
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 1810              		.loc 1 2029 0
 1811 003e 23F00703 		bic	r3, r3, #7
 1812              	.LVL146:
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CR_tmp |= (uint32_t)WakeUpClock;
 1813              		.loc 1 2030 0
 1814 0042 3343     		orrs	r3, r3, r6
 1815              	.LVL147:
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR = CR_tmp;
 1816              		.loc 1 2031 0
 1817 0044 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/cco2AszO.s 			page 69


2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1818              		.loc 1 2034 0
 1819 0046 2368     		ldr	r3, [r4]
 1820              	.LVL148:
 1821 0048 5D61     		str	r5, [r3, #20]
 1822              	.LVL149:
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1823              		.loc 1 2037 0
 1824 004a 2268     		ldr	r2, [r4]
 1825 004c 9368     		ldr	r3, [r2, #8]
 1826 004e 43F48063 		orr	r3, r3, #1024
 1827 0052 9360     		str	r3, [r2, #8]
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1828              		.loc 1 2040 0
 1829 0054 2368     		ldr	r3, [r4]
 1830 0056 FF22     		movs	r2, #255
 1831 0058 5A62     		str	r2, [r3, #36]
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1832              		.loc 1 2042 0
 1833 005a 0123     		movs	r3, #1
 1834 005c 84F82130 		strb	r3, [r4, #33]
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1835              		.loc 1 2045 0
 1836 0060 0020     		movs	r0, #0
 1837 0062 84F82000 		strb	r0, [r4, #32]
 1838              	.LVL150:
 1839              	.L154:
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1840              		.loc 1 2048 0
 1841 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1842              	.LVL151:
 1843              	.L160:
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1844              		.loc 1 2003 0
 1845 0068 FFF7FEFF 		bl	HAL_GetTick
 1846              	.LVL152:
 1847 006c 0746     		mov	r7, r0
 1848              	.LVL153:
 1849              	.L156:
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 1850              		.loc 1 2009 0
 1851 006e 2368     		ldr	r3, [r4]
 1852 0070 DB68     		ldr	r3, [r3, #12]
 1853 0072 13F0040F 		tst	r3, #4
 1854 0076 E0D1     		bne	.L155
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
ARM GAS  /tmp/cco2AszO.s 			page 70


 1855              		.loc 1 2012 0
 1856 0078 FFF7FEFF 		bl	HAL_GetTick
 1857              	.LVL154:
 1858 007c C01B     		subs	r0, r0, r7
 1859 007e B0F57A7F 		cmp	r0, #1000
 1860 0082 F4D9     		bls	.L156
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1861              		.loc 1 2015 0
 1862 0084 2368     		ldr	r3, [r4]
 1863 0086 FF22     		movs	r2, #255
 1864 0088 5A62     		str	r2, [r3, #36]
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1865              		.loc 1 2017 0
 1866 008a 0320     		movs	r0, #3
 1867 008c 84F82100 		strb	r0, [r4, #33]
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1868              		.loc 1 2020 0
 1869 0090 0023     		movs	r3, #0
 1870 0092 84F82030 		strb	r3, [r4, #32]
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
 1871              		.loc 1 2022 0
 1872 0096 E6E7     		b	.L154
 1873              	.LVL155:
 1874              	.L158:
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1875              		.loc 1 1983 0
 1876 0098 0220     		movs	r0, #2
 1877              	.LVL156:
 1878 009a E4E7     		b	.L154
 1879              	.L162:
 1880              		.align	2
 1881              	.L161:
 1882 009c 00400058 		.word	1476411392
 1883              		.cfi_endproc
 1884              	.LFE368:
 1886              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 1887              		.align	1
 1888              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1892              		.fpu fpv5-d16
 1894              	HAL_RTCEx_SetWakeUpTimer_IT:
 1895              	.LFB369:
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 1896              		.loc 1 2058 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cco2AszO.s 			page 71


 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              	.LVL157:
 1901 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1902              	.LCFI23:
 1903              		.cfi_def_cfa_offset 24
 1904              		.cfi_offset 3, -24
 1905              		.cfi_offset 4, -20
 1906              		.cfi_offset 5, -16
 1907              		.cfi_offset 6, -12
 1908              		.cfi_offset 7, -8
 1909              		.cfi_offset 14, -4
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1910              		.loc 1 2066 0
 1911 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1912 0006 012B     		cmp	r3, #1
 1913 0008 56D0     		beq	.L168
 1914 000a 1546     		mov	r5, r2
 1915 000c 0E46     		mov	r6, r1
 1916 000e 0446     		mov	r4, r0
 1917              		.loc 1 2066 0 is_stmt 0 discriminator 2
 1918 0010 0123     		movs	r3, #1
 1919 0012 80F82030 		strb	r3, [r0, #32]
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1920              		.loc 1 2068 0 is_stmt 1 discriminator 2
 1921 0016 0223     		movs	r3, #2
 1922 0018 80F82130 		strb	r3, [r0, #33]
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1923              		.loc 1 2071 0 discriminator 2
 1924 001c 0368     		ldr	r3, [r0]
 1925 001e CA22     		movs	r2, #202
 1926              	.LVL158:
 1927 0020 5A62     		str	r2, [r3, #36]
 1928 0022 0368     		ldr	r3, [r0]
 1929 0024 5322     		movs	r2, #83
 1930 0026 5A62     		str	r2, [r3, #36]
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_WUTE);
 1931              		.loc 1 2074 0 discriminator 2
 1932 0028 244B     		ldr	r3, .L171
 1933 002a 9A68     		ldr	r2, [r3, #8]
 1934 002c 22F48062 		bic	r2, r2, #1024
 1935 0030 9A60     		str	r2, [r3, #8]
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR to make sure the access to wakeup autoreload
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   calendar initialization mode. */
ARM GAS  /tmp/cco2AszO.s 			page 72


2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_INITF)
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ISR, RTC_ISR_INITF) == 0U)
 1936              		.loc 1 2080 0 discriminator 2
 1937 0032 DB68     		ldr	r3, [r3, #12]
 1938 0034 13F0400F 		tst	r3, #64
 1939 0038 26D0     		beq	.L170
 1940              	.LVL159:
 1941              	.L165:
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_INITF */
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_INITF)
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_INITF */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_WUTWF)
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_WUTWF */
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTWF)
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1942              		.loc 1 2111 0
 1943 003a 2368     		ldr	r3, [r4]
 1944 003c 5E61     		str	r6, [r3, #20]
 1945              	.LBB2:
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits and configure the clock source in CR register */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     uint32_t CR_tmp = hrtc->Instance->CR;
 1946              		.loc 1 2115 0
 1947 003e 2168     		ldr	r1, [r4]
 1948 0040 8B68     		ldr	r3, [r1, #8]
 1949              	.LVL160:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp &= (uint32_t)~RTC_CR_WUCKSEL;
 1950              		.loc 1 2116 0
 1951 0042 23F00703 		bic	r3, r3, #7
 1952              	.LVL161:
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     CR_tmp |= (uint32_t)WakeUpClock;
 1953              		.loc 1 2117 0
ARM GAS  /tmp/cco2AszO.s 			page 73


 1954 0046 2B43     		orrs	r3, r3, r5
 1955              	.LVL162:
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->CR = CR_tmp;
 1956              		.loc 1 2118 0
 1957 0048 8B60     		str	r3, [r1, #8]
 1958              	.LBE2:
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if !defined(DUAL_CORE)
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 1959              		.loc 1 2123 0
 1960 004a 1D4A     		ldr	r2, .L171+4
 1961 004c 1368     		ldr	r3, [r2]
 1962              	.LVL163:
 1963 004e 43F40023 		orr	r3, r3, #524288
 1964 0052 1360     		str	r3, [r2]
 1965              	.LVL164:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 1966              		.loc 1 2126 0
 1967 0054 4FF0B042 		mov	r2, #1476395008
 1968 0058 1368     		ldr	r3, [r2]
 1969 005a 43F40023 		orr	r3, r3, #524288
 1970 005e 1360     		str	r3, [r2]
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc, RTC_IT_WUT);
 1971              		.loc 1 2129 0
 1972 0060 2268     		ldr	r2, [r4]
 1973 0062 9368     		ldr	r3, [r2, #8]
 1974 0064 43F48043 		orr	r3, r3, #16384
 1975 0068 9360     		str	r3, [r2, #8]
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1976              		.loc 1 2132 0
 1977 006a 2268     		ldr	r2, [r4]
 1978 006c 9368     		ldr	r3, [r2, #8]
 1979 006e 43F48063 		orr	r3, r3, #1024
 1980 0072 9360     		str	r3, [r2, #8]
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1981              		.loc 1 2135 0
 1982 0074 2368     		ldr	r3, [r4]
 1983 0076 FF22     		movs	r2, #255
 1984 0078 5A62     		str	r2, [r3, #36]
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1985              		.loc 1 2137 0
 1986 007a 0123     		movs	r3, #1
 1987 007c 84F82130 		strb	r3, [r4, #33]
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/cco2AszO.s 			page 74


 1988              		.loc 1 2140 0
 1989 0080 0020     		movs	r0, #0
 1990 0082 84F82000 		strb	r0, [r4, #32]
 1991              	.LVL165:
 1992              	.L164:
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 1993              		.loc 1 2143 0
 1994 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1995              	.LVL166:
 1996              	.L170:
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 1997              		.loc 1 2086 0
 1998 0088 FFF7FEFF 		bl	HAL_GetTick
 1999              	.LVL167:
 2000 008c 0746     		mov	r7, r0
 2001              	.LVL168:
 2002              	.L166:
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTWF */
 2003              		.loc 1 2092 0
 2004 008e 2368     		ldr	r3, [r4]
 2005 0090 DB68     		ldr	r3, [r3, #12]
 2006 0092 13F0040F 		tst	r3, #4
 2007 0096 D0D1     		bne	.L165
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
 2008              		.loc 1 2095 0
 2009 0098 FFF7FEFF 		bl	HAL_GetTick
 2010              	.LVL169:
 2011 009c C01B     		subs	r0, r0, r7
 2012 009e B0F57A7F 		cmp	r0, #1000
 2013 00a2 F4D9     		bls	.L166
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2014              		.loc 1 2098 0
 2015 00a4 2368     		ldr	r3, [r4]
 2016 00a6 FF22     		movs	r2, #255
 2017 00a8 5A62     		str	r2, [r3, #36]
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2018              		.loc 1 2100 0
 2019 00aa 0320     		movs	r0, #3
 2020 00ac 84F82100 		strb	r0, [r4, #33]
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2021              		.loc 1 2103 0
 2022 00b0 0023     		movs	r3, #0
 2023 00b2 84F82030 		strb	r3, [r4, #32]
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
 2024              		.loc 1 2105 0
 2025 00b6 E6E7     		b	.L164
 2026              	.LVL170:
 2027              	.L168:
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2028              		.loc 1 2066 0
 2029 00b8 0220     		movs	r0, #2
 2030              	.LVL171:
 2031 00ba E4E7     		b	.L164
 2032              	.L172:
 2033              		.align	2
ARM GAS  /tmp/cco2AszO.s 			page 75


 2034              	.L171:
 2035 00bc 00400058 		.word	1476411392
 2036 00c0 80000058 		.word	1476395136
 2037              		.cfi_endproc
 2038              	.LFE369:
 2040              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 2041              		.align	1
 2042              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu fpv5-d16
 2048              	HAL_RTCEx_DeactivateWakeUpTimer:
 2049              	.LFB370:
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2050              		.loc 1 2151 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054              	.LVL172:
 2055 0000 38B5     		push	{r3, r4, r5, lr}
 2056              	.LCFI24:
 2057              		.cfi_def_cfa_offset 16
 2058              		.cfi_offset 3, -16
 2059              		.cfi_offset 4, -12
 2060              		.cfi_offset 5, -8
 2061              		.cfi_offset 14, -4
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2062              		.loc 1 2155 0
 2063 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2064 0006 012B     		cmp	r3, #1
 2065 0008 37D0     		beq	.L177
 2066 000a 0446     		mov	r4, r0
 2067              		.loc 1 2155 0 is_stmt 0 discriminator 2
 2068 000c 0123     		movs	r3, #1
 2069 000e 80F82030 		strb	r3, [r0, #32]
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2070              		.loc 1 2157 0 is_stmt 1 discriminator 2
 2071 0012 0223     		movs	r3, #2
 2072 0014 80F82130 		strb	r3, [r0, #33]
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2073              		.loc 1 2160 0 discriminator 2
 2074 0018 0368     		ldr	r3, [r0]
 2075 001a CA22     		movs	r2, #202
ARM GAS  /tmp/cco2AszO.s 			page 76


 2076 001c 5A62     		str	r2, [r3, #36]
 2077 001e 0368     		ldr	r3, [r0]
 2078 0020 5322     		movs	r2, #83
 2079 0022 5A62     		str	r2, [r3, #36]
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 2080              		.loc 1 2163 0 discriminator 2
 2081 0024 0268     		ldr	r2, [r0]
 2082 0026 9368     		ldr	r3, [r2, #8]
 2083 0028 23F48063 		bic	r3, r3, #1024
 2084 002c 9360     		str	r3, [r2, #8]
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc, RTC_IT_WUT);
 2085              		.loc 1 2166 0 discriminator 2
 2086 002e 0268     		ldr	r2, [r0]
 2087 0030 9368     		ldr	r3, [r2, #8]
 2088 0032 23F48043 		bic	r3, r3, #16384
 2089 0036 9360     		str	r3, [r2, #8]
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2090              		.loc 1 2168 0 discriminator 2
 2091 0038 FFF7FEFF 		bl	HAL_GetTick
 2092              	.LVL173:
 2093 003c 0546     		mov	r5, r0
 2094              	.LVL174:
 2095              	.L175:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if defined(RTC_ICSR_WUTWF)
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_FLAG_WUTWF) == 0U)
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ICSR_WUTWF */
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if defined(RTC_ISR_WUTWF)
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 2096              		.loc 1 2174 0
 2097 003e 2368     		ldr	r3, [r4]
 2098 0040 DA68     		ldr	r2, [r3, #12]
 2099 0042 12F0040F 		tst	r2, #4
 2100 0046 0FD1     		bne	.L179
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* RTC_ISR_WUTWF */
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2101              		.loc 1 2177 0
 2102 0048 FFF7FEFF 		bl	HAL_GetTick
 2103              	.LVL175:
 2104 004c 401B     		subs	r0, r0, r5
 2105 004e B0F57A7F 		cmp	r0, #1000
 2106 0052 F4D9     		bls	.L175
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2107              		.loc 1 2180 0
 2108 0054 2368     		ldr	r3, [r4]
 2109 0056 FF22     		movs	r2, #255
 2110 0058 5A62     		str	r2, [r3, #36]
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
ARM GAS  /tmp/cco2AszO.s 			page 77


 2111              		.loc 1 2182 0
 2112 005a 0320     		movs	r0, #3
 2113 005c 84F82100 		strb	r0, [r4, #33]
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Process Unlocked */
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2114              		.loc 1 2185 0
 2115 0060 0023     		movs	r3, #0
 2116 0062 84F82030 		strb	r3, [r4, #32]
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2117              		.loc 1 2187 0
 2118 0066 07E0     		b	.L174
 2119              	.L179:
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2120              		.loc 1 2192 0
 2121 0068 FF22     		movs	r2, #255
 2122 006a 5A62     		str	r2, [r3, #36]
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2123              		.loc 1 2194 0
 2124 006c 0123     		movs	r3, #1
 2125 006e 84F82130 		strb	r3, [r4, #33]
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2126              		.loc 1 2197 0
 2127 0072 0020     		movs	r0, #0
 2128 0074 84F82000 		strb	r0, [r4, #32]
 2129              	.LVL176:
 2130              	.L174:
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2131              		.loc 1 2200 0
 2132 0078 38BD     		pop	{r3, r4, r5, pc}
 2133              	.LVL177:
 2134              	.L177:
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2135              		.loc 1 2155 0
 2136 007a 0220     		movs	r0, #2
 2137              	.LVL178:
 2138 007c FCE7     		b	.L174
 2139              		.cfi_endproc
 2140              	.LFE370:
 2142              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2143              		.align	1
 2144              		.global	HAL_RTCEx_GetWakeUpTimer
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu fpv5-d16
 2150              	HAL_RTCEx_GetWakeUpTimer:
ARM GAS  /tmp/cco2AszO.s 			page 78


 2151              	.LFB371:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Counter value
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2152              		.loc 1 2208 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
 2157              	.LVL179:
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the counter value */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 2158              		.loc 1 2210 0
 2159 0000 0368     		ldr	r3, [r0]
 2160 0002 5869     		ldr	r0, [r3, #20]
 2161              	.LVL180:
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2162              		.loc 1 2211 0
 2163 0004 80B2     		uxth	r0, r0
 2164 0006 7047     		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE371:
 2168              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2169              		.align	1
 2170              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2171              		.syntax unified
 2172              		.thumb
 2173              		.thumb_func
 2174              		.fpu fpv5-d16
 2176              	HAL_RTCEx_WakeUpTimerEventCallback:
 2177              	.LFB373:
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(DUAL_CORE)
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTID2_CLEAR_FLAG();
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #else  /* SINGLE_CORE */
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
ARM GAS  /tmp/cco2AszO.s 			page 79


2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_MISR_WUTMF)
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_WUTMF) != 0u)
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Immediately clear flags */
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CWUTF;
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_MISR_WUTMF */
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_WUTF)
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != 0U)
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #else
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_WUTF */
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef * hrtc)
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2178              		.loc 1 2277 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182              		@ link register save eliminated.
 2183              	.LVL181:
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
ARM GAS  /tmp/cco2AszO.s 			page 80


2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2184              		.loc 1 2284 0
 2185 0000 7047     		bx	lr
 2186              		.cfi_endproc
 2187              	.LFE373:
 2189              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2190              		.align	1
 2191              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2195              		.fpu fpv5-d16
 2197              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2198              	.LFB372:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
 2199              		.loc 1 2219 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              	.LVL182:
 2204 0000 10B5     		push	{r4, lr}
 2205              	.LCFI25:
 2206              		.cfi_def_cfa_offset 8
 2207              		.cfi_offset 4, -8
 2208              		.cfi_offset 14, -4
 2209 0002 0446     		mov	r4, r0
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* DUAL_CORE */
 2210              		.loc 1 2231 0
 2211 0004 0A4B     		ldr	r3, .L186
 2212 0006 4FF40022 		mov	r2, #524288
 2213 000a 9A60     		str	r2, [r3, #8]
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2214              		.loc 1 2252 0
 2215 000c 0368     		ldr	r3, [r0]
 2216 000e DA68     		ldr	r2, [r3, #12]
 2217 0010 12F4806F 		tst	r2, #1024
 2218 0014 03D1     		bne	.L185
 2219              	.LVL183:
 2220              	.L183:
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2221              		.loc 1 2268 0
 2222 0016 0123     		movs	r3, #1
 2223 0018 84F82130 		strb	r3, [r4, #33]
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2224              		.loc 1 2269 0
 2225 001c 10BD     		pop	{r4, pc}
 2226              	.LVL184:
 2227              	.L185:
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2228              		.loc 1 2255 0
 2229 001e DA68     		ldr	r2, [r3, #12]
 2230 0020 D2B2     		uxtb	r2, r2
 2231 0022 62F49062 		orn	r2, r2, #1152
 2232 0026 DA60     		str	r2, [r3, #12]
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2233              		.loc 1 2262 0
 2234 0028 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
ARM GAS  /tmp/cco2AszO.s 			page 81


 2235              	.LVL185:
 2236 002c F3E7     		b	.L183
 2237              	.L187:
 2238 002e 00BF     		.align	2
 2239              	.L186:
 2240 0030 80000058 		.word	1476395136
 2241              		.cfi_endproc
 2242              	.LFE372:
 2244              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 2245              		.align	1
 2246              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 2247              		.syntax unified
 2248              		.thumb
 2249              		.thumb_func
 2250              		.fpu fpv5-d16
 2252              	HAL_RTCEx_PollForWakeUpTimerEvent:
 2253              	.LFB374:
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2254              		.loc 1 2294 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              	.LVL186:
 2259 0000 70B5     		push	{r4, r5, r6, lr}
 2260              	.LCFI26:
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 4, -16
 2263              		.cfi_offset 5, -12
 2264              		.cfi_offset 6, -8
 2265              		.cfi_offset 14, -4
 2266 0002 0446     		mov	r4, r0
 2267 0004 0D46     		mov	r5, r1
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2268              		.loc 1 2295 0
 2269 0006 FFF7FEFF 		bl	HAL_GetTick
 2270              	.LVL187:
 2271 000a 0646     		mov	r6, r0
 2272              	.LVL188:
 2273              	.L190:
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == 0U)
 2274              		.loc 1 2297 0
 2275 000c 2368     		ldr	r3, [r4]
 2276 000e DA68     		ldr	r2, [r3, #12]
 2277 0010 12F4806F 		tst	r2, #1024
 2278 0014 0DD1     		bne	.L195
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/cco2AszO.s 			page 82


 2279              		.loc 1 2299 0
 2280 0016 B5F1FF3F 		cmp	r5, #-1
 2281 001a F7D0     		beq	.L190
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2282              		.loc 1 2301 0
 2283 001c FFF7FEFF 		bl	HAL_GetTick
 2284              	.LVL189:
 2285 0020 801B     		subs	r0, r0, r6
 2286 0022 A842     		cmp	r0, r5
 2287 0024 01D8     		bhi	.L191
 2288              		.loc 1 2301 0 is_stmt 0 discriminator 1
 2289 0026 002D     		cmp	r5, #0
 2290 0028 F0D1     		bne	.L190
 2291              	.L191:
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2292              		.loc 1 2303 0 is_stmt 1
 2293 002a 0320     		movs	r0, #3
 2294 002c 84F82100 		strb	r0, [r4, #33]
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2295              		.loc 1 2304 0
 2296 0030 08E0     		b	.L192
 2297              	.L195:
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2298              		.loc 1 2310 0
 2299 0032 DA68     		ldr	r2, [r3, #12]
 2300 0034 D2B2     		uxtb	r2, r2
 2301 0036 62F49062 		orn	r2, r2, #1152
 2302 003a DA60     		str	r2, [r3, #12]
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2303              		.loc 1 2313 0
 2304 003c 0123     		movs	r3, #1
 2305 003e 84F82130 		strb	r3, [r4, #33]
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2306              		.loc 1 2315 0
 2307 0042 0020     		movs	r0, #0
 2308              	.L192:
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2309              		.loc 1 2316 0
 2310 0044 70BD     		pop	{r4, r5, r6, pc}
 2311              		.cfi_endproc
 2312              	.LFE374:
 2314              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 2315              		.align	1
 2316              		.global	HAL_RTCEx_BKUPWrite
 2317              		.syntax unified
 2318              		.thumb
 2319              		.thumb_func
ARM GAS  /tmp/cco2AszO.s 			page 83


 2320              		.fpu fpv5-d16
 2322              	HAL_RTCEx_BKUPWrite:
 2323              	.LFB375:
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group6
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief      Extended RTC Backup register functions
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****              ##### Extended RTC Backup register functions #####
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Before calling any tamper or internal tamper function, you have to call first
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****        HAL_RTC_Init() function.
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) In that ine you can select to output tamper event on RTC pin.
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   [..]
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    This subsection provides functions allowing to
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Write a data in a specified RTC Backup data register
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    (+) Read a data in a specified RTC Backup data register
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified Backup data register.
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef * hrtc, uint32_t BackupRegister, uint32_t Data)
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2324              		.loc 1 2353 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              		@ link register save eliminated.
 2329              	.LVL190:
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_BKP0R)
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_BKP0R */
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_BKP0R)
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
ARM GAS  /tmp/cco2AszO.s 			page 84


 2330              		.loc 1 2364 0
 2331 0000 0368     		ldr	r3, [r0]
 2332 0002 5033     		adds	r3, r3, #80
 2333              	.LVL191:
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_BKP0R */
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Write the specified register */
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2334              		.loc 1 2370 0
 2335 0004 43F82120 		str	r2, [r3, r1, lsl #2]
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2336              		.loc 1 2371 0
 2337 0008 7047     		bx	lr
 2338              		.cfi_endproc
 2339              	.LFE375:
 2341              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 2342              		.align	1
 2343              		.global	HAL_RTCEx_BKUPRead
 2344              		.syntax unified
 2345              		.thumb
 2346              		.thumb_func
 2347              		.fpu fpv5-d16
 2349              	HAL_RTCEx_BKUPRead:
 2350              	.LFB376:
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Read data from the specified RTC Backup data Register.
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *                                 specify the register.
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval Read value
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef * hrtc, uint32_t BackupRegister)
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2351              		.loc 1 2383 0
 2352              		.cfi_startproc
 2353              		@ args = 0, pretend = 0, frame = 0
 2354              		@ frame_needed = 0, uses_anonymous_args = 0
 2355              		@ link register save eliminated.
 2356              	.LVL192:
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tmp;
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Point on address of first backup register */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_BKP0R)
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (((TAMP_TypeDef *)((uint32_t)hrtc->Instance + TAMP_OFFSET))->BKP0R);
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_BKP0R */
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_BKP0R)
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
 2357              		.loc 1 2394 0
 2358 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cco2AszO.s 			page 85


 2359 0002 5033     		adds	r3, r3, #80
 2360              	.LVL193:
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_BKP0R */
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Read the specified register */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 2361              		.loc 1 2400 0
 2362 0004 53F82100 		ldr	r0, [r3, r1, lsl #2]
 2363              	.LVL194:
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2364              		.loc 1 2401 0
 2365 0008 7047     		bx	lr
 2366              		.cfi_endproc
 2367              	.LFE376:
 2369              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 2370              		.align	1
 2371              		.global	HAL_RTCEx_SetSmoothCalib
 2372              		.syntax unified
 2373              		.thumb
 2374              		.thumb_func
 2375              		.fpu fpv5-d16
 2377              	HAL_RTCEx_SetSmoothCalib:
 2378              	.LFB377:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Set Low Power calibration parameter (if feature supported).
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 86


2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue must be equal to 0.
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef * hrtc, uint32_t SmoothCalibPeriod, ui
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2379              		.loc 1 2455 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383              	.LVL195:
 2384 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2385              	.LCFI27:
 2386              		.cfi_def_cfa_offset 24
 2387              		.cfi_offset 4, -24
 2388              		.cfi_offset 5, -20
 2389              		.cfi_offset 6, -16
 2390              		.cfi_offset 7, -12
 2391              		.cfi_offset 8, -8
 2392              		.cfi_offset 14, -4
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2393              		.loc 1 2464 0
 2394 0004 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 2395 0008 012C     		cmp	r4, #1
 2396 000a 40D0     		beq	.L203
 2397 000c 1E46     		mov	r6, r3
 2398 000e 1746     		mov	r7, r2
 2399 0010 0D46     		mov	r5, r1
 2400 0012 0446     		mov	r4, r0
 2401              		.loc 1 2464 0 is_stmt 0 discriminator 2
 2402 0014 0123     		movs	r3, #1
 2403              	.LVL196:
 2404 0016 80F82030 		strb	r3, [r0, #32]
ARM GAS  /tmp/cco2AszO.s 			page 87


2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2405              		.loc 1 2466 0 is_stmt 1 discriminator 2
 2406 001a 0223     		movs	r3, #2
 2407 001c 80F82130 		strb	r3, [r0, #33]
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2408              		.loc 1 2469 0 discriminator 2
 2409 0020 0368     		ldr	r3, [r0]
 2410 0022 CA22     		movs	r2, #202
 2411              	.LVL197:
 2412 0024 5A62     		str	r2, [r3, #36]
 2413 0026 0368     		ldr	r3, [r0]
 2414 0028 5322     		movs	r2, #83
 2415 002a 5A62     		str	r2, [r3, #36]
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* check if a calibration operation is pending */
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_RECALPF)
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_RECALPF */
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_RECALPF)
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
 2416              		.loc 1 2476 0 discriminator 2
 2417 002c 0368     		ldr	r3, [r0]
 2418 002e DB68     		ldr	r3, [r3, #12]
 2419 0030 13F4803F 		tst	r3, #65536
 2420 0034 12D1     		bne	.L205
 2421              	.LVL198:
 2422              	.L200:
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       tickstart = HAL_GetTick();
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       /* Wait for pending calibration operation to finish */
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_RECALPF)
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       while ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_RECALPF */
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_RECALPF)
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         while ((hrtc->Instance->ISR  & RTC_ISR_RECALPF)  != 0U)
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         {
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Enable the write protection for RTC registers */
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Change RTC state */
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             hrtc->State = HAL_RTC_STATE_TIMEOUT;
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             /* Process Unlocked */
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             __HAL_UNLOCK(hrtc);
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             return HAL_TIMEOUT;
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         }
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
ARM GAS  /tmp/cco2AszO.s 			page 88


2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CALR, (RTC_CALR_CALP | RTC_CALR_CALW8 | RTC_CALR_CALW16 | RTC_CALR_CAL
 2423              		.loc 1 2506 0
 2424 0036 2368     		ldr	r3, [r4]
 2425 0038 DA6B     		ldr	r2, [r3, #60]
 2426 003a 1649     		ldr	r1, .L206
 2427 003c 1140     		ands	r1, r1, r2
 2428 003e 3D43     		orrs	r5, r5, r7
 2429              	.LVL199:
 2430 0040 3543     		orrs	r5, r5, r6
 2431 0042 0D43     		orrs	r5, r5, r1
 2432 0044 DD63     		str	r5, [r3, #60]
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2433              		.loc 1 2509 0
 2434 0046 2368     		ldr	r3, [r4]
 2435 0048 FF22     		movs	r2, #255
 2436 004a 5A62     		str	r2, [r3, #36]
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2437              		.loc 1 2512 0
 2438 004c 0123     		movs	r3, #1
 2439 004e 84F82130 		strb	r3, [r4, #33]
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2440              		.loc 1 2515 0
 2441 0052 0020     		movs	r0, #0
 2442 0054 84F82000 		strb	r0, [r4, #32]
 2443              	.LVL200:
 2444              	.L199:
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2445              		.loc 1 2518 0
 2446 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2447              	.LVL201:
 2448              	.L205:
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2449              		.loc 1 2479 0
 2450 005c FFF7FEFF 		bl	HAL_GetTick
 2451              	.LVL202:
 2452 0060 8046     		mov	r8, r0
 2453              	.LVL203:
 2454              	.L201:
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_RECALPF */
 2455              		.loc 1 2486 0
 2456 0062 2168     		ldr	r1, [r4]
 2457 0064 C968     		ldr	r1, [r1, #12]
 2458 0066 11F4803F 		tst	r1, #65536
 2459 006a E4D0     		beq	.L200
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           {
 2460              		.loc 1 2489 0
 2461 006c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cco2AszO.s 			page 89


 2462              	.LVL204:
 2463 0070 A0EB0800 		sub	r0, r0, r8
 2464 0074 B0F57A7F 		cmp	r0, #1000
 2465 0078 F3D9     		bls	.L201
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2466              		.loc 1 2492 0
 2467 007a 2368     		ldr	r3, [r4]
 2468 007c FF22     		movs	r2, #255
 2469 007e 5A62     		str	r2, [r3, #36]
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2470              		.loc 1 2495 0
 2471 0080 0320     		movs	r0, #3
 2472 0082 84F82100 		strb	r0, [r4, #33]
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2473              		.loc 1 2498 0
 2474 0086 0023     		movs	r3, #0
 2475 0088 84F82030 		strb	r3, [r4, #32]
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****           }
 2476              		.loc 1 2500 0
 2477 008c E4E7     		b	.L199
 2478              	.LVL205:
 2479              	.L203:
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2480              		.loc 1 2464 0
 2481 008e 0220     		movs	r0, #2
 2482              	.LVL206:
 2483 0090 E2E7     		b	.L199
 2484              	.L207:
 2485 0092 00BF     		.align	2
 2486              	.L206:
 2487 0094 001EFFFF 		.word	-57856
 2488              		.cfi_endproc
 2489              	.LFE377:
 2491              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 2492              		.align	1
 2493              		.global	HAL_RTCEx_SetSynchroShift
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2497              		.fpu fpv5-d16
 2499              	HAL_RTCEx_SetSynchroShift:
 2500              	.LFB378:
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef * hrtc, uint32_t ShiftAdd1S, uint32_t
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
ARM GAS  /tmp/cco2AszO.s 			page 90


 2501              		.loc 1 2533 0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 0
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 2505              	.LVL207:
 2506 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2507              	.LCFI28:
 2508              		.cfi_def_cfa_offset 24
 2509              		.cfi_offset 3, -24
 2510              		.cfi_offset 4, -20
 2511              		.cfi_offset 5, -16
 2512              		.cfi_offset 6, -12
 2513              		.cfi_offset 7, -8
 2514              		.cfi_offset 14, -4
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart;
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2515              		.loc 1 2541 0
 2516 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2517 0006 012B     		cmp	r3, #1
 2518 0008 55D0     		beq	.L214
 2519 000a 1646     		mov	r6, r2
 2520 000c 0F46     		mov	r7, r1
 2521 000e 0446     		mov	r4, r0
 2522              		.loc 1 2541 0 is_stmt 0 discriminator 2
 2523 0010 0123     		movs	r3, #1
 2524 0012 80F82030 		strb	r3, [r0, #32]
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2525              		.loc 1 2543 0 is_stmt 1 discriminator 2
 2526 0016 0223     		movs	r3, #2
 2527 0018 80F82130 		strb	r3, [r0, #33]
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2528              		.loc 1 2546 0 discriminator 2
 2529 001c 0368     		ldr	r3, [r0]
 2530 001e CA22     		movs	r2, #202
 2531              	.LVL208:
 2532 0020 5A62     		str	r2, [r3, #36]
 2533 0022 0368     		ldr	r3, [r0]
 2534 0024 5322     		movs	r2, #83
 2535 0026 5A62     		str	r2, [r3, #36]
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2536              		.loc 1 2548 0 discriminator 2
 2537 0028 FFF7FEFF 		bl	HAL_GetTick
 2538              	.LVL209:
 2539 002c 0546     		mov	r5, r0
 2540              	.LVL210:
 2541              	.L210:
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 91


2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Wait until the shift is completed */
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ICSR_SHPF)
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_SHPF) != 0U)
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ICSR_SHPF */
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(RTC_ISR_SHPF)
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ISR  & RTC_ISR_SHPF)  != 0U)
 2542              		.loc 1 2555 0
 2543 002e 2368     		ldr	r3, [r4]
 2544 0030 D868     		ldr	r0, [r3, #12]
 2545 0032 10F0080F 		tst	r0, #8
 2546 0036 0FD0     		beq	.L216
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* RTC_ISR_SHPF */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2547              		.loc 1 2558 0
 2548 0038 FFF7FEFF 		bl	HAL_GetTick
 2549              	.LVL211:
 2550 003c 401B     		subs	r0, r0, r5
 2551 003e B0F57A7F 		cmp	r0, #1000
 2552 0042 F4D9     		bls	.L210
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2553              		.loc 1 2561 0
 2554 0044 2368     		ldr	r3, [r4]
 2555 0046 FF22     		movs	r2, #255
 2556 0048 5A62     		str	r2, [r3, #36]
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2557              		.loc 1 2563 0
 2558 004a 0320     		movs	r0, #3
 2559 004c 84F82100 		strb	r0, [r4, #33]
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2560              		.loc 1 2566 0
 2561 0050 0023     		movs	r3, #0
 2562 0052 84F82030 		strb	r3, [r4, #32]
 2563              	.LVL212:
 2564              	.L209:
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check if the reference clock detection is disabled */
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_REFCKON) == 0U)
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Configure the Shift settings */
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
ARM GAS  /tmp/cco2AszO.s 			page 92


2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         /* Process Unlocked */
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_ERROR;
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   else
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Process Unlocked */
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     return HAL_ERROR;
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2565              		.loc 1 2619 0
 2566 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2567              	.LVL213:
 2568              	.L216:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
 2569              		.loc 1 2573 0
 2570 0058 9A68     		ldr	r2, [r3, #8]
 2571 005a 12F0100F 		tst	r2, #16
 2572 005e 20D1     		bne	.L212
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2573              		.loc 1 2576 0
 2574 0060 3E43     		orrs	r6, r6, r7
 2575              	.LVL214:
 2576 0062 DE62     		str	r6, [r3, #44]
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
 2577              		.loc 1 2579 0
 2578 0064 2368     		ldr	r3, [r4]
 2579 0066 9B68     		ldr	r3, [r3, #8]
 2580 0068 13F0200F 		tst	r3, #32
 2581 006c 09D0     		beq	.L217
 2582              	.L213:
ARM GAS  /tmp/cco2AszO.s 			page 93


2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2583              		.loc 1 2610 0
 2584 006e 2368     		ldr	r3, [r4]
 2585 0070 FF22     		movs	r2, #255
 2586 0072 5A62     		str	r2, [r3, #36]
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2587              		.loc 1 2613 0
 2588 0074 0123     		movs	r3, #1
 2589 0076 84F82130 		strb	r3, [r4, #33]
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2590              		.loc 1 2616 0
 2591 007a 0020     		movs	r0, #0
 2592 007c 84F82000 		strb	r0, [r4, #32]
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2593              		.loc 1 2618 0
 2594 0080 E9E7     		b	.L209
 2595              	.L217:
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
 2596              		.loc 1 2581 0
 2597 0082 2046     		mov	r0, r4
 2598 0084 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2599              	.LVL215:
 2600 0088 0028     		cmp	r0, #0
 2601 008a F0D0     		beq	.L213
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2602              		.loc 1 2584 0
 2603 008c 2368     		ldr	r3, [r4]
 2604 008e FF22     		movs	r2, #255
 2605 0090 5A62     		str	r2, [r3, #36]
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2606              		.loc 1 2586 0
 2607 0092 0423     		movs	r3, #4
 2608 0094 84F82130 		strb	r3, [r4, #33]
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2609              		.loc 1 2589 0
 2610 0098 0023     		movs	r3, #0
 2611 009a 84F82030 		strb	r3, [r4, #32]
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
 2612              		.loc 1 2591 0
 2613 009e 0120     		movs	r0, #1
 2614 00a0 D9E7     		b	.L209
 2615              	.LVL216:
 2616              	.L212:
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2617              		.loc 1 2598 0
 2618 00a2 FF22     		movs	r2, #255
 2619 00a4 5A62     		str	r2, [r3, #36]
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2620              		.loc 1 2601 0
 2621 00a6 0423     		movs	r3, #4
 2622 00a8 84F82130 		strb	r3, [r4, #33]
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2623              		.loc 1 2604 0
 2624 00ac 0023     		movs	r3, #0
 2625 00ae 84F82030 		strb	r3, [r4, #32]
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2626              		.loc 1 2606 0
ARM GAS  /tmp/cco2AszO.s 			page 94


 2627 00b2 0120     		movs	r0, #1
 2628 00b4 CFE7     		b	.L209
 2629              	.LVL217:
 2630              	.L214:
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2631              		.loc 1 2541 0
 2632 00b6 0220     		movs	r0, #2
 2633              	.LVL218:
 2634 00b8 CDE7     		b	.L209
 2635              		.cfi_endproc
 2636              	.LFE378:
 2638              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 2639              		.align	1
 2640              		.global	HAL_RTCEx_SetCalibrationOutPut
 2641              		.syntax unified
 2642              		.thumb
 2643              		.thumb_func
 2644              		.fpu fpv5-d16
 2646              	HAL_RTCEx_SetCalibrationOutPut:
 2647              	.LFB379:
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection.
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef * hrtc, uint32_t CalibOutput)
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2648              		.loc 1 2631 0
 2649              		.cfi_startproc
 2650              		@ args = 0, pretend = 0, frame = 0
 2651              		@ frame_needed = 0, uses_anonymous_args = 0
 2652              		@ link register save eliminated.
 2653              	.LVL219:
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2654              		.loc 1 2636 0
 2655 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2656 0004 012B     		cmp	r3, #1
 2657 0006 26D0     		beq	.L220
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Check the parameters */
 2658              		.loc 1 2631 0 discriminator 2
 2659 0008 10B4     		push	{r4}
 2660              	.LCFI29:
 2661              		.cfi_def_cfa_offset 4
 2662              		.cfi_offset 4, -4
 2663              		.loc 1 2636 0 discriminator 2
 2664 000a 0122     		movs	r2, #1
 2665 000c 80F82020 		strb	r2, [r0, #32]
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 95


2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2666              		.loc 1 2638 0 discriminator 2
 2667 0010 0223     		movs	r3, #2
 2668 0012 80F82130 		strb	r3, [r0, #33]
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2669              		.loc 1 2641 0 discriminator 2
 2670 0016 0368     		ldr	r3, [r0]
 2671 0018 CA24     		movs	r4, #202
 2672 001a 5C62     		str	r4, [r3, #36]
 2673 001c 0368     		ldr	r3, [r0]
 2674 001e 5324     		movs	r4, #83
 2675 0020 5C62     		str	r4, [r3, #36]
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear flags before config */
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 2676              		.loc 1 2644 0 discriminator 2
 2677 0022 0468     		ldr	r4, [r0]
 2678 0024 A368     		ldr	r3, [r4, #8]
 2679 0026 23F40023 		bic	r3, r3, #524288
 2680 002a A360     		str	r3, [r4, #8]
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 2681              		.loc 1 2647 0 discriminator 2
 2682 002c 0468     		ldr	r4, [r0]
 2683 002e A368     		ldr	r3, [r4, #8]
 2684 0030 1943     		orrs	r1, r1, r3
 2685              	.LVL220:
 2686 0032 A160     		str	r1, [r4, #8]
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 2687              		.loc 1 2649 0 discriminator 2
 2688 0034 0168     		ldr	r1, [r0]
 2689 0036 8B68     		ldr	r3, [r1, #8]
 2690 0038 43F40003 		orr	r3, r3, #8388608
 2691 003c 8B60     		str	r3, [r1, #8]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2692              		.loc 1 2652 0 discriminator 2
 2693 003e 0368     		ldr	r3, [r0]
 2694 0040 FF21     		movs	r1, #255
 2695 0042 5962     		str	r1, [r3, #36]
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2696              		.loc 1 2655 0 discriminator 2
 2697 0044 80F82120 		strb	r2, [r0, #33]
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2698              		.loc 1 2658 0 discriminator 2
 2699 0048 0023     		movs	r3, #0
 2700 004a 80F82030 		strb	r3, [r0, #32]
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 96


2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2701              		.loc 1 2660 0 discriminator 2
 2702 004e 1846     		mov	r0, r3
 2703              	.LVL221:
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2704              		.loc 1 2661 0 discriminator 2
 2705 0050 5DF8044B 		ldr	r4, [sp], #4
 2706              	.LCFI30:
 2707              		.cfi_restore 4
 2708              		.cfi_def_cfa_offset 0
 2709 0054 7047     		bx	lr
 2710              	.LVL222:
 2711              	.L220:
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2712              		.loc 1 2636 0
 2713 0056 0220     		movs	r0, #2
 2714              	.LVL223:
 2715              		.loc 1 2661 0
 2716 0058 7047     		bx	lr
 2717              		.cfi_endproc
 2718              	.LFE379:
 2720              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 2721              		.align	1
 2722              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 2723              		.syntax unified
 2724              		.thumb
 2725              		.thumb_func
 2726              		.fpu fpv5-d16
 2728              	HAL_RTCEx_DeactivateCalibrationOutPut:
 2729              	.LFB380:
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef * hrtc)
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2730              		.loc 1 2669 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 0
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
 2734              		@ link register save eliminated.
 2735              	.LVL224:
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2736              		.loc 1 2671 0
 2737 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2738 0004 012B     		cmp	r3, #1
 2739 0006 1AD0     		beq	.L227
 2740              		.loc 1 2671 0 is_stmt 0 discriminator 2
 2741 0008 0122     		movs	r2, #1
 2742 000a 80F82020 		strb	r2, [r0, #32]
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2743              		.loc 1 2673 0 is_stmt 1 discriminator 2
 2744 000e 0223     		movs	r3, #2
ARM GAS  /tmp/cco2AszO.s 			page 97


 2745 0010 80F82130 		strb	r3, [r0, #33]
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2746              		.loc 1 2676 0 discriminator 2
 2747 0014 0368     		ldr	r3, [r0]
 2748 0016 CA21     		movs	r1, #202
 2749 0018 5962     		str	r1, [r3, #36]
 2750 001a 0368     		ldr	r3, [r0]
 2751 001c 5321     		movs	r1, #83
 2752 001e 5962     		str	r1, [r3, #36]
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 2753              		.loc 1 2678 0 discriminator 2
 2754 0020 0168     		ldr	r1, [r0]
 2755 0022 8B68     		ldr	r3, [r1, #8]
 2756 0024 23F40003 		bic	r3, r3, #8388608
 2757 0028 8B60     		str	r3, [r1, #8]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2758              		.loc 1 2681 0 discriminator 2
 2759 002a 0368     		ldr	r3, [r0]
 2760 002c FF21     		movs	r1, #255
 2761 002e 5962     		str	r1, [r3, #36]
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2762              		.loc 1 2684 0 discriminator 2
 2763 0030 80F82120 		strb	r2, [r0, #33]
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2764              		.loc 1 2687 0 discriminator 2
 2765 0034 0023     		movs	r3, #0
 2766 0036 80F82030 		strb	r3, [r0, #32]
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 2767              		.loc 1 2689 0 discriminator 2
 2768 003a 1846     		mov	r0, r3
 2769              	.LVL225:
 2770 003c 7047     		bx	lr
 2771              	.LVL226:
 2772              	.L227:
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2773              		.loc 1 2671 0
 2774 003e 0220     		movs	r0, #2
 2775              	.LVL227:
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2776              		.loc 1 2690 0
 2777 0040 7047     		bx	lr
 2778              		.cfi_endproc
 2779              	.LFE380:
 2781              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 2782              		.align	1
 2783              		.global	HAL_RTCEx_SetRefClock
 2784              		.syntax unified
ARM GAS  /tmp/cco2AszO.s 			page 98


 2785              		.thumb
 2786              		.thumb_func
 2787              		.fpu fpv5-d16
 2789              	HAL_RTCEx_SetRefClock:
 2790              	.LFB381:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef * hrtc)
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2791              		.loc 1 2698 0
 2792              		.cfi_startproc
 2793              		@ args = 0, pretend = 0, frame = 0
 2794              		@ frame_needed = 0, uses_anonymous_args = 0
 2795              	.LVL228:
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2796              		.loc 1 2701 0
 2797 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2798 0004 012B     		cmp	r3, #1
 2799 0006 26D0     		beq	.L232
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
 2800              		.loc 1 2698 0 discriminator 2
 2801 0008 10B5     		push	{r4, lr}
 2802              	.LCFI31:
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 4, -8
 2805              		.cfi_offset 14, -4
 2806 000a 0446     		mov	r4, r0
 2807              		.loc 1 2701 0 discriminator 2
 2808 000c 0123     		movs	r3, #1
 2809 000e 80F82030 		strb	r3, [r0, #32]
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2810              		.loc 1 2703 0 discriminator 2
 2811 0012 0223     		movs	r3, #2
 2812 0014 80F82130 		strb	r3, [r0, #33]
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2813              		.loc 1 2706 0 discriminator 2
 2814 0018 0368     		ldr	r3, [r0]
 2815 001a CA22     		movs	r2, #202
 2816 001c 5A62     		str	r2, [r3, #36]
 2817 001e 0368     		ldr	r3, [r0]
 2818 0020 5322     		movs	r2, #83
 2819 0022 5A62     		str	r2, [r3, #36]
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 2820              		.loc 1 2709 0 discriminator 2
 2821 0024 FFF7FEFF 		bl	RTC_EnterInitMode
 2822              	.LVL229:
ARM GAS  /tmp/cco2AszO.s 			page 99


2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 2823              		.loc 1 2710 0 discriminator 2
 2824 0028 0346     		mov	r3, r0
 2825 002a 50B1     		cbz	r0, .L237
 2826              	.LVL230:
 2827              	.L230:
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2828              		.loc 1 2719 0
 2829 002c 2268     		ldr	r2, [r4]
 2830 002e FF21     		movs	r1, #255
 2831 0030 5162     		str	r1, [r2, #36]
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 2832              		.loc 1 2720 0
 2833 0032 13B9     		cbnz	r3, .L231
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 2834              		.loc 1 2723 0
 2835 0034 0123     		movs	r3, #1
 2836              	.LVL231:
 2837 0036 84F82130 		strb	r3, [r4, #33]
 2838              	.L231:
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2839              		.loc 1 2726 0
 2840 003a 0020     		movs	r0, #0
 2841 003c 84F82000 		strb	r0, [r4, #32]
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2842              		.loc 1 2729 0
 2843 0040 10BD     		pop	{r4, pc}
 2844              	.LVL232:
 2845              	.L237:
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2846              		.loc 1 2712 0
 2847 0042 2268     		ldr	r2, [r4]
 2848 0044 9368     		ldr	r3, [r2, #8]
 2849 0046 43F01003 		orr	r3, r3, #16
 2850 004a 9360     		str	r3, [r2, #8]
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2851              		.loc 1 2715 0
 2852 004c 2046     		mov	r0, r4
 2853              	.LVL233:
 2854 004e FFF7FEFF 		bl	RTC_ExitInitMode
 2855              	.LVL234:
 2856 0052 0346     		mov	r3, r0
 2857              	.LVL235:
ARM GAS  /tmp/cco2AszO.s 			page 100


 2858 0054 EAE7     		b	.L230
 2859              	.LVL236:
 2860              	.L232:
 2861              	.LCFI32:
 2862              		.cfi_def_cfa_offset 0
 2863              		.cfi_restore 4
 2864              		.cfi_restore 14
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2865              		.loc 1 2701 0
 2866 0056 0220     		movs	r0, #2
 2867              	.LVL237:
 2868              		.loc 1 2729 0
 2869 0058 7047     		bx	lr
 2870              		.cfi_endproc
 2871              	.LFE381:
 2873              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 2874              		.align	1
 2875              		.global	HAL_RTCEx_DeactivateRefClock
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu fpv5-d16
 2881              	HAL_RTCEx_DeactivateRefClock:
 2882              	.LFB382:
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef * hrtc)
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2883              		.loc 1 2737 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 0
 2886              		@ frame_needed = 0, uses_anonymous_args = 0
 2887              	.LVL238:
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2888              		.loc 1 2740 0
 2889 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2890 0004 012B     		cmp	r3, #1
 2891 0006 26D0     		beq	.L242
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
 2892              		.loc 1 2737 0 discriminator 2
 2893 0008 10B5     		push	{r4, lr}
 2894              	.LCFI33:
 2895              		.cfi_def_cfa_offset 8
 2896              		.cfi_offset 4, -8
 2897              		.cfi_offset 14, -4
 2898 000a 0446     		mov	r4, r0
 2899              		.loc 1 2740 0 discriminator 2
 2900 000c 0123     		movs	r3, #1
 2901 000e 80F82030 		strb	r3, [r0, #32]
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/cco2AszO.s 			page 101


 2902              		.loc 1 2742 0 discriminator 2
 2903 0012 0223     		movs	r3, #2
 2904 0014 80F82130 		strb	r3, [r0, #33]
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2905              		.loc 1 2745 0 discriminator 2
 2906 0018 0368     		ldr	r3, [r0]
 2907 001a CA22     		movs	r2, #202
 2908 001c 5A62     		str	r2, [r3, #36]
 2909 001e 0368     		ldr	r3, [r0]
 2910 0020 5322     		movs	r2, #83
 2911 0022 5A62     		str	r2, [r3, #36]
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 2912              		.loc 1 2748 0 discriminator 2
 2913 0024 FFF7FEFF 		bl	RTC_EnterInitMode
 2914              	.LVL239:
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 2915              		.loc 1 2749 0 discriminator 2
 2916 0028 0346     		mov	r3, r0
 2917 002a 50B1     		cbz	r0, .L247
 2918              	.LVL240:
 2919              	.L240:
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2920              		.loc 1 2758 0
 2921 002c 2268     		ldr	r2, [r4]
 2922 002e FF21     		movs	r1, #255
 2923 0030 5162     		str	r1, [r2, #36]
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 2924              		.loc 1 2760 0
 2925 0032 13B9     		cbnz	r3, .L241
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     /* Change RTC state */
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 2926              		.loc 1 2763 0
 2927 0034 0123     		movs	r3, #1
 2928              	.LVL241:
 2929 0036 84F82130 		strb	r3, [r4, #33]
 2930              	.L241:
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2931              		.loc 1 2768 0
 2932 003a 0020     		movs	r0, #0
ARM GAS  /tmp/cco2AszO.s 			page 102


 2933 003c 84F82000 		strb	r0, [r4, #32]
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 2934              		.loc 1 2771 0
 2935 0040 10BD     		pop	{r4, pc}
 2936              	.LVL242:
 2937              	.L247:
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2938              		.loc 1 2751 0
 2939 0042 2268     		ldr	r2, [r4]
 2940 0044 9368     		ldr	r3, [r2, #8]
 2941 0046 23F01003 		bic	r3, r3, #16
 2942 004a 9360     		str	r3, [r2, #8]
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
 2943              		.loc 1 2754 0
 2944 004c 2046     		mov	r0, r4
 2945              	.LVL243:
 2946 004e FFF7FEFF 		bl	RTC_ExitInitMode
 2947              	.LVL244:
 2948 0052 0346     		mov	r3, r0
 2949              	.LVL245:
 2950 0054 EAE7     		b	.L240
 2951              	.LVL246:
 2952              	.L242:
 2953              	.LCFI34:
 2954              		.cfi_def_cfa_offset 0
 2955              		.cfi_restore 4
 2956              		.cfi_restore 14
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 2957              		.loc 1 2740 0
 2958 0056 0220     		movs	r0, #2
 2959              	.LVL247:
 2960              		.loc 1 2771 0
 2961 0058 7047     		bx	lr
 2962              		.cfi_endproc
 2963              	.LFE382:
 2965              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 2966              		.align	1
 2967              		.global	HAL_RTCEx_EnableBypassShadow
 2968              		.syntax unified
 2969              		.thumb
 2970              		.thumb_func
 2971              		.fpu fpv5-d16
 2973              	HAL_RTCEx_EnableBypassShadow:
 2974              	.LFB383:
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef * hrtc)
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 2975              		.loc 1 2781 0
ARM GAS  /tmp/cco2AszO.s 			page 103


 2976              		.cfi_startproc
 2977              		@ args = 0, pretend = 0, frame = 0
 2978              		@ frame_needed = 0, uses_anonymous_args = 0
 2979              		@ link register save eliminated.
 2980              	.LVL248:
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2981              		.loc 1 2783 0
 2982 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2983 0004 012B     		cmp	r3, #1
 2984 0006 1AD0     		beq	.L250
 2985              		.loc 1 2783 0 is_stmt 0 discriminator 2
 2986 0008 0122     		movs	r2, #1
 2987 000a 80F82020 		strb	r2, [r0, #32]
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2988              		.loc 1 2785 0 is_stmt 1 discriminator 2
 2989 000e 0223     		movs	r3, #2
 2990 0010 80F82130 		strb	r3, [r0, #33]
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2991              		.loc 1 2788 0 discriminator 2
 2992 0014 0368     		ldr	r3, [r0]
 2993 0016 CA21     		movs	r1, #202
 2994 0018 5962     		str	r1, [r3, #36]
 2995 001a 0368     		ldr	r3, [r0]
 2996 001c 5321     		movs	r1, #83
 2997 001e 5962     		str	r1, [r3, #36]
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 2998              		.loc 1 2791 0 discriminator 2
 2999 0020 0168     		ldr	r1, [r0]
 3000 0022 8B68     		ldr	r3, [r1, #8]
 3001 0024 43F02003 		orr	r3, r3, #32
 3002 0028 8B60     		str	r3, [r1, #8]
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3003              		.loc 1 2794 0 discriminator 2
 3004 002a 0368     		ldr	r3, [r0]
 3005 002c FF21     		movs	r1, #255
 3006 002e 5962     		str	r1, [r3, #36]
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3007              		.loc 1 2797 0 discriminator 2
 3008 0030 80F82120 		strb	r2, [r0, #33]
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3009              		.loc 1 2800 0 discriminator 2
 3010 0034 0023     		movs	r3, #0
 3011 0036 80F82030 		strb	r3, [r0, #32]
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
ARM GAS  /tmp/cco2AszO.s 			page 104


 3012              		.loc 1 2802 0 discriminator 2
 3013 003a 1846     		mov	r0, r3
 3014              	.LVL249:
 3015 003c 7047     		bx	lr
 3016              	.LVL250:
 3017              	.L250:
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 3018              		.loc 1 2783 0
 3019 003e 0220     		movs	r0, #2
 3020              	.LVL251:
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3021              		.loc 1 2803 0
 3022 0040 7047     		bx	lr
 3023              		.cfi_endproc
 3024              	.LFE383:
 3026              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 3027              		.align	1
 3028              		.global	HAL_RTCEx_DisableBypassShadow
 3029              		.syntax unified
 3030              		.thumb
 3031              		.thumb_func
 3032              		.fpu fpv5-d16
 3034              	HAL_RTCEx_DisableBypassShadow:
 3035              	.LFB384:
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef * hrtc)
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3036              		.loc 1 2813 0
 3037              		.cfi_startproc
 3038              		@ args = 0, pretend = 0, frame = 0
 3039              		@ frame_needed = 0, uses_anonymous_args = 0
 3040              		@ link register save eliminated.
 3041              	.LVL252:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Locked */
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3042              		.loc 1 2815 0
 3043 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3044 0004 012B     		cmp	r3, #1
 3045 0006 1AD0     		beq	.L253
 3046              		.loc 1 2815 0 is_stmt 0 discriminator 2
 3047 0008 0122     		movs	r2, #1
 3048 000a 80F82020 		strb	r2, [r0, #32]
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3049              		.loc 1 2817 0 is_stmt 1 discriminator 2
 3050 000e 0223     		movs	r3, #2
 3051 0010 80F82130 		strb	r3, [r0, #33]
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
ARM GAS  /tmp/cco2AszO.s 			page 105


 3052              		.loc 1 2820 0 discriminator 2
 3053 0014 0368     		ldr	r3, [r0]
 3054 0016 CA21     		movs	r1, #202
 3055 0018 5962     		str	r1, [r3, #36]
 3056 001a 0368     		ldr	r3, [r0]
 3057 001c 5321     		movs	r1, #83
 3058 001e 5962     		str	r1, [r3, #36]
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 3059              		.loc 1 2823 0 discriminator 2
 3060 0020 0168     		ldr	r1, [r0]
 3061 0022 8B68     		ldr	r3, [r1, #8]
 3062 0024 03F0DF03 		and	r3, r3, #223
 3063 0028 8B60     		str	r3, [r1, #8]
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3064              		.loc 1 2826 0 discriminator 2
 3065 002a 0368     		ldr	r3, [r0]
 3066 002c FF21     		movs	r1, #255
 3067 002e 5962     		str	r1, [r3, #36]
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3068              		.loc 1 2829 0 discriminator 2
 3069 0030 80F82120 		strb	r2, [r0, #33]
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Process Unlocked */
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3070              		.loc 1 2832 0 discriminator 2
 3071 0034 0023     		movs	r3, #0
 3072 0036 80F82030 		strb	r3, [r0, #32]
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3073              		.loc 1 2834 0 discriminator 2
 3074 003a 1846     		mov	r0, r3
 3075              	.LVL253:
 3076 003c 7047     		bx	lr
 3077              	.LVL254:
 3078              	.L253:
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
 3079              		.loc 1 2815 0
 3080 003e 0220     		movs	r0, #2
 3081              	.LVL255:
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3082              		.loc 1 2835 0
 3083 0040 7047     		bx	lr
 3084              		.cfi_endproc
 3085              	.LFE384:
 3087              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 3088              		.align	1
 3089              		.weak	HAL_RTCEx_AlarmBEventCallback
 3090              		.syntax unified
 3091              		.thumb
 3092              		.thumb_func
 3093              		.fpu fpv5-d16
ARM GAS  /tmp/cco2AszO.s 			page 106


 3095              	HAL_RTCEx_AlarmBEventCallback:
 3096              	.LFB385:
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #if defined(TAMP_COUNTR)
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Increment Monotonic counter.
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterIncrement(RTC_HandleTypeDef *hrtc,  uint32_t Instance)
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   CLEAR_REG(TAMP->COUNTR);
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Monotonic counter incrementation.
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Instance  Monotonic counter Instance
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *         This parameter can be can be one of the following values :
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *           @arg RTC_MONOTONIC_COUNTER_1
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Counter monotonic counter value
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_MonotonicCounterGet(RTC_HandleTypeDef *hrtc, uint32_t *Counter,  uint32
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(Instance);
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* This register is read-only only and is incremented by one when a write access is done to this
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****      register. This register cannot roll-over and is frozen when reaching the maximum value. */
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *Counter = READ_REG(TAMP->COUNTR);
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** #endif /* TAMP_COUNTR */
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @}
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief    Extended features functions
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   *
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @verbatim
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****  ===============================================================================
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Alarm B callback
ARM GAS  /tmp/cco2AszO.s 			page 107


2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** @endverbatim
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @{
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval None
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef * hrtc)
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3097              		.loc 1 2903 0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 3102              	.LVL256:
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****    */
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3103              		.loc 1 2910 0
 3104 0000 7047     		bx	lr
 3105              		.cfi_endproc
 3106              	.LFE385:
 3108              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 3109              		.align	1
 3110              		.global	HAL_RTCEx_PollForAlarmBEvent
 3111              		.syntax unified
 3112              		.thumb
 3113              		.thumb_func
 3114              		.fpu fpv5-d16
 3116              	HAL_RTCEx_PollForAlarmBEvent:
 3117              	.LFB386:
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** /**
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @brief  Handle Alarm B Polling request.
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   * @retval HAL status
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   */
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef * hrtc, uint32_t Timeout)
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** {
 3118              		.loc 1 2919 0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 0
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 3122              	.LVL257:
 3123 0000 70B5     		push	{r4, r5, r6, lr}
 3124              	.LCFI35:
 3125              		.cfi_def_cfa_offset 16
 3126              		.cfi_offset 4, -16
ARM GAS  /tmp/cco2AszO.s 			page 108


 3127              		.cfi_offset 5, -12
 3128              		.cfi_offset 6, -8
 3129              		.cfi_offset 14, -4
 3130 0002 0446     		mov	r4, r0
 3131 0004 0D46     		mov	r5, r1
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 3132              		.loc 1 2920 0
 3133 0006 FFF7FEFF 		bl	HAL_GetTick
 3134              	.LVL258:
 3135 000a 0646     		mov	r6, r0
 3136              	.LVL259:
 3137              	.L257:
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == 0U)
 3138              		.loc 1 2922 0
 3139 000c 2368     		ldr	r3, [r4]
 3140 000e DA68     		ldr	r2, [r3, #12]
 3141 0010 12F4007F 		tst	r2, #512
 3142 0014 0DD1     		bne	.L262
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   {
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 3143              		.loc 1 2924 0
 3144 0016 B5F1FF3F 		cmp	r5, #-1
 3145 001a F7D0     		beq	.L257
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     {
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 3146              		.loc 1 2926 0
 3147 001c FFF7FEFF 		bl	HAL_GetTick
 3148              	.LVL260:
 3149 0020 801B     		subs	r0, r0, r6
 3150 0022 A842     		cmp	r0, r5
 3151 0024 01D8     		bhi	.L258
 3152              		.loc 1 2926 0 is_stmt 0 discriminator 1
 3153 0026 002D     		cmp	r5, #0
 3154 0028 F0D1     		bne	.L257
 3155              	.L258:
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       {
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3156              		.loc 1 2928 0 is_stmt 1
 3157 002a 0320     		movs	r0, #3
 3158 002c 84F82100 		strb	r0, [r4, #33]
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3159              		.loc 1 2929 0
 3160 0030 08E0     		b	.L259
 3161              	.L262:
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****       }
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****     }
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   }
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 3162              		.loc 1 2935 0
 3163 0032 DA68     		ldr	r2, [r3, #12]
 3164 0034 D2B2     		uxtb	r2, r2
 3165 0036 62F42072 		orn	r2, r2, #640
 3166 003a DA60     		str	r2, [r3, #12]
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/cco2AszO.s 			page 109


2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   /* Change RTC state */
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3167              		.loc 1 2938 0
 3168 003c 0123     		movs	r3, #1
 3169 003e 84F82130 		strb	r3, [r4, #33]
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** 
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c ****   return HAL_OK;
 3170              		.loc 1 2940 0
 3171 0042 0020     		movs	r0, #0
 3172              	.L259:
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c **** }
 3173              		.loc 1 2941 0
 3174 0044 70BD     		pop	{r4, r5, r6, pc}
 3175              		.cfi_endproc
 3176              	.LFE386:
 3178              		.text
 3179              	.Letext0:
 3180              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3181              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3182              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 3183              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3184              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 3185              		.file 7 "/usr/include/newlib/sys/lock.h"
 3186              		.file 8 "/usr/include/newlib/sys/_types.h"
 3187              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 3188              		.file 10 "/usr/include/newlib/sys/reent.h"
 3189              		.file 11 "/usr/include/newlib/math.h"
 3190              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3191              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3192              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc.h"
 3193              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rtc_ex.h"
 3194              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 3195              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cco2AszO.s 			page 110


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rtc_ex.c
     /tmp/cco2AszO.s:17     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/cco2AszO.s:24     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/cco2AszO.s:106    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/cco2AszO.s:113    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/cco2AszO.s:208    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000074 $d
     /tmp/cco2AszO.s:213    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/cco2AszO.s:220    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/cco2AszO.s:294    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000054 $d
     /tmp/cco2AszO.s:299    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/cco2AszO.s:306    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/cco2AszO.s:360    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/cco2AszO.s:367    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/cco2AszO.s:421    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/cco2AszO.s:428    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/cco2AszO.s:543    .text.HAL_RTCEx_GetTimeStamp:0000000000000090 $d
     /tmp/cco2AszO.s:550    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/cco2AszO.s:557    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/cco2AszO.s:760    .text.HAL_RTCEx_SetTamper:00000000000000e8 $d
     /tmp/cco2AszO.s:765    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/cco2AszO.s:772    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/cco2AszO.s:990    .text.HAL_RTCEx_SetTamper_IT:0000000000000104 $d
     /tmp/cco2AszO.s:996    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/cco2AszO.s:1003   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/cco2AszO.s:1087   .text.HAL_RTCEx_DeactivateTamper:0000000000000068 $d
     /tmp/cco2AszO.s:1094   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1101   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/cco2AszO.s:1115   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1122   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/cco2AszO.s:1136   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1143   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/cco2AszO.s:1157   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1164   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/cco2AszO.s:1178   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/cco2AszO.s:1185   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/cco2AszO.s:1302   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000b0 $d
     /tmp/cco2AszO.s:1310   .text.HAL_RTCEx_InternalTamper1EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1317   .text.HAL_RTCEx_InternalTamper1EventCallback:0000000000000000 HAL_RTCEx_InternalTamper1EventCallback
     /tmp/cco2AszO.s:1331   .text.HAL_RTCEx_InternalTamper2EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1338   .text.HAL_RTCEx_InternalTamper2EventCallback:0000000000000000 HAL_RTCEx_InternalTamper2EventCallback
     /tmp/cco2AszO.s:1352   .text.HAL_RTCEx_InternalTamper3EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1359   .text.HAL_RTCEx_InternalTamper3EventCallback:0000000000000000 HAL_RTCEx_InternalTamper3EventCallback
     /tmp/cco2AszO.s:1373   .text.HAL_RTCEx_InternalTamper4EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1380   .text.HAL_RTCEx_InternalTamper4EventCallback:0000000000000000 HAL_RTCEx_InternalTamper4EventCallback
     /tmp/cco2AszO.s:1394   .text.HAL_RTCEx_InternalTamper5EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1401   .text.HAL_RTCEx_InternalTamper5EventCallback:0000000000000000 HAL_RTCEx_InternalTamper5EventCallback
     /tmp/cco2AszO.s:1415   .text.HAL_RTCEx_InternalTamper6EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1422   .text.HAL_RTCEx_InternalTamper6EventCallback:0000000000000000 HAL_RTCEx_InternalTamper6EventCallback
     /tmp/cco2AszO.s:1436   .text.HAL_RTCEx_InternalTamper8EventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:1443   .text.HAL_RTCEx_InternalTamper8EventCallback:0000000000000000 HAL_RTCEx_InternalTamper8EventCallback
     /tmp/cco2AszO.s:1457   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/cco2AszO.s:1464   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/cco2AszO.s:1538   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/cco2AszO.s:1545   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/cco2AszO.s:1608   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/cco2AszO.s:1615   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
ARM GAS  /tmp/cco2AszO.s 			page 111


     /tmp/cco2AszO.s:1678   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/cco2AszO.s:1685   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/cco2AszO.s:1751   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/cco2AszO.s:1758   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/cco2AszO.s:1882   .text.HAL_RTCEx_SetWakeUpTimer:000000000000009c $d
     /tmp/cco2AszO.s:1887   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/cco2AszO.s:1894   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/cco2AszO.s:2035   .text.HAL_RTCEx_SetWakeUpTimer_IT:00000000000000bc $d
     /tmp/cco2AszO.s:2041   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/cco2AszO.s:2048   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/cco2AszO.s:2143   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/cco2AszO.s:2150   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/cco2AszO.s:2169   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:2176   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/cco2AszO.s:2190   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/cco2AszO.s:2197   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/cco2AszO.s:2240   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000030 $d
     /tmp/cco2AszO.s:2245   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/cco2AszO.s:2252   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/cco2AszO.s:2315   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/cco2AszO.s:2322   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/cco2AszO.s:2342   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/cco2AszO.s:2349   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/cco2AszO.s:2370   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/cco2AszO.s:2377   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/cco2AszO.s:2487   .text.HAL_RTCEx_SetSmoothCalib:0000000000000094 $d
     /tmp/cco2AszO.s:2492   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/cco2AszO.s:2499   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/cco2AszO.s:2639   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/cco2AszO.s:2646   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/cco2AszO.s:2721   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/cco2AszO.s:2728   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/cco2AszO.s:2782   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/cco2AszO.s:2789   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/cco2AszO.s:2874   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/cco2AszO.s:2881   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/cco2AszO.s:2966   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/cco2AszO.s:2973   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/cco2AszO.s:3027   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/cco2AszO.s:3034   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/cco2AszO.s:3088   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/cco2AszO.s:3095   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/cco2AszO.s:3109   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/cco2AszO.s:3116   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
RTC_ExitInitMode
