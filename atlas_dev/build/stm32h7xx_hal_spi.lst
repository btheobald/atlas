ARM GAS  /tmp/ccOUtRG8.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_spi.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	SPI_RxISR_8BIT:
  24              	.LFB382:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @file    stm32h7xx_hal_spi.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process or DMA process
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the DMAx clock
ARM GAS  /tmp/ccOUtRG8.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx handle to the hspi DMA Tx or Rx handle
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      [..]
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callback registration:
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1UL
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and a pointer to the user callback function.
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           weak function.
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and the Callback ID.
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function allows to reset following callbacks:
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
ARM GAS  /tmp/ccOUtRG8.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        or HAL_SPI_Init() function.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        not defined, the callback registering feature is not available
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       Circular mode restriction:
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The DMA circular mode cannot be used when the SPI is configured in these modes:
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 2Lines RxOnly
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 1Line Rx
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The CRC feature is not managed when the DMA circular mode is enabled
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The functions HAL_SPI_DMAPause()/ HAL_SPI_DMAResume() are not supported. Return always
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_ERROR with ErrorCode set to HAL_SPI_ERROR_NOT_SUPPORTED.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Those functions are maintained for backward compatibility reasons.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @endverbatim
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @attention
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * All rights reserved.</center></h2>
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #include "stm32h7xx_hal.h"
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup STM32H7xx_HAL_Driver
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI SPI
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI HAL module driver
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccOUtRG8.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100UL
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi);
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi);
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi);
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi);
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi);
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi);
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi);
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi);
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi);
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
ARM GAS  /tmp/ccOUtRG8.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           the selected configuration:
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Mode
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Direction
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Data Size
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) NSS Management
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) BaudRate Prescaler
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FirstBit
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) TIMode
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Calculation
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO reception threshold
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO transmission threshold
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           of the selected SPIx peripheral.
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length = 0UL;
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t packet_length;
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the parameters */
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIFOTHRESHOLD(hspi->Init.FifoThreshold));
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
ARM GAS  /tmp/ccOUtRG8.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports Data Size higher than 16bits */
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports requested data packing */
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   packet_length = SPI_GetPacketSize(hspi);
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the SPI instance supports CRC Length higher than 16bits */
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.CRCLength > SPI_CRC_LENGTH_16BIT)
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Align the CRC Length on the data size */
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = (hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) << SPI_CFG1_CRCSIZE_Pos;
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = hspi->Init.CRCLength;
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the CRC Length is higher than DataSize */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) > (crc_length >> SPI_CFG1_CRCSIZE_Pos))
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/ccOUtRG8.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the SPI Callback settings */
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   Communication speed, First bit, CRC calculation state, CRC Length */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.NSS == SPI_NSS_SOFT) && (hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.NSSPo
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG1 Configuration */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_l
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FifoThreshold     | hspi->Init.DataSize));
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG2 Configuration */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode     | hspi->Init.TIMode           | hspi->In
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.NSS          | hspi->Init.CLKPolarity      | hspi->In
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FirstBit     | hspi->Init.Mode             | hspi->In
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.Direction    | hspi->Init.MasterSSIdleness | hspi->In
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize TXCRC Pattern Initial Value */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.TxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccOUtRG8.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize RXCRC Pattern Initial Value */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.RxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Enable 33/17 bits CRC computation */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (crc_length == SPI_CRC_LENGTH_16BIT)) ||
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance))  && (crc_length == SPI_CRC_LENGTH_32BIT)))
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Write CRC polynomial in SPI Register */
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPOLY, hspi->Init.CRCPolynomial);
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that Underrun configuration is managed only by Salve */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_SLAVE)
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set Default Underrun configuration */
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that AFCNTR is managed only by Master */
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Alternate function GPIOs control */
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccOUtRG8.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccOUtRG8.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (pCallback == NULL)
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccOUtRG8.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccOUtRG8.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
ARM GAS  /tmp/ccOUtRG8.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
ARM GAS  /tmp/ccOUtRG8.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *  @brief   Data transfers functions
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  *
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### IO operation functions #####
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  [..]
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     data transfers.
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) There are two modes of transfer:
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) Blocking mode: The communication is performed in polling mode.
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             after finishing transfer.
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) No-Blocking mode: The communication is performed using Interrupts
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             using DMA mode.
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
ARM GAS  /tmp/ccOUtRG8.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 32 Bit mode */
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
ARM GAS  /tmp/ccOUtRG8.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((uint8_t *)hspi->pTxBuffPtr);
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
ARM GAS  /tmp/ccOUtRG8.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx (and CRC) data to be sent */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be received
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
ARM GAS  /tmp/ccOUtRG8.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/EOT flag */
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL)
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/FRLVL flag */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL)
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccOUtRG8.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/FRLVL flag */
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->Instance->SR & SPI_FLAG_FRLVL) > SPI_RX_FIFO_1PACKET)
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
ARM GAS  /tmp/ccOUtRG8.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Process Unlocked */
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Wait for crc data to be received */
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                           uint32_t Timeout)
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
ARM GAS  /tmp/ccOUtRG8.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t   tickstart;
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t   tmp_mode;
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_TxXferCount;
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_RxXferCount;
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_TxXferCount = Size;
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_RxXferCount = Size;
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state           = hspi->State;
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
ARM GAS  /tmp/ccOUtRG8.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 32 Bit mode */
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check TXP flag */
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount --;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check RXWNE/EOT flag */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL) && (initial_RxXferCount >
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount --;
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccOUtRG8.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check TXP flag */
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP) && (initial_TxXferCount > 0UL))
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((initial_TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check RXWNE/FRLVL flag */
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL) && (initial_RxXferCount
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccOUtRG8.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* check TXP flag */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((initial_TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((initial_TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DA
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((uint8_t *)hspi->pTxBuffPtr);
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until RXWNE/FRLVL flag is reset */
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_FRLVL)) != 0UL) && (initial_RxXferCount
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->Instance->SR & SPI_FLAG_RXWNE) != 0UL)
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->Instance->SR & SPI_FLAG_FRLVL) > SPI_RX_FIFO_1PACKET)
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
ARM GAS  /tmp/ccOUtRG8.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Process Unlocked */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx/Rx (and CRC) data to be sent/received */
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, tickstart, Timeout) != HAL_OK)
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccOUtRG8.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_32BIT;
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, TXP, FRE, MODF, UDR and TSERF interrupts */
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF | SPI_
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccOUtRG8.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_32BIT;
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             process unlock */
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, RXP, OVR, FRE, MODF and TSERF interrupts */
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF | SPI_
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
ARM GAS  /tmp/ccOUtRG8.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t  tmp_mode;
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init temporary variables */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state  = hspi->State;
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode   = hspi->Init.Mode;
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_32BIT;
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_32BIT;
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_16BIT;
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_16BIT;
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_8BIT;
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_8BIT;
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, RXP, TXP, DXP, UDR, OVR, FRE, MODF and TSERF interrupts */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_DXP | SPI_IT_UDR | SPI_I
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an additional amount of data in blocking mode.
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/ccOUtRG8.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX)
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data to be sent just after the current one */
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (uint8_t *)pData;
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an additional amount of data in blocking mode.
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
ARM GAS  /tmp/ccOUtRG8.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be received just after the current one */
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pData;
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current reception is already completed */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccOUtRG8.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and receive an additional amount of data in blocking mode.
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be sent and received just after the current one */
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (uint8_t *)pTxData;
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pRxData;
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
ARM GAS  /tmp/ccOUtRG8.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t)0UL;
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
ARM GAS  /tmp/ccOUtRG8.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear TXDMAEN bit*/
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
ARM GAS  /tmp/ccOUtRG8.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
ARM GAS  /tmp/ccOUtRG8.s 			page 39


2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Locked */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear RXDMAEN bit */
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccOUtRG8.s 			page 40


2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
ARM GAS  /tmp/ccOUtRG8.s 			page 41


2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF));
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                               uint16_t Size)
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t             tmp_mode;
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init temporary variables */
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state   = hspi->State;
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode    = hspi->Init.Mode;
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (!(((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccOUtRG8.s 			page 42


2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Reset the Tx/Rx DMA bits */
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Process Unlocked */
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccOUtRG8.s 			page 43


2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCallback */
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccOUtRG8.s 			page 44


2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY.
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** */
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process locked */
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
ARM GAS  /tmp/ccOUtRG8.s 			page 45


2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
ARM GAS  /tmp/ccOUtRG8.s 			page 46


2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Proceed with abort procedure */
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check error during Abort procedure */
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Reset errorCode */
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Process Unlocked */
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->state to ready */
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + At abort completion, call user abort complete callback.
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** */
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_tx_abort_done = 1UL, dma_rx_abort_done = 1UL;
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 47


2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      before any call to DMA Abort functions */
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Tx request if enabled */
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_tx_abort_done = 0UL;
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_NO_XFER)
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_tx_abort_done = 1UL;
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = NULL;
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Rx request if enabled */
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_rx_abort_done = 0UL;
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) != HAL_OK)
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_NO_XFER)
ARM GAS  /tmp/ccOUtRG8.s 			page 48


2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_rx_abort_done = 1UL;
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = NULL;
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If no running DMA transfer, finish cleanup and call callbacks */
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((dma_tx_abort_done == 1UL) && (dma_rx_abort_done == 1UL))
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Proceed with abort procedure */
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_AbortTransfer(hspi);
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check error during Abort procedure */
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Reset errorCode */
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restore hspi->state to ready */
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call user Abort complete callback */
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
ARM GAS  /tmp/ccOUtRG8.s 			page 49


2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->IER;
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t trigger  = itsource & itflag;
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t cfg1     = hspi->Instance->CFG1;
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t handled  = 0UL;
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef State = hspi->State;
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter and Receiver ------------------------------------*/
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
ARM GAS  /tmp/ccOUtRG8.s 			page 50


2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && HAL_IS_BIT_
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && HAL_IS_BIT_
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Reload  -------------------------------------------------*/
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_TSERF))
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested = 0UL;
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TSERFFLAG(hspi);
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (handled != 0UL)
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI End Of Transfer: DMA or IT based transfer */
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear EOT/TXTF/SUSP flag */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_EOTFLAG(hspi);
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TXTFFLAG(hspi);
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable EOT interrupt */
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* DMA Normal Mode */
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_CLR(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN) ||                    // IT based
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_RX) && (hspi->hdmatx->Init.Mode == DMA_NORMAL)) ||  // DMA is u
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_TX) && (hspi->hdmarx->Init.Mode == DMA_NORMAL)))    // DMA is u
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* For the IT based receive extra polling maybe required for last packet */
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Pooling remaining data */
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         while (hspi->RxXferCount != 0UL)
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 32 Bit mode */
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
ARM GAS  /tmp/ccOUtRG8.s 			page 51


2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint32_t);
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 16 Bit mode */
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint16_t);
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Receive data in 8 Bit mode */
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           else
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint8_t);
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Call SPI Standard close procedure */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SPI_CloseTransfer(hspi);
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return;
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
ARM GAS  /tmp/ccOUtRG8.s 			page 52


2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 	else
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* end of the appropriate call */
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Abort on going, clear SUSP flag to avoid infinite looping */
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_OVR) != 0UL)
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_MODF) != 0UL)
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_FRE) != 0UL)
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Underrun error interrupt occurred ------------------------------------*/
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_UDR) != 0UL)
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 53


2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable SPI peripheral */
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable all interrupts */
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF | SPI_IT_OVR | 
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Disable the SPI DMA requests */
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Restore hspi->State to Ready */
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call user error callback */
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccOUtRG8.s 			page 54


2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccOUtRG8.s 			page 55


3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI error callback.
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
ARM GAS  /tmp/ccOUtRG8.s 			page 56


3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI control functions
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI state
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI handle state */
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->State;
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI error code.
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI ErrorCode */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->ErrorCode;
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccOUtRG8.s 			page 57


3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   Private functions
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccOUtRG8.s 			page 58


3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccOUtRG8.s 			page 59


3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* if DMA error is FIFO error ignore it */
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call SPI standard close procedure */
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_CloseTransfer(hspi);
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccOUtRG8.s 			page 60


3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccOUtRG8.s 			page 61


3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi)
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
  26              		.loc 1 3445 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint8_t *)hspi->pRxBuffPtr) = (*(__IO uint8_t *)&hspi->Instance->RXDR);
ARM GAS  /tmp/ccOUtRG8.s 			page 62


  32              		.loc 1 3447 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 436E     		ldr	r3, [r0, #100]
  35 0004 92F83020 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
  36 0008 1A70     		strb	r2, [r3]
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint8_t);
  37              		.loc 1 3448 0
  38 000a 436E     		ldr	r3, [r0, #100]
  39 000c 0133     		adds	r3, r3, #1
  40 000e 4366     		str	r3, [r0, #100]
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
  41              		.loc 1 3449 0
  42 0010 B0F86A30 		ldrh	r3, [r0, #106]
  43 0014 013B     		subs	r3, r3, #1
  44 0016 9BB2     		uxth	r3, r3
  45 0018 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
  46              		.loc 1 3452 0
  47 001c B0F86A30 		ldrh	r3, [r0, #106]
  48 0020 9BB2     		uxth	r3, r3
  49 0022 23B9     		cbnz	r3, .L1
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
  50              		.loc 1 3469 0
  51 0024 0268     		ldr	r2, [r0]
  52 0026 1369     		ldr	r3, [r2, #16]
  53 0028 23F00103 		bic	r3, r3, #1
  54 002c 1361     		str	r3, [r2, #16]
  55              	.L1:
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
  56              		.loc 1 3472 0
  57 002e 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE382:
  61              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
ARM GAS  /tmp/ccOUtRG8.s 			page 63


  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	SPI_RxISR_16BIT:
  69              	.LFB383:
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi)
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
  70              		.loc 1 3482 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL1:
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
  76              		.loc 1 3485 0
  77 0000 0268     		ldr	r2, [r0]
  78              	.LVL2:
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
  79              		.loc 1 3487 0
  80 0002 436E     		ldr	r3, [r0, #100]
  81 0004 128E     		ldrh	r2, [r2, #48]
  82              	.LVL3:
  83 0006 1A80     		strh	r2, [r3]	@ movhi
  84              	.LVL4:
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (*(__IO uint16_t *)&hspi->Instance->RXDR);
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
  85              		.loc 1 3491 0
  86 0008 436E     		ldr	r3, [r0, #100]
  87 000a 0233     		adds	r3, r3, #2
  88 000c 4366     		str	r3, [r0, #100]
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
  89              		.loc 1 3492 0
  90 000e B0F86A30 		ldrh	r3, [r0, #106]
  91 0012 013B     		subs	r3, r3, #1
  92 0014 9BB2     		uxth	r3, r3
  93 0016 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
  94              		.loc 1 3495 0
  95 001a B0F86A30 		ldrh	r3, [r0, #106]
  96 001e 9BB2     		uxth	r3, r3
  97 0020 23B9     		cbnz	r3, .L3
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
ARM GAS  /tmp/ccOUtRG8.s 			page 64


3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
  98              		.loc 1 3512 0
  99 0022 0268     		ldr	r2, [r0]
 100 0024 1369     		ldr	r3, [r2, #16]
 101 0026 23F00103 		bic	r3, r3, #1
 102 002a 1361     		str	r3, [r2, #16]
 103              	.L3:
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 104              		.loc 1 3515 0
 105 002c 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE383:
 109              		.section	.text.SPI_RxISR_32BIT,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-d16
 116              	SPI_RxISR_32BIT:
 117              	.LFB384:
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 32-bit receive in Interrupt context.
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi)
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 118              		.loc 1 3525 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL5:
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint32_t *)hspi->pRxBuffPtr) = (*(__IO uint32_t *)&hspi->Instance->RXDR);
 124              		.loc 1 3527 0
 125 0000 0268     		ldr	r2, [r0]
 126 0002 436E     		ldr	r3, [r0, #100]
ARM GAS  /tmp/ccOUtRG8.s 			page 65


 127 0004 126B     		ldr	r2, [r2, #48]
 128 0006 1A60     		str	r2, [r3]
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint32_t);
 129              		.loc 1 3528 0
 130 0008 436E     		ldr	r3, [r0, #100]
 131 000a 0433     		adds	r3, r3, #4
 132 000c 4366     		str	r3, [r0, #100]
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
 133              		.loc 1 3529 0
 134 000e B0F86A30 		ldrh	r3, [r0, #106]
 135 0012 013B     		subs	r3, r3, #1
 136 0014 9BB2     		uxth	r3, r3
 137 0016 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
 138              		.loc 1 3532 0
 139 001a B0F86A30 		ldrh	r3, [r0, #106]
 140 001e 9BB2     		uxth	r3, r3
 141 0020 23B9     		cbnz	r3, .L5
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
 142              		.loc 1 3549 0
 143 0022 0268     		ldr	r2, [r0]
 144 0024 1369     		ldr	r3, [r2, #16]
 145 0026 23F00103 		bic	r3, r3, #1
 146 002a 1361     		str	r3, [r2, #16]
 147              	.L5:
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 148              		.loc 1 3552 0
 149 002c 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE384:
 153              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv5-d16
 160              	SPI_TxISR_8BIT:
ARM GAS  /tmp/ccOUtRG8.s 			page 66


 161              	.LFB385:
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi)
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 162              		.loc 1 3562 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL6:
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->TXDR = *((uint8_t *)hspi->pTxBuffPtr);
 168              		.loc 1 3564 0
 169 0000 C26D     		ldr	r2, [r0, #92]
 170 0002 0368     		ldr	r3, [r0]
 171 0004 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 172 0006 83F82020 		strb	r2, [r3, #32]
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint8_t);
 173              		.loc 1 3565 0
 174 000a C36D     		ldr	r3, [r0, #92]
 175 000c 0133     		adds	r3, r3, #1
 176 000e C365     		str	r3, [r0, #92]
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 177              		.loc 1 3566 0
 178 0010 B0F86230 		ldrh	r3, [r0, #98]
 179 0014 013B     		subs	r3, r3, #1
 180 0016 9BB2     		uxth	r3, r3
 181 0018 A0F86230 		strh	r3, [r0, #98]	@ movhi
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 182              		.loc 1 3569 0
 183 001c B0F86230 		ldrh	r3, [r0, #98]
 184 0020 9BB2     		uxth	r3, r3
 185 0022 23B9     		cbnz	r3, .L7
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
ARM GAS  /tmp/ccOUtRG8.s 			page 67


3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 186              		.loc 1 3586 0
 187 0024 0268     		ldr	r2, [r0]
 188 0026 1369     		ldr	r3, [r2, #16]
 189 0028 23F00203 		bic	r3, r3, #2
 190 002c 1361     		str	r3, [r2, #16]
 191              	.L7:
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 192              		.loc 1 3589 0
 193 002e 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE385:
 197              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 198              		.align	1
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-d16
 204              	SPI_TxISR_16BIT:
 205              	.LFB386:
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi)
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 206              		.loc 1 3598 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL7:
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 212              		.loc 1 3601 0
 213 0000 0368     		ldr	r3, [r0]
 214              	.LVL8:
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *ptxdr_16bits = *((uint16_t *)hspi->pTxBuffPtr);
 215              		.loc 1 3603 0
 216 0002 C26D     		ldr	r2, [r0, #92]
 217 0004 1288     		ldrh	r2, [r2]
 218 0006 1A84     		strh	r2, [r3, #32]	@ movhi
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint16_t *)&hspi->Instance->TXDR) = *((uint16_t *)hspi->pTxBuffPtr);
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 219              		.loc 1 3607 0
 220 0008 C36D     		ldr	r3, [r0, #92]
 221              	.LVL9:
ARM GAS  /tmp/ccOUtRG8.s 			page 68


 222 000a 0233     		adds	r3, r3, #2
 223 000c C365     		str	r3, [r0, #92]
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 224              		.loc 1 3608 0
 225 000e B0F86230 		ldrh	r3, [r0, #98]
 226 0012 013B     		subs	r3, r3, #1
 227 0014 9BB2     		uxth	r3, r3
 228 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 229              		.loc 1 3611 0
 230 001a B0F86230 		ldrh	r3, [r0, #98]
 231 001e 9BB2     		uxth	r3, r3
 232 0020 23B9     		cbnz	r3, .L9
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 233              		.loc 1 3628 0
 234 0022 0268     		ldr	r2, [r0]
 235 0024 1369     		ldr	r3, [r2, #16]
 236 0026 23F00203 		bic	r3, r3, #2
 237 002a 1361     		str	r3, [r2, #16]
 238              	.L9:
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 239              		.loc 1 3631 0
 240 002c 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE386:
 244              		.section	.text.SPI_TxISR_32BIT,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	SPI_TxISR_32BIT:
 252              	.LFB387:
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 32-bit transmit in Interrupt mode.
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccOUtRG8.s 			page 69


3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi)
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 253              		.loc 1 3640 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL10:
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint32_t *)&hspi->Instance->TXDR) = *((uint32_t *)hspi->pTxBuffPtr);
 259              		.loc 1 3642 0
 260 0000 C26D     		ldr	r2, [r0, #92]
 261 0002 0368     		ldr	r3, [r0]
 262 0004 1268     		ldr	r2, [r2]
 263 0006 1A62     		str	r2, [r3, #32]
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint32_t);
 264              		.loc 1 3643 0
 265 0008 C36D     		ldr	r3, [r0, #92]
 266 000a 0433     		adds	r3, r3, #4
 267 000c C365     		str	r3, [r0, #92]
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 268              		.loc 1 3644 0
 269 000e B0F86230 		ldrh	r3, [r0, #98]
 270 0012 013B     		subs	r3, r3, #1
 271 0014 9BB2     		uxth	r3, r3
 272 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 273              		.loc 1 3647 0
 274 001a B0F86230 		ldrh	r3, [r0, #98]
 275 001e 9BB2     		uxth	r3, r3
 276 0020 23B9     		cbnz	r3, .L11
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else 
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 277              		.loc 1 3664 0
 278 0022 0268     		ldr	r2, [r0]
 279 0024 1369     		ldr	r3, [r2, #16]
 280 0026 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccOUtRG8.s 			page 70


 281 002a 1361     		str	r3, [r2, #16]
 282              	.L11:
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HSPI_RELOAD_TRANSFER */
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 283              		.loc 1 3667 0
 284 002c 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE387:
 288              		.section	.text.SPI_AbortTransfer,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	SPI_AbortTransfer:
 296              	.LFB388:
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort Transfer and clear flags.
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi)
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 297              		.loc 1 3676 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL11:
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 303              		.loc 1 3678 0
 304 0000 0268     		ldr	r2, [r0]
 305 0002 1368     		ldr	r3, [r2]
 306 0004 23F00103 		bic	r3, r3, #1
 307 0008 1360     		str	r3, [r2]
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 308              		.loc 1 3681 0
 309 000a 0268     		ldr	r2, [r0]
 310 000c 1169     		ldr	r1, [r2, #16]
 311 000e 184B     		ldr	r3, .L14
 312 0010 0B40     		ands	r3, r3, r1
 313 0012 1361     		str	r3, [r2, #16]
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Status flags in the SR register */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 314              		.loc 1 3684 0
 315 0014 0268     		ldr	r2, [r0]
 316 0016 9369     		ldr	r3, [r2, #24]
 317 0018 43F00803 		orr	r3, r3, #8
 318 001c 9361     		str	r3, [r2, #24]
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
ARM GAS  /tmp/ccOUtRG8.s 			page 71


 319              		.loc 1 3685 0
 320 001e 0268     		ldr	r2, [r0]
 321 0020 9369     		ldr	r3, [r2, #24]
 322 0022 43F01003 		orr	r3, r3, #16
 323 0026 9361     		str	r3, [r2, #24]
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 324              		.loc 1 3688 0
 325 0028 0268     		ldr	r2, [r0]
 326 002a 9368     		ldr	r3, [r2, #8]
 327 002c 23F44043 		bic	r3, r3, #49152
 328 0030 9360     		str	r3, [r2, #8]
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 329              		.loc 1 3691 0
 330 0032 0268     		ldr	r2, [r0]
 331 0034 9369     		ldr	r3, [r2, #24]
 332 0036 43F04003 		orr	r3, r3, #64
 333 003a 9361     		str	r3, [r2, #24]
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_UDRFLAG(hspi);
 334              		.loc 1 3692 0
 335 003c 0268     		ldr	r2, [r0]
 336 003e 9369     		ldr	r3, [r2, #24]
 337 0040 43F02003 		orr	r3, r3, #32
 338 0044 9361     		str	r3, [r2, #24]
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 339              		.loc 1 3693 0
 340 0046 0268     		ldr	r2, [r0]
 341 0048 9369     		ldr	r3, [r2, #24]
 342 004a 43F48073 		orr	r3, r3, #256
 343 004e 9361     		str	r3, [r2, #24]
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_MODFFLAG(hspi);
 344              		.loc 1 3694 0
 345 0050 0268     		ldr	r2, [r0]
 346 0052 9369     		ldr	r3, [r2, #24]
 347 0054 43F40073 		orr	r3, r3, #512
 348 0058 9361     		str	r3, [r2, #24]
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 349              		.loc 1 3695 0
 350 005a 0268     		ldr	r2, [r0]
 351 005c 9369     		ldr	r3, [r2, #24]
 352 005e 43F40063 		orr	r3, r3, #2048
 353 0062 9361     		str	r3, [r2, #24]
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
 354              		.loc 1 3701 0
 355 0064 0023     		movs	r3, #0
 356 0066 A0F86230 		strh	r3, [r0, #98]	@ movhi
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 357              		.loc 1 3702 0
 358 006a A0F86A30 		strh	r3, [r0, #106]	@ movhi
ARM GAS  /tmp/ccOUtRG8.s 			page 72


3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 359              		.loc 1 3703 0
 360 006e 7047     		bx	lr
 361              	.L15:
 362              		.align	2
 363              	.L14:
 364 0070 90FCFFFF 		.word	-880
 365              		.cfi_endproc
 366              	.LFE388:
 368              		.section	.text.SPI_CloseTransfer,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv5-d16
 375              	SPI_CloseTransfer:
 376              	.LFB389:
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Close Transfer and clear flags.
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR: if any error detected
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** *         HAL_OK: if nothing detected
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 377              		.loc 1 3714 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL12:
 383 0000 10B4     		push	{r4}
 384              	.LCFI0:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 4, -4
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag = hspi->Instance->SR;
 387              		.loc 1 3715 0
 388 0002 0268     		ldr	r2, [r0]
 389 0004 5369     		ldr	r3, [r2, #20]
 390              	.LVL13:
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 391              		.loc 1 3717 0
 392 0006 9169     		ldr	r1, [r2, #24]
 393 0008 41F00801 		orr	r1, r1, #8
 394 000c 9161     		str	r1, [r2, #24]
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 395              		.loc 1 3718 0
 396 000e 0168     		ldr	r1, [r0]
 397 0010 8A69     		ldr	r2, [r1, #24]
 398 0012 42F01002 		orr	r2, r2, #16
 399 0016 8A61     		str	r2, [r1, #24]
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
ARM GAS  /tmp/ccOUtRG8.s 			page 73


3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 400              		.loc 1 3721 0
 401 0018 0168     		ldr	r1, [r0]
 402 001a 0A68     		ldr	r2, [r1]
 403 001c 22F00102 		bic	r2, r2, #1
 404 0020 0A60     		str	r2, [r1]
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 405              		.loc 1 3724 0
 406 0022 0168     		ldr	r1, [r0]
 407 0024 0C69     		ldr	r4, [r1, #16]
 408 0026 294A     		ldr	r2, .L22
 409 0028 2240     		ands	r2, r2, r4
 410 002a 0A61     		str	r2, [r1, #16]
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 411              		.loc 1 3727 0
 412 002c 0168     		ldr	r1, [r0]
 413 002e 8A68     		ldr	r2, [r1, #8]
 414 0030 22F44042 		bic	r2, r2, #49152
 415 0034 8A60     		str	r2, [r1, #8]
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report UnderRun error for non RX Only communication */
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 416              		.loc 1 3730 0
 417 0036 90F88120 		ldrb	r2, [r0, #129]	@ zero_extendqisi2
 418 003a D2B2     		uxtb	r2, r2
 419 003c 042A     		cmp	r2, #4
 420 003e 0DD0     		beq	.L17
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_UDR) != 0UL)
 421              		.loc 1 3732 0
 422 0040 13F0200F 		tst	r3, #32
 423 0044 0AD0     		beq	.L17
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 424              		.loc 1 3734 0
 425 0046 D0F88420 		ldr	r2, [r0, #132]
 426 004a 42F08002 		orr	r2, r2, #128
 427 004e C0F88420 		str	r2, [r0, #132]
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 428              		.loc 1 3735 0
 429 0052 0168     		ldr	r1, [r0]
 430 0054 8A69     		ldr	r2, [r1, #24]
 431 0056 42F02002 		orr	r2, r2, #32
 432 005a 8A61     		str	r2, [r1, #24]
 433              	.L17:
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report OverRun error for non TX Only communication */
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 434              		.loc 1 3740 0
 435 005c 90F88120 		ldrb	r2, [r0, #129]	@ zero_extendqisi2
 436 0060 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccOUtRG8.s 			page 74


 437 0062 032A     		cmp	r2, #3
 438 0064 0DD0     		beq	.L18
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_OVR) != 0UL)
 439              		.loc 1 3742 0
 440 0066 13F0400F 		tst	r3, #64
 441 006a 0AD0     		beq	.L18
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 442              		.loc 1 3744 0
 443 006c D0F88420 		ldr	r2, [r0, #132]
 444 0070 42F00402 		orr	r2, r2, #4
 445 0074 C0F88420 		str	r2, [r0, #132]
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 446              		.loc 1 3745 0
 447 0078 0168     		ldr	r1, [r0]
 448 007a 8A69     		ldr	r2, [r1, #24]
 449 007c 42F04002 		orr	r2, r2, #64
 450 0080 8A61     		str	r2, [r1, #24]
 451              	.L18:
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if CRC error occurred */
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((itflag & SPI_FLAG_CRCERR) != 0UL)
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Mode Fault error interrupt occurred -------------------------------*/
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_MODF) != 0UL)
 452              		.loc 1 3762 0
 453 0082 13F4007F 		tst	r3, #512
 454 0086 0AD0     		beq	.L19
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 455              		.loc 1 3764 0
 456 0088 D0F88420 		ldr	r2, [r0, #132]
 457 008c 42F00102 		orr	r2, r2, #1
 458 0090 C0F88420 		str	r2, [r0, #132]
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_MODFFLAG(hspi);
 459              		.loc 1 3765 0
 460 0094 0168     		ldr	r1, [r0]
 461 0096 8A69     		ldr	r2, [r1, #24]
 462 0098 42F40072 		orr	r2, r2, #512
 463 009c 8A61     		str	r2, [r1, #24]
 464              	.L19:
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Frame error interrupt occurred ------------------------------------*/
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_FRE) != 0UL)
ARM GAS  /tmp/ccOUtRG8.s 			page 75


 465              		.loc 1 3769 0
 466 009e 13F4807F 		tst	r3, #256
 467 00a2 0AD0     		beq	.L20
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 468              		.loc 1 3771 0
 469 00a4 D0F88430 		ldr	r3, [r0, #132]
 470              	.LVL14:
 471 00a8 43F00803 		orr	r3, r3, #8
 472 00ac C0F88430 		str	r3, [r0, #132]
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 473              		.loc 1 3772 0
 474 00b0 0268     		ldr	r2, [r0]
 475 00b2 9369     		ldr	r3, [r2, #24]
 476 00b4 43F48073 		orr	r3, r3, #256
 477 00b8 9361     		str	r3, [r2, #24]
 478              	.L20:
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
 479              		.loc 1 3775 0
 480 00ba 0023     		movs	r3, #0
 481 00bc A0F86230 		strh	r3, [r0, #98]	@ movhi
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 482              		.loc 1 3776 0
 483 00c0 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 484              		.loc 1 3777 0
 485 00c4 5DF8044B 		ldr	r4, [sp], #4
 486              	.LCFI1:
 487              		.cfi_restore 4
 488              		.cfi_def_cfa_offset 0
 489 00c8 7047     		bx	lr
 490              	.L23:
 491 00ca 00BF     		.align	2
 492              	.L22:
 493 00cc 90FCFFFF 		.word	-880
 494              		.cfi_endproc
 495              	.LFE389:
 497              		.section	.text.SPI_GetPacketSize,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	SPI_GetPacketSize:
 505              	.LFB391:
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param hspi: pointer to a SPI_HandleTypeDef structure that contains
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *              the configuration information for SPI module.
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Flag: SPI flag to check
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Status: flag state to check
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Timeout: Timeout duration
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Tickstart: Tick start value
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccOUtRG8.s 			page 76


3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Tickstart, uint32_t Timeout)
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait until flag is set */
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check for the Timeout */
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_TIMEOUT;
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Compute configured packet size from fifo perspective.
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval Packet size occupied in the fifo
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi)
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 506              		.loc 1 3811 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL15:
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 512              		.loc 1 3812 0
 513 0000 C36B     		ldr	r3, [r0, #60]
 514 0002 5B09     		lsrs	r3, r3, #5
 515              	.LVL16:
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 516              		.loc 1 3813 0
 517 0004 C068     		ldr	r0, [r0, #12]
 518              	.LVL17:
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Convert data size to Byte */
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   data_size = (data_size + 7UL) / 8UL;
 519              		.loc 1 3816 0
 520 0006 0830     		adds	r0, r0, #8
 521              	.LVL18:
 522 0008 C008     		lsrs	r0, r0, #3
 523              	.LVL19:
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return data_size * fifo_threashold;
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 524              		.loc 1 3819 0
 525 000a 03FB0000 		mla	r0, r3, r0, r0
 526              	.LVL20:
 527 000e 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE391:
 531              		.section	.text.SPI_WaitOnFlagUntilTimeout,"ax",%progbits
ARM GAS  /tmp/ccOUtRG8.s 			page 77


 532              		.align	1
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv5-d16
 538              	SPI_WaitOnFlagUntilTimeout:
 539              	.LFB390:
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait until flag is set */
 540              		.loc 1 3791 0
 541              		.cfi_startproc
 542              		@ args = 4, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL21:
 545 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 546              	.LCFI2:
 547              		.cfi_def_cfa_offset 24
 548              		.cfi_offset 4, -24
 549              		.cfi_offset 5, -20
 550              		.cfi_offset 6, -16
 551              		.cfi_offset 7, -12
 552              		.cfi_offset 8, -8
 553              		.cfi_offset 14, -4
 554 0004 0746     		mov	r7, r0
 555 0006 0E46     		mov	r6, r1
 556 0008 1546     		mov	r5, r2
 557 000a 9846     		mov	r8, r3
 558 000c 069C     		ldr	r4, [sp, #24]
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 559              		.loc 1 3793 0
 560 000e 00E0     		b	.L26
 561              	.LVL22:
 562              	.L27:
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 563              		.loc 1 3796 0 discriminator 3
 564 0010 B4B1     		cbz	r4, .L31
 565              	.L26:
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 566              		.loc 1 3793 0
 567 0012 3B68     		ldr	r3, [r7]
 568 0014 5B69     		ldr	r3, [r3, #20]
 569 0016 36EA0303 		bics	r3, r6, r3
 570 001a 0CBF     		ite	eq
 571 001c 0123     		moveq	r3, #1
 572 001e 0023     		movne	r3, #0
 573 0020 AB42     		cmp	r3, r5
 574 0022 0AD1     		bne	.L33
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 575              		.loc 1 3796 0
 576 0024 FFF7FEFF 		bl	HAL_GetTick
 577              	.LVL23:
 578 0028 A0EB0800 		sub	r0, r0, r8
 579 002c A042     		cmp	r0, r4
 580 002e EFD3     		bcc	.L27
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 581              		.loc 1 3796 0 is_stmt 0 discriminator 1
 582 0030 B4F1FF3F 		cmp	r4, #-1
 583 0034 ECD0     		beq	.L27
ARM GAS  /tmp/ccOUtRG8.s 			page 78


3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 584              		.loc 1 3798 0 is_stmt 1
 585 0036 0320     		movs	r0, #3
 586 0038 00E0     		b	.L28
 587              	.L33:
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 588              		.loc 1 3801 0
 589 003a 0020     		movs	r0, #0
 590              	.L28:
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 591              		.loc 1 3802 0
 592 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 593              	.LVL24:
 594              	.L31:
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 595              		.loc 1 3798 0
 596 0040 0320     		movs	r0, #3
 597 0042 FBE7     		b	.L28
 598              		.cfi_endproc
 599              	.LFE390:
 601              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 602              		.align	1
 603              		.weak	HAL_SPI_MspInit
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-d16
 609              	HAL_SPI_MspInit:
 610              	.LFB345:
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 611              		.loc 1 491 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL25:
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 617              		.loc 1 498 0
 618 0000 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE345:
 622              		.section	.text.HAL_SPI_Init,"ax",%progbits
 623              		.align	1
 624              		.global	HAL_SPI_Init
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv5-d16
 630              	HAL_SPI_Init:
 631              	.LFB343:
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length = 0UL;
 632              		.loc 1 235 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL26:
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccOUtRG8.s 			page 79


 637              		.loc 1 240 0
 638 0000 0028     		cmp	r0, #0
 639 0002 00F09780 		beq	.L45
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length = 0UL;
 640              		.loc 1 235 0
 641 0006 70B5     		push	{r4, r5, r6, lr}
 642              	.LCFI3:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 14, -4
 648 0008 0446     		mov	r4, r0
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 649              		.loc 1 271 0
 650 000a 0023     		movs	r3, #0
 651 000c 8362     		str	r3, [r0, #40]
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 652              		.loc 1 275 0
 653 000e 0568     		ldr	r5, [r0]
 654 0010 4C4B     		ldr	r3, .L55
 655 0012 4D4E     		ldr	r6, .L55+4
 656 0014 9D42     		cmp	r5, r3
 657 0016 18BF     		it	ne
 658 0018 B542     		cmpne	r5, r6
 659 001a 14BF     		ite	ne
 660 001c 0126     		movne	r6, #1
 661 001e 0026     		moveq	r6, #0
 662 0020 07D0     		beq	.L37
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 663              		.loc 1 275 0 is_stmt 0 discriminator 1
 664 0022 A3F57443 		sub	r3, r3, #62464
 665 0026 9D42     		cmp	r5, r3
 666 0028 03D0     		beq	.L37
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 667              		.loc 1 275 0 discriminator 2
 668 002a C368     		ldr	r3, [r0, #12]
 669 002c 0F2B     		cmp	r3, #15
 670 002e 00F28380 		bhi	.L46
 671              	.L37:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 672              		.loc 1 281 0 is_stmt 1
 673 0032 2046     		mov	r0, r4
 674              	.LVL27:
 675 0034 FFF7FEFF 		bl	SPI_GetPacketSize
 676              	.LVL28:
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 677              		.loc 1 282 0
 678 0038 26B1     		cbz	r6, .L38
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 679              		.loc 1 282 0 is_stmt 0 discriminator 1
 680 003a 444B     		ldr	r3, .L55+8
 681 003c 9D42     		cmp	r5, r3
 682 003e 01D0     		beq	.L38
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 683              		.loc 1 282 0 discriminator 3
 684 0040 0828     		cmp	r0, #8
ARM GAS  /tmp/ccOUtRG8.s 			page 80


 685 0042 7BD8     		bhi	.L47
 686              	.L38:
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 687              		.loc 1 282 0 discriminator 5
 688 0044 3F4A     		ldr	r2, .L55
 689 0046 404B     		ldr	r3, .L55+4
 690 0048 9D42     		cmp	r5, r3
 691 004a 18BF     		it	ne
 692 004c 9542     		cmpne	r5, r2
 693 004e 03D0     		beq	.L39
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 694              		.loc 1 283 0 is_stmt 1
 695 0050 03F58063 		add	r3, r3, #1024
 696 0054 9D42     		cmp	r5, r3
 697 0056 01D1     		bne	.L40
 698              	.L39:
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 699              		.loc 1 283 0 is_stmt 0 discriminator 1
 700 0058 1028     		cmp	r0, #16
 701 005a 71D8     		bhi	.L48
 702              	.L40:
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 703              		.loc 1 315 0 is_stmt 1
 704 005c 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 705 0060 002B     		cmp	r3, #0
 706 0062 54D0     		beq	.L53
 707              	.LVL29:
 708              	.L41:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 709              		.loc 1 344 0
 710 0064 0223     		movs	r3, #2
 711 0066 84F88130 		strb	r3, [r4, #129]
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 712              		.loc 1 347 0
 713 006a 2268     		ldr	r2, [r4]
 714 006c 1368     		ldr	r3, [r2]
 715 006e 23F00103 		bic	r3, r3, #1
 716 0072 1360     		str	r3, [r2]
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 717              		.loc 1 353 0
 718 0074 A369     		ldr	r3, [r4, #24]
 719 0076 B3F1806F 		cmp	r3, #67108864
 720 007a 4ED0     		beq	.L54
 721              	.L42:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FifoThreshold     | hspi->Init.DataSize));
 722              		.loc 1 359 0
 723 007c E369     		ldr	r3, [r4, #28]
 724 007e A26A     		ldr	r2, [r4, #40]
 725 0080 1343     		orrs	r3, r3, r2
 726 0082 E26B     		ldr	r2, [r4, #60]
 727 0084 1343     		orrs	r3, r3, r2
 728 0086 E168     		ldr	r1, [r4, #12]
 729 0088 2268     		ldr	r2, [r4]
 730 008a 0B43     		orrs	r3, r3, r1
 731 008c 9360     		str	r3, [r2, #8]
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.NSS          | hspi->Init.CLKPolarity      | hspi->In
 732              		.loc 1 363 0
ARM GAS  /tmp/ccOUtRG8.s 			page 81


 733 008e 636B     		ldr	r3, [r4, #52]
 734 0090 626A     		ldr	r2, [r4, #36]
 735 0092 1343     		orrs	r3, r3, r2
 736 0094 A26B     		ldr	r2, [r4, #56]
 737 0096 1343     		orrs	r3, r3, r2
 738 0098 A269     		ldr	r2, [r4, #24]
 739 009a 1343     		orrs	r3, r3, r2
 740 009c 2269     		ldr	r2, [r4, #16]
 741 009e 1343     		orrs	r3, r3, r2
 742 00a0 6269     		ldr	r2, [r4, #20]
 743 00a2 1343     		orrs	r3, r3, r2
 744 00a4 226A     		ldr	r2, [r4, #32]
 745 00a6 1343     		orrs	r3, r3, r2
 746 00a8 6268     		ldr	r2, [r4, #4]
 747 00aa 1343     		orrs	r3, r3, r2
 748 00ac E26C     		ldr	r2, [r4, #76]
 749 00ae 1343     		orrs	r3, r3, r2
 750 00b0 A268     		ldr	r2, [r4, #8]
 751 00b2 1343     		orrs	r3, r3, r2
 752 00b4 A26C     		ldr	r2, [r4, #72]
 753 00b6 1343     		orrs	r3, r3, r2
 754 00b8 A16D     		ldr	r1, [r4, #88]
 755 00ba 2268     		ldr	r2, [r4]
 756 00bc 0B43     		orrs	r3, r3, r1
 757 00be D360     		str	r3, [r2, #12]
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 758              		.loc 1 410 0
 759 00c0 6368     		ldr	r3, [r4, #4]
 760 00c2 6BB9     		cbnz	r3, .L43
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 761              		.loc 1 417 0
 762 00c4 2268     		ldr	r2, [r4]
 763 00c6 9368     		ldr	r3, [r2, #8]
 764 00c8 23F4C053 		bic	r3, r3, #6144
 765 00cc 43F40063 		orr	r3, r3, #2048
 766 00d0 9360     		str	r3, [r2, #8]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 767              		.loc 1 419 0
 768 00d2 2268     		ldr	r2, [r4]
 769 00d4 9368     		ldr	r3, [r2, #8]
 770 00d6 23F4C063 		bic	r3, r3, #1536
 771 00da 43F48063 		orr	r3, r3, #1024
 772 00de 9360     		str	r3, [r2, #8]
 773              	.L43:
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 774              		.loc 1 424 0
 775 00e0 2268     		ldr	r2, [r4]
 776 00e2 136D     		ldr	r3, [r2, #80]
 777 00e4 23F00103 		bic	r3, r3, #1
 778 00e8 1365     		str	r3, [r2, #80]
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 779              		.loc 1 428 0
 780 00ea 6368     		ldr	r3, [r4, #4]
 781 00ec 13F4800F 		tst	r3, #4194304
 782 00f0 06D0     		beq	.L44
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 783              		.loc 1 431 0
ARM GAS  /tmp/ccOUtRG8.s 			page 82


 784 00f2 2268     		ldr	r2, [r4]
 785 00f4 D368     		ldr	r3, [r2, #12]
 786 00f6 23F00043 		bic	r3, r3, #-2147483648
 787 00fa 616D     		ldr	r1, [r4, #84]
 788 00fc 0B43     		orrs	r3, r3, r1
 789 00fe D360     		str	r3, [r2, #12]
 790              	.L44:
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 791              		.loc 1 434 0
 792 0100 0020     		movs	r0, #0
 793 0102 C4F88400 		str	r0, [r4, #132]
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 794              		.loc 1 435 0
 795 0106 0123     		movs	r3, #1
 796 0108 84F88130 		strb	r3, [r4, #129]
 797              	.L36:
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 798              		.loc 1 438 0
 799 010c 70BD     		pop	{r4, r5, r6, pc}
 800              	.LVL30:
 801              	.L53:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 802              		.loc 1 318 0
 803 010e 84F88030 		strb	r3, [r4, #128]
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 804              		.loc 1 340 0
 805 0112 2046     		mov	r0, r4
 806              	.LVL31:
 807 0114 FFF7FEFF 		bl	HAL_SPI_MspInit
 808              	.LVL32:
 809 0118 A4E7     		b	.L41
 810              	.L54:
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 811              		.loc 1 353 0 discriminator 1
 812 011a 6368     		ldr	r3, [r4, #4]
 813 011c B3F5800F 		cmp	r3, #4194304
 814 0120 ACD1     		bne	.L42
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 815              		.loc 1 353 0 is_stmt 0 discriminator 2
 816 0122 A36B     		ldr	r3, [r4, #56]
 817 0124 002B     		cmp	r3, #0
 818 0126 A9D1     		bne	.L42
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 819              		.loc 1 355 0 is_stmt 1
 820 0128 2268     		ldr	r2, [r4]
 821 012a 1368     		ldr	r3, [r2]
 822 012c 43F48053 		orr	r3, r3, #4096
 823 0130 1360     		str	r3, [r2]
 824 0132 A3E7     		b	.L42
 825              	.LVL33:
 826              	.L45:
 827              	.LCFI4:
 828              		.cfi_def_cfa_offset 0
 829              		.cfi_restore 4
 830              		.cfi_restore 5
 831              		.cfi_restore 6
 832              		.cfi_restore 14
ARM GAS  /tmp/ccOUtRG8.s 			page 83


 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 833              		.loc 1 242 0
 834 0134 0120     		movs	r0, #1
 835              	.LVL34:
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 836              		.loc 1 438 0
 837 0136 7047     		bx	lr
 838              	.LVL35:
 839              	.L46:
 840              	.LCFI5:
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 846              		.loc 1 277 0
 847 0138 0120     		movs	r0, #1
 848              	.LVL36:
 849 013a E7E7     		b	.L36
 850              	.LVL37:
 851              	.L47:
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 852              		.loc 1 285 0
 853 013c 0120     		movs	r0, #1
 854              	.LVL38:
 855 013e E5E7     		b	.L36
 856              	.LVL39:
 857              	.L48:
 858 0140 0120     		movs	r0, #1
 859              	.LVL40:
 860 0142 E3E7     		b	.L36
 861              	.L56:
 862              		.align	2
 863              	.L55:
 864 0144 00300140 		.word	1073819648
 865 0148 00380040 		.word	1073756160
 866 014c 003C0040 		.word	1073757184
 867              		.cfi_endproc
 868              	.LFE343:
 870              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 871              		.align	1
 872              		.weak	HAL_SPI_MspDeInit
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv5-d16
 878              	HAL_SPI_MspDeInit:
 879              	.LFB346:
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 880              		.loc 1 507 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL41:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 84


 886              		.loc 1 514 0
 887 0000 7047     		bx	lr
 888              		.cfi_endproc
 889              	.LFE346:
 891              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_SPI_DeInit
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-d16
 899              	HAL_SPI_DeInit:
 900              	.LFB344:
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 901              		.loc 1 447 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL42:
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 906              		.loc 1 449 0
 907 0000 98B1     		cbz	r0, .L60
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 908              		.loc 1 447 0
 909 0002 10B5     		push	{r4, lr}
 910              	.LCFI6:
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 4, -8
 913              		.cfi_offset 14, -4
 914 0004 0446     		mov	r4, r0
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 915              		.loc 1 457 0
 916 0006 0223     		movs	r3, #2
 917 0008 80F88130 		strb	r3, [r0, #129]
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 918              		.loc 1 460 0
 919 000c 0268     		ldr	r2, [r0]
 920 000e 1368     		ldr	r3, [r2]
 921 0010 23F00103 		bic	r3, r3, #1
 922 0014 1360     		str	r3, [r2]
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 923              		.loc 1 472 0
 924 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 925              	.LVL43:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 926              		.loc 1 475 0
 927 001a 0020     		movs	r0, #0
 928 001c C4F88400 		str	r0, [r4, #132]
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 929              		.loc 1 476 0
 930 0020 84F88100 		strb	r0, [r4, #129]
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 931              		.loc 1 479 0
 932 0024 84F88000 		strb	r0, [r4, #128]
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 933              		.loc 1 482 0
 934 0028 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccOUtRG8.s 			page 85


 935              	.LVL44:
 936              	.L60:
 937              	.LCFI7:
 938              		.cfi_def_cfa_offset 0
 939              		.cfi_restore 4
 940              		.cfi_restore 14
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 941              		.loc 1 451 0
 942 002a 0120     		movs	r0, #1
 943              	.LVL45:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 944              		.loc 1 482 0
 945 002c 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE344:
 949              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 950              		.align	1
 951              		.global	HAL_SPI_Transmit
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu fpv5-d16
 957              	HAL_SPI_Transmit:
 958              	.LFB347:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 959              		.loc 1 778 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              	.LVL46:
 964 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 965              	.LCFI8:
 966              		.cfi_def_cfa_offset 28
 967              		.cfi_offset 4, -28
 968              		.cfi_offset 5, -24
 969              		.cfi_offset 6, -20
 970              		.cfi_offset 7, -16
 971              		.cfi_offset 8, -12
 972              		.cfi_offset 9, -8
 973              		.cfi_offset 14, -4
 974 0004 83B0     		sub	sp, sp, #12
 975              	.LCFI9:
 976              		.cfi_def_cfa_offset 40
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 977              		.loc 1 780 0
 978 0006 D0F80090 		ldr	r9, [r0]
 979              	.LVL47:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 980              		.loc 1 790 0
 981 000a 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 982 000e 012C     		cmp	r4, #1
 983 0010 00F04981 		beq	.L95
 984 0014 1D46     		mov	r5, r3
 985 0016 1746     		mov	r7, r2
 986 0018 8846     		mov	r8, r1
 987 001a 0446     		mov	r4, r0
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 86


 988              		.loc 1 790 0 is_stmt 0 discriminator 2
 989 001c 0123     		movs	r3, #1
 990              	.LVL48:
 991 001e 80F88030 		strb	r3, [r0, #128]
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 992              		.loc 1 793 0 is_stmt 1 discriminator 2
 993 0022 FFF7FEFF 		bl	HAL_GetTick
 994              	.LVL49:
 995 0026 0646     		mov	r6, r0
 996              	.LVL50:
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 997              		.loc 1 795 0 discriminator 2
 998 0028 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 999 002c DBB2     		uxtb	r3, r3
 1000 002e 012B     		cmp	r3, #1
 1001 0030 33D1     		bne	.L99
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1002              		.loc 1 802 0
 1003 0032 B7FA87F3 		clz	r3, r7
 1004 0036 5B09     		lsrs	r3, r3, #5
 1005 0038 B8F1000F 		cmp	r8, #0
 1006 003c 08BF     		it	eq
 1007 003e 0123     		moveq	r3, #1
 1008 0040 83BB     		cbnz	r3, .L100
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1009              		.loc 1 810 0
 1010 0042 0323     		movs	r3, #3
 1011 0044 84F88130 		strb	r3, [r4, #129]
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1012              		.loc 1 811 0
 1013 0048 0023     		movs	r3, #0
 1014 004a C4F88430 		str	r3, [r4, #132]
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1015              		.loc 1 812 0
 1016 004e C4F85C80 		str	r8, [r4, #92]
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1017              		.loc 1 813 0
 1018 0052 A4F86070 		strh	r7, [r4, #96]	@ movhi
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1019              		.loc 1 814 0
 1020 0056 A4F86270 		strh	r7, [r4, #98]	@ movhi
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 1021              		.loc 1 817 0
 1022 005a 6366     		str	r3, [r4, #100]
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 1023              		.loc 1 818 0
 1024 005c A4F86830 		strh	r3, [r4, #104]	@ movhi
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1025              		.loc 1 819 0
 1026 0060 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1027              		.loc 1 820 0
 1028 0064 6367     		str	r3, [r4, #116]
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1029              		.loc 1 821 0
 1030 0066 2367     		str	r3, [r4, #112]
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccOUtRG8.s 			page 87


 1031              		.loc 1 824 0
 1032 0068 A368     		ldr	r3, [r4, #8]
 1033 006a B3F5C02F 		cmp	r3, #393216
 1034 006e 1ED0     		beq	.L101
 1035              	.L69:
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1036              		.loc 1 830 0
 1037 0070 2368     		ldr	r3, [r4]
 1038 0072 5968     		ldr	r1, [r3, #4]
 1039 0074 8E4A     		ldr	r2, .L104
 1040 0076 0A40     		ands	r2, r2, r1
 1041 0078 1743     		orrs	r7, r7, r2
 1042 007a 5F60     		str	r7, [r3, #4]
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1043              		.loc 1 833 0
 1044 007c 2268     		ldr	r2, [r4]
 1045 007e 1368     		ldr	r3, [r2]
 1046 0080 43F00103 		orr	r3, r3, #1
 1047 0084 1360     		str	r3, [r2]
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1048              		.loc 1 835 0
 1049 0086 6368     		ldr	r3, [r4, #4]
 1050 0088 B3F5800F 		cmp	r3, #4194304
 1051 008c 15D0     		beq	.L102
 1052              	.L70:
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1053              		.loc 1 842 0
 1054 008e E368     		ldr	r3, [r4, #12]
 1055 0090 0F2B     		cmp	r3, #15
 1056 0092 21D8     		bhi	.L71
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1057              		.loc 1 873 0
 1058 0094 072B     		cmp	r3, #7
 1059 0096 54D8     		bhi	.L79
 1060 0098 AFE0     		b	.L80
 1061              	.L99:
 1062              	.LVL51:
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1063              		.loc 1 798 0
 1064 009a 0023     		movs	r3, #0
 1065 009c 84F88030 		strb	r3, [r4, #128]
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1066              		.loc 1 799 0
 1067 00a0 0220     		movs	r0, #2
 1068              	.LVL52:
 1069 00a2 01E1     		b	.L66
 1070              	.LVL53:
 1071              	.L100:
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1072              		.loc 1 805 0
 1073 00a4 0023     		movs	r3, #0
 1074 00a6 84F88030 		strb	r3, [r4, #128]
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1075              		.loc 1 806 0
 1076 00aa 0120     		movs	r0, #1
 1077              	.LVL54:
 1078 00ac FCE0     		b	.L66
ARM GAS  /tmp/ccOUtRG8.s 			page 88


 1079              	.LVL55:
 1080              	.L101:
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1081              		.loc 1 826 0
 1082 00ae 2268     		ldr	r2, [r4]
 1083 00b0 1368     		ldr	r3, [r2]
 1084 00b2 43F40063 		orr	r3, r3, #2048
 1085 00b6 1360     		str	r3, [r2]
 1086 00b8 DAE7     		b	.L69
 1087              	.L102:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1088              		.loc 1 838 0
 1089 00ba 2268     		ldr	r2, [r4]
 1090 00bc 1368     		ldr	r3, [r2]
 1091 00be 43F40073 		orr	r3, r3, #512
 1092 00c2 1360     		str	r3, [r2]
 1093 00c4 E3E7     		b	.L70
 1094              	.LVL56:
 1095              	.L73:
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1096              		.loc 1 857 0
 1097 00c6 FFF7FEFF 		bl	HAL_GetTick
 1098              	.LVL57:
 1099 00ca 801B     		subs	r0, r0, r6
 1100 00cc A842     		cmp	r0, r5
 1101 00ce 02D3     		bcc	.L75
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1102              		.loc 1 857 0 is_stmt 0 discriminator 1
 1103 00d0 B5F1FF3F 		cmp	r5, #-1
 1104 00d4 18D1     		bne	.L76
 1105              	.L75:
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1106              		.loc 1 857 0 discriminator 3
 1107 00d6 BDB1     		cbz	r5, .L76
 1108              	.L71:
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1109              		.loc 1 845 0 is_stmt 1
 1110 00d8 B4F86220 		ldrh	r2, [r4, #98]
 1111 00dc 92B2     		uxth	r2, r2
 1112 00de 002A     		cmp	r2, #0
 1113 00e0 00F0C380 		beq	.L78
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1114              		.loc 1 848 0
 1115 00e4 2368     		ldr	r3, [r4]
 1116 00e6 5A69     		ldr	r2, [r3, #20]
 1117 00e8 12F0020F 		tst	r2, #2
 1118 00ec EBD0     		beq	.L73
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 1119              		.loc 1 850 0
 1120 00ee E26D     		ldr	r2, [r4, #92]
 1121 00f0 1268     		ldr	r2, [r2]
 1122 00f2 1A62     		str	r2, [r3, #32]
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 1123              		.loc 1 851 0
 1124 00f4 E36D     		ldr	r3, [r4, #92]
 1125 00f6 0433     		adds	r3, r3, #4
 1126 00f8 E365     		str	r3, [r4, #92]
ARM GAS  /tmp/ccOUtRG8.s 			page 89


 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1127              		.loc 1 852 0
 1128 00fa B4F86220 		ldrh	r2, [r4, #98]
 1129 00fe 013A     		subs	r2, r2, #1
 1130 0100 92B2     		uxth	r2, r2
 1131 0102 A4F86220 		strh	r2, [r4, #98]	@ movhi
 1132 0106 E7E7     		b	.L71
 1133              	.L76:
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1134              		.loc 1 860 0
 1135 0108 2046     		mov	r0, r4
 1136 010a FFF7FEFF 		bl	SPI_CloseTransfer
 1137              	.LVL58:
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1138              		.loc 1 863 0
 1139 010e 0023     		movs	r3, #0
 1140 0110 84F88030 		strb	r3, [r4, #128]
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1141              		.loc 1 865 0
 1142 0114 D4F88430 		ldr	r3, [r4, #132]
 1143 0118 43F48073 		orr	r3, r3, #256
 1144 011c C4F88430 		str	r3, [r4, #132]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1145              		.loc 1 866 0
 1146 0120 0120     		movs	r0, #1
 1147 0122 84F88100 		strb	r0, [r4, #129]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1148              		.loc 1 867 0
 1149 0126 BFE0     		b	.L66
 1150              	.L82:
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1151              		.loc 1 890 0
 1152 0128 E36D     		ldr	r3, [r4, #92]
 1153 012a 1B88     		ldrh	r3, [r3]
 1154 012c A9F82030 		strh	r3, [r9, #32]	@ movhi
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1155              		.loc 1 894 0
 1156 0130 E36D     		ldr	r3, [r4, #92]
 1157 0132 0233     		adds	r3, r3, #2
 1158 0134 E365     		str	r3, [r4, #92]
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1159              		.loc 1 895 0
 1160 0136 B4F86230 		ldrh	r3, [r4, #98]
 1161 013a 013B     		subs	r3, r3, #1
 1162 013c 9BB2     		uxth	r3, r3
 1163 013e A4F86230 		strh	r3, [r4, #98]	@ movhi
 1164              	.L79:
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1165              		.loc 1 876 0
 1166 0142 B4F86230 		ldrh	r3, [r4, #98]
 1167 0146 9BB2     		uxth	r3, r3
 1168 0148 002B     		cmp	r3, #0
 1169 014a 00F08E80 		beq	.L78
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1170              		.loc 1 879 0
 1171 014e 2268     		ldr	r2, [r4]
 1172 0150 5369     		ldr	r3, [r2, #20]
ARM GAS  /tmp/ccOUtRG8.s 			page 90


 1173 0152 13F0020F 		tst	r3, #2
 1174 0156 14D0     		beq	.L81
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1175              		.loc 1 881 0
 1176 0158 B4F86230 		ldrh	r3, [r4, #98]
 1177 015c 9BB2     		uxth	r3, r3
 1178 015e 012B     		cmp	r3, #1
 1179 0160 E2D9     		bls	.L82
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1180              		.loc 1 881 0 is_stmt 0 discriminator 1
 1181 0162 E36B     		ldr	r3, [r4, #60]
 1182 0164 002B     		cmp	r3, #0
 1183 0166 DFD0     		beq	.L82
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 1184              		.loc 1 883 0 is_stmt 1
 1185 0168 E36D     		ldr	r3, [r4, #92]
 1186 016a 1B68     		ldr	r3, [r3]
 1187 016c 1362     		str	r3, [r2, #32]
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1188              		.loc 1 884 0
 1189 016e E36D     		ldr	r3, [r4, #92]
 1190 0170 0433     		adds	r3, r3, #4
 1191 0172 E365     		str	r3, [r4, #92]
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1192              		.loc 1 885 0
 1193 0174 B4F86230 		ldrh	r3, [r4, #98]
 1194 0178 023B     		subs	r3, r3, #2
 1195 017a 9BB2     		uxth	r3, r3
 1196 017c A4F86230 		strh	r3, [r4, #98]	@ movhi
 1197 0180 DFE7     		b	.L79
 1198              	.L81:
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1199              		.loc 1 901 0
 1200 0182 FFF7FEFF 		bl	HAL_GetTick
 1201              	.LVL59:
 1202 0186 801B     		subs	r0, r0, r6
 1203 0188 A842     		cmp	r0, r5
 1204 018a 02D3     		bcc	.L84
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1205              		.loc 1 901 0 is_stmt 0 discriminator 1
 1206 018c B5F1FF3F 		cmp	r5, #-1
 1207 0190 01D1     		bne	.L85
 1208              	.L84:
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1209              		.loc 1 901 0 discriminator 3
 1210 0192 002D     		cmp	r5, #0
 1211 0194 D5D1     		bne	.L79
 1212              	.L85:
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1213              		.loc 1 904 0 is_stmt 1
 1214 0196 2046     		mov	r0, r4
 1215 0198 FFF7FEFF 		bl	SPI_CloseTransfer
 1216              	.LVL60:
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1217              		.loc 1 907 0
 1218 019c 0023     		movs	r3, #0
 1219 019e 84F88030 		strb	r3, [r4, #128]
ARM GAS  /tmp/ccOUtRG8.s 			page 91


 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1220              		.loc 1 909 0
 1221 01a2 D4F88430 		ldr	r3, [r4, #132]
 1222 01a6 43F48073 		orr	r3, r3, #256
 1223 01aa C4F88430 		str	r3, [r4, #132]
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1224              		.loc 1 910 0
 1225 01ae 0120     		movs	r0, #1
 1226 01b0 84F88100 		strb	r0, [r4, #129]
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1227              		.loc 1 911 0
 1228 01b4 78E0     		b	.L66
 1229              	.L88:
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1230              		.loc 1 930 0
 1231 01b6 B4F86230 		ldrh	r3, [r4, #98]
 1232 01ba 9BB2     		uxth	r3, r3
 1233 01bc 012B     		cmp	r3, #1
 1234 01be 0FD9     		bls	.L90
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1235              		.loc 1 930 0 is_stmt 0 discriminator 1
 1236 01c0 E36B     		ldr	r3, [r4, #60]
 1237 01c2 6BB1     		cbz	r3, .L90
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1238              		.loc 1 933 0 is_stmt 1
 1239 01c4 E36D     		ldr	r3, [r4, #92]
 1240 01c6 1B88     		ldrh	r3, [r3]
 1241 01c8 A9F82030 		strh	r3, [r9, #32]	@ movhi
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1242              		.loc 1 937 0
 1243 01cc E36D     		ldr	r3, [r4, #92]
 1244 01ce 0233     		adds	r3, r3, #2
 1245 01d0 E365     		str	r3, [r4, #92]
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1246              		.loc 1 938 0
 1247 01d2 B4F86230 		ldrh	r3, [r4, #98]
 1248 01d6 023B     		subs	r3, r3, #2
 1249 01d8 9BB2     		uxth	r3, r3
 1250 01da A4F86230 		strh	r3, [r4, #98]	@ movhi
 1251 01de 0CE0     		b	.L80
 1252              	.L90:
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 1253              		.loc 1 942 0
 1254 01e0 E36D     		ldr	r3, [r4, #92]
 1255 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 01e4 82F82030 		strb	r3, [r2, #32]
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1257              		.loc 1 943 0
 1258 01e8 E36D     		ldr	r3, [r4, #92]
 1259 01ea 0133     		adds	r3, r3, #1
 1260 01ec E365     		str	r3, [r4, #92]
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1261              		.loc 1 944 0
 1262 01ee B4F86230 		ldrh	r3, [r4, #98]
 1263 01f2 013B     		subs	r3, r3, #1
 1264 01f4 9BB2     		uxth	r3, r3
 1265 01f6 A4F86230 		strh	r3, [r4, #98]	@ movhi
ARM GAS  /tmp/ccOUtRG8.s 			page 92


 1266              	.L80:
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1267              		.loc 1 919 0
 1268 01fa B4F86230 		ldrh	r3, [r4, #98]
 1269 01fe 9BB2     		uxth	r3, r3
 1270 0200 9BB3     		cbz	r3, .L78
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1271              		.loc 1 922 0
 1272 0202 2268     		ldr	r2, [r4]
 1273 0204 5369     		ldr	r3, [r2, #20]
 1274 0206 13F0020F 		tst	r3, #2
 1275 020a 14D0     		beq	.L87
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1276              		.loc 1 924 0
 1277 020c B4F86230 		ldrh	r3, [r4, #98]
 1278 0210 9BB2     		uxth	r3, r3
 1279 0212 032B     		cmp	r3, #3
 1280 0214 CFD9     		bls	.L88
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1281              		.loc 1 924 0 is_stmt 0 discriminator 1
 1282 0216 E36B     		ldr	r3, [r4, #60]
 1283 0218 402B     		cmp	r3, #64
 1284 021a CCD9     		bls	.L88
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 1285              		.loc 1 926 0 is_stmt 1
 1286 021c E36D     		ldr	r3, [r4, #92]
 1287 021e 1B68     		ldr	r3, [r3]
 1288 0220 1362     		str	r3, [r2, #32]
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 1289              		.loc 1 927 0
 1290 0222 E36D     		ldr	r3, [r4, #92]
 1291 0224 0433     		adds	r3, r3, #4
 1292 0226 E365     		str	r3, [r4, #92]
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1293              		.loc 1 928 0
 1294 0228 B4F86230 		ldrh	r3, [r4, #98]
 1295 022c 043B     		subs	r3, r3, #4
 1296 022e 9BB2     		uxth	r3, r3
 1297 0230 A4F86230 		strh	r3, [r4, #98]	@ movhi
 1298 0234 E1E7     		b	.L80
 1299              	.L87:
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1300              		.loc 1 950 0
 1301 0236 FFF7FEFF 		bl	HAL_GetTick
 1302              	.LVL61:
 1303 023a 801B     		subs	r0, r0, r6
 1304 023c A842     		cmp	r0, r5
 1305 023e 02D3     		bcc	.L91
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1306              		.loc 1 950 0 is_stmt 0 discriminator 1
 1307 0240 B5F1FF3F 		cmp	r5, #-1
 1308 0244 01D1     		bne	.L92
 1309              	.L91:
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1310              		.loc 1 950 0 discriminator 3
 1311 0246 002D     		cmp	r5, #0
 1312 0248 D7D1     		bne	.L80
ARM GAS  /tmp/ccOUtRG8.s 			page 93


 1313              	.L92:
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1314              		.loc 1 953 0 is_stmt 1
 1315 024a 2046     		mov	r0, r4
 1316 024c FFF7FEFF 		bl	SPI_CloseTransfer
 1317              	.LVL62:
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1318              		.loc 1 956 0
 1319 0250 0023     		movs	r3, #0
 1320 0252 84F88030 		strb	r3, [r4, #128]
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1321              		.loc 1 958 0
 1322 0256 D4F88430 		ldr	r3, [r4, #132]
 1323 025a 43F48073 		orr	r3, r3, #256
 1324 025e C4F88430 		str	r3, [r4, #132]
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 1325              		.loc 1 959 0
 1326 0262 0120     		movs	r0, #1
 1327 0264 84F88100 		strb	r0, [r4, #129]
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1328              		.loc 1 960 0
 1329 0268 1EE0     		b	.L66
 1330              	.L78:
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1331              		.loc 1 967 0
 1332 026a 0095     		str	r5, [sp]
 1333 026c 3346     		mov	r3, r6
 1334 026e 0022     		movs	r2, #0
 1335 0270 0821     		movs	r1, #8
 1336 0272 2046     		mov	r0, r4
 1337 0274 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1338              	.LVL63:
 1339 0278 28B1     		cbz	r0, .L94
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1340              		.loc 1 969 0
 1341 027a D4F88430 		ldr	r3, [r4, #132]
 1342 027e 43F02003 		orr	r3, r3, #32
 1343 0282 C4F88430 		str	r3, [r4, #132]
 1344              	.L94:
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1345              		.loc 1 973 0
 1346 0286 2046     		mov	r0, r4
 1347 0288 FFF7FEFF 		bl	SPI_CloseTransfer
 1348              	.LVL64:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1349              		.loc 1 976 0
 1350 028c 0023     		movs	r3, #0
 1351 028e 84F88030 		strb	r3, [r4, #128]
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1352              		.loc 1 978 0
 1353 0292 0123     		movs	r3, #1
 1354 0294 84F88130 		strb	r3, [r4, #129]
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1355              		.loc 1 980 0
 1356 0298 D4F88430 		ldr	r3, [r4, #132]
 1357 029c 0BB9     		cbnz	r3, .L103
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
ARM GAS  /tmp/ccOUtRG8.s 			page 94


 1358              		.loc 1 984 0
 1359 029e 0020     		movs	r0, #0
 1360 02a0 02E0     		b	.L66
 1361              	.L103:
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1362              		.loc 1 982 0
 1363 02a2 0120     		movs	r0, #1
 1364 02a4 00E0     		b	.L66
 1365              	.LVL65:
 1366              	.L95:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1367              		.loc 1 790 0
 1368 02a6 0220     		movs	r0, #2
 1369              	.LVL66:
 1370              	.L66:
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1371              		.loc 1 985 0
 1372 02a8 03B0     		add	sp, sp, #12
 1373              	.LCFI10:
 1374              		.cfi_def_cfa_offset 28
 1375              		@ sp needed
 1376 02aa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1377              	.LVL67:
 1378              	.L105:
 1379 02ae 00BF     		.align	2
 1380              	.L104:
 1381 02b0 0000FFFF 		.word	-65536
 1382              		.cfi_endproc
 1383              	.LFE347:
 1385              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_SPI_TransmitReceive
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv5-d16
 1393              	HAL_SPI_TransmitReceive:
 1394              	.LFB349:
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
 1395              		.loc 1 1230 0
 1396              		.cfi_startproc
 1397              		@ args = 4, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL68:
 1400 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1401              	.LCFI11:
 1402              		.cfi_def_cfa_offset 32
 1403              		.cfi_offset 4, -32
 1404              		.cfi_offset 5, -28
 1405              		.cfi_offset 6, -24
 1406              		.cfi_offset 7, -20
 1407              		.cfi_offset 8, -16
 1408              		.cfi_offset 9, -12
 1409              		.cfi_offset 10, -8
 1410              		.cfi_offset 14, -4
 1411 0004 82B0     		sub	sp, sp, #8
 1412              	.LCFI12:
ARM GAS  /tmp/ccOUtRG8.s 			page 95


 1413              		.cfi_def_cfa_offset 40
 1414 0006 1D46     		mov	r5, r3
 1415 0008 0A9E     		ldr	r6, [sp, #40]
 1416              	.LVL69:
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 1417              		.loc 1 1234 0
 1418 000a D0F800A0 		ldr	r10, [r0]
 1419              	.LVL70:
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1420              		.loc 1 1247 0
 1421 000e 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1422              	.LVL71:
 1423 0012 012B     		cmp	r3, #1
 1424 0014 00F0F681 		beq	.L141
 1425 0018 0446     		mov	r4, r0
 1426 001a 8846     		mov	r8, r1
 1427 001c 9146     		mov	r9, r2
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1428              		.loc 1 1247 0 is_stmt 0 discriminator 2
 1429 001e 0123     		movs	r3, #1
 1430 0020 80F88030 		strb	r3, [r0, #128]
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1431              		.loc 1 1250 0 is_stmt 1 discriminator 2
 1432 0024 FFF7FEFF 		bl	HAL_GetTick
 1433              	.LVL72:
 1434 0028 0746     		mov	r7, r0
 1435              	.LVL73:
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1436              		.loc 1 1254 0 discriminator 2
 1437 002a 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 1438 002e DBB2     		uxtb	r3, r3
 1439              	.LVL74:
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1440              		.loc 1 1255 0 discriminator 2
 1441 0030 6268     		ldr	r2, [r4, #4]
 1442              	.LVL75:
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1443              		.loc 1 1257 0 discriminator 2
 1444 0032 012B     		cmp	r3, #1
 1445 0034 07D0     		beq	.L108
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1446              		.loc 1 1257 0 is_stmt 0 discriminator 1
 1447 0036 B2F5800F 		cmp	r2, #4194304
 1448 003a 40D1     		bne	.L109
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1449              		.loc 1 1258 0 is_stmt 1
 1450 003c A268     		ldr	r2, [r4, #8]
 1451              	.LVL76:
 1452 003e 002A     		cmp	r2, #0
 1453 0040 3DD1     		bne	.L109
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1454              		.loc 1 1258 0 is_stmt 0 discriminator 1
 1455 0042 042B     		cmp	r3, #4
 1456 0044 3BD1     		bne	.L109
 1457              	.L108:
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1458              		.loc 1 1265 0 is_stmt 1
ARM GAS  /tmp/ccOUtRG8.s 			page 96


 1459 0046 B9FA89F3 		clz	r3, r9
 1460              	.LVL77:
 1461 004a 5B09     		lsrs	r3, r3, #5
 1462 004c B8F1000F 		cmp	r8, #0
 1463 0050 08BF     		it	eq
 1464 0052 0123     		moveq	r3, #1
 1465 0054 002B     		cmp	r3, #0
 1466 0056 39D1     		bne	.L110
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1467              		.loc 1 1265 0 is_stmt 0 discriminator 1
 1468 0058 002D     		cmp	r5, #0
 1469 005a 37D0     		beq	.L110
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1470              		.loc 1 1273 0 is_stmt 1
 1471 005c 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 1472 0060 DBB2     		uxtb	r3, r3
 1473 0062 042B     		cmp	r3, #4
 1474 0064 02D0     		beq	.L112
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1475              		.loc 1 1275 0
 1476 0066 0523     		movs	r3, #5
 1477 0068 84F88130 		strb	r3, [r4, #129]
 1478              	.L112:
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1479              		.loc 1 1279 0
 1480 006c 0023     		movs	r3, #0
 1481 006e C4F88430 		str	r3, [r4, #132]
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1482              		.loc 1 1280 0
 1483 0072 C4F86490 		str	r9, [r4, #100]
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1484              		.loc 1 1281 0
 1485 0076 A4F86A50 		strh	r5, [r4, #106]	@ movhi
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1486              		.loc 1 1282 0
 1487 007a A4F86850 		strh	r5, [r4, #104]	@ movhi
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1488              		.loc 1 1283 0
 1489 007e C4F85C80 		str	r8, [r4, #92]
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1490              		.loc 1 1284 0
 1491 0082 A4F86250 		strh	r5, [r4, #98]	@ movhi
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1492              		.loc 1 1285 0
 1493 0086 A4F86050 		strh	r5, [r4, #96]	@ movhi
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1494              		.loc 1 1288 0
 1495 008a 2367     		str	r3, [r4, #112]
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1496              		.loc 1 1289 0
 1497 008c 6367     		str	r3, [r4, #116]
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1498              		.loc 1 1292 0
 1499 008e 2268     		ldr	r2, [r4]
 1500 0090 5168     		ldr	r1, [r2, #4]
 1501 0092 A3F58033 		sub	r3, r3, #65536
 1502 0096 0B40     		ands	r3, r3, r1
ARM GAS  /tmp/ccOUtRG8.s 			page 97


 1503 0098 2B43     		orrs	r3, r3, r5
 1504 009a 5360     		str	r3, [r2, #4]
 1505              	.LVL78:
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1506              		.loc 1 1294 0
 1507 009c 2268     		ldr	r2, [r4]
 1508 009e 1368     		ldr	r3, [r2]
 1509 00a0 43F00103 		orr	r3, r3, #1
 1510 00a4 1360     		str	r3, [r2]
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1511              		.loc 1 1296 0
 1512 00a6 6368     		ldr	r3, [r4, #4]
 1513 00a8 B3F5800F 		cmp	r3, #4194304
 1514 00ac 13D0     		beq	.L147
 1515              	.L113:
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1516              		.loc 1 1303 0
 1517 00ae E368     		ldr	r3, [r4, #12]
 1518 00b0 0F2B     		cmp	r3, #15
 1519 00b2 65D8     		bhi	.L142
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1520              		.loc 1 1341 0
 1521 00b4 072B     		cmp	r3, #7
 1522 00b6 00F2DF80 		bhi	.L143
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state           = hspi->State;
 1523              		.loc 1 1253 0
 1524 00ba A846     		mov	r8, r5
 1525              	.LVL79:
 1526 00bc 29E1     		b	.L123
 1527              	.LVL80:
 1528              	.L109:
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1529              		.loc 1 1261 0
 1530 00be 0023     		movs	r3, #0
 1531              	.LVL81:
 1532 00c0 84F88030 		strb	r3, [r4, #128]
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1533              		.loc 1 1262 0
 1534 00c4 0220     		movs	r0, #2
 1535              	.LVL82:
 1536              	.L107:
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1537              		.loc 1 1506 0
 1538 00c6 02B0     		add	sp, sp, #8
 1539              	.LCFI13:
 1540              		.cfi_remember_state
 1541              		.cfi_def_cfa_offset 32
 1542              		@ sp needed
 1543 00c8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1544              	.LVL83:
 1545              	.L110:
 1546              	.LCFI14:
 1547              		.cfi_restore_state
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1548              		.loc 1 1268 0
 1549 00cc 0023     		movs	r3, #0
 1550 00ce 84F88030 		strb	r3, [r4, #128]
ARM GAS  /tmp/ccOUtRG8.s 			page 98


1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1551              		.loc 1 1269 0
 1552 00d2 0120     		movs	r0, #1
 1553              	.LVL84:
 1554 00d4 F7E7     		b	.L107
 1555              	.LVL85:
 1556              	.L147:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1557              		.loc 1 1299 0
 1558 00d6 2268     		ldr	r2, [r4]
 1559 00d8 1368     		ldr	r3, [r2]
 1560 00da 43F40073 		orr	r3, r3, #512
 1561 00de 1360     		str	r3, [r2]
 1562 00e0 E5E7     		b	.L113
 1563              	.LVL86:
 1564              	.L117:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1565              		.loc 1 1326 0
 1566 00e2 FFF7FEFF 		bl	HAL_GetTick
 1567              	.LVL87:
 1568 00e6 C01B     		subs	r0, r0, r7
 1569 00e8 B042     		cmp	r0, r6
 1570 00ea 02D3     		bcc	.L118
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1571              		.loc 1 1326 0 is_stmt 0 discriminator 1
 1572 00ec B6F1FF3F 		cmp	r6, #-1
 1573 00f0 36D1     		bne	.L119
 1574              	.L118:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1575              		.loc 1 1326 0 discriminator 3
 1576 00f2 002E     		cmp	r6, #0
 1577 00f4 34D0     		beq	.L119
 1578              	.LVL88:
 1579              	.L114:
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1580              		.loc 1 1305 0 is_stmt 1
 1581 00f6 45EA0803 		orr	r3, r5, r8
 1582 00fa 9BB2     		uxth	r3, r3
 1583 00fc 002B     		cmp	r3, #0
 1584 00fe 00F06381 		beq	.L121
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1585              		.loc 1 1308 0
 1586 0102 2368     		ldr	r3, [r4]
 1587 0104 5A69     		ldr	r2, [r3, #20]
 1588 0106 12F0020F 		tst	r2, #2
 1589 010a 0FD0     		beq	.L116
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1590              		.loc 1 1308 0 is_stmt 0 discriminator 1
 1591 010c 75B1     		cbz	r5, .L116
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 1592              		.loc 1 1310 0 is_stmt 1
 1593 010e E26D     		ldr	r2, [r4, #92]
 1594 0110 1268     		ldr	r2, [r2]
 1595 0112 1A62     		str	r2, [r3, #32]
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount --;
 1596              		.loc 1 1311 0
 1597 0114 E36D     		ldr	r3, [r4, #92]
ARM GAS  /tmp/ccOUtRG8.s 			page 99


 1598 0116 0433     		adds	r3, r3, #4
 1599 0118 E365     		str	r3, [r4, #92]
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
 1600              		.loc 1 1312 0
 1601 011a B4F86230 		ldrh	r3, [r4, #98]
 1602 011e 013B     		subs	r3, r3, #1
 1603 0120 9BB2     		uxth	r3, r3
 1604 0122 A4F86230 		strh	r3, [r4, #98]	@ movhi
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1605              		.loc 1 1313 0
 1606 0126 B4F86250 		ldrh	r5, [r4, #98]
 1607              	.LVL89:
 1608 012a ADB2     		uxth	r5, r5
 1609              	.LVL90:
 1610              	.L116:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1611              		.loc 1 1317 0
 1612 012c 2368     		ldr	r3, [r4]
 1613 012e 5969     		ldr	r1, [r3, #20]
 1614 0130 48F20802 		movw	r2, #32776
 1615 0134 1142     		tst	r1, r2
 1616 0136 D4D0     		beq	.L117
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1617              		.loc 1 1317 0 is_stmt 0 discriminator 1
 1618 0138 B8F1000F 		cmp	r8, #0
 1619 013c D1D0     		beq	.L117
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 1620              		.loc 1 1319 0 is_stmt 1
 1621 013e 626E     		ldr	r2, [r4, #100]
 1622 0140 1B6B     		ldr	r3, [r3, #48]
 1623 0142 1360     		str	r3, [r2]
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount --;
 1624              		.loc 1 1320 0
 1625 0144 636E     		ldr	r3, [r4, #100]
 1626 0146 0433     		adds	r3, r3, #4
 1627 0148 6366     		str	r3, [r4, #100]
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
 1628              		.loc 1 1321 0
 1629 014a B4F86A30 		ldrh	r3, [r4, #106]
 1630 014e 013B     		subs	r3, r3, #1
 1631 0150 9BB2     		uxth	r3, r3
 1632 0152 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1633              		.loc 1 1322 0
 1634 0156 B4F86A80 		ldrh	r8, [r4, #106]
 1635              	.LVL91:
 1636 015a 1FFA88F8 		uxth	r8, r8
 1637              	.LVL92:
 1638 015e C0E7     		b	.L117
 1639              	.L119:
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       
 1640              		.loc 1 1329 0
 1641 0160 2046     		mov	r0, r4
 1642 0162 FFF7FEFF 		bl	SPI_CloseTransfer
 1643              	.LVL93:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       
 1644              		.loc 1 1332 0
ARM GAS  /tmp/ccOUtRG8.s 			page 100


 1645 0166 0023     		movs	r3, #0
 1646 0168 84F88030 		strb	r3, [r4, #128]
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1647              		.loc 1 1334 0
 1648 016c D4F88430 		ldr	r3, [r4, #132]
 1649 0170 43F48073 		orr	r3, r3, #256
 1650 0174 C4F88430 		str	r3, [r4, #132]
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 1651              		.loc 1 1335 0
 1652 0178 0120     		movs	r0, #1
 1653 017a 84F88100 		strb	r0, [r4, #129]
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1654              		.loc 1 1336 0
 1655 017e A2E7     		b	.L107
 1656              	.LVL94:
 1657              	.L142:
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state           = hspi->State;
 1658              		.loc 1 1253 0
 1659 0180 A846     		mov	r8, r5
 1660              	.LVL95:
 1661 0182 B8E7     		b	.L114
 1662              	.LVL96:
 1663              	.L125:
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1664              		.loc 1 1358 0
 1665 0184 E36D     		ldr	r3, [r4, #92]
 1666 0186 1B88     		ldrh	r3, [r3]
 1667 0188 AAF82030 		strh	r3, [r10, #32]	@ movhi
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1668              		.loc 1 1362 0
 1669 018c E36D     		ldr	r3, [r4, #92]
 1670 018e 0233     		adds	r3, r3, #2
 1671 0190 E365     		str	r3, [r4, #92]
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 1672              		.loc 1 1363 0
 1673 0192 B4F86230 		ldrh	r3, [r4, #98]
 1674 0196 013B     		subs	r3, r3, #1
 1675 0198 9BB2     		uxth	r3, r3
 1676 019a A4F86230 		strh	r3, [r4, #98]	@ movhi
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1677              		.loc 1 1364 0
 1678 019e B4F86250 		ldrh	r5, [r4, #98]
 1679              	.LVL97:
 1680 01a2 ADB2     		uxth	r5, r5
 1681              	.LVL98:
 1682              	.L124:
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1683              		.loc 1 1369 0
 1684 01a4 2368     		ldr	r3, [r4]
 1685 01a6 5A69     		ldr	r2, [r3, #20]
 1686 01a8 12F4604F 		tst	r2, #57344
 1687 01ac 16D0     		beq	.L126
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1688              		.loc 1 1369 0 is_stmt 0 discriminator 1
 1689 01ae B8F1000F 		cmp	r8, #0
 1690 01b2 13D0     		beq	.L126
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
ARM GAS  /tmp/ccOUtRG8.s 			page 101


 1691              		.loc 1 1371 0 is_stmt 1
 1692 01b4 5A69     		ldr	r2, [r3, #20]
 1693 01b6 12F4004F 		tst	r2, #32768
 1694 01ba 3BD0     		beq	.L127
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 1695              		.loc 1 1373 0
 1696 01bc 626E     		ldr	r2, [r4, #100]
 1697 01be 1B6B     		ldr	r3, [r3, #48]
 1698 01c0 1360     		str	r3, [r2]
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 1699              		.loc 1 1374 0
 1700 01c2 636E     		ldr	r3, [r4, #100]
 1701 01c4 0433     		adds	r3, r3, #4
 1702 01c6 6366     		str	r3, [r4, #100]
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 1703              		.loc 1 1375 0
 1704 01c8 B4F86A30 		ldrh	r3, [r4, #106]
 1705 01cc 023B     		subs	r3, r3, #2
 1706 01ce 9BB2     		uxth	r3, r3
 1707 01d0 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1708              		.loc 1 1376 0
 1709 01d4 B4F86A80 		ldrh	r8, [r4, #106]
 1710              	.LVL99:
 1711 01d8 1FFA88F8 		uxth	r8, r8
 1712              	.LVL100:
 1713              	.L126:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1714              		.loc 1 1392 0
 1715 01dc FFF7FEFF 		bl	HAL_GetTick
 1716              	.LVL101:
 1717 01e0 C01B     		subs	r0, r0, r7
 1718 01e2 B042     		cmp	r0, r6
 1719 01e4 02D3     		bcc	.L128
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1720              		.loc 1 1392 0 is_stmt 0 discriminator 1
 1721 01e6 B6F1FF3F 		cmp	r6, #-1
 1722 01ea 35D1     		bne	.L129
 1723              	.L128:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1724              		.loc 1 1392 0 discriminator 3
 1725 01ec 002E     		cmp	r6, #0
 1726 01ee 33D0     		beq	.L129
 1727              	.LVL102:
 1728              	.L122:
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1729              		.loc 1 1343 0 is_stmt 1
 1730 01f0 45EA0803 		orr	r3, r5, r8
 1731 01f4 9BB2     		uxth	r3, r3
 1732 01f6 002B     		cmp	r3, #0
 1733 01f8 00F0E680 		beq	.L121
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1734              		.loc 1 1346 0
 1735 01fc 2368     		ldr	r3, [r4]
 1736 01fe 5A69     		ldr	r2, [r3, #20]
 1737 0200 12F0020F 		tst	r2, #2
 1738 0204 CED0     		beq	.L124
ARM GAS  /tmp/ccOUtRG8.s 			page 102


1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1739              		.loc 1 1346 0 is_stmt 0 discriminator 1
 1740 0206 002D     		cmp	r5, #0
 1741 0208 CCD0     		beq	.L124
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1742              		.loc 1 1348 0 is_stmt 1
 1743 020a 012D     		cmp	r5, #1
 1744 020c BAD9     		bls	.L125
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1745              		.loc 1 1348 0 is_stmt 0 discriminator 1
 1746 020e E26B     		ldr	r2, [r4, #60]
 1747 0210 002A     		cmp	r2, #0
 1748 0212 B7D0     		beq	.L125
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 1749              		.loc 1 1350 0 is_stmt 1
 1750 0214 E26D     		ldr	r2, [r4, #92]
 1751 0216 1268     		ldr	r2, [r2]
 1752 0218 1A62     		str	r2, [r3, #32]
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1753              		.loc 1 1351 0
 1754 021a E36D     		ldr	r3, [r4, #92]
 1755 021c 0433     		adds	r3, r3, #4
 1756 021e E365     		str	r3, [r4, #92]
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 1757              		.loc 1 1352 0
 1758 0220 B4F86230 		ldrh	r3, [r4, #98]
 1759 0224 023B     		subs	r3, r3, #2
 1760 0226 9BB2     		uxth	r3, r3
 1761 0228 A4F86230 		strh	r3, [r4, #98]	@ movhi
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1762              		.loc 1 1353 0
 1763 022c B4F86250 		ldrh	r5, [r4, #98]
 1764              	.LVL103:
 1765 0230 ADB2     		uxth	r5, r5
 1766              	.LVL104:
 1767 0232 B7E7     		b	.L124
 1768              	.L127:
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1769              		.loc 1 1381 0
 1770 0234 636E     		ldr	r3, [r4, #100]
 1771 0236 BAF83020 		ldrh	r2, [r10, #48]
 1772 023a 1A80     		strh	r2, [r3]	@ movhi
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 1773              		.loc 1 1385 0
 1774 023c 636E     		ldr	r3, [r4, #100]
 1775 023e 0233     		adds	r3, r3, #2
 1776 0240 6366     		str	r3, [r4, #100]
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 1777              		.loc 1 1386 0
 1778 0242 B4F86A30 		ldrh	r3, [r4, #106]
 1779 0246 013B     		subs	r3, r3, #1
 1780 0248 9BB2     		uxth	r3, r3
 1781 024a A4F86A30 		strh	r3, [r4, #106]	@ movhi
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1782              		.loc 1 1387 0
 1783 024e B4F86A80 		ldrh	r8, [r4, #106]
 1784              	.LVL105:
ARM GAS  /tmp/ccOUtRG8.s 			page 103


 1785 0252 1FFA88F8 		uxth	r8, r8
 1786              	.LVL106:
 1787 0256 C1E7     		b	.L126
 1788              	.L129:
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1789              		.loc 1 1395 0
 1790 0258 2046     		mov	r0, r4
 1791 025a FFF7FEFF 		bl	SPI_CloseTransfer
 1792              	.LVL107:
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1793              		.loc 1 1398 0
 1794 025e 0023     		movs	r3, #0
 1795 0260 84F88030 		strb	r3, [r4, #128]
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1796              		.loc 1 1400 0
 1797 0264 D4F88430 		ldr	r3, [r4, #132]
 1798 0268 43F48073 		orr	r3, r3, #256
 1799 026c C4F88430 		str	r3, [r4, #132]
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 1800              		.loc 1 1401 0
 1801 0270 0120     		movs	r0, #1
 1802 0272 84F88100 		strb	r0, [r4, #129]
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1803              		.loc 1 1402 0
 1804 0276 26E7     		b	.L107
 1805              	.LVL108:
 1806              	.L143:
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_state           = hspi->State;
 1807              		.loc 1 1253 0
 1808 0278 A846     		mov	r8, r5
 1809              	.LVL109:
 1810 027a B9E7     		b	.L122
 1811              	.LVL110:
 1812              	.L132:
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1813              		.loc 1 1421 0
 1814 027c 012D     		cmp	r5, #1
 1815 027e 12D9     		bls	.L133
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1816              		.loc 1 1421 0 is_stmt 0 discriminator 1
 1817 0280 E26B     		ldr	r2, [r4, #60]
 1818 0282 82B1     		cbz	r2, .L133
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1819              		.loc 1 1424 0 is_stmt 1
 1820 0284 E36D     		ldr	r3, [r4, #92]
 1821 0286 1B88     		ldrh	r3, [r3]
 1822 0288 AAF82030 		strh	r3, [r10, #32]	@ movhi
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1823              		.loc 1 1428 0
 1824 028c E36D     		ldr	r3, [r4, #92]
 1825 028e 0233     		adds	r3, r3, #2
 1826 0290 E365     		str	r3, [r4, #92]
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 1827              		.loc 1 1429 0
 1828 0292 B4F86230 		ldrh	r3, [r4, #98]
 1829 0296 023B     		subs	r3, r3, #2
 1830 0298 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccOUtRG8.s 			page 104


 1831 029a A4F86230 		strh	r3, [r4, #98]	@ movhi
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1832              		.loc 1 1430 0
 1833 029e B4F86250 		ldrh	r5, [r4, #98]
 1834              	.LVL111:
 1835 02a2 ADB2     		uxth	r5, r5
 1836              	.LVL112:
 1837 02a4 0FE0     		b	.L131
 1838              	.L133:
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 1839              		.loc 1 1434 0
 1840 02a6 E26D     		ldr	r2, [r4, #92]
 1841 02a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1842 02aa 83F82020 		strb	r2, [r3, #32]
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1843              		.loc 1 1435 0
 1844 02ae E36D     		ldr	r3, [r4, #92]
 1845 02b0 0133     		adds	r3, r3, #1
 1846 02b2 E365     		str	r3, [r4, #92]
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 1847              		.loc 1 1436 0
 1848 02b4 B4F86230 		ldrh	r3, [r4, #98]
 1849 02b8 013B     		subs	r3, r3, #1
 1850 02ba 9BB2     		uxth	r3, r3
 1851 02bc A4F86230 		strh	r3, [r4, #98]	@ movhi
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1852              		.loc 1 1437 0
 1853 02c0 B4F86250 		ldrh	r5, [r4, #98]
 1854              	.LVL113:
 1855 02c4 ADB2     		uxth	r5, r5
 1856              	.LVL114:
 1857              	.L131:
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1858              		.loc 1 1442 0
 1859 02c6 2368     		ldr	r3, [r4]
 1860 02c8 5A69     		ldr	r2, [r3, #20]
 1861 02ca 12F4604F 		tst	r2, #57344
 1862 02ce 16D0     		beq	.L134
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1863              		.loc 1 1442 0 is_stmt 0 discriminator 1
 1864 02d0 B8F1000F 		cmp	r8, #0
 1865 02d4 13D0     		beq	.L134
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1866              		.loc 1 1444 0 is_stmt 1
 1867 02d6 5A69     		ldr	r2, [r3, #20]
 1868 02d8 12F4004F 		tst	r2, #32768
 1869 02dc 3AD0     		beq	.L135
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 1870              		.loc 1 1446 0
 1871 02de 626E     		ldr	r2, [r4, #100]
 1872 02e0 1B6B     		ldr	r3, [r3, #48]
 1873 02e2 1360     		str	r3, [r2]
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
 1874              		.loc 1 1447 0
 1875 02e4 636E     		ldr	r3, [r4, #100]
 1876 02e6 0433     		adds	r3, r3, #4
 1877 02e8 6366     		str	r3, [r4, #100]
ARM GAS  /tmp/ccOUtRG8.s 			page 105


1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 1878              		.loc 1 1448 0
 1879 02ea B4F86A30 		ldrh	r3, [r4, #106]
 1880 02ee 043B     		subs	r3, r3, #4
 1881 02f0 9BB2     		uxth	r3, r3
 1882 02f2 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1883              		.loc 1 1449 0
 1884 02f6 B4F86A80 		ldrh	r8, [r4, #106]
 1885              	.LVL115:
 1886 02fa 1FFA88F8 		uxth	r8, r8
 1887              	.LVL116:
 1888              	.L134:
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1889              		.loc 1 1472 0
 1890 02fe FFF7FEFF 		bl	HAL_GetTick
 1891              	.LVL117:
 1892 0302 C01B     		subs	r0, r0, r7
 1893 0304 B042     		cmp	r0, r6
 1894 0306 02D3     		bcc	.L137
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1895              		.loc 1 1472 0 is_stmt 0 discriminator 1
 1896 0308 B6F1FF3F 		cmp	r6, #-1
 1897 030c 4CD1     		bne	.L138
 1898              	.L137:
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1899              		.loc 1 1472 0 discriminator 3
 1900 030e 002E     		cmp	r6, #0
 1901 0310 4AD0     		beq	.L138
 1902              	.LVL118:
 1903              	.L123:
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1904              		.loc 1 1409 0 is_stmt 1
 1905 0312 45EA0803 		orr	r3, r5, r8
 1906 0316 9BB2     		uxth	r3, r3
 1907 0318 002B     		cmp	r3, #0
 1908 031a 55D0     		beq	.L121
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1909              		.loc 1 1412 0
 1910 031c 2368     		ldr	r3, [r4]
 1911 031e 5A69     		ldr	r2, [r3, #20]
 1912 0320 12F0020F 		tst	r2, #2
 1913 0324 CFD0     		beq	.L131
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1914              		.loc 1 1412 0 is_stmt 0 discriminator 1
 1915 0326 002D     		cmp	r5, #0
 1916 0328 CDD0     		beq	.L131
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1917              		.loc 1 1414 0 is_stmt 1
 1918 032a 032D     		cmp	r5, #3
 1919 032c A6D9     		bls	.L132
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1920              		.loc 1 1414 0 is_stmt 0 discriminator 1
 1921 032e E26B     		ldr	r2, [r4, #60]
 1922 0330 402A     		cmp	r2, #64
 1923 0332 A3D9     		bls	.L132
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
ARM GAS  /tmp/ccOUtRG8.s 			page 106


 1924              		.loc 1 1416 0 is_stmt 1
 1925 0334 E26D     		ldr	r2, [r4, #92]
 1926 0336 1268     		ldr	r2, [r2]
 1927 0338 1A62     		str	r2, [r3, #32]
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 1928              		.loc 1 1417 0
 1929 033a E36D     		ldr	r3, [r4, #92]
 1930 033c 0433     		adds	r3, r3, #4
 1931 033e E365     		str	r3, [r4, #92]
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_TxXferCount = hspi->TxXferCount;
 1932              		.loc 1 1418 0
 1933 0340 B4F86230 		ldrh	r3, [r4, #98]
 1934 0344 043B     		subs	r3, r3, #4
 1935 0346 9BB2     		uxth	r3, r3
 1936 0348 A4F86230 		strh	r3, [r4, #98]	@ movhi
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1937              		.loc 1 1419 0
 1938 034c B4F86250 		ldrh	r5, [r4, #98]
 1939              	.LVL119:
 1940 0350 ADB2     		uxth	r5, r5
 1941              	.LVL120:
 1942 0352 B8E7     		b	.L131
 1943              	.L135:
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1944              		.loc 1 1451 0
 1945 0354 5A69     		ldr	r2, [r3, #20]
 1946 0356 02F4C042 		and	r2, r2, #24576
 1947 035a B2F5005F 		cmp	r2, #8192
 1948 035e 11D9     		bls	.L136
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1949              		.loc 1 1454 0
 1950 0360 636E     		ldr	r3, [r4, #100]
 1951 0362 BAF83020 		ldrh	r2, [r10, #48]
 1952 0366 1A80     		strh	r2, [r3]	@ movhi
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 1953              		.loc 1 1458 0
 1954 0368 636E     		ldr	r3, [r4, #100]
 1955 036a 0233     		adds	r3, r3, #2
 1956 036c 6366     		str	r3, [r4, #100]
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 1957              		.loc 1 1459 0
 1958 036e B4F86A30 		ldrh	r3, [r4, #106]
 1959 0372 023B     		subs	r3, r3, #2
 1960 0374 9BB2     		uxth	r3, r3
 1961 0376 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1962              		.loc 1 1460 0
 1963 037a B4F86A80 		ldrh	r8, [r4, #106]
 1964              	.LVL121:
 1965 037e 1FFA88F8 		uxth	r8, r8
 1966              	.LVL122:
 1967 0382 BCE7     		b	.L134
 1968              	.L136:
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
 1969              		.loc 1 1464 0
 1970 0384 626E     		ldr	r2, [r4, #100]
 1971 0386 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
ARM GAS  /tmp/ccOUtRG8.s 			page 107


 1972 038a 1370     		strb	r3, [r2]
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 1973              		.loc 1 1465 0
 1974 038c 636E     		ldr	r3, [r4, #100]
 1975 038e 0133     		adds	r3, r3, #1
 1976 0390 6366     		str	r3, [r4, #100]
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           initial_RxXferCount = hspi->RxXferCount;
 1977              		.loc 1 1466 0
 1978 0392 B4F86A30 		ldrh	r3, [r4, #106]
 1979 0396 013B     		subs	r3, r3, #1
 1980 0398 9BB2     		uxth	r3, r3
 1981 039a A4F86A30 		strh	r3, [r4, #106]	@ movhi
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1982              		.loc 1 1467 0
 1983 039e B4F86A80 		ldrh	r8, [r4, #106]
 1984              	.LVL123:
 1985 03a2 1FFA88F8 		uxth	r8, r8
 1986              	.LVL124:
 1987 03a6 AAE7     		b	.L134
 1988              	.L138:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1989              		.loc 1 1475 0
 1990 03a8 2046     		mov	r0, r4
 1991 03aa FFF7FEFF 		bl	SPI_CloseTransfer
 1992              	.LVL125:
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1993              		.loc 1 1478 0
 1994 03ae 0023     		movs	r3, #0
 1995 03b0 84F88030 		strb	r3, [r4, #128]
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1996              		.loc 1 1480 0
 1997 03b4 D4F88430 		ldr	r3, [r4, #132]
 1998 03b8 43F48073 		orr	r3, r3, #256
 1999 03bc C4F88430 		str	r3, [r4, #132]
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_ERROR;
 2000              		.loc 1 1481 0
 2001 03c0 0120     		movs	r0, #1
 2002 03c2 84F88100 		strb	r0, [r4, #129]
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2003              		.loc 1 1482 0
 2004 03c6 7EE6     		b	.L107
 2005              	.L121:
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2006              		.loc 1 1488 0
 2007 03c8 0096     		str	r6, [sp]
 2008 03ca 3B46     		mov	r3, r7
 2009 03cc 0022     		movs	r2, #0
 2010 03ce 0821     		movs	r1, #8
 2011 03d0 2046     		mov	r0, r4
 2012 03d2 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 2013              	.LVL126:
 2014 03d6 28B1     		cbz	r0, .L140
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2015              		.loc 1 1490 0
 2016 03d8 D4F88430 		ldr	r3, [r4, #132]
 2017 03dc 43F02003 		orr	r3, r3, #32
 2018 03e0 C4F88430 		str	r3, [r4, #132]
ARM GAS  /tmp/ccOUtRG8.s 			page 108


 2019              	.L140:
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2020              		.loc 1 1494 0
 2021 03e4 2046     		mov	r0, r4
 2022 03e6 FFF7FEFF 		bl	SPI_CloseTransfer
 2023              	.LVL127:
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2024              		.loc 1 1497 0
 2025 03ea 0023     		movs	r3, #0
 2026 03ec 84F88030 		strb	r3, [r4, #128]
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2027              		.loc 1 1499 0
 2028 03f0 0123     		movs	r3, #1
 2029 03f2 84F88130 		strb	r3, [r4, #129]
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2030              		.loc 1 1501 0
 2031 03f6 D4F88430 		ldr	r3, [r4, #132]
 2032 03fa 0BB9     		cbnz	r3, .L148
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2033              		.loc 1 1505 0
 2034 03fc 0020     		movs	r0, #0
 2035 03fe 62E6     		b	.L107
 2036              	.L148:
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2037              		.loc 1 1503 0
 2038 0400 0120     		movs	r0, #1
 2039 0402 60E6     		b	.L107
 2040              	.LVL128:
 2041              	.L141:
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2042              		.loc 1 1247 0
 2043 0404 0220     		movs	r0, #2
 2044              	.LVL129:
 2045 0406 5EE6     		b	.L107
 2046              		.cfi_endproc
 2047              	.LFE349:
 2049              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 2050              		.align	1
 2051              		.global	HAL_SPI_Receive
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2055              		.fpu fpv5-d16
 2057              	HAL_SPI_Receive:
 2058              	.LFB348:
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 2059              		.loc 1 997 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 0
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              	.LVL130:
 2064 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2065              	.LCFI15:
 2066              		.cfi_def_cfa_offset 28
 2067              		.cfi_offset 4, -28
 2068              		.cfi_offset 5, -24
 2069              		.cfi_offset 6, -20
ARM GAS  /tmp/ccOUtRG8.s 			page 109


 2070              		.cfi_offset 7, -16
 2071              		.cfi_offset 8, -12
 2072              		.cfi_offset 9, -8
 2073              		.cfi_offset 14, -4
 2074 0004 83B0     		sub	sp, sp, #12
 2075              	.LCFI16:
 2076              		.cfi_def_cfa_offset 40
 2077 0006 0446     		mov	r4, r0
 2078 0008 8946     		mov	r9, r1
 2079 000a 9046     		mov	r8, r2
 2080 000c 1D46     		mov	r5, r3
 2081              	.LVL131:
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 2082              		.loc 1 1001 0
 2083 000e 0768     		ldr	r7, [r0]
 2084              	.LVL132:
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2085              		.loc 1 1007 0
 2086 0010 4368     		ldr	r3, [r0, #4]
 2087              	.LVL133:
 2088 0012 B3F5800F 		cmp	r3, #4194304
 2089 0016 45D0     		beq	.L183
 2090              	.L150:
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2091              		.loc 1 1015 0
 2092 0018 94F88030 		ldrb	r3, [r4, #128]	@ zero_extendqisi2
 2093 001c 012B     		cmp	r3, #1
 2094 001e 00F03B81 		beq	.L179
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2095              		.loc 1 1015 0 is_stmt 0 discriminator 2
 2096 0022 0123     		movs	r3, #1
 2097 0024 84F88030 		strb	r3, [r4, #128]
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2098              		.loc 1 1018 0 is_stmt 1 discriminator 2
 2099 0028 FFF7FEFF 		bl	HAL_GetTick
 2100              	.LVL134:
 2101 002c 0646     		mov	r6, r0
 2102              	.LVL135:
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2103              		.loc 1 1020 0 discriminator 2
 2104 002e 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 2105 0032 DBB2     		uxtb	r3, r3
 2106 0034 012B     		cmp	r3, #1
 2107 0036 41D1     		bne	.L184
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2108              		.loc 1 1027 0
 2109 0038 B8FA88F3 		clz	r3, r8
 2110 003c 5B09     		lsrs	r3, r3, #5
 2111 003e B9F1000F 		cmp	r9, #0
 2112 0042 08BF     		it	eq
 2113 0044 0123     		moveq	r3, #1
 2114 0046 002B     		cmp	r3, #0
 2115 0048 3DD1     		bne	.L185
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2116              		.loc 1 1035 0
 2117 004a 0423     		movs	r3, #4
 2118 004c 84F88130 		strb	r3, [r4, #129]
ARM GAS  /tmp/ccOUtRG8.s 			page 110


1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2119              		.loc 1 1036 0
 2120 0050 0023     		movs	r3, #0
 2121 0052 C4F88430 		str	r3, [r4, #132]
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2122              		.loc 1 1037 0
 2123 0056 C4F86490 		str	r9, [r4, #100]
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2124              		.loc 1 1038 0
 2125 005a A4F86880 		strh	r8, [r4, #104]	@ movhi
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2126              		.loc 1 1039 0
 2127 005e A4F86A80 		strh	r8, [r4, #106]	@ movhi
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 2128              		.loc 1 1042 0
 2129 0062 E365     		str	r3, [r4, #92]
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 2130              		.loc 1 1043 0
 2131 0064 A4F86030 		strh	r3, [r4, #96]	@ movhi
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2132              		.loc 1 1044 0
 2133 0068 A4F86230 		strh	r3, [r4, #98]	@ movhi
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2134              		.loc 1 1045 0
 2135 006c 2367     		str	r3, [r4, #112]
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2136              		.loc 1 1046 0
 2137 006e 6367     		str	r3, [r4, #116]
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2138              		.loc 1 1049 0
 2139 0070 A368     		ldr	r3, [r4, #8]
 2140 0072 B3F5C02F 		cmp	r3, #393216
 2141 0076 2BD0     		beq	.L186
 2142              	.L154:
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2143              		.loc 1 1055 0
 2144 0078 2268     		ldr	r2, [r4]
 2145 007a 5168     		ldr	r1, [r2, #4]
 2146 007c 884B     		ldr	r3, .L189
 2147 007e 0B40     		ands	r3, r3, r1
 2148 0080 48EA0303 		orr	r3, r8, r3
 2149 0084 5360     		str	r3, [r2, #4]
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2150              		.loc 1 1058 0
 2151 0086 2268     		ldr	r2, [r4]
 2152 0088 1368     		ldr	r3, [r2]
 2153 008a 43F00103 		orr	r3, r3, #1
 2154 008e 1360     		str	r3, [r2]
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2155              		.loc 1 1060 0
 2156 0090 6368     		ldr	r3, [r4, #4]
 2157 0092 B3F5800F 		cmp	r3, #4194304
 2158 0096 21D0     		beq	.L187
 2159              	.L155:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2160              		.loc 1 1067 0
 2161 0098 E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccOUtRG8.s 			page 111


 2162 009a 0F2B     		cmp	r3, #15
 2163 009c 2DD8     		bhi	.L156
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2164              		.loc 1 1098 0
 2165 009e 072B     		cmp	r3, #7
 2166 00a0 60D8     		bhi	.L164
 2167 00a2 BFE0     		b	.L165
 2168              	.LVL136:
 2169              	.L183:
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2170              		.loc 1 1007 0 discriminator 1
 2171 00a4 8368     		ldr	r3, [r0, #8]
 2172 00a6 002B     		cmp	r3, #0
 2173 00a8 B6D1     		bne	.L150
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2174              		.loc 1 1009 0
 2175 00aa 0423     		movs	r3, #4
 2176 00ac 80F88130 		strb	r3, [r0, #129]
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2177              		.loc 1 1011 0
 2178 00b0 0095     		str	r5, [sp]
 2179 00b2 1346     		mov	r3, r2
 2180 00b4 0A46     		mov	r2, r1
 2181              	.LVL137:
 2182 00b6 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 2183              	.LVL138:
 2184 00ba EEE0     		b	.L151
 2185              	.LVL139:
 2186              	.L184:
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2187              		.loc 1 1023 0
 2188 00bc 0023     		movs	r3, #0
 2189 00be 84F88030 		strb	r3, [r4, #128]
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2190              		.loc 1 1024 0
 2191 00c2 0220     		movs	r0, #2
 2192              	.LVL140:
 2193 00c4 E9E0     		b	.L151
 2194              	.LVL141:
 2195              	.L185:
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2196              		.loc 1 1030 0
 2197 00c6 0023     		movs	r3, #0
 2198 00c8 84F88030 		strb	r3, [r4, #128]
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2199              		.loc 1 1031 0
 2200 00cc 0120     		movs	r0, #1
 2201              	.LVL142:
 2202 00ce E4E0     		b	.L151
 2203              	.LVL143:
 2204              	.L186:
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2205              		.loc 1 1051 0
 2206 00d0 2268     		ldr	r2, [r4]
 2207 00d2 1368     		ldr	r3, [r2]
 2208 00d4 23F40063 		bic	r3, r3, #2048
 2209 00d8 1360     		str	r3, [r2]
ARM GAS  /tmp/ccOUtRG8.s 			page 112


 2210 00da CDE7     		b	.L154
 2211              	.L187:
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2212              		.loc 1 1063 0
 2213 00dc 2268     		ldr	r2, [r4]
 2214 00de 1368     		ldr	r3, [r2]
 2215 00e0 43F40073 		orr	r3, r3, #512
 2216 00e4 1360     		str	r3, [r2]
 2217 00e6 D7E7     		b	.L155
 2218              	.LVL144:
 2219              	.L158:
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2220              		.loc 1 1082 0
 2221 00e8 FFF7FEFF 		bl	HAL_GetTick
 2222              	.LVL145:
 2223 00ec 801B     		subs	r0, r0, r6
 2224 00ee A842     		cmp	r0, r5
 2225 00f0 02D3     		bcc	.L160
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2226              		.loc 1 1082 0 is_stmt 0 discriminator 1
 2227 00f2 B5F1FF3F 		cmp	r5, #-1
 2228 00f6 19D1     		bne	.L161
 2229              	.L160:
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2230              		.loc 1 1082 0 discriminator 3
 2231 00f8 C5B1     		cbz	r5, .L161
 2232              	.L156:
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2233              		.loc 1 1070 0 is_stmt 1
 2234 00fa B4F86A30 		ldrh	r3, [r4, #106]
 2235 00fe 9BB2     		uxth	r3, r3
 2236 0100 002B     		cmp	r3, #0
 2237 0102 00F0B980 		beq	.L163
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2238              		.loc 1 1073 0
 2239 0106 2368     		ldr	r3, [r4]
 2240 0108 5969     		ldr	r1, [r3, #20]
 2241 010a 48F20802 		movw	r2, #32776
 2242 010e 1142     		tst	r1, r2
 2243 0110 EAD0     		beq	.L158
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 2244              		.loc 1 1075 0
 2245 0112 626E     		ldr	r2, [r4, #100]
 2246 0114 1B6B     		ldr	r3, [r3, #48]
 2247 0116 1360     		str	r3, [r2]
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 2248              		.loc 1 1076 0
 2249 0118 636E     		ldr	r3, [r4, #100]
 2250 011a 0433     		adds	r3, r3, #4
 2251 011c 6366     		str	r3, [r4, #100]
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2252              		.loc 1 1077 0
 2253 011e B4F86A30 		ldrh	r3, [r4, #106]
 2254 0122 013B     		subs	r3, r3, #1
 2255 0124 9BB2     		uxth	r3, r3
 2256 0126 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2257 012a E6E7     		b	.L156
ARM GAS  /tmp/ccOUtRG8.s 			page 113


 2258              	.L161:
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2259              		.loc 1 1085 0
 2260 012c 2046     		mov	r0, r4
 2261 012e FFF7FEFF 		bl	SPI_CloseTransfer
 2262              	.LVL146:
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2263              		.loc 1 1088 0
 2264 0132 0023     		movs	r3, #0
 2265 0134 84F88030 		strb	r3, [r4, #128]
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 2266              		.loc 1 1090 0
 2267 0138 D4F88430 		ldr	r3, [r4, #132]
 2268 013c 43F48073 		orr	r3, r3, #256
 2269 0140 C4F88430 		str	r3, [r4, #132]
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 2270              		.loc 1 1091 0
 2271 0144 0120     		movs	r0, #1
 2272 0146 84F88100 		strb	r0, [r4, #129]
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2273              		.loc 1 1092 0
 2274 014a A6E0     		b	.L151
 2275              	.L167:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 2276              		.loc 1 1115 0
 2277 014c 636E     		ldr	r3, [r4, #100]
 2278 014e 3A8E     		ldrh	r2, [r7, #48]
 2279 0150 1A80     		strh	r2, [r3]	@ movhi
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 2280              		.loc 1 1119 0
 2281 0152 636E     		ldr	r3, [r4, #100]
 2282 0154 0233     		adds	r3, r3, #2
 2283 0156 6366     		str	r3, [r4, #100]
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2284              		.loc 1 1120 0
 2285 0158 B4F86A30 		ldrh	r3, [r4, #106]
 2286 015c 013B     		subs	r3, r3, #1
 2287 015e 9BB2     		uxth	r3, r3
 2288 0160 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2289              	.L164:
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2290              		.loc 1 1101 0
 2291 0164 B4F86A30 		ldrh	r3, [r4, #106]
 2292 0168 9BB2     		uxth	r3, r3
 2293 016a 002B     		cmp	r3, #0
 2294 016c 00F08480 		beq	.L163
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2295              		.loc 1 1104 0
 2296 0170 2368     		ldr	r3, [r4]
 2297 0172 5A69     		ldr	r2, [r3, #20]
 2298 0174 12F4604F 		tst	r2, #57344
 2299 0178 10D0     		beq	.L166
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2300              		.loc 1 1106 0
 2301 017a 5A69     		ldr	r2, [r3, #20]
 2302 017c 12F4004F 		tst	r2, #32768
 2303 0180 E4D0     		beq	.L167
ARM GAS  /tmp/ccOUtRG8.s 			page 114


1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 2304              		.loc 1 1108 0
 2305 0182 626E     		ldr	r2, [r4, #100]
 2306 0184 1B6B     		ldr	r3, [r3, #48]
 2307 0186 1360     		str	r3, [r2]
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 2308              		.loc 1 1109 0
 2309 0188 636E     		ldr	r3, [r4, #100]
 2310 018a 0433     		adds	r3, r3, #4
 2311 018c 6366     		str	r3, [r4, #100]
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2312              		.loc 1 1110 0
 2313 018e B4F86A30 		ldrh	r3, [r4, #106]
 2314 0192 023B     		subs	r3, r3, #2
 2315 0194 9BB2     		uxth	r3, r3
 2316 0196 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2317 019a E3E7     		b	.L164
 2318              	.L166:
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2319              		.loc 1 1126 0
 2320 019c FFF7FEFF 		bl	HAL_GetTick
 2321              	.LVL147:
 2322 01a0 801B     		subs	r0, r0, r6
 2323 01a2 A842     		cmp	r0, r5
 2324 01a4 02D3     		bcc	.L169
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2325              		.loc 1 1126 0 is_stmt 0 discriminator 1
 2326 01a6 B5F1FF3F 		cmp	r5, #-1
 2327 01aa 01D1     		bne	.L170
 2328              	.L169:
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2329              		.loc 1 1126 0 discriminator 3
 2330 01ac 002D     		cmp	r5, #0
 2331 01ae D9D1     		bne	.L164
 2332              	.L170:
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2333              		.loc 1 1129 0 is_stmt 1
 2334 01b0 2046     		mov	r0, r4
 2335 01b2 FFF7FEFF 		bl	SPI_CloseTransfer
 2336              	.LVL148:
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2337              		.loc 1 1132 0
 2338 01b6 0023     		movs	r3, #0
 2339 01b8 84F88030 		strb	r3, [r4, #128]
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 2340              		.loc 1 1134 0
 2341 01bc D4F88430 		ldr	r3, [r4, #132]
 2342 01c0 43F48073 		orr	r3, r3, #256
 2343 01c4 C4F88430 		str	r3, [r4, #132]
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 2344              		.loc 1 1135 0
 2345 01c8 0120     		movs	r0, #1
 2346 01ca 84F88100 		strb	r0, [r4, #129]
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2347              		.loc 1 1136 0
 2348 01ce 64E0     		b	.L151
 2349              	.L173:
ARM GAS  /tmp/ccOUtRG8.s 			page 115


1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2350              		.loc 1 1156 0
 2351 01d0 5A69     		ldr	r2, [r3, #20]
 2352 01d2 02F4C042 		and	r2, r2, #24576
 2353 01d6 B2F5005F 		cmp	r2, #8192
 2354 01da 0CD9     		bls	.L175
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 2355              		.loc 1 1159 0
 2356 01dc 636E     		ldr	r3, [r4, #100]
 2357 01de 3A8E     		ldrh	r2, [r7, #48]
 2358 01e0 1A80     		strh	r2, [r3]	@ movhi
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)2UL;
 2359              		.loc 1 1163 0
 2360 01e2 636E     		ldr	r3, [r4, #100]
 2361 01e4 0233     		adds	r3, r3, #2
 2362 01e6 6366     		str	r3, [r4, #100]
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2363              		.loc 1 1164 0
 2364 01e8 B4F86A30 		ldrh	r3, [r4, #106]
 2365 01ec 023B     		subs	r3, r3, #2
 2366 01ee 9BB2     		uxth	r3, r3
 2367 01f0 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2368 01f4 16E0     		b	.L165
 2369              	.L175:
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
 2370              		.loc 1 1168 0
 2371 01f6 626E     		ldr	r2, [r4, #100]
 2372 01f8 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2373 01fc 1370     		strb	r3, [r2]
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount--;
 2374              		.loc 1 1169 0
 2375 01fe 636E     		ldr	r3, [r4, #100]
 2376 0200 0133     		adds	r3, r3, #1
 2377 0202 6366     		str	r3, [r4, #100]
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2378              		.loc 1 1170 0
 2379 0204 B4F86A30 		ldrh	r3, [r4, #106]
 2380 0208 013B     		subs	r3, r3, #1
 2381 020a 9BB2     		uxth	r3, r3
 2382 020c A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2383 0210 08E0     		b	.L165
 2384              	.L172:
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2385              		.loc 1 1176 0
 2386 0212 FFF7FEFF 		bl	HAL_GetTick
 2387              	.LVL149:
 2388 0216 801B     		subs	r0, r0, r6
 2389 0218 A842     		cmp	r0, r5
 2390 021a 02D3     		bcc	.L176
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2391              		.loc 1 1176 0 is_stmt 0 discriminator 1
 2392 021c B5F1FF3F 		cmp	r5, #-1
 2393 0220 1AD1     		bne	.L177
 2394              	.L176:
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2395              		.loc 1 1176 0 discriminator 3
 2396 0222 CDB1     		cbz	r5, .L177
ARM GAS  /tmp/ccOUtRG8.s 			page 116


 2397              	.L165:
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2398              		.loc 1 1145 0 is_stmt 1
 2399 0224 B4F86A30 		ldrh	r3, [r4, #106]
 2400 0228 9BB2     		uxth	r3, r3
 2401 022a 2BB3     		cbz	r3, .L163
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2402              		.loc 1 1148 0
 2403 022c 2368     		ldr	r3, [r4]
 2404 022e 5A69     		ldr	r2, [r3, #20]
 2405 0230 12F4604F 		tst	r2, #57344
 2406 0234 EDD0     		beq	.L172
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 2407              		.loc 1 1150 0
 2408 0236 5A69     		ldr	r2, [r3, #20]
 2409 0238 12F4004F 		tst	r2, #32768
 2410 023c C8D0     		beq	.L173
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 2411              		.loc 1 1152 0
 2412 023e 626E     		ldr	r2, [r4, #100]
 2413 0240 1B6B     		ldr	r3, [r3, #48]
 2414 0242 1360     		str	r3, [r2]
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->RxXferCount -= (uint16_t)4UL;
 2415              		.loc 1 1153 0
 2416 0244 636E     		ldr	r3, [r4, #100]
 2417 0246 0433     		adds	r3, r3, #4
 2418 0248 6366     		str	r3, [r4, #100]
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2419              		.loc 1 1154 0
 2420 024a B4F86A30 		ldrh	r3, [r4, #106]
 2421 024e 043B     		subs	r3, r3, #4
 2422 0250 9BB2     		uxth	r3, r3
 2423 0252 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 2424 0256 E5E7     		b	.L165
 2425              	.L177:
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2426              		.loc 1 1179 0
 2427 0258 2046     		mov	r0, r4
 2428 025a FFF7FEFF 		bl	SPI_CloseTransfer
 2429              	.LVL150:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2430              		.loc 1 1182 0
 2431 025e 0023     		movs	r3, #0
 2432 0260 84F88030 		strb	r3, [r4, #128]
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 2433              		.loc 1 1184 0
 2434 0264 D4F88430 		ldr	r3, [r4, #132]
 2435 0268 43F48073 		orr	r3, r3, #256
 2436 026c C4F88430 		str	r3, [r4, #132]
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_ERROR;
 2437              		.loc 1 1185 0
 2438 0270 0120     		movs	r0, #1
 2439 0272 84F88100 		strb	r0, [r4, #129]
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 2440              		.loc 1 1186 0
 2441 0276 10E0     		b	.L151
 2442              	.L163:
ARM GAS  /tmp/ccOUtRG8.s 			page 117


1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2443              		.loc 1 1204 0
 2444 0278 2046     		mov	r0, r4
 2445 027a FFF7FEFF 		bl	SPI_CloseTransfer
 2446              	.LVL151:
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2447              		.loc 1 1207 0
 2448 027e 0023     		movs	r3, #0
 2449 0280 84F88030 		strb	r3, [r4, #128]
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2450              		.loc 1 1209 0
 2451 0284 0123     		movs	r3, #1
 2452 0286 84F88130 		strb	r3, [r4, #129]
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2453              		.loc 1 1211 0
 2454 028a D4F88430 		ldr	r3, [r4, #132]
 2455 028e 0BB9     		cbnz	r3, .L188
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2456              		.loc 1 1215 0
 2457 0290 0020     		movs	r0, #0
 2458 0292 02E0     		b	.L151
 2459              	.L188:
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2460              		.loc 1 1213 0
 2461 0294 0120     		movs	r0, #1
 2462 0296 00E0     		b	.L151
 2463              	.LVL152:
 2464              	.L179:
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2465              		.loc 1 1015 0
 2466 0298 0220     		movs	r0, #2
 2467              	.LVL153:
 2468              	.L151:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2469              		.loc 1 1216 0
 2470 029a 03B0     		add	sp, sp, #12
 2471              	.LCFI17:
 2472              		.cfi_def_cfa_offset 28
 2473              		@ sp needed
 2474 029c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2475              	.LVL154:
 2476              	.L190:
 2477              		.align	2
 2478              	.L189:
 2479 02a0 0000FFFF 		.word	-65536
 2480              		.cfi_endproc
 2481              	.LFE348:
 2483              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2484              		.align	1
 2485              		.global	HAL_SPI_Transmit_IT
 2486              		.syntax unified
 2487              		.thumb
 2488              		.thumb_func
 2489              		.fpu fpv5-d16
 2491              	HAL_SPI_Transmit_IT:
 2492              	.LFB350:
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
ARM GAS  /tmp/ccOUtRG8.s 			page 118


 2493              		.loc 1 1517 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498              	.LVL155:
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2499              		.loc 1 1524 0
 2500 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 2501 0004 012B     		cmp	r3, #1
 2502 0006 64D0     		beq	.L200
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2503              		.loc 1 1524 0 is_stmt 0 discriminator 2
 2504 0008 0123     		movs	r3, #1
 2505 000a 80F88030 		strb	r3, [r0, #128]
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2506              		.loc 1 1526 0 is_stmt 1 discriminator 2
 2507 000e B2FA82F3 		clz	r3, r2
 2508 0012 5B09     		lsrs	r3, r3, #5
 2509 0014 0029     		cmp	r1, #0
 2510 0016 08BF     		it	eq
 2511 0018 0123     		moveq	r3, #1
 2512 001a 002B     		cmp	r3, #0
 2513 001c 3BD1     		bne	.L204
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2514              		.loc 1 1533 0
 2515 001e 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 2516 0022 DBB2     		uxtb	r3, r3
 2517 0024 012B     		cmp	r3, #1
 2518 0026 3BD1     		bne	.L205
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2519              		.loc 1 1517 0
 2520 0028 10B4     		push	{r4}
 2521              	.LCFI18:
 2522              		.cfi_def_cfa_offset 4
 2523              		.cfi_offset 4, -4
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2524              		.loc 1 1541 0
 2525 002a 0323     		movs	r3, #3
 2526 002c 80F88130 		strb	r3, [r0, #129]
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2527              		.loc 1 1542 0
 2528 0030 0023     		movs	r3, #0
 2529 0032 C0F88430 		str	r3, [r0, #132]
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2530              		.loc 1 1543 0
 2531 0036 C165     		str	r1, [r0, #92]
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2532              		.loc 1 1544 0
 2533 0038 A0F86020 		strh	r2, [r0, #96]	@ movhi
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2534              		.loc 1 1545 0
 2535 003c A0F86220 		strh	r2, [r0, #98]	@ movhi
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 2536              		.loc 1 1548 0
 2537 0040 4366     		str	r3, [r0, #100]
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
ARM GAS  /tmp/ccOUtRG8.s 			page 119


 2538              		.loc 1 1549 0
 2539 0042 A0F86830 		strh	r3, [r0, #104]	@ movhi
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2540              		.loc 1 1550 0
 2541 0046 A0F86A30 		strh	r3, [r0, #106]	@ movhi
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2542              		.loc 1 1551 0
 2543 004a 0367     		str	r3, [r0, #112]
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2544              		.loc 1 1554 0
 2545 004c C368     		ldr	r3, [r0, #12]
 2546 004e 0F2B     		cmp	r3, #15
 2547 0050 2BD9     		bls	.L195
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2548              		.loc 1 1556 0
 2549 0052 214B     		ldr	r3, .L208
 2550 0054 4367     		str	r3, [r0, #116]
 2551              	.L196:
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2552              		.loc 1 1568 0
 2553 0056 8368     		ldr	r3, [r0, #8]
 2554 0058 B3F5C02F 		cmp	r3, #393216
 2555 005c 2DD0     		beq	.L206
 2556              	.LVL156:
 2557              	.L198:
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2558              		.loc 1 1574 0
 2559 005e 0168     		ldr	r1, [r0]
 2560 0060 4C68     		ldr	r4, [r1, #4]
 2561 0062 1E4B     		ldr	r3, .L208+4
 2562 0064 2340     		ands	r3, r3, r4
 2563 0066 1A43     		orrs	r2, r2, r3
 2564              	.LVL157:
 2565 0068 4A60     		str	r2, [r1, #4]
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2566              		.loc 1 1577 0
 2567 006a 0268     		ldr	r2, [r0]
 2568 006c 1368     		ldr	r3, [r2]
 2569 006e 43F00103 		orr	r3, r3, #1
 2570 0072 1360     		str	r3, [r2]
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2571              		.loc 1 1580 0
 2572 0074 0268     		ldr	r2, [r0]
 2573 0076 1169     		ldr	r1, [r2, #16]
 2574 0078 40F22A73 		movw	r3, #1834
 2575 007c 0B43     		orrs	r3, r3, r1
 2576 007e 1361     		str	r3, [r2, #16]
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2577              		.loc 1 1582 0
 2578 0080 4368     		ldr	r3, [r0, #4]
 2579 0082 B3F5800F 		cmp	r3, #4194304
 2580 0086 1ED0     		beq	.L207
 2581              	.L199:
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2582              		.loc 1 1588 0
 2583 0088 0023     		movs	r3, #0
 2584 008a 80F88030 		strb	r3, [r0, #128]
ARM GAS  /tmp/ccOUtRG8.s 			page 120


1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2585              		.loc 1 1589 0
 2586 008e 1846     		mov	r0, r3
 2587              	.LVL158:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2588              		.loc 1 1590 0
 2589 0090 5DF8044B 		ldr	r4, [sp], #4
 2590              	.LCFI19:
 2591              		.cfi_restore 4
 2592              		.cfi_def_cfa_offset 0
 2593 0094 7047     		bx	lr
 2594              	.LVL159:
 2595              	.L204:
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2596              		.loc 1 1529 0
 2597 0096 0023     		movs	r3, #0
 2598 0098 80F88030 		strb	r3, [r0, #128]
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2599              		.loc 1 1530 0
 2600 009c 0120     		movs	r0, #1
 2601              	.LVL160:
 2602 009e 7047     		bx	lr
 2603              	.LVL161:
 2604              	.L205:
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2605              		.loc 1 1536 0
 2606 00a0 0023     		movs	r3, #0
 2607 00a2 80F88030 		strb	r3, [r0, #128]
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2608              		.loc 1 1537 0
 2609 00a6 0220     		movs	r0, #2
 2610              	.LVL162:
 2611 00a8 7047     		bx	lr
 2612              	.LVL163:
 2613              	.L195:
 2614              	.LCFI20:
 2615              		.cfi_def_cfa_offset 4
 2616              		.cfi_offset 4, -4
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2617              		.loc 1 1558 0
 2618 00aa 072B     		cmp	r3, #7
 2619 00ac 02D9     		bls	.L197
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2620              		.loc 1 1560 0
 2621 00ae 0C4B     		ldr	r3, .L208+8
 2622 00b0 4367     		str	r3, [r0, #116]
 2623 00b2 D0E7     		b	.L196
 2624              	.L197:
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2625              		.loc 1 1564 0
 2626 00b4 0B4B     		ldr	r3, .L208+12
 2627 00b6 4367     		str	r3, [r0, #116]
 2628 00b8 CDE7     		b	.L196
 2629              	.L206:
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2630              		.loc 1 1570 0
 2631 00ba 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccOUtRG8.s 			page 121


 2632              	.LVL164:
 2633 00bc 0B68     		ldr	r3, [r1]
 2634 00be 43F40063 		orr	r3, r3, #2048
 2635 00c2 0B60     		str	r3, [r1]
 2636              	.LVL165:
 2637 00c4 CBE7     		b	.L198
 2638              	.LVL166:
 2639              	.L207:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2640              		.loc 1 1585 0
 2641 00c6 0268     		ldr	r2, [r0]
 2642 00c8 1368     		ldr	r3, [r2]
 2643 00ca 43F40073 		orr	r3, r3, #512
 2644 00ce 1360     		str	r3, [r2]
 2645 00d0 DAE7     		b	.L199
 2646              	.LVL167:
 2647              	.L200:
 2648              	.LCFI21:
 2649              		.cfi_def_cfa_offset 0
 2650              		.cfi_restore 4
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2651              		.loc 1 1524 0
 2652 00d2 0220     		movs	r0, #2
 2653              	.LVL168:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2654              		.loc 1 1590 0
 2655 00d4 7047     		bx	lr
 2656              	.L209:
 2657 00d6 00BF     		.align	2
 2658              	.L208:
 2659 00d8 00000000 		.word	SPI_TxISR_32BIT
 2660 00dc 0000FFFF 		.word	-65536
 2661 00e0 00000000 		.word	SPI_TxISR_16BIT
 2662 00e4 00000000 		.word	SPI_TxISR_8BIT
 2663              		.cfi_endproc
 2664              	.LFE350:
 2666              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2667              		.align	1
 2668              		.global	HAL_SPI_TransmitReceive_IT
 2669              		.syntax unified
 2670              		.thumb
 2671              		.thumb_func
 2672              		.fpu fpv5-d16
 2674              	HAL_SPI_TransmitReceive_IT:
 2675              	.LFB352:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
 2676              		.loc 1 1698 0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 0
 2679              		@ frame_needed = 0, uses_anonymous_args = 0
 2680              		@ link register save eliminated.
 2681              	.LVL169:
 2682 0000 30B4     		push	{r4, r5}
 2683              	.LCFI22:
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 4, -8
 2686              		.cfi_offset 5, -4
ARM GAS  /tmp/ccOUtRG8.s 			page 122


 2687              	.LVL170:
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2688              		.loc 1 1708 0
 2689 0002 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 2690 0006 012C     		cmp	r4, #1
 2691 0008 6DD0     		beq	.L221
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2692              		.loc 1 1708 0 is_stmt 0 discriminator 2
 2693 000a 0124     		movs	r4, #1
 2694 000c 80F88040 		strb	r4, [r0, #128]
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode   = hspi->Init.Mode;
 2695              		.loc 1 1711 0 is_stmt 1 discriminator 2
 2696 0010 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 2697 0014 E4B2     		uxtb	r4, r4
 2698              	.LVL171:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2699              		.loc 1 1712 0 discriminator 2
 2700 0016 4568     		ldr	r5, [r0, #4]
 2701              	.LVL172:
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2702              		.loc 1 1714 0 discriminator 2
 2703 0018 012C     		cmp	r4, #1
 2704 001a 07D0     		beq	.L212
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2705              		.loc 1 1714 0 is_stmt 0 discriminator 1
 2706 001c B5F5800F 		cmp	r5, #4194304
 2707 0020 44D1     		bne	.L213
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2708              		.loc 1 1715 0 is_stmt 1
 2709 0022 8568     		ldr	r5, [r0, #8]
 2710              	.LVL173:
 2711 0024 002D     		cmp	r5, #0
 2712 0026 41D1     		bne	.L213
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2713              		.loc 1 1715 0 is_stmt 0 discriminator 1
 2714 0028 042C     		cmp	r4, #4
 2715 002a 3FD1     		bne	.L213
 2716              	.L212:
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2717              		.loc 1 1722 0 is_stmt 1
 2718 002c B2FA82F4 		clz	r4, r2
 2719              	.LVL174:
 2720 0030 6409     		lsrs	r4, r4, #5
 2721 0032 0029     		cmp	r1, #0
 2722 0034 08BF     		it	eq
 2723 0036 0124     		moveq	r4, #1
 2724 0038 002C     		cmp	r4, #0
 2725 003a 3DD1     		bne	.L214
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2726              		.loc 1 1722 0 is_stmt 0 discriminator 1
 2727 003c 002B     		cmp	r3, #0
 2728 003e 3BD0     		beq	.L214
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2729              		.loc 1 1730 0 is_stmt 1
 2730 0040 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 2731 0044 E4B2     		uxtb	r4, r4
 2732 0046 042C     		cmp	r4, #4
ARM GAS  /tmp/ccOUtRG8.s 			page 123


 2733 0048 02D0     		beq	.L216
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2734              		.loc 1 1732 0
 2735 004a 0524     		movs	r4, #5
 2736 004c 80F88140 		strb	r4, [r0, #129]
 2737              	.L216:
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2738              		.loc 1 1736 0
 2739 0050 0024     		movs	r4, #0
 2740 0052 C0F88440 		str	r4, [r0, #132]
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2741              		.loc 1 1737 0
 2742 0056 C165     		str	r1, [r0, #92]
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2743              		.loc 1 1738 0
 2744 0058 A0F86030 		strh	r3, [r0, #96]	@ movhi
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2745              		.loc 1 1739 0
 2746 005c A0F86230 		strh	r3, [r0, #98]	@ movhi
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2747              		.loc 1 1740 0
 2748 0060 4266     		str	r2, [r0, #100]
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2749              		.loc 1 1741 0
 2750 0062 A0F86830 		strh	r3, [r0, #104]	@ movhi
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2751              		.loc 1 1742 0
 2752 0066 A0F86A30 		strh	r3, [r0, #106]	@ movhi
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2753              		.loc 1 1745 0
 2754 006a C268     		ldr	r2, [r0, #12]
 2755              	.LVL175:
 2756 006c 0F2A     		cmp	r2, #15
 2757 006e 28D9     		bls	.L217
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_32BIT;
 2758              		.loc 1 1747 0
 2759 0070 1E4A     		ldr	r2, .L224
 2760 0072 4267     		str	r2, [r0, #116]
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2761              		.loc 1 1748 0
 2762 0074 1E4A     		ldr	r2, .L224+4
 2763 0076 0267     		str	r2, [r0, #112]
 2764              	.L218:
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2765              		.loc 1 1762 0
 2766 0078 0168     		ldr	r1, [r0]
 2767              	.LVL176:
 2768 007a 4C68     		ldr	r4, [r1, #4]
 2769 007c 1D4A     		ldr	r2, .L224+8
 2770 007e 2240     		ands	r2, r2, r4
 2771 0080 1343     		orrs	r3, r3, r2
 2772              	.LVL177:
 2773 0082 4B60     		str	r3, [r1, #4]
 2774              	.LVL178:
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2775              		.loc 1 1765 0
 2776 0084 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccOUtRG8.s 			page 124


 2777 0086 1368     		ldr	r3, [r2]
 2778 0088 43F00103 		orr	r3, r3, #1
 2779 008c 1360     		str	r3, [r2]
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2780              		.loc 1 1768 0
 2781 008e 0268     		ldr	r2, [r0]
 2782 0090 1169     		ldr	r1, [r2, #16]
 2783 0092 40F26F73 		movw	r3, #1903
 2784 0096 0B43     		orrs	r3, r3, r1
 2785 0098 1361     		str	r3, [r2, #16]
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2786              		.loc 1 1770 0
 2787 009a 4368     		ldr	r3, [r0, #4]
 2788 009c B3F5800F 		cmp	r3, #4194304
 2789 00a0 1BD0     		beq	.L223
 2790              	.L220:
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2791              		.loc 1 1777 0
 2792 00a2 0023     		movs	r3, #0
 2793 00a4 80F88030 		strb	r3, [r0, #128]
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2794              		.loc 1 1778 0
 2795 00a8 1846     		mov	r0, r3
 2796              	.LVL179:
 2797 00aa 03E0     		b	.L211
 2798              	.LVL180:
 2799              	.L213:
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2800              		.loc 1 1718 0
 2801 00ac 0023     		movs	r3, #0
 2802              	.LVL181:
 2803 00ae 80F88030 		strb	r3, [r0, #128]
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2804              		.loc 1 1719 0
 2805 00b2 0220     		movs	r0, #2
 2806              	.LVL182:
 2807              	.L211:
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2808              		.loc 1 1779 0
 2809 00b4 30BC     		pop	{r4, r5}
 2810              	.LCFI23:
 2811              		.cfi_remember_state
 2812              		.cfi_restore 5
 2813              		.cfi_restore 4
 2814              		.cfi_def_cfa_offset 0
 2815 00b6 7047     		bx	lr
 2816              	.LVL183:
 2817              	.L214:
 2818              	.LCFI24:
 2819              		.cfi_restore_state
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2820              		.loc 1 1725 0
 2821 00b8 0023     		movs	r3, #0
 2822              	.LVL184:
 2823 00ba 80F88030 		strb	r3, [r0, #128]
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2824              		.loc 1 1726 0
ARM GAS  /tmp/ccOUtRG8.s 			page 125


 2825 00be 0120     		movs	r0, #1
 2826              	.LVL185:
 2827 00c0 F8E7     		b	.L211
 2828              	.LVL186:
 2829              	.L217:
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2830              		.loc 1 1750 0
 2831 00c2 072A     		cmp	r2, #7
 2832 00c4 04D9     		bls	.L219
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_16BIT;
 2833              		.loc 1 1752 0
 2834 00c6 0C4A     		ldr	r2, .L224+12
 2835 00c8 0267     		str	r2, [r0, #112]
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2836              		.loc 1 1753 0
 2837 00ca 0C4A     		ldr	r2, .L224+16
 2838 00cc 4267     		str	r2, [r0, #116]
 2839 00ce D3E7     		b	.L218
 2840              	.L219:
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_8BIT;
 2841              		.loc 1 1757 0
 2842 00d0 0B4A     		ldr	r2, .L224+20
 2843 00d2 0267     		str	r2, [r0, #112]
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2844              		.loc 1 1758 0
 2845 00d4 0B4A     		ldr	r2, .L224+24
 2846 00d6 4267     		str	r2, [r0, #116]
 2847 00d8 CEE7     		b	.L218
 2848              	.LVL187:
 2849              	.L223:
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2850              		.loc 1 1773 0
 2851 00da 0268     		ldr	r2, [r0]
 2852 00dc 1368     		ldr	r3, [r2]
 2853 00de 43F40073 		orr	r3, r3, #512
 2854 00e2 1360     		str	r3, [r2]
 2855 00e4 DDE7     		b	.L220
 2856              	.LVL188:
 2857              	.L221:
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2858              		.loc 1 1708 0
 2859 00e6 0220     		movs	r0, #2
 2860              	.LVL189:
 2861 00e8 E4E7     		b	.L211
 2862              	.L225:
 2863 00ea 00BF     		.align	2
 2864              	.L224:
 2865 00ec 00000000 		.word	SPI_TxISR_32BIT
 2866 00f0 00000000 		.word	SPI_RxISR_32BIT
 2867 00f4 0000FFFF 		.word	-65536
 2868 00f8 00000000 		.word	SPI_RxISR_16BIT
 2869 00fc 00000000 		.word	SPI_TxISR_16BIT
 2870 0100 00000000 		.word	SPI_RxISR_8BIT
 2871 0104 00000000 		.word	SPI_TxISR_8BIT
 2872              		.cfi_endproc
 2873              	.LFE352:
 2875              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
ARM GAS  /tmp/ccOUtRG8.s 			page 126


 2876              		.align	1
 2877              		.global	HAL_SPI_Receive_IT
 2878              		.syntax unified
 2879              		.thumb
 2880              		.thumb_func
 2881              		.fpu fpv5-d16
 2883              	HAL_SPI_Receive_IT:
 2884              	.LFB351:
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2885              		.loc 1 1601 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              	.LVL190:
 2890 0000 38B5     		push	{r3, r4, r5, lr}
 2891              	.LCFI25:
 2892              		.cfi_def_cfa_offset 16
 2893              		.cfi_offset 3, -16
 2894              		.cfi_offset 4, -12
 2895              		.cfi_offset 5, -8
 2896              		.cfi_offset 14, -4
 2897              	.LVL191:
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2898              		.loc 1 1607 0
 2899 0002 8568     		ldr	r5, [r0, #8]
 2900 0004 1DB9     		cbnz	r5, .L227
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2901              		.loc 1 1607 0 is_stmt 0 discriminator 1
 2902 0006 4368     		ldr	r3, [r0, #4]
 2903 0008 B3F5800F 		cmp	r3, #4194304
 2904 000c 46D0     		beq	.L238
 2905              	.L227:
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2906              		.loc 1 1615 0 is_stmt 1
 2907 000e 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 2908 0012 012B     		cmp	r3, #1
 2909 0014 68D0     		beq	.L236
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2910              		.loc 1 1615 0 is_stmt 0 discriminator 2
 2911 0016 0123     		movs	r3, #1
 2912 0018 80F88030 		strb	r3, [r0, #128]
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2913              		.loc 1 1617 0 is_stmt 1 discriminator 2
 2914 001c 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 2915 0020 E4B2     		uxtb	r4, r4
 2916 0022 9C42     		cmp	r4, r3
 2917 0024 42D1     		bne	.L239
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2918              		.loc 1 1624 0
 2919 0026 B2FA82F3 		clz	r3, r2
 2920 002a 5B09     		lsrs	r3, r3, #5
 2921 002c 0029     		cmp	r1, #0
 2922 002e 08BF     		it	eq
 2923 0030 0123     		moveq	r3, #1
 2924 0032 002B     		cmp	r3, #0
 2925 0034 3FD1     		bne	.L240
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccOUtRG8.s 			page 127


 2926              		.loc 1 1632 0
 2927 0036 0423     		movs	r3, #4
 2928 0038 80F88130 		strb	r3, [r0, #129]
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2929              		.loc 1 1633 0
 2930 003c 0023     		movs	r3, #0
 2931 003e C0F88430 		str	r3, [r0, #132]
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2932              		.loc 1 1634 0
 2933 0042 4166     		str	r1, [r0, #100]
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2934              		.loc 1 1635 0
 2935 0044 A0F86820 		strh	r2, [r0, #104]	@ movhi
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2936              		.loc 1 1636 0
 2937 0048 A0F86A20 		strh	r2, [r0, #106]	@ movhi
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 2938              		.loc 1 1639 0
 2939 004c C365     		str	r3, [r0, #92]
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 2940              		.loc 1 1640 0
 2941 004e A0F86030 		strh	r3, [r0, #96]	@ movhi
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2942              		.loc 1 1641 0
 2943 0052 A0F86230 		strh	r3, [r0, #98]	@ movhi
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2944              		.loc 1 1642 0
 2945 0056 4367     		str	r3, [r0, #116]
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2946              		.loc 1 1645 0
 2947 0058 C368     		ldr	r3, [r0, #12]
 2948 005a 0F2B     		cmp	r3, #15
 2949 005c 30D9     		bls	.L231
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2950              		.loc 1 1647 0
 2951 005e 234B     		ldr	r3, .L243
 2952 0060 0367     		str	r3, [r0, #112]
 2953              	.L232:
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2954              		.loc 1 1659 0
 2955 0062 B5F5C02F 		cmp	r5, #393216
 2956 0066 33D0     		beq	.L241
 2957              	.LVL192:
 2958              	.L234:
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2959              		.loc 1 1669 0
 2960 0068 0168     		ldr	r1, [r0]
 2961 006a 4C68     		ldr	r4, [r1, #4]
 2962 006c 204B     		ldr	r3, .L243+4
 2963 006e 2340     		ands	r3, r3, r4
 2964 0070 1A43     		orrs	r2, r2, r3
 2965              	.LVL193:
 2966 0072 4A60     		str	r2, [r1, #4]
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2967              		.loc 1 1672 0
 2968 0074 0268     		ldr	r2, [r0]
 2969 0076 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccOUtRG8.s 			page 128


 2970 0078 43F00103 		orr	r3, r3, #1
 2971 007c 1360     		str	r3, [r2]
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2972              		.loc 1 1675 0
 2973 007e 0268     		ldr	r2, [r0]
 2974 0080 1169     		ldr	r1, [r2, #16]
 2975 0082 40F24973 		movw	r3, #1865
 2976 0086 0B43     		orrs	r3, r3, r1
 2977 0088 1361     		str	r3, [r2, #16]
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2978              		.loc 1 1677 0
 2979 008a 4368     		ldr	r3, [r0, #4]
 2980 008c B3F5800F 		cmp	r3, #4194304
 2981 0090 24D0     		beq	.L242
 2982              	.L235:
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2983              		.loc 1 1684 0
 2984 0092 0023     		movs	r3, #0
 2985 0094 80F88030 		strb	r3, [r0, #128]
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2986              		.loc 1 1685 0
 2987 0098 1846     		mov	r0, r3
 2988              	.LVL194:
 2989 009a 0BE0     		b	.L228
 2990              	.LVL195:
 2991              	.L238:
 2992 009c 1346     		mov	r3, r2
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2993              		.loc 1 1609 0
 2994 009e 0422     		movs	r2, #4
 2995              	.LVL196:
 2996 00a0 80F88120 		strb	r2, [r0, #129]
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2997              		.loc 1 1611 0
 2998 00a4 0A46     		mov	r2, r1
 2999 00a6 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 3000              	.LVL197:
 3001 00aa 03E0     		b	.L228
 3002              	.LVL198:
 3003              	.L239:
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3004              		.loc 1 1620 0
 3005 00ac 0023     		movs	r3, #0
 3006 00ae 80F88030 		strb	r3, [r0, #128]
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3007              		.loc 1 1621 0
 3008 00b2 0220     		movs	r0, #2
 3009              	.LVL199:
 3010              	.L228:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3011              		.loc 1 1686 0
 3012 00b4 38BD     		pop	{r3, r4, r5, pc}
 3013              	.LVL200:
 3014              	.L240:
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3015              		.loc 1 1627 0
 3016 00b6 0023     		movs	r3, #0
ARM GAS  /tmp/ccOUtRG8.s 			page 129


 3017 00b8 80F88030 		strb	r3, [r0, #128]
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3018              		.loc 1 1628 0
 3019 00bc 0120     		movs	r0, #1
 3020              	.LVL201:
 3021 00be F9E7     		b	.L228
 3022              	.LVL202:
 3023              	.L231:
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3024              		.loc 1 1649 0
 3025 00c0 072B     		cmp	r3, #7
 3026 00c2 02D9     		bls	.L233
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3027              		.loc 1 1651 0
 3028 00c4 0B4B     		ldr	r3, .L243+8
 3029 00c6 0367     		str	r3, [r0, #112]
 3030 00c8 CBE7     		b	.L232
 3031              	.L233:
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3032              		.loc 1 1655 0
 3033 00ca 0B4B     		ldr	r3, .L243+12
 3034 00cc 0367     		str	r3, [r0, #112]
 3035 00ce C8E7     		b	.L232
 3036              	.L241:
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3037              		.loc 1 1661 0
 3038 00d0 0168     		ldr	r1, [r0]
 3039              	.LVL203:
 3040 00d2 0B68     		ldr	r3, [r1]
 3041 00d4 23F40063 		bic	r3, r3, #2048
 3042 00d8 0B60     		str	r3, [r1]
 3043              	.LVL204:
 3044 00da C5E7     		b	.L234
 3045              	.LVL205:
 3046              	.L242:
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3047              		.loc 1 1680 0
 3048 00dc 0268     		ldr	r2, [r0]
 3049 00de 1368     		ldr	r3, [r2]
 3050 00e0 43F40073 		orr	r3, r3, #512
 3051 00e4 1360     		str	r3, [r2]
 3052 00e6 D4E7     		b	.L235
 3053              	.LVL206:
 3054              	.L236:
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3055              		.loc 1 1615 0
 3056 00e8 0220     		movs	r0, #2
 3057              	.LVL207:
 3058 00ea E3E7     		b	.L228
 3059              	.L244:
 3060              		.align	2
 3061              	.L243:
 3062 00ec 00000000 		.word	SPI_RxISR_32BIT
 3063 00f0 0000FFFF 		.word	-65536
 3064 00f4 00000000 		.word	SPI_RxISR_16BIT
 3065 00f8 00000000 		.word	SPI_RxISR_8BIT
 3066              		.cfi_endproc
ARM GAS  /tmp/ccOUtRG8.s 			page 130


 3067              	.LFE351:
 3069              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 3070              		.align	1
 3071              		.global	HAL_SPI_Transmit_DMA
 3072              		.syntax unified
 3073              		.thumb
 3074              		.thumb_func
 3075              		.fpu fpv5-d16
 3077              	HAL_SPI_Transmit_DMA:
 3078              	.LFB353:
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3079              		.loc 1 1991 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 0
 3082              		@ frame_needed = 0, uses_anonymous_args = 0
 3083              	.LVL208:
 3084 0000 38B5     		push	{r3, r4, r5, lr}
 3085              	.LCFI26:
 3086              		.cfi_def_cfa_offset 16
 3087              		.cfi_offset 3, -16
 3088              		.cfi_offset 4, -12
 3089              		.cfi_offset 5, -8
 3090              		.cfi_offset 14, -4
 3091              	.LVL209:
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3092              		.loc 1 1998 0
 3093 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 3094 0006 012B     		cmp	r3, #1
 3095 0008 00F0CA80 		beq	.L260
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3096              		.loc 1 1998 0 is_stmt 0 discriminator 2
 3097 000c 0123     		movs	r3, #1
 3098 000e 80F88030 		strb	r3, [r0, #128]
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3099              		.loc 1 2000 0 is_stmt 1 discriminator 2
 3100 0012 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 3101 0016 DBB2     		uxtb	r3, r3
 3102 0018 012B     		cmp	r3, #1
 3103 001a 29D1     		bne	.L262
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3104              		.loc 1 2007 0
 3105 001c B2FA82F3 		clz	r3, r2
 3106 0020 5B09     		lsrs	r3, r3, #5
 3107 0022 0029     		cmp	r1, #0
 3108 0024 08BF     		it	eq
 3109 0026 0123     		moveq	r3, #1
 3110 0028 43BB     		cbnz	r3, .L263
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3111              		.loc 1 2015 0
 3112 002a 0323     		movs	r3, #3
 3113 002c 80F88130 		strb	r3, [r0, #129]
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 3114              		.loc 1 2016 0
 3115 0030 0023     		movs	r3, #0
 3116 0032 C0F88430 		str	r3, [r0, #132]
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3117              		.loc 1 2017 0
ARM GAS  /tmp/ccOUtRG8.s 			page 131


 3118 0036 C165     		str	r1, [r0, #92]
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3119              		.loc 1 2018 0
 3120 0038 A0F86020 		strh	r2, [r0, #96]	@ movhi
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3121              		.loc 1 2019 0
 3122 003c A0F86220 		strh	r2, [r0, #98]	@ movhi
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3123              		.loc 1 2022 0
 3124 0040 4366     		str	r3, [r0, #100]
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3125              		.loc 1 2023 0
 3126 0042 4367     		str	r3, [r0, #116]
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t)0UL;
 3127              		.loc 1 2024 0
 3128 0044 0367     		str	r3, [r0, #112]
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 3129              		.loc 1 2025 0
 3130 0046 A0F86830 		strh	r3, [r0, #104]	@ movhi
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3131              		.loc 1 2026 0
 3132 004a A0F86A30 		strh	r3, [r0, #106]	@ movhi
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3133              		.loc 1 2029 0
 3134 004e 8368     		ldr	r3, [r0, #8]
 3135 0050 B3F5C02F 		cmp	r3, #393216
 3136 0054 17D0     		beq	.L264
 3137              	.LVL210:
 3138              	.L249:
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3139              		.loc 1 2035 0
 3140 0056 C368     		ldr	r3, [r0, #12]
 3141 0058 0F2B     		cmp	r3, #15
 3142 005a 1AD9     		bls	.L250
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3143              		.loc 1 2035 0 is_stmt 0 discriminator 1
 3144 005c 816F     		ldr	r1, [r0, #120]
 3145 005e 8969     		ldr	r1, [r1, #24]
 3146 0060 B1F5804F 		cmp	r1, #16384
 3147 0064 15D0     		beq	.L250
 3148              	.L251:
 3149              	.LVL211:
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3150              		.loc 1 2041 0 is_stmt 1
 3151 0066 0023     		movs	r3, #0
 3152 0068 80F88030 		strb	r3, [r0, #128]
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3153              		.loc 1 2042 0
 3154 006c 0123     		movs	r3, #1
 3155 006e 03E0     		b	.L246
 3156              	.LVL212:
 3157              	.L262:
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3158              		.loc 1 2003 0
 3159 0070 0023     		movs	r3, #0
 3160 0072 80F88030 		strb	r3, [r0, #128]
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccOUtRG8.s 			page 132


 3161              		.loc 1 2004 0
 3162 0076 0223     		movs	r3, #2
 3163              	.LVL213:
 3164              	.L246:
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3165              		.loc 1 2122 0
 3166 0078 1846     		mov	r0, r3
 3167 007a 38BD     		pop	{r3, r4, r5, pc}
 3168              	.LVL214:
 3169              	.L263:
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3170              		.loc 1 2010 0
 3171 007c 0023     		movs	r3, #0
 3172 007e 80F88030 		strb	r3, [r0, #128]
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3173              		.loc 1 2011 0
 3174 0082 0123     		movs	r3, #1
 3175 0084 F8E7     		b	.L246
 3176              	.LVL215:
 3177              	.L264:
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3178              		.loc 1 2031 0
 3179 0086 0168     		ldr	r1, [r0]
 3180              	.LVL216:
 3181 0088 0B68     		ldr	r3, [r1]
 3182 008a 43F40063 		orr	r3, r3, #2048
 3183 008e 0B60     		str	r3, [r1]
 3184              	.LVL217:
 3185 0090 E1E7     		b	.L249
 3186              	.L250:
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3187              		.loc 1 2035 0 discriminator 3
 3188 0092 072B     		cmp	r3, #7
 3189 0094 07D9     		bls	.L252
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3190              		.loc 1 2036 0
 3191 0096 816F     		ldr	r1, [r0, #120]
 3192 0098 8969     		ldr	r1, [r1, #24]
 3193 009a B1F5005F 		cmp	r1, #8192
 3194 009e 18BF     		it	ne
 3195 00a0 B1F5804F 		cmpne	r1, #16384
 3196 00a4 DFD1     		bne	.L251
 3197              	.L252:
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3198              		.loc 1 2046 0
 3199 00a6 072B     		cmp	r3, #7
 3200 00a8 56D8     		bhi	.L253
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3201              		.loc 1 2048 0
 3202 00aa 836F     		ldr	r3, [r0, #120]
 3203 00ac 9969     		ldr	r1, [r3, #24]
 3204 00ae B1F5005F 		cmp	r1, #8192
 3205 00b2 43D0     		beq	.L265
 3206              	.L254:
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3207              		.loc 1 2052 0
 3208 00b4 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccOUtRG8.s 			page 133


 3209 00b6 B3F5804F 		cmp	r3, #16384
 3210 00ba 46D0     		beq	.L266
 3211              	.L255:
 3212 00bc 1546     		mov	r5, r2
 3213 00be 0446     		mov	r4, r0
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3214              		.loc 1 2070 0
 3215 00c0 836F     		ldr	r3, [r0, #120]
 3216 00c2 384A     		ldr	r2, .L270
 3217              	.LVL218:
 3218 00c4 1A64     		str	r2, [r3, #64]
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3219              		.loc 1 2073 0
 3220 00c6 836F     		ldr	r3, [r0, #120]
 3221 00c8 374A     		ldr	r2, .L270+4
 3222 00ca DA63     		str	r2, [r3, #60]
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3223              		.loc 1 2076 0
 3224 00cc 836F     		ldr	r3, [r0, #120]
 3225 00ce 374A     		ldr	r2, .L270+8
 3226 00d0 DA64     		str	r2, [r3, #76]
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3227              		.loc 1 2079 0
 3228 00d2 836F     		ldr	r3, [r0, #120]
 3229 00d4 0022     		movs	r2, #0
 3230 00d6 1A65     		str	r2, [r3, #80]
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3231              		.loc 1 2082 0
 3232 00d8 0268     		ldr	r2, [r0]
 3233 00da 9368     		ldr	r3, [r2, #8]
 3234 00dc 23F40043 		bic	r3, r3, #32768
 3235 00e0 9360     		str	r3, [r2, #8]
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3236              		.loc 1 2085 0
 3237 00e2 0268     		ldr	r2, [r0]
 3238 00e4 B0F86230 		ldrh	r3, [r0, #98]
 3239 00e8 2032     		adds	r2, r2, #32
 3240 00ea C16D     		ldr	r1, [r0, #92]
 3241 00ec 806F     		ldr	r0, [r0, #120]
 3242              	.LVL219:
 3243 00ee FFF7FEFF 		bl	HAL_DMA_Start_IT
 3244              	.LVL220:
 3245 00f2 0346     		mov	r3, r0
 3246 00f4 0028     		cmp	r0, #0
 3247 00f6 3DD1     		bne	.L267
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3248              		.loc 1 2095 0
 3249 00f8 A26F     		ldr	r2, [r4, #120]
 3250 00fa D269     		ldr	r2, [r2, #28]
 3251 00fc B2F5807F 		cmp	r2, #256
 3252 0100 42D0     		beq	.L268
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3253              		.loc 1 2101 0
 3254 0102 2168     		ldr	r1, [r4]
 3255 0104 4868     		ldr	r0, [r1, #4]
 3256 0106 2A4A     		ldr	r2, .L270+12
 3257 0108 0240     		ands	r2, r2, r0
ARM GAS  /tmp/ccOUtRG8.s 			page 134


 3258 010a 2A43     		orrs	r2, r2, r5
 3259 010c 4A60     		str	r2, [r1, #4]
 3260              	.L258:
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3261              		.loc 1 2105 0
 3262 010e 2168     		ldr	r1, [r4]
 3263 0110 8A68     		ldr	r2, [r1, #8]
 3264 0112 42F40042 		orr	r2, r2, #32768
 3265 0116 8A60     		str	r2, [r1, #8]
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3266              		.loc 1 2108 0
 3267 0118 2168     		ldr	r1, [r4]
 3268 011a 0A69     		ldr	r2, [r1, #16]
 3269 011c 42F44872 		orr	r2, r2, #800
 3270 0120 0A61     		str	r2, [r1, #16]
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3271              		.loc 1 2111 0
 3272 0122 2168     		ldr	r1, [r4]
 3273 0124 0A68     		ldr	r2, [r1]
 3274 0126 42F00102 		orr	r2, r2, #1
 3275 012a 0A60     		str	r2, [r1]
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3276              		.loc 1 2113 0
 3277 012c 6268     		ldr	r2, [r4, #4]
 3278 012e B2F5800F 		cmp	r2, #4194304
 3279 0132 2FD0     		beq	.L269
 3280              	.L259:
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3281              		.loc 1 2120 0
 3282 0134 0022     		movs	r2, #0
 3283 0136 84F88020 		strb	r2, [r4, #128]
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3284              		.loc 1 2121 0
 3285 013a 9DE7     		b	.L246
 3286              	.LVL221:
 3287              	.L265:
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3288              		.loc 1 2050 0
 3289 013c B0F86210 		ldrh	r1, [r0, #98]
 3290 0140 0131     		adds	r1, r1, #1
 3291 0142 4908     		lsrs	r1, r1, #1
 3292 0144 A0F86210 		strh	r1, [r0, #98]	@ movhi
 3293 0148 B4E7     		b	.L254
 3294              	.L266:
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3295              		.loc 1 2054 0
 3296 014a B0F86230 		ldrh	r3, [r0, #98]
 3297 014e 0333     		adds	r3, r3, #3
 3298 0150 9B08     		lsrs	r3, r3, #2
 3299 0152 A0F86230 		strh	r3, [r0, #98]	@ movhi
 3300 0156 B1E7     		b	.L255
 3301              	.L253:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3302              		.loc 1 2057 0
 3303 0158 0F2B     		cmp	r3, #15
 3304 015a AFD8     		bhi	.L255
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccOUtRG8.s 			page 135


 3305              		.loc 1 2059 0
 3306 015c 836F     		ldr	r3, [r0, #120]
 3307 015e 9B69     		ldr	r3, [r3, #24]
 3308 0160 B3F5804F 		cmp	r3, #16384
 3309 0164 AAD1     		bne	.L255
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3310              		.loc 1 2061 0
 3311 0166 B0F86230 		ldrh	r3, [r0, #98]
 3312 016a 0133     		adds	r3, r3, #1
 3313 016c 5B08     		lsrs	r3, r3, #1
 3314 016e A0F86230 		strh	r3, [r0, #98]	@ movhi
 3315 0172 A3E7     		b	.L255
 3316              	.LVL222:
 3317              	.L267:
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3318              		.loc 1 2088 0
 3319 0174 D4F88430 		ldr	r3, [r4, #132]
 3320 0178 43F01003 		orr	r3, r3, #16
 3321 017c C4F88430 		str	r3, [r4, #132]
 3322              	.LVL223:
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3323              		.loc 1 2090 0
 3324 0180 0123     		movs	r3, #1
 3325 0182 84F88130 		strb	r3, [r4, #129]
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3326              		.loc 1 2091 0
 3327 0186 77E7     		b	.L246
 3328              	.LVL224:
 3329              	.L268:
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3330              		.loc 1 2097 0
 3331 0188 2168     		ldr	r1, [r4]
 3332 018a 4868     		ldr	r0, [r1, #4]
 3333 018c 084A     		ldr	r2, .L270+12
 3334 018e 0240     		ands	r2, r2, r0
 3335 0190 4A60     		str	r2, [r1, #4]
 3336 0192 BCE7     		b	.L258
 3337              	.L269:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3338              		.loc 1 2116 0
 3339 0194 2168     		ldr	r1, [r4]
 3340 0196 0A68     		ldr	r2, [r1]
 3341 0198 42F40072 		orr	r2, r2, #512
 3342 019c 0A60     		str	r2, [r1]
 3343 019e C9E7     		b	.L259
 3344              	.LVL225:
 3345              	.L260:
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3346              		.loc 1 1998 0
 3347 01a0 0223     		movs	r3, #2
 3348 01a2 69E7     		b	.L246
 3349              	.L271:
 3350              		.align	2
 3351              	.L270:
 3352 01a4 00000000 		.word	SPI_DMAHalfTransmitCplt
 3353 01a8 00000000 		.word	SPI_DMATransmitCplt
 3354 01ac 00000000 		.word	SPI_DMAError
ARM GAS  /tmp/ccOUtRG8.s 			page 136


 3355 01b0 0000FFFF 		.word	-65536
 3356              		.cfi_endproc
 3357              	.LFE353:
 3359              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3360              		.align	1
 3361              		.global	HAL_SPI_TransmitReceive_DMA
 3362              		.syntax unified
 3363              		.thumb
 3364              		.thumb_func
 3365              		.fpu fpv5-d16
 3367              	HAL_SPI_TransmitReceive_DMA:
 3368              	.LFB355:
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
 3369              		.loc 1 2285 0
 3370              		.cfi_startproc
 3371              		@ args = 0, pretend = 0, frame = 0
 3372              		@ frame_needed = 0, uses_anonymous_args = 0
 3373              	.LVL226:
 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              	.LCFI27:
 3376              		.cfi_def_cfa_offset 16
 3377              		.cfi_offset 3, -16
 3378              		.cfi_offset 4, -12
 3379              		.cfi_offset 5, -8
 3380              		.cfi_offset 14, -4
 3381              	.LVL227:
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3382              		.loc 1 2295 0
 3383 0002 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 3384 0006 012C     		cmp	r4, #1
 3385 0008 00F02281 		beq	.L295
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3386              		.loc 1 2295 0 is_stmt 0 discriminator 2
 3387 000c 0124     		movs	r4, #1
 3388 000e 80F88040 		strb	r4, [r0, #128]
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_mode    = hspi->Init.Mode;
 3389              		.loc 1 2298 0 is_stmt 1 discriminator 2
 3390 0012 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 3391 0016 E4B2     		uxtb	r4, r4
 3392              	.LVL228:
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3393              		.loc 1 2299 0 discriminator 2
 3394 0018 4568     		ldr	r5, [r0, #4]
 3395              	.LVL229:
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3396              		.loc 1 2301 0 discriminator 2
 3397 001a B5F5800F 		cmp	r5, #4194304
 3398 001e 34D0     		beq	.L297
 3399              	.LVL230:
 3400              	.L274:
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3401              		.loc 1 2301 0 is_stmt 0 discriminator 5
 3402 0020 012C     		cmp	r4, #1
 3403 0022 38D1     		bne	.L298
 3404              	.L275:
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3405              		.loc 1 2308 0 is_stmt 1
ARM GAS  /tmp/ccOUtRG8.s 			page 137


 3406 0024 B2FA82F4 		clz	r4, r2
 3407              	.LVL231:
 3408 0028 6409     		lsrs	r4, r4, #5
 3409 002a 0029     		cmp	r1, #0
 3410 002c 08BF     		it	eq
 3411 002e 0124     		moveq	r4, #1
 3412 0030 002C     		cmp	r4, #0
 3413 0032 36D1     		bne	.L276
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3414              		.loc 1 2308 0 is_stmt 0 discriminator 1
 3415 0034 002B     		cmp	r3, #0
 3416 0036 34D0     		beq	.L276
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3417              		.loc 1 2316 0 is_stmt 1
 3418 0038 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 3419 003c E4B2     		uxtb	r4, r4
 3420 003e 042C     		cmp	r4, #4
 3421 0040 02D0     		beq	.L278
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3422              		.loc 1 2318 0
 3423 0042 0524     		movs	r4, #5
 3424 0044 80F88140 		strb	r4, [r0, #129]
 3425              	.L278:
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3426              		.loc 1 2322 0
 3427 0048 0024     		movs	r4, #0
 3428 004a C0F88440 		str	r4, [r0, #132]
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3429              		.loc 1 2323 0
 3430 004e C165     		str	r1, [r0, #92]
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3431              		.loc 1 2324 0
 3432 0050 A0F86030 		strh	r3, [r0, #96]	@ movhi
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3433              		.loc 1 2325 0
 3434 0054 A0F86230 		strh	r3, [r0, #98]	@ movhi
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3435              		.loc 1 2326 0
 3436 0058 4266     		str	r2, [r0, #100]
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3437              		.loc 1 2327 0
 3438 005a A0F86830 		strh	r3, [r0, #104]	@ movhi
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3439              		.loc 1 2328 0
 3440 005e A0F86A30 		strh	r3, [r0, #106]	@ movhi
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3441              		.loc 1 2331 0
 3442 0062 0467     		str	r4, [r0, #112]
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3443              		.loc 1 2332 0
 3444 0064 4467     		str	r4, [r0, #116]
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3445              		.loc 1 2335 0
 3446 0066 0168     		ldr	r1, [r0]
 3447              	.LVL232:
 3448 0068 8A68     		ldr	r2, [r1, #8]
 3449              	.LVL233:
ARM GAS  /tmp/ccOUtRG8.s 			page 138


 3450 006a 22F44042 		bic	r2, r2, #49152
 3451 006e 8A60     		str	r2, [r1, #8]
 3452              	.LVL234:
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3453              		.loc 1 2338 0
 3454 0070 C268     		ldr	r2, [r0, #12]
 3455 0072 0F2A     		cmp	r2, #15
 3456 0074 1AD9     		bls	.L279
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3457              		.loc 1 2338 0 is_stmt 0 discriminator 1
 3458 0076 C16F     		ldr	r1, [r0, #124]
 3459 0078 8969     		ldr	r1, [r1, #24]
 3460 007a B1F5804F 		cmp	r1, #16384
 3461 007e 15D0     		beq	.L279
 3462              	.L280:
 3463              	.LVL235:
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3464              		.loc 1 2345 0 is_stmt 1
 3465 0080 0023     		movs	r3, #0
 3466              	.LVL236:
 3467 0082 80F88030 		strb	r3, [r0, #128]
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3468              		.loc 1 2346 0
 3469 0086 0122     		movs	r2, #1
 3470 0088 09E0     		b	.L273
 3471              	.LVL237:
 3472              	.L297:
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3473              		.loc 1 2301 0 discriminator 2
 3474 008a 8568     		ldr	r5, [r0, #8]
 3475              	.LVL238:
 3476 008c 002D     		cmp	r5, #0
 3477 008e C7D1     		bne	.L274
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3478              		.loc 1 2301 0 is_stmt 0 discriminator 4
 3479 0090 042C     		cmp	r4, #4
 3480 0092 C5D1     		bne	.L274
 3481 0094 C6E7     		b	.L275
 3482              	.L298:
 3483              	.LVL239:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3484              		.loc 1 2304 0 is_stmt 1
 3485 0096 0023     		movs	r3, #0
 3486              	.LVL240:
 3487 0098 80F88030 		strb	r3, [r0, #128]
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3488              		.loc 1 2305 0
 3489 009c 0222     		movs	r2, #2
 3490              	.LVL241:
 3491              	.L273:
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3492              		.loc 1 2462 0
 3493 009e 1046     		mov	r0, r2
 3494 00a0 38BD     		pop	{r3, r4, r5, pc}
 3495              	.LVL242:
 3496              	.L276:
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
ARM GAS  /tmp/ccOUtRG8.s 			page 139


 3497              		.loc 1 2311 0
 3498 00a2 0023     		movs	r3, #0
 3499              	.LVL243:
 3500 00a4 80F88030 		strb	r3, [r0, #128]
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3501              		.loc 1 2312 0
 3502 00a8 0122     		movs	r2, #1
 3503              	.LVL244:
 3504 00aa F8E7     		b	.L273
 3505              	.LVL245:
 3506              	.L279:
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3507              		.loc 1 2338 0 discriminator 3
 3508 00ac 072A     		cmp	r2, #7
 3509 00ae 07D9     		bls	.L281
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3510              		.loc 1 2339 0
 3511 00b0 C16F     		ldr	r1, [r0, #124]
 3512 00b2 8969     		ldr	r1, [r1, #24]
 3513 00b4 B1F5005F 		cmp	r1, #8192
 3514 00b8 18BF     		it	ne
 3515 00ba B1F5804F 		cmpne	r1, #16384
 3516 00be DFD1     		bne	.L280
 3517              	.L281:
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3518              		.loc 1 2350 0
 3519 00c0 072A     		cmp	r2, #7
 3520 00c2 54D8     		bhi	.L282
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3521              		.loc 1 2352 0
 3522 00c4 826F     		ldr	r2, [r0, #120]
 3523 00c6 9169     		ldr	r1, [r2, #24]
 3524 00c8 B1F5005F 		cmp	r1, #8192
 3525 00cc 33D0     		beq	.L299
 3526              	.L283:
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3527              		.loc 1 2356 0
 3528 00ce 9269     		ldr	r2, [r2, #24]
 3529 00d0 B2F5804F 		cmp	r2, #16384
 3530 00d4 36D0     		beq	.L300
 3531              	.L284:
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3532              		.loc 1 2360 0
 3533 00d6 C26F     		ldr	r2, [r0, #124]
 3534 00d8 9169     		ldr	r1, [r2, #24]
 3535 00da B1F5005F 		cmp	r1, #8192
 3536 00de 38D0     		beq	.L301
 3537              	.L285:
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3538              		.loc 1 2364 0
 3539 00e0 9269     		ldr	r2, [r2, #24]
 3540 00e2 B2F5804F 		cmp	r2, #16384
 3541 00e6 3BD0     		beq	.L302
 3542              	.L286:
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3543              		.loc 1 2386 0
 3544 00e8 90F88120 		ldrb	r2, [r0, #129]	@ zero_extendqisi2
ARM GAS  /tmp/ccOUtRG8.s 			page 140


 3545 00ec D2B2     		uxtb	r2, r2
 3546 00ee 042A     		cmp	r2, #4
 3547 00f0 57D0     		beq	.L303
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3548              		.loc 1 2395 0
 3549 00f2 C26F     		ldr	r2, [r0, #124]
 3550 00f4 5749     		ldr	r1, .L308
 3551 00f6 1164     		str	r1, [r2, #64]
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3552              		.loc 1 2396 0
 3553 00f8 C26F     		ldr	r2, [r0, #124]
 3554 00fa 5749     		ldr	r1, .L308+4
 3555 00fc D163     		str	r1, [r2, #60]
 3556              	.L289:
 3557 00fe 1D46     		mov	r5, r3
 3558 0100 0446     		mov	r4, r0
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3559              		.loc 1 2400 0
 3560 0102 C36F     		ldr	r3, [r0, #124]
 3561              	.LVL246:
 3562 0104 554A     		ldr	r2, .L308+8
 3563 0106 DA64     		str	r2, [r3, #76]
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3564              		.loc 1 2403 0
 3565 0108 C36F     		ldr	r3, [r0, #124]
 3566 010a 0022     		movs	r2, #0
 3567 010c 1A65     		str	r2, [r3, #80]
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3568              		.loc 1 2406 0
 3569 010e 0168     		ldr	r1, [r0]
 3570 0110 B0F86A30 		ldrh	r3, [r0, #106]
 3571 0114 426E     		ldr	r2, [r0, #100]
 3572 0116 3031     		adds	r1, r1, #48
 3573 0118 C06F     		ldr	r0, [r0, #124]
 3574              	.LVL247:
 3575 011a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3576              	.LVL248:
 3577 011e 0028     		cmp	r0, #0
 3578 0120 46D0     		beq	.L290
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3579              		.loc 1 2409 0
 3580 0122 D4F88430 		ldr	r3, [r4, #132]
 3581 0126 43F01003 		orr	r3, r3, #16
 3582 012a C4F88430 		str	r3, [r4, #132]
 3583              	.LVL249:
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3584              		.loc 1 2411 0
 3585 012e 0122     		movs	r2, #1
 3586 0130 84F88120 		strb	r2, [r4, #129]
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3587              		.loc 1 2412 0
 3588 0134 B3E7     		b	.L273
 3589              	.LVL250:
 3590              	.L299:
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3591              		.loc 1 2354 0
 3592 0136 B0F86210 		ldrh	r1, [r0, #98]
ARM GAS  /tmp/ccOUtRG8.s 			page 141


 3593 013a 0131     		adds	r1, r1, #1
 3594 013c 4908     		lsrs	r1, r1, #1
 3595 013e A0F86210 		strh	r1, [r0, #98]	@ movhi
 3596 0142 C4E7     		b	.L283
 3597              	.L300:
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3598              		.loc 1 2358 0
 3599 0144 B0F86220 		ldrh	r2, [r0, #98]
 3600 0148 0332     		adds	r2, r2, #3
 3601 014a 9208     		lsrs	r2, r2, #2
 3602 014c A0F86220 		strh	r2, [r0, #98]	@ movhi
 3603 0150 C1E7     		b	.L284
 3604              	.L301:
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3605              		.loc 1 2362 0
 3606 0152 B0F86A10 		ldrh	r1, [r0, #106]
 3607 0156 0131     		adds	r1, r1, #1
 3608 0158 4908     		lsrs	r1, r1, #1
 3609 015a A0F86A10 		strh	r1, [r0, #106]	@ movhi
 3610 015e BFE7     		b	.L285
 3611              	.L302:
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3612              		.loc 1 2366 0
 3613 0160 B0F86A20 		ldrh	r2, [r0, #106]
 3614 0164 0332     		adds	r2, r2, #3
 3615 0166 9208     		lsrs	r2, r2, #2
 3616 0168 A0F86A20 		strh	r2, [r0, #106]	@ movhi
 3617 016c BCE7     		b	.L286
 3618              	.L282:
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3619              		.loc 1 2369 0
 3620 016e 0F2A     		cmp	r2, #15
 3621 0170 BAD8     		bhi	.L286
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3622              		.loc 1 2371 0
 3623 0172 826F     		ldr	r2, [r0, #120]
 3624 0174 9269     		ldr	r2, [r2, #24]
 3625 0176 B2F5804F 		cmp	r2, #16384
 3626 017a 0BD0     		beq	.L304
 3627              	.L287:
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3628              		.loc 1 2375 0
 3629 017c C26F     		ldr	r2, [r0, #124]
 3630 017e 9269     		ldr	r2, [r2, #24]
 3631 0180 B2F5804F 		cmp	r2, #16384
 3632 0184 B0D1     		bne	.L286
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3633              		.loc 1 2377 0
 3634 0186 B0F86A20 		ldrh	r2, [r0, #106]
 3635 018a 0132     		adds	r2, r2, #1
 3636 018c 5208     		lsrs	r2, r2, #1
 3637 018e A0F86A20 		strh	r2, [r0, #106]	@ movhi
 3638 0192 A9E7     		b	.L286
 3639              	.L304:
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3640              		.loc 1 2373 0
 3641 0194 B0F86220 		ldrh	r2, [r0, #98]
ARM GAS  /tmp/ccOUtRG8.s 			page 142


 3642 0198 0132     		adds	r2, r2, #1
 3643 019a 5208     		lsrs	r2, r2, #1
 3644 019c A0F86220 		strh	r2, [r0, #98]	@ movhi
 3645 01a0 ECE7     		b	.L287
 3646              	.L303:
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3647              		.loc 1 2389 0
 3648 01a2 C26F     		ldr	r2, [r0, #124]
 3649 01a4 2E49     		ldr	r1, .L308+12
 3650 01a6 1164     		str	r1, [r2, #64]
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3651              		.loc 1 2390 0
 3652 01a8 C26F     		ldr	r2, [r0, #124]
 3653 01aa 2E49     		ldr	r1, .L308+16
 3654 01ac D163     		str	r1, [r2, #60]
 3655 01ae A6E7     		b	.L289
 3656              	.LVL251:
 3657              	.L290:
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3658              		.loc 1 2416 0
 3659 01b0 2268     		ldr	r2, [r4]
 3660 01b2 9368     		ldr	r3, [r2, #8]
 3661 01b4 43F48043 		orr	r3, r3, #16384
 3662 01b8 9360     		str	r3, [r2, #8]
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3663              		.loc 1 2420 0
 3664 01ba A26F     		ldr	r2, [r4, #120]
 3665 01bc 0023     		movs	r3, #0
 3666 01be 1364     		str	r3, [r2, #64]
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3667              		.loc 1 2421 0
 3668 01c0 A26F     		ldr	r2, [r4, #120]
 3669 01c2 D363     		str	r3, [r2, #60]
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3670              		.loc 1 2422 0
 3671 01c4 A26F     		ldr	r2, [r4, #120]
 3672 01c6 D364     		str	r3, [r2, #76]
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3673              		.loc 1 2423 0
 3674 01c8 A26F     		ldr	r2, [r4, #120]
 3675 01ca 1365     		str	r3, [r2, #80]
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3676              		.loc 1 2426 0
 3677 01cc 2268     		ldr	r2, [r4]
 3678 01ce B4F86230 		ldrh	r3, [r4, #98]
 3679 01d2 2032     		adds	r2, r2, #32
 3680 01d4 E16D     		ldr	r1, [r4, #92]
 3681 01d6 A06F     		ldr	r0, [r4, #120]
 3682 01d8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3683              	.LVL252:
 3684 01dc 0246     		mov	r2, r0
 3685 01de 08BB     		cbnz	r0, .L305
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3686              		.loc 1 2435 0
 3687 01e0 A36F     		ldr	r3, [r4, #120]
 3688 01e2 DB69     		ldr	r3, [r3, #28]
 3689 01e4 B3F5807F 		cmp	r3, #256
ARM GAS  /tmp/ccOUtRG8.s 			page 143


 3690 01e8 26D0     		beq	.L306
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3691              		.loc 1 2441 0
 3692 01ea 2168     		ldr	r1, [r4]
 3693 01ec 4868     		ldr	r0, [r1, #4]
 3694 01ee 1E4B     		ldr	r3, .L308+20
 3695 01f0 0340     		ands	r3, r3, r0
 3696 01f2 2B43     		orrs	r3, r3, r5
 3697 01f4 4B60     		str	r3, [r1, #4]
 3698              	.L293:
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3699              		.loc 1 2445 0
 3700 01f6 2168     		ldr	r1, [r4]
 3701 01f8 8B68     		ldr	r3, [r1, #8]
 3702 01fa 43F40043 		orr	r3, r3, #32768
 3703 01fe 8B60     		str	r3, [r1, #8]
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3704              		.loc 1 2448 0
 3705 0200 2168     		ldr	r1, [r4]
 3706 0202 0B69     		ldr	r3, [r1, #16]
 3707 0204 43F45873 		orr	r3, r3, #864
 3708 0208 0B61     		str	r3, [r1, #16]
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3709              		.loc 1 2451 0
 3710 020a 2168     		ldr	r1, [r4]
 3711 020c 0B68     		ldr	r3, [r1]
 3712 020e 43F00103 		orr	r3, r3, #1
 3713 0212 0B60     		str	r3, [r1]
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3714              		.loc 1 2453 0
 3715 0214 6368     		ldr	r3, [r4, #4]
 3716 0216 B3F5800F 		cmp	r3, #4194304
 3717 021a 13D0     		beq	.L307
 3718              	.L294:
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3719              		.loc 1 2460 0
 3720 021c 0023     		movs	r3, #0
 3721 021e 84F88030 		strb	r3, [r4, #128]
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3722              		.loc 1 2461 0
 3723 0222 3CE7     		b	.L273
 3724              	.L305:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3725              		.loc 1 2429 0
 3726 0224 D4F88430 		ldr	r3, [r4, #132]
 3727 0228 43F01003 		orr	r3, r3, #16
 3728 022c C4F88430 		str	r3, [r4, #132]
 3729              	.LVL253:
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3730              		.loc 1 2431 0
 3731 0230 0122     		movs	r2, #1
 3732 0232 84F88120 		strb	r2, [r4, #129]
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3733              		.loc 1 2432 0
 3734 0236 32E7     		b	.L273
 3735              	.LVL254:
 3736              	.L306:
ARM GAS  /tmp/ccOUtRG8.s 			page 144


2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3737              		.loc 1 2437 0
 3738 0238 2168     		ldr	r1, [r4]
 3739 023a 4868     		ldr	r0, [r1, #4]
 3740 023c 0A4B     		ldr	r3, .L308+20
 3741 023e 0340     		ands	r3, r3, r0
 3742 0240 4B60     		str	r3, [r1, #4]
 3743 0242 D8E7     		b	.L293
 3744              	.L307:
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3745              		.loc 1 2456 0
 3746 0244 2168     		ldr	r1, [r4]
 3747 0246 0B68     		ldr	r3, [r1]
 3748 0248 43F40073 		orr	r3, r3, #512
 3749 024c 0B60     		str	r3, [r1]
 3750 024e E5E7     		b	.L294
 3751              	.LVL255:
 3752              	.L295:
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3753              		.loc 1 2295 0
 3754 0250 0222     		movs	r2, #2
 3755              	.LVL256:
 3756 0252 24E7     		b	.L273
 3757              	.L309:
 3758              		.align	2
 3759              	.L308:
 3760 0254 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3761 0258 00000000 		.word	SPI_DMATransmitReceiveCplt
 3762 025c 00000000 		.word	SPI_DMAError
 3763 0260 00000000 		.word	SPI_DMAHalfReceiveCplt
 3764 0264 00000000 		.word	SPI_DMAReceiveCplt
 3765 0268 0000FFFF 		.word	-65536
 3766              		.cfi_endproc
 3767              	.LFE355:
 3769              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3770              		.align	1
 3771              		.global	HAL_SPI_Receive_DMA
 3772              		.syntax unified
 3773              		.thumb
 3774              		.thumb_func
 3775              		.fpu fpv5-d16
 3777              	HAL_SPI_Receive_DMA:
 3778              	.LFB354:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3779              		.loc 1 2134 0
 3780              		.cfi_startproc
 3781              		@ args = 0, pretend = 0, frame = 0
 3782              		@ frame_needed = 0, uses_anonymous_args = 0
 3783              	.LVL257:
 3784 0000 38B5     		push	{r3, r4, r5, lr}
 3785              	.LCFI28:
 3786              		.cfi_def_cfa_offset 16
 3787              		.cfi_offset 3, -16
 3788              		.cfi_offset 4, -12
 3789              		.cfi_offset 5, -8
 3790              		.cfi_offset 14, -4
 3791 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccOUtRG8.s 			page 145


 3792 0004 1546     		mov	r5, r2
 3793              	.LVL258:
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3794              		.loc 1 2140 0
 3795 0006 8268     		ldr	r2, [r0, #8]
 3796              	.LVL259:
 3797 0008 1AB9     		cbnz	r2, .L311
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3798              		.loc 1 2140 0 is_stmt 0 discriminator 1
 3799 000a 4368     		ldr	r3, [r0, #4]
 3800 000c B3F5800F 		cmp	r3, #4194304
 3801 0010 34D0     		beq	.L328
 3802              	.L311:
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3803              		.loc 1 2148 0 is_stmt 1
 3804 0012 94F88030 		ldrb	r3, [r4, #128]	@ zero_extendqisi2
 3805 0016 012B     		cmp	r3, #1
 3806 0018 00F0D080 		beq	.L326
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3807              		.loc 1 2148 0 is_stmt 0 discriminator 2
 3808 001c 0123     		movs	r3, #1
 3809 001e 84F88030 		strb	r3, [r4, #128]
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3810              		.loc 1 2150 0 is_stmt 1 discriminator 2
 3811 0022 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 3812 0026 DBB2     		uxtb	r3, r3
 3813 0028 012B     		cmp	r3, #1
 3814 002a 30D1     		bne	.L329
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3815              		.loc 1 2157 0
 3816 002c B5FA85F3 		clz	r3, r5
 3817 0030 5B09     		lsrs	r3, r3, #5
 3818 0032 0029     		cmp	r1, #0
 3819 0034 08BF     		it	eq
 3820 0036 0123     		moveq	r3, #1
 3821 0038 7BBB     		cbnz	r3, .L330
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3822              		.loc 1 2165 0
 3823 003a 0423     		movs	r3, #4
 3824 003c 84F88130 		strb	r3, [r4, #129]
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3825              		.loc 1 2166 0
 3826 0040 0023     		movs	r3, #0
 3827 0042 C4F88430 		str	r3, [r4, #132]
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3828              		.loc 1 2167 0
 3829 0046 6166     		str	r1, [r4, #100]
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3830              		.loc 1 2168 0
 3831 0048 A4F86850 		strh	r5, [r4, #104]	@ movhi
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3832              		.loc 1 2169 0
 3833 004c A4F86A50 		strh	r5, [r4, #106]	@ movhi
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3834              		.loc 1 2172 0
 3835 0050 2367     		str	r3, [r4, #112]
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
ARM GAS  /tmp/ccOUtRG8.s 			page 146


 3836              		.loc 1 2173 0
 3837 0052 6367     		str	r3, [r4, #116]
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 3838              		.loc 1 2174 0
 3839 0054 A4F86030 		strh	r3, [r4, #96]	@ movhi
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3840              		.loc 1 2175 0
 3841 0058 A4F86230 		strh	r3, [r4, #98]	@ movhi
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3842              		.loc 1 2178 0
 3843 005c B2F5C02F 		cmp	r2, #393216
 3844 0060 20D0     		beq	.L331
 3845              	.L315:
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3846              		.loc 1 2184 0
 3847 0062 E368     		ldr	r3, [r4, #12]
 3848 0064 0F2B     		cmp	r3, #15
 3849 0066 23D9     		bls	.L316
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3850              		.loc 1 2184 0 is_stmt 0 discriminator 1
 3851 0068 E26F     		ldr	r2, [r4, #124]
 3852 006a 9269     		ldr	r2, [r2, #24]
 3853 006c B2F5804F 		cmp	r2, #16384
 3854 0070 1ED0     		beq	.L316
 3855              	.L317:
 3856              	.LVL260:
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3857              		.loc 1 2190 0 is_stmt 1
 3858 0072 0023     		movs	r3, #0
 3859 0074 84F88030 		strb	r3, [r4, #128]
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3860              		.loc 1 2191 0
 3861 0078 0123     		movs	r3, #1
 3862 007a 0CE0     		b	.L312
 3863              	.LVL261:
 3864              	.L328:
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 3865              		.loc 1 2142 0
 3866 007c 0423     		movs	r3, #4
 3867 007e 80F88130 		strb	r3, [r0, #129]
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3868              		.loc 1 2144 0
 3869 0082 2B46     		mov	r3, r5
 3870 0084 0A46     		mov	r2, r1
 3871 0086 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3872              	.LVL262:
 3873 008a 0346     		mov	r3, r0
 3874 008c 03E0     		b	.L312
 3875              	.LVL263:
 3876              	.L329:
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3877              		.loc 1 2153 0
 3878 008e 0023     		movs	r3, #0
 3879 0090 84F88030 		strb	r3, [r4, #128]
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3880              		.loc 1 2154 0
 3881 0094 0223     		movs	r3, #2
ARM GAS  /tmp/ccOUtRG8.s 			page 147


 3882              	.LVL264:
 3883              	.L312:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3884              		.loc 1 2271 0
 3885 0096 1846     		mov	r0, r3
 3886 0098 38BD     		pop	{r3, r4, r5, pc}
 3887              	.LVL265:
 3888              	.L330:
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3889              		.loc 1 2160 0
 3890 009a 0023     		movs	r3, #0
 3891 009c 84F88030 		strb	r3, [r4, #128]
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3892              		.loc 1 2161 0
 3893 00a0 0123     		movs	r3, #1
 3894 00a2 F8E7     		b	.L312
 3895              	.LVL266:
 3896              	.L331:
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3897              		.loc 1 2180 0
 3898 00a4 2268     		ldr	r2, [r4]
 3899 00a6 1368     		ldr	r3, [r2]
 3900 00a8 23F40063 		bic	r3, r3, #2048
 3901 00ac 1360     		str	r3, [r2]
 3902 00ae D8E7     		b	.L315
 3903              	.L316:
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3904              		.loc 1 2184 0 discriminator 3
 3905 00b0 072B     		cmp	r3, #7
 3906 00b2 07D9     		bls	.L318
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3907              		.loc 1 2185 0
 3908 00b4 E36F     		ldr	r3, [r4, #124]
 3909 00b6 9B69     		ldr	r3, [r3, #24]
 3910 00b8 B3F5005F 		cmp	r3, #8192
 3911 00bc 18BF     		it	ne
 3912 00be B3F5804F 		cmpne	r3, #16384
 3913 00c2 D6D1     		bne	.L317
 3914              	.L318:
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3915              		.loc 1 2195 0
 3916 00c4 2268     		ldr	r2, [r4]
 3917 00c6 9368     		ldr	r3, [r2, #8]
 3918 00c8 23F48043 		bic	r3, r3, #16384
 3919 00cc 9360     		str	r3, [r2, #8]
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3920              		.loc 1 2198 0
 3921 00ce E368     		ldr	r3, [r4, #12]
 3922 00d0 072B     		cmp	r3, #7
 3923 00d2 4FD8     		bhi	.L319
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3924              		.loc 1 2200 0
 3925 00d4 E36F     		ldr	r3, [r4, #124]
 3926 00d6 9A69     		ldr	r2, [r3, #24]
 3927 00d8 B2F5005F 		cmp	r2, #8192
 3928 00dc 3CD0     		beq	.L332
 3929              	.L320:
ARM GAS  /tmp/ccOUtRG8.s 			page 148


2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3930              		.loc 1 2204 0
 3931 00de 9B69     		ldr	r3, [r3, #24]
 3932 00e0 B3F5804F 		cmp	r3, #16384
 3933 00e4 3FD0     		beq	.L333
 3934              	.L321:
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3935              		.loc 1 2222 0
 3936 00e6 E36F     		ldr	r3, [r4, #124]
 3937 00e8 354A     		ldr	r2, .L337
 3938 00ea 1A64     		str	r2, [r3, #64]
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3939              		.loc 1 2225 0
 3940 00ec E36F     		ldr	r3, [r4, #124]
 3941 00ee 354A     		ldr	r2, .L337+4
 3942 00f0 DA63     		str	r2, [r3, #60]
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3943              		.loc 1 2228 0
 3944 00f2 E36F     		ldr	r3, [r4, #124]
 3945 00f4 344A     		ldr	r2, .L337+8
 3946 00f6 DA64     		str	r2, [r3, #76]
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3947              		.loc 1 2231 0
 3948 00f8 E36F     		ldr	r3, [r4, #124]
 3949 00fa 0022     		movs	r2, #0
 3950 00fc 1A65     		str	r2, [r3, #80]
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3951              		.loc 1 2234 0
 3952 00fe 2168     		ldr	r1, [r4]
 3953              	.LVL267:
 3954 0100 B4F86A30 		ldrh	r3, [r4, #106]
 3955 0104 626E     		ldr	r2, [r4, #100]
 3956 0106 3031     		adds	r1, r1, #48
 3957 0108 E06F     		ldr	r0, [r4, #124]
 3958              	.LVL268:
 3959 010a FFF7FEFF 		bl	HAL_DMA_Start_IT
 3960              	.LVL269:
 3961 010e 0346     		mov	r3, r0
 3962 0110 0028     		cmp	r0, #0
 3963 0112 3DD1     		bne	.L334
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3964              		.loc 1 2244 0
 3965 0114 E26F     		ldr	r2, [r4, #124]
 3966 0116 D269     		ldr	r2, [r2, #28]
 3967 0118 B2F5807F 		cmp	r2, #256
 3968 011c 42D0     		beq	.L335
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3969              		.loc 1 2250 0
 3970 011e 2168     		ldr	r1, [r4]
 3971 0120 4868     		ldr	r0, [r1, #4]
 3972 0122 2A4A     		ldr	r2, .L337+12
 3973 0124 0240     		ands	r2, r2, r0
 3974 0126 1543     		orrs	r5, r5, r2
 3975 0128 4D60     		str	r5, [r1, #4]
 3976              	.L324:
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3977              		.loc 1 2254 0
ARM GAS  /tmp/ccOUtRG8.s 			page 149


 3978 012a 2168     		ldr	r1, [r4]
 3979 012c 8A68     		ldr	r2, [r1, #8]
 3980 012e 42F48042 		orr	r2, r2, #16384
 3981 0132 8A60     		str	r2, [r1, #8]
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3982              		.loc 1 2257 0
 3983 0134 2168     		ldr	r1, [r4]
 3984 0136 0A69     		ldr	r2, [r1, #16]
 3985 0138 42F45072 		orr	r2, r2, #832
 3986 013c 0A61     		str	r2, [r1, #16]
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3987              		.loc 1 2260 0
 3988 013e 2168     		ldr	r1, [r4]
 3989 0140 0A68     		ldr	r2, [r1]
 3990 0142 42F00102 		orr	r2, r2, #1
 3991 0146 0A60     		str	r2, [r1]
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3992              		.loc 1 2262 0
 3993 0148 6268     		ldr	r2, [r4, #4]
 3994 014a B2F5800F 		cmp	r2, #4194304
 3995 014e 2FD0     		beq	.L336
 3996              	.L325:
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3997              		.loc 1 2269 0
 3998 0150 0022     		movs	r2, #0
 3999 0152 84F88020 		strb	r2, [r4, #128]
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 4000              		.loc 1 2270 0
 4001 0156 9EE7     		b	.L312
 4002              	.LVL270:
 4003              	.L332:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4004              		.loc 1 2202 0
 4005 0158 B4F86A20 		ldrh	r2, [r4, #106]
 4006 015c 0132     		adds	r2, r2, #1
 4007 015e 5208     		lsrs	r2, r2, #1
 4008 0160 A4F86A20 		strh	r2, [r4, #106]	@ movhi
 4009 0164 BBE7     		b	.L320
 4010              	.L333:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4011              		.loc 1 2206 0
 4012 0166 B4F86A30 		ldrh	r3, [r4, #106]
 4013 016a 0333     		adds	r3, r3, #3
 4014 016c 9B08     		lsrs	r3, r3, #2
 4015 016e A4F86A30 		strh	r3, [r4, #106]	@ movhi
 4016 0172 B8E7     		b	.L321
 4017              	.L319:
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4018              		.loc 1 2209 0
 4019 0174 0F2B     		cmp	r3, #15
 4020 0176 B6D8     		bhi	.L321
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4021              		.loc 1 2211 0
 4022 0178 E36F     		ldr	r3, [r4, #124]
 4023 017a 9B69     		ldr	r3, [r3, #24]
 4024 017c B3F5804F 		cmp	r3, #16384
 4025 0180 B1D1     		bne	.L321
ARM GAS  /tmp/ccOUtRG8.s 			page 150


2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4026              		.loc 1 2213 0
 4027 0182 B4F86A30 		ldrh	r3, [r4, #106]
 4028 0186 0133     		adds	r3, r3, #1
 4029 0188 5B08     		lsrs	r3, r3, #1
 4030 018a A4F86A30 		strh	r3, [r4, #106]	@ movhi
 4031 018e AAE7     		b	.L321
 4032              	.LVL271:
 4033              	.L334:
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4034              		.loc 1 2237 0
 4035 0190 D4F88430 		ldr	r3, [r4, #132]
 4036 0194 43F01003 		orr	r3, r3, #16
 4037 0198 C4F88430 		str	r3, [r4, #132]
 4038              	.LVL272:
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 4039              		.loc 1 2239 0
 4040 019c 0123     		movs	r3, #1
 4041 019e 84F88130 		strb	r3, [r4, #129]
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4042              		.loc 1 2240 0
 4043 01a2 78E7     		b	.L312
 4044              	.LVL273:
 4045              	.L335:
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4046              		.loc 1 2246 0
 4047 01a4 2168     		ldr	r1, [r4]
 4048 01a6 4868     		ldr	r0, [r1, #4]
 4049 01a8 084A     		ldr	r2, .L337+12
 4050 01aa 0240     		ands	r2, r2, r0
 4051 01ac 4A60     		str	r2, [r1, #4]
 4052 01ae BCE7     		b	.L324
 4053              	.L336:
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4054              		.loc 1 2265 0
 4055 01b0 2168     		ldr	r1, [r4]
 4056 01b2 0A68     		ldr	r2, [r1]
 4057 01b4 42F40072 		orr	r2, r2, #512
 4058 01b8 0A60     		str	r2, [r1]
 4059 01ba C9E7     		b	.L325
 4060              	.LVL274:
 4061              	.L326:
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4062              		.loc 1 2148 0
 4063 01bc 0223     		movs	r3, #2
 4064 01be 6AE7     		b	.L312
 4065              	.L338:
 4066              		.align	2
 4067              	.L337:
 4068 01c0 00000000 		.word	SPI_DMAHalfReceiveCplt
 4069 01c4 00000000 		.word	SPI_DMAReceiveCplt
 4070 01c8 00000000 		.word	SPI_DMAError
 4071 01cc 0000FFFF 		.word	-65536
 4072              		.cfi_endproc
 4073              	.LFE354:
 4075              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 4076              		.align	1
ARM GAS  /tmp/ccOUtRG8.s 			page 151


 4077              		.global	HAL_SPI_Abort
 4078              		.syntax unified
 4079              		.thumb
 4080              		.thumb_func
 4081              		.fpu fpv5-d16
 4083              	HAL_SPI_Abort:
 4084              	.LFB356:
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4085              		.loc 1 2478 0
 4086              		.cfi_startproc
 4087              		@ args = 0, pretend = 0, frame = 8
 4088              		@ frame_needed = 0, uses_anonymous_args = 0
 4089              	.LVL275:
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4090              		.loc 1 2484 0
 4091 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 4092 0004 012B     		cmp	r3, #1
 4093 0006 6CD0     		beq	.L347
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4094              		.loc 1 2478 0 discriminator 2
 4095 0008 10B5     		push	{r4, lr}
 4096              	.LCFI29:
 4097              		.cfi_def_cfa_offset 8
 4098              		.cfi_offset 4, -8
 4099              		.cfi_offset 14, -4
 4100 000a 82B0     		sub	sp, sp, #8
 4101              	.LCFI30:
 4102              		.cfi_def_cfa_offset 16
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4103              		.loc 1 2484 0 discriminator 2
 4104 000c 0123     		movs	r3, #1
 4105 000e 80F88030 		strb	r3, [r0, #128]
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4106              		.loc 1 2487 0 discriminator 2
 4107 0012 0723     		movs	r3, #7
 4108 0014 80F88130 		strb	r3, [r0, #129]
 4109              	.LVL276:
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4110              		.loc 1 2491 0 discriminator 2
 4111 0018 334B     		ldr	r3, .L356
 4112 001a 1B68     		ldr	r3, [r3]
 4113 001c 334A     		ldr	r2, .L356+4
 4114 001e A2FB0323 		umull	r2, r3, r2, r3
 4115 0022 5B0A     		lsrs	r3, r3, #9
 4116 0024 6422     		movs	r2, #100
 4117 0026 02FB03F3 		mul	r3, r2, r3
 4118 002a 0193     		str	r3, [sp, #4]
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4119              		.loc 1 2494 0 discriminator 2
 4120 002c 0368     		ldr	r3, [r0]
 4121 002e 1A68     		ldr	r2, [r3]
 4122 0030 12F4007F 		tst	r2, #512
 4123 0034 14D0     		beq	.L341
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 4124              		.loc 1 2496 0
 4125 0036 1A68     		ldr	r2, [r3]
 4126 0038 42F48062 		orr	r2, r2, #1024
ARM GAS  /tmp/ccOUtRG8.s 			page 152


 4127 003c 1A60     		str	r2, [r3]
 4128              	.L343:
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4129              		.loc 1 2499 0
 4130 003e 019B     		ldr	r3, [sp, #4]
 4131 0040 013B     		subs	r3, r3, #1
 4132 0042 0193     		str	r3, [sp, #4]
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4133              		.loc 1 2500 0
 4134 0044 019B     		ldr	r3, [sp, #4]
 4135 0046 2BB1     		cbz	r3, .L353
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4136              		.loc 1 2506 0
 4137 0048 0368     		ldr	r3, [r0]
 4138 004a 1B68     		ldr	r3, [r3]
 4139 004c 13F4007F 		tst	r3, #512
 4140 0050 F5D1     		bne	.L343
 4141 0052 05E0     		b	.L341
 4142              	.L353:
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4143              		.loc 1 2502 0
 4144 0054 D0F88430 		ldr	r3, [r0, #132]
 4145 0058 43F04003 		orr	r3, r3, #64
 4146 005c C0F88430 		str	r3, [r0, #132]
 4147              	.L341:
 4148 0060 0446     		mov	r4, r0
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4149              		.loc 1 2510 0
 4150 0062 0368     		ldr	r3, [r0]
 4151 0064 9B68     		ldr	r3, [r3, #8]
 4152 0066 13F4004F 		tst	r3, #32768
 4153 006a 07D0     		beq	.L344
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4154              		.loc 1 2512 0
 4155 006c 836F     		ldr	r3, [r0, #120]
 4156 006e 2BB1     		cbz	r3, .L344
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4157              		.loc 1 2515 0
 4158 0070 0022     		movs	r2, #0
 4159 0072 1A65     		str	r2, [r3, #80]
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4160              		.loc 1 2518 0
 4161 0074 806F     		ldr	r0, [r0, #120]
 4162              	.LVL277:
 4163 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 4164              	.LVL278:
 4165 007a F0B9     		cbnz	r0, .L354
 4166              	.L344:
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4167              		.loc 1 2529 0
 4168 007c 2368     		ldr	r3, [r4]
 4169 007e 9B68     		ldr	r3, [r3, #8]
 4170 0080 13F4804F 		tst	r3, #16384
 4171 0084 07D0     		beq	.L345
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4172              		.loc 1 2531 0
 4173 0086 E36F     		ldr	r3, [r4, #124]
ARM GAS  /tmp/ccOUtRG8.s 			page 153


 4174 0088 2BB1     		cbz	r3, .L345
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4175              		.loc 1 2534 0
 4176 008a 0022     		movs	r2, #0
 4177 008c 1A65     		str	r2, [r3, #80]
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4178              		.loc 1 2537 0
 4179 008e E06F     		ldr	r0, [r4, #124]
 4180 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 4181              	.LVL279:
 4182 0094 D0B9     		cbnz	r0, .L355
 4183              	.L345:
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4184              		.loc 1 2548 0
 4185 0096 2046     		mov	r0, r4
 4186 0098 FFF7FEFF 		bl	SPI_AbortTransfer
 4187              	.LVL280:
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4188              		.loc 1 2551 0
 4189 009c D4F88430 		ldr	r3, [r4, #132]
 4190 00a0 402B     		cmp	r3, #64
 4191 00a2 1CD0     		beq	.L348
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4192              		.loc 1 2559 0
 4193 00a4 0020     		movs	r0, #0
 4194 00a6 C4F88400 		str	r0, [r4, #132]
 4195              	.L346:
 4196              	.LVL281:
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4197              		.loc 1 2563 0
 4198 00aa 0023     		movs	r3, #0
 4199 00ac 84F88030 		strb	r3, [r4, #128]
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4200              		.loc 1 2566 0
 4201 00b0 0123     		movs	r3, #1
 4202 00b2 84F88130 		strb	r3, [r4, #129]
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4203              		.loc 1 2569 0
 4204 00b6 02B0     		add	sp, sp, #8
 4205              	.LCFI31:
 4206              		.cfi_remember_state
 4207              		.cfi_def_cfa_offset 8
 4208              		@ sp needed
 4209 00b8 10BD     		pop	{r4, pc}
 4210              	.LVL282:
 4211              	.L354:
 4212              	.LCFI32:
 4213              		.cfi_restore_state
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4214              		.loc 1 2520 0
 4215 00ba A06F     		ldr	r0, [r4, #120]
 4216 00bc FFF7FEFF 		bl	HAL_DMA_GetError
 4217              	.LVL283:
 4218 00c0 2028     		cmp	r0, #32
 4219 00c2 DBD1     		bne	.L344
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4220              		.loc 1 2522 0
ARM GAS  /tmp/ccOUtRG8.s 			page 154


 4221 00c4 4023     		movs	r3, #64
 4222 00c6 C4F88430 		str	r3, [r4, #132]
 4223 00ca D7E7     		b	.L344
 4224              	.L355:
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4225              		.loc 1 2539 0
 4226 00cc E06F     		ldr	r0, [r4, #124]
 4227 00ce FFF7FEFF 		bl	HAL_DMA_GetError
 4228              	.LVL284:
 4229 00d2 2028     		cmp	r0, #32
 4230 00d4 DFD1     		bne	.L345
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4231              		.loc 1 2541 0
 4232 00d6 4023     		movs	r3, #64
 4233 00d8 C4F88430 		str	r3, [r4, #132]
 4234 00dc DBE7     		b	.L345
 4235              	.L348:
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4236              		.loc 1 2554 0
 4237 00de 0120     		movs	r0, #1
 4238 00e0 E3E7     		b	.L346
 4239              	.LVL285:
 4240              	.L347:
 4241              	.LCFI33:
 4242              		.cfi_def_cfa_offset 0
 4243              		.cfi_restore 4
 4244              		.cfi_restore 14
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4245              		.loc 1 2484 0
 4246 00e2 0220     		movs	r0, #2
 4247              	.LVL286:
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4248              		.loc 1 2569 0
 4249 00e4 7047     		bx	lr
 4250              	.L357:
 4251 00e6 00BF     		.align	2
 4252              	.L356:
 4253 00e8 00000000 		.word	SystemCoreClock
 4254 00ec F1197605 		.word	91625969
 4255              		.cfi_endproc
 4256              	.LFE356:
 4258              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4259              		.align	1
 4260              		.global	HAL_SPI_DMAPause
 4261              		.syntax unified
 4262              		.thumb
 4263              		.thumb_func
 4264              		.fpu fpv5-d16
 4266              	HAL_SPI_DMAPause:
 4267              	.LFB358:
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4268              		.loc 1 2708 0
 4269              		.cfi_startproc
 4270              		@ args = 0, pretend = 0, frame = 0
 4271              		@ frame_needed = 0, uses_anonymous_args = 0
 4272              		@ link register save eliminated.
 4273              	.LVL287:
ARM GAS  /tmp/ccOUtRG8.s 			page 155


2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4274              		.loc 1 2710 0
 4275 0000 D0F88430 		ldr	r3, [r0, #132]
 4276 0004 43F48063 		orr	r3, r3, #1024
 4277 0008 C0F88430 		str	r3, [r0, #132]
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4278              		.loc 1 2713 0
 4279 000c 0120     		movs	r0, #1
 4280              	.LVL288:
 4281 000e 7047     		bx	lr
 4282              		.cfi_endproc
 4283              	.LFE358:
 4285              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4286              		.align	1
 4287              		.global	HAL_SPI_DMAResume
 4288              		.syntax unified
 4289              		.thumb
 4290              		.thumb_func
 4291              		.fpu fpv5-d16
 4293              	HAL_SPI_DMAResume:
 4294              	.LFB359:
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4295              		.loc 1 2723 0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 0
 4298              		@ frame_needed = 0, uses_anonymous_args = 0
 4299              		@ link register save eliminated.
 4300              	.LVL289:
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4301              		.loc 1 2725 0
 4302 0000 D0F88430 		ldr	r3, [r0, #132]
 4303 0004 43F48063 		orr	r3, r3, #1024
 4304 0008 C0F88430 		str	r3, [r0, #132]
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4305              		.loc 1 2728 0
 4306 000c 0120     		movs	r0, #1
 4307              	.LVL290:
 4308 000e 7047     		bx	lr
 4309              		.cfi_endproc
 4310              	.LFE359:
 4312              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4313              		.align	1
 4314              		.global	HAL_SPI_DMAStop
 4315              		.syntax unified
 4316              		.thumb
 4317              		.thumb_func
 4318              		.fpu fpv5-d16
 4320              	HAL_SPI_DMAStop:
 4321              	.LFB360:
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4322              		.loc 1 2738 0
 4323              		.cfi_startproc
 4324              		@ args = 0, pretend = 0, frame = 0
 4325              		@ frame_needed = 0, uses_anonymous_args = 0
 4326              		@ link register save eliminated.
 4327              	.LVL291:
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 156


 4328              		.loc 1 2740 0
 4329 0000 D0F88430 		ldr	r3, [r0, #132]
 4330 0004 43F48063 		orr	r3, r3, #1024
 4331 0008 C0F88430 		str	r3, [r0, #132]
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4332              		.loc 1 2743 0
 4333 000c 0120     		movs	r0, #1
 4334              	.LVL292:
 4335 000e 7047     		bx	lr
 4336              		.cfi_endproc
 4337              	.LFE360:
 4339              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4340              		.align	1
 4341              		.weak	HAL_SPI_TxCpltCallback
 4342              		.syntax unified
 4343              		.thumb
 4344              		.thumb_func
 4345              		.fpu fpv5-d16
 4347              	HAL_SPI_TxCpltCallback:
 4348              	.LFB362:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4349              		.loc 1 3002 0
 4350              		.cfi_startproc
 4351              		@ args = 0, pretend = 0, frame = 0
 4352              		@ frame_needed = 0, uses_anonymous_args = 0
 4353              		@ link register save eliminated.
 4354              	.LVL293:
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4355              		.loc 1 3009 0
 4356 0000 7047     		bx	lr
 4357              		.cfi_endproc
 4358              	.LFE362:
 4360              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4361              		.align	1
 4362              		.syntax unified
 4363              		.thumb
 4364              		.thumb_func
 4365              		.fpu fpv5-d16
 4367              	SPI_DMATransmitCplt:
 4368              	.LFB372:
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4369              		.loc 1 3188 0
 4370              		.cfi_startproc
 4371              		@ args = 0, pretend = 0, frame = 0
 4372              		@ frame_needed = 0, uses_anonymous_args = 0
 4373              	.LVL294:
 4374 0000 08B5     		push	{r3, lr}
 4375              	.LCFI34:
 4376              		.cfi_def_cfa_offset 8
 4377              		.cfi_offset 3, -8
 4378              		.cfi_offset 14, -4
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4379              		.loc 1 3189 0
 4380 0002 806B     		ldr	r0, [r0, #56]
 4381              	.LVL295:
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4382              		.loc 1 3191 0
ARM GAS  /tmp/ccOUtRG8.s 			page 157


 4383 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4384 0008 DBB2     		uxtb	r3, r3
 4385 000a 072B     		cmp	r3, #7
 4386 000c 09D0     		beq	.L362
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4387              		.loc 1 3193 0
 4388 000e 836F     		ldr	r3, [r0, #120]
 4389 0010 DB69     		ldr	r3, [r3, #28]
 4390 0012 B3F5807F 		cmp	r3, #256
 4391 0016 05D0     		beq	.L366
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4392              		.loc 1 3204 0
 4393 0018 0268     		ldr	r2, [r0]
 4394 001a 1369     		ldr	r3, [r2, #16]
 4395 001c 43F00803 		orr	r3, r3, #8
 4396 0020 1361     		str	r3, [r2, #16]
 4397              	.LVL296:
 4398              	.L362:
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4399              		.loc 1 3207 0
 4400 0022 08BD     		pop	{r3, pc}
 4401              	.LVL297:
 4402              	.L366:
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4403              		.loc 1 3198 0
 4404 0024 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4405              	.LVL298:
 4406 0028 FBE7     		b	.L362
 4407              		.cfi_endproc
 4408              	.LFE372:
 4410              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4411              		.align	1
 4412              		.weak	HAL_SPI_RxCpltCallback
 4413              		.syntax unified
 4414              		.thumb
 4415              		.thumb_func
 4416              		.fpu fpv5-d16
 4418              	HAL_SPI_RxCpltCallback:
 4419              	.LFB363:
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4420              		.loc 1 3018 0
 4421              		.cfi_startproc
 4422              		@ args = 0, pretend = 0, frame = 0
 4423              		@ frame_needed = 0, uses_anonymous_args = 0
 4424              		@ link register save eliminated.
 4425              	.LVL299:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4426              		.loc 1 3025 0
 4427 0000 7047     		bx	lr
 4428              		.cfi_endproc
 4429              	.LFE363:
 4431              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4432              		.align	1
 4433              		.syntax unified
 4434              		.thumb
 4435              		.thumb_func
 4436              		.fpu fpv5-d16
ARM GAS  /tmp/ccOUtRG8.s 			page 158


 4438              	SPI_DMAReceiveCplt:
 4439              	.LFB373:
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4440              		.loc 1 3216 0
 4441              		.cfi_startproc
 4442              		@ args = 0, pretend = 0, frame = 0
 4443              		@ frame_needed = 0, uses_anonymous_args = 0
 4444              	.LVL300:
 4445 0000 08B5     		push	{r3, lr}
 4446              	.LCFI35:
 4447              		.cfi_def_cfa_offset 8
 4448              		.cfi_offset 3, -8
 4449              		.cfi_offset 14, -4
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4450              		.loc 1 3217 0
 4451 0002 806B     		ldr	r0, [r0, #56]
 4452              	.LVL301:
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4453              		.loc 1 3219 0
 4454 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4455 0008 DBB2     		uxtb	r3, r3
 4456 000a 072B     		cmp	r3, #7
 4457 000c 09D0     		beq	.L368
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4458              		.loc 1 3221 0
 4459 000e C36F     		ldr	r3, [r0, #124]
 4460 0010 DB69     		ldr	r3, [r3, #28]
 4461 0012 B3F5807F 		cmp	r3, #256
 4462 0016 05D0     		beq	.L372
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4463              		.loc 1 3232 0
 4464 0018 0268     		ldr	r2, [r0]
 4465 001a 1369     		ldr	r3, [r2, #16]
 4466 001c 43F00803 		orr	r3, r3, #8
 4467 0020 1361     		str	r3, [r2, #16]
 4468              	.LVL302:
 4469              	.L368:
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4470              		.loc 1 3235 0
 4471 0022 08BD     		pop	{r3, pc}
 4472              	.LVL303:
 4473              	.L372:
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4474              		.loc 1 3226 0
 4475 0024 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4476              	.LVL304:
 4477 0028 FBE7     		b	.L368
 4478              		.cfi_endproc
 4479              	.LFE373:
 4481              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4482              		.align	1
 4483              		.weak	HAL_SPI_TxRxCpltCallback
 4484              		.syntax unified
 4485              		.thumb
 4486              		.thumb_func
 4487              		.fpu fpv5-d16
 4489              	HAL_SPI_TxRxCpltCallback:
ARM GAS  /tmp/ccOUtRG8.s 			page 159


 4490              	.LFB364:
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4491              		.loc 1 3034 0
 4492              		.cfi_startproc
 4493              		@ args = 0, pretend = 0, frame = 0
 4494              		@ frame_needed = 0, uses_anonymous_args = 0
 4495              		@ link register save eliminated.
 4496              	.LVL305:
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4497              		.loc 1 3041 0
 4498 0000 7047     		bx	lr
 4499              		.cfi_endproc
 4500              	.LFE364:
 4502              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4503              		.align	1
 4504              		.syntax unified
 4505              		.thumb
 4506              		.thumb_func
 4507              		.fpu fpv5-d16
 4509              	SPI_DMATransmitReceiveCplt:
 4510              	.LFB374:
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4511              		.loc 1 3244 0
 4512              		.cfi_startproc
 4513              		@ args = 0, pretend = 0, frame = 0
 4514              		@ frame_needed = 0, uses_anonymous_args = 0
 4515              	.LVL306:
 4516 0000 08B5     		push	{r3, lr}
 4517              	.LCFI36:
 4518              		.cfi_def_cfa_offset 8
 4519              		.cfi_offset 3, -8
 4520              		.cfi_offset 14, -4
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4521              		.loc 1 3245 0
 4522 0002 806B     		ldr	r0, [r0, #56]
 4523              	.LVL307:
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4524              		.loc 1 3247 0
 4525 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4526 0008 DBB2     		uxtb	r3, r3
 4527 000a 072B     		cmp	r3, #7
 4528 000c 09D0     		beq	.L374
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4529              		.loc 1 3249 0
 4530 000e 836F     		ldr	r3, [r0, #120]
 4531 0010 DB69     		ldr	r3, [r3, #28]
 4532 0012 B3F5807F 		cmp	r3, #256
 4533 0016 05D0     		beq	.L378
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4534              		.loc 1 3260 0
 4535 0018 0268     		ldr	r2, [r0]
 4536 001a 1369     		ldr	r3, [r2, #16]
 4537 001c 43F00803 		orr	r3, r3, #8
 4538 0020 1361     		str	r3, [r2, #16]
 4539              	.LVL308:
 4540              	.L374:
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 160


 4541              		.loc 1 3263 0
 4542 0022 08BD     		pop	{r3, pc}
 4543              	.LVL309:
 4544              	.L378:
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4545              		.loc 1 3254 0
 4546 0024 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4547              	.LVL310:
 4548 0028 FBE7     		b	.L374
 4549              		.cfi_endproc
 4550              	.LFE374:
 4552              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4553              		.align	1
 4554              		.weak	HAL_SPI_TxHalfCpltCallback
 4555              		.syntax unified
 4556              		.thumb
 4557              		.thumb_func
 4558              		.fpu fpv5-d16
 4560              	HAL_SPI_TxHalfCpltCallback:
 4561              	.LFB365:
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4562              		.loc 1 3050 0
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 0
 4565              		@ frame_needed = 0, uses_anonymous_args = 0
 4566              		@ link register save eliminated.
 4567              	.LVL311:
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4568              		.loc 1 3057 0
 4569 0000 7047     		bx	lr
 4570              		.cfi_endproc
 4571              	.LFE365:
 4573              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4574              		.align	1
 4575              		.syntax unified
 4576              		.thumb
 4577              		.thumb_func
 4578              		.fpu fpv5-d16
 4580              	SPI_DMAHalfTransmitCplt:
 4581              	.LFB375:
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4582              		.loc 1 3272 0
 4583              		.cfi_startproc
 4584              		@ args = 0, pretend = 0, frame = 0
 4585              		@ frame_needed = 0, uses_anonymous_args = 0
 4586              	.LVL312:
 4587 0000 08B5     		push	{r3, lr}
 4588              	.LCFI37:
 4589              		.cfi_def_cfa_offset 8
 4590              		.cfi_offset 3, -8
 4591              		.cfi_offset 14, -4
 4592              	.LVL313:
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4593              		.loc 1 3278 0
 4594 0002 806B     		ldr	r0, [r0, #56]
 4595              	.LVL314:
 4596 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
ARM GAS  /tmp/ccOUtRG8.s 			page 161


 4597              	.LVL315:
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4598              		.loc 1 3280 0
 4599 0008 08BD     		pop	{r3, pc}
 4600              		.cfi_endproc
 4601              	.LFE375:
 4603              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4604              		.align	1
 4605              		.weak	HAL_SPI_RxHalfCpltCallback
 4606              		.syntax unified
 4607              		.thumb
 4608              		.thumb_func
 4609              		.fpu fpv5-d16
 4611              	HAL_SPI_RxHalfCpltCallback:
 4612              	.LFB366:
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4613              		.loc 1 3066 0
 4614              		.cfi_startproc
 4615              		@ args = 0, pretend = 0, frame = 0
 4616              		@ frame_needed = 0, uses_anonymous_args = 0
 4617              		@ link register save eliminated.
 4618              	.LVL316:
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4619              		.loc 1 3073 0
 4620 0000 7047     		bx	lr
 4621              		.cfi_endproc
 4622              	.LFE366:
 4624              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4625              		.align	1
 4626              		.syntax unified
 4627              		.thumb
 4628              		.thumb_func
 4629              		.fpu fpv5-d16
 4631              	SPI_DMAHalfReceiveCplt:
 4632              	.LFB376:
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4633              		.loc 1 3289 0
 4634              		.cfi_startproc
 4635              		@ args = 0, pretend = 0, frame = 0
 4636              		@ frame_needed = 0, uses_anonymous_args = 0
 4637              	.LVL317:
 4638 0000 08B5     		push	{r3, lr}
 4639              	.LCFI38:
 4640              		.cfi_def_cfa_offset 8
 4641              		.cfi_offset 3, -8
 4642              		.cfi_offset 14, -4
 4643              	.LVL318:
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4644              		.loc 1 3295 0
 4645 0002 806B     		ldr	r0, [r0, #56]
 4646              	.LVL319:
 4647 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4648              	.LVL320:
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4649              		.loc 1 3297 0
 4650 0008 08BD     		pop	{r3, pc}
 4651              		.cfi_endproc
ARM GAS  /tmp/ccOUtRG8.s 			page 162


 4652              	.LFE376:
 4654              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4655              		.align	1
 4656              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4657              		.syntax unified
 4658              		.thumb
 4659              		.thumb_func
 4660              		.fpu fpv5-d16
 4662              	HAL_SPI_TxRxHalfCpltCallback:
 4663              	.LFB367:
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4664              		.loc 1 3082 0
 4665              		.cfi_startproc
 4666              		@ args = 0, pretend = 0, frame = 0
 4667              		@ frame_needed = 0, uses_anonymous_args = 0
 4668              		@ link register save eliminated.
 4669              	.LVL321:
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4670              		.loc 1 3089 0
 4671 0000 7047     		bx	lr
 4672              		.cfi_endproc
 4673              	.LFE367:
 4675              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4676              		.align	1
 4677              		.syntax unified
 4678              		.thumb
 4679              		.thumb_func
 4680              		.fpu fpv5-d16
 4682              	SPI_DMAHalfTransmitReceiveCplt:
 4683              	.LFB377:
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4684              		.loc 1 3306 0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 4688              	.LVL322:
 4689 0000 08B5     		push	{r3, lr}
 4690              	.LCFI39:
 4691              		.cfi_def_cfa_offset 8
 4692              		.cfi_offset 3, -8
 4693              		.cfi_offset 14, -4
 4694              	.LVL323:
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4695              		.loc 1 3312 0
 4696 0002 806B     		ldr	r0, [r0, #56]
 4697              	.LVL324:
 4698 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4699              	.LVL325:
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4700              		.loc 1 3314 0
 4701 0008 08BD     		pop	{r3, pc}
 4702              		.cfi_endproc
 4703              	.LFE377:
 4705              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4706              		.align	1
 4707              		.weak	HAL_SPI_ErrorCallback
 4708              		.syntax unified
ARM GAS  /tmp/ccOUtRG8.s 			page 163


 4709              		.thumb
 4710              		.thumb_func
 4711              		.fpu fpv5-d16
 4713              	HAL_SPI_ErrorCallback:
 4714              	.LFB368:
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4715              		.loc 1 3098 0
 4716              		.cfi_startproc
 4717              		@ args = 0, pretend = 0, frame = 0
 4718              		@ frame_needed = 0, uses_anonymous_args = 0
 4719              		@ link register save eliminated.
 4720              	.LVL326:
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4721              		.loc 1 3108 0
 4722 0000 7047     		bx	lr
 4723              		.cfi_endproc
 4724              	.LFE368:
 4726              		.section	.text.SPI_DMAError,"ax",%progbits
 4727              		.align	1
 4728              		.syntax unified
 4729              		.thumb
 4730              		.thumb_func
 4731              		.fpu fpv5-d16
 4733              	SPI_DMAError:
 4734              	.LFB378:
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4735              		.loc 1 3323 0
 4736              		.cfi_startproc
 4737              		@ args = 0, pretend = 0, frame = 0
 4738              		@ frame_needed = 0, uses_anonymous_args = 0
 4739              	.LVL327:
 4740 0000 10B5     		push	{r4, lr}
 4741              	.LCFI40:
 4742              		.cfi_def_cfa_offset 8
 4743              		.cfi_offset 4, -8
 4744              		.cfi_offset 14, -4
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4745              		.loc 1 3324 0
 4746 0002 846B     		ldr	r4, [r0, #56]
 4747              	.LVL328:
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4748              		.loc 1 3327 0
 4749 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 4750              	.LVL329:
 4751 0008 0228     		cmp	r0, #2
 4752 000a 0ED0     		beq	.L389
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4753              		.loc 1 3330 0
 4754 000c 2046     		mov	r0, r4
 4755 000e FFF7FEFF 		bl	SPI_CloseTransfer
 4756              	.LVL330:
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4757              		.loc 1 3332 0
 4758 0012 D4F88430 		ldr	r3, [r4, #132]
 4759 0016 43F01003 		orr	r3, r3, #16
 4760 001a C4F88430 		str	r3, [r4, #132]
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
ARM GAS  /tmp/ccOUtRG8.s 			page 164


 4761              		.loc 1 3333 0
 4762 001e 0123     		movs	r3, #1
 4763 0020 84F88130 		strb	r3, [r4, #129]
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4764              		.loc 1 3337 0
 4765 0024 2046     		mov	r0, r4
 4766 0026 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4767              	.LVL331:
 4768              	.L389:
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4769              		.loc 1 3340 0
 4770 002a 10BD     		pop	{r4, pc}
 4771              		.cfi_endproc
 4772              	.LFE378:
 4774              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4775              		.align	1
 4776              		.global	HAL_SPI_IRQHandler
 4777              		.syntax unified
 4778              		.thumb
 4779              		.thumb_func
 4780              		.fpu fpv5-d16
 4782              	HAL_SPI_IRQHandler:
 4783              	.LFB361:
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->IER;
 4784              		.loc 1 2752 0
 4785              		.cfi_startproc
 4786              		@ args = 0, pretend = 0, frame = 0
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
 4788              	.LVL332:
 4789 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4790              	.LCFI41:
 4791              		.cfi_def_cfa_offset 32
 4792              		.cfi_offset 4, -32
 4793              		.cfi_offset 5, -28
 4794              		.cfi_offset 6, -24
 4795              		.cfi_offset 7, -20
 4796              		.cfi_offset 8, -16
 4797              		.cfi_offset 9, -12
 4798              		.cfi_offset 10, -8
 4799              		.cfi_offset 14, -4
 4800 0004 0446     		mov	r4, r0
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4801              		.loc 1 2753 0
 4802 0006 0668     		ldr	r6, [r0]
 4803 0008 D6F81090 		ldr	r9, [r6, #16]
 4804              	.LVL333:
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t trigger  = itsource & itflag;
 4805              		.loc 1 2754 0
 4806 000c D6F81480 		ldr	r8, [r6, #20]
 4807              	.LVL334:
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t cfg1     = hspi->Instance->CFG1;
 4808              		.loc 1 2755 0
 4809 0010 09EA0805 		and	r5, r9, r8
 4810              	.LVL335:
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t handled  = 0UL;
 4811              		.loc 1 2756 0
 4812 0014 D6F808A0 		ldr	r10, [r6, #8]
ARM GAS  /tmp/ccOUtRG8.s 			page 165


 4813              	.LVL336:
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 4814              		.loc 1 2759 0
 4815 0018 90F88170 		ldrb	r7, [r0, #129]	@ zero_extendqisi2
 4816 001c FFB2     		uxtb	r7, r7
 4817              	.LVL337:
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4818              		.loc 1 2766 0
 4819 001e 05F06403 		and	r3, r5, #100
 4820 0022 042B     		cmp	r3, #4
 4821 0024 16D1     		bne	.L416
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
 4822              		.loc 1 2768 0
 4823 0026 436F     		ldr	r3, [r0, #116]
 4824 0028 9847     		blx	r3
 4825              	.LVL338:
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 4826              		.loc 1 2769 0
 4827 002a 236F     		ldr	r3, [r4, #112]
 4828 002c 2046     		mov	r0, r4
 4829 002e 9847     		blx	r3
 4830              	.LVL339:
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4831              		.loc 1 2770 0
 4832 0030 0123     		movs	r3, #1
 4833              	.LVL340:
 4834              	.L393:
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4835              		.loc 1 2774 0
 4836 0032 05F04502 		and	r2, r5, #69
 4837 0036 012A     		cmp	r2, #1
 4838 0038 03D1     		bne	.L394
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 4839              		.loc 1 2776 0
 4840 003a 236F     		ldr	r3, [r4, #112]
 4841              	.LVL341:
 4842 003c 2046     		mov	r0, r4
 4843 003e 9847     		blx	r3
 4844              	.LVL342:
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4845              		.loc 1 2777 0
 4846 0040 0123     		movs	r3, #1
 4847              	.LVL343:
 4848              	.L394:
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4849              		.loc 1 2781 0
 4850 0042 05F02602 		and	r2, r5, #38
 4851 0046 022A     		cmp	r2, #2
 4852 0048 06D1     		bne	.L395
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 4853              		.loc 1 2783 0
 4854 004a 636F     		ldr	r3, [r4, #116]
 4855              	.LVL344:
 4856 004c 2046     		mov	r0, r4
 4857 004e 9847     		blx	r3
 4858              	.LVL345:
 4859              	.L392:
ARM GAS  /tmp/ccOUtRG8.s 			page 166


2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4860              		.loc 1 2993 0
 4861 0050 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4862              	.LVL346:
 4863              	.L416:
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4864              		.loc 1 2757 0
 4865 0054 0023     		movs	r3, #0
 4866 0056 ECE7     		b	.L393
 4867              	.LVL347:
 4868              	.L395:
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4869              		.loc 1 2796 0
 4870 0058 002B     		cmp	r3, #0
 4871 005a F9D1     		bne	.L392
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4872              		.loc 1 2802 0
 4873 005c 15F0080F 		tst	r5, #8
 4874 0060 6CD0     		beq	.L397
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 4875              		.loc 1 2805 0
 4876 0062 2268     		ldr	r2, [r4]
 4877 0064 9369     		ldr	r3, [r2, #24]
 4878              	.LVL348:
 4879 0066 43F00803 		orr	r3, r3, #8
 4880 006a 9361     		str	r3, [r2, #24]
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 4881              		.loc 1 2806 0
 4882 006c 2268     		ldr	r2, [r4]
 4883 006e 9369     		ldr	r3, [r2, #24]
 4884 0070 43F01003 		orr	r3, r3, #16
 4885 0074 9361     		str	r3, [r2, #24]
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4886              		.loc 1 2807 0
 4887 0076 2268     		ldr	r2, [r4]
 4888 0078 9369     		ldr	r3, [r2, #24]
 4889 007a 43F40063 		orr	r3, r3, #2048
 4890 007e 9361     		str	r3, [r2, #24]
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4891              		.loc 1 2810 0
 4892 0080 2268     		ldr	r2, [r4]
 4893 0082 1369     		ldr	r3, [r2, #16]
 4894 0084 23F00803 		bic	r3, r3, #8
 4895 0088 1361     		str	r3, [r2, #16]
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_RX) && (hspi->hdmatx->Init.Mode == DMA_NORMAL)) ||  // DMA is u
 4896              		.loc 1 2813 0
 4897 008a 1AF4404F 		tst	r10, #49152
 4898 008e 09D0     		beq	.L398
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_RX) && (hspi->hdmatx->Init.Mode == DMA_NORMAL)) ||  // DMA is u
 4899              		.loc 1 2813 0 is_stmt 0 discriminator 1
 4900 0090 042F     		cmp	r7, #4
 4901 0092 02D0     		beq	.L399
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_TX) && (hspi->hdmarx->Init.Mode == DMA_NORMAL)))    // DMA is u
 4902              		.loc 1 2814 0 is_stmt 1
 4903 0094 A36F     		ldr	r3, [r4, #120]
 4904 0096 DB69     		ldr	r3, [r3, #28]
 4905 0098 23B1     		cbz	r3, .L398
ARM GAS  /tmp/ccOUtRG8.s 			page 167


 4906              	.L399:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((State != HAL_SPI_STATE_BUSY_TX) && (hspi->hdmarx->Init.Mode == DMA_NORMAL)))    // DMA is u
 4907              		.loc 1 2814 0 is_stmt 0 discriminator 1
 4908 009a 032F     		cmp	r7, #3
 4909 009c 11D0     		beq	.L400
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4910              		.loc 1 2815 0 is_stmt 1
 4911 009e E36F     		ldr	r3, [r4, #124]
 4912 00a0 DB69     		ldr	r3, [r3, #28]
 4913 00a2 73B9     		cbnz	r3, .L400
 4914              	.L398:
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4915              		.loc 1 2818 0
 4916 00a4 2368     		ldr	r3, [r4]
 4917 00a6 9B68     		ldr	r3, [r3, #8]
 4918 00a8 13F4404F 		tst	r3, #49152
 4919 00ac 21D0     		beq	.L401
 4920              	.L402:
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4921              		.loc 1 2851 0
 4922 00ae 2046     		mov	r0, r4
 4923 00b0 FFF7FEFF 		bl	SPI_CloseTransfer
 4924              	.LVL349:
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4925              		.loc 1 2853 0
 4926 00b4 0123     		movs	r3, #1
 4927 00b6 84F88130 		strb	r3, [r4, #129]
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4928              		.loc 1 2854 0
 4929 00ba D4F88430 		ldr	r3, [r4, #132]
 4930 00be 002B     		cmp	r3, #0
 4931 00c0 30D1     		bne	.L418
 4932              	.L400:
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4933              		.loc 1 2881 0
 4934 00c2 052F     		cmp	r7, #5
 4935 00c4 32D0     		beq	.L419
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4936              		.loc 1 2885 0
 4937 00c6 042F     		cmp	r7, #4
 4938 00c8 34D0     		beq	.L420
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4939              		.loc 1 2889 0
 4940 00ca 032F     		cmp	r7, #3
 4941 00cc C0D1     		bne	.L392
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4942              		.loc 1 2891 0
 4943 00ce 2046     		mov	r0, r4
 4944 00d0 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4945              	.LVL350:
 4946 00d4 BCE7     		b	.L392
 4947              	.L403:
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 4948              		.loc 1 2830 0
 4949 00d6 072B     		cmp	r3, #7
 4950 00d8 1BD9     		bls	.L405
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccOUtRG8.s 			page 168


 4951              		.loc 1 2833 0
 4952 00da 636E     		ldr	r3, [r4, #100]
 4953 00dc 328E     		ldrh	r2, [r6, #48]
 4954 00de 1A80     		strh	r2, [r3]	@ movhi
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 4955              		.loc 1 2837 0
 4956 00e0 636E     		ldr	r3, [r4, #100]
 4957 00e2 0233     		adds	r3, r3, #2
 4958 00e4 6366     		str	r3, [r4, #100]
 4959              	.L404:
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4960              		.loc 1 2846 0
 4961 00e6 B4F86A30 		ldrh	r3, [r4, #106]
 4962 00ea 013B     		subs	r3, r3, #1
 4963 00ec 9BB2     		uxth	r3, r3
 4964 00ee A4F86A30 		strh	r3, [r4, #106]	@ movhi
 4965              	.L401:
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4966              		.loc 1 2821 0
 4967 00f2 B4F86A30 		ldrh	r3, [r4, #106]
 4968 00f6 9BB2     		uxth	r3, r3
 4969 00f8 002B     		cmp	r3, #0
 4970 00fa D8D0     		beq	.L402
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 4971              		.loc 1 2824 0
 4972 00fc E368     		ldr	r3, [r4, #12]
 4973 00fe 0F2B     		cmp	r3, #15
 4974 0100 E9D9     		bls	.L403
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint32_t);
 4975              		.loc 1 2826 0
 4976 0102 2268     		ldr	r2, [r4]
 4977 0104 636E     		ldr	r3, [r4, #100]
 4978 0106 126B     		ldr	r2, [r2, #48]
 4979 0108 1A60     		str	r2, [r3]
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 4980              		.loc 1 2827 0
 4981 010a 636E     		ldr	r3, [r4, #100]
 4982 010c 0433     		adds	r3, r3, #4
 4983 010e 6366     		str	r3, [r4, #100]
 4984 0110 E9E7     		b	.L404
 4985              	.L405:
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             hspi->pRxBuffPtr += sizeof(uint8_t);
 4986              		.loc 1 2842 0
 4987 0112 2268     		ldr	r2, [r4]
 4988 0114 636E     		ldr	r3, [r4, #100]
 4989 0116 92F83020 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
 4990 011a 1A70     		strb	r2, [r3]
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 4991              		.loc 1 2843 0
 4992 011c 636E     		ldr	r3, [r4, #100]
 4993 011e 0133     		adds	r3, r3, #1
 4994 0120 6366     		str	r3, [r4, #100]
 4995 0122 E0E7     		b	.L404
 4996              	.L418:
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4997              		.loc 1 2859 0
 4998 0124 2046     		mov	r0, r4
ARM GAS  /tmp/ccOUtRG8.s 			page 169


 4999 0126 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5000              	.LVL351:
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 5001              		.loc 1 2861 0
 5002 012a 91E7     		b	.L392
 5003              	.L419:
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5004              		.loc 1 2883 0
 5005 012c 2046     		mov	r0, r4
 5006 012e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5007              	.LVL352:
 5008 0132 8DE7     		b	.L392
 5009              	.L420:
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5010              		.loc 1 2887 0
 5011 0134 2046     		mov	r0, r4
 5012 0136 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5013              	.LVL353:
 5014 013a 89E7     		b	.L392
 5015              	.LVL354:
 5016              	.L397:
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5017              		.loc 1 2902 0
 5018 013c 18F4006F 		tst	r8, #2048
 5019 0140 02D0     		beq	.L409
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5020              		.loc 1 2902 0 is_stmt 0 discriminator 1
 5021 0142 19F0080F 		tst	r9, #8
 5022 0146 74D1     		bne	.L421
 5023              	.L409:
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5024              		.loc 1 2911 0 is_stmt 1
 5025 0148 15F4587F 		tst	r5, #864
 5026 014c 80D0     		beq	.L392
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5027              		.loc 1 2914 0
 5028 014e 15F0400F 		tst	r5, #64
 5029 0152 0AD0     		beq	.L410
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5030              		.loc 1 2916 0
 5031 0154 D4F88430 		ldr	r3, [r4, #132]
 5032              	.LVL355:
 5033 0158 43F00403 		orr	r3, r3, #4
 5034 015c C4F88430 		str	r3, [r4, #132]
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5035              		.loc 1 2917 0
 5036 0160 2268     		ldr	r2, [r4]
 5037 0162 9369     		ldr	r3, [r2, #24]
 5038 0164 43F04003 		orr	r3, r3, #64
 5039 0168 9361     		str	r3, [r2, #24]
 5040              	.L410:
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5041              		.loc 1 2921 0
 5042 016a 15F4007F 		tst	r5, #512
 5043 016e 0AD0     		beq	.L411
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5044              		.loc 1 2923 0
ARM GAS  /tmp/ccOUtRG8.s 			page 170


 5045 0170 D4F88430 		ldr	r3, [r4, #132]
 5046 0174 43F00103 		orr	r3, r3, #1
 5047 0178 C4F88430 		str	r3, [r4, #132]
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5048              		.loc 1 2924 0
 5049 017c 2268     		ldr	r2, [r4]
 5050 017e 9369     		ldr	r3, [r2, #24]
 5051 0180 43F40073 		orr	r3, r3, #512
 5052 0184 9361     		str	r3, [r2, #24]
 5053              	.L411:
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5054              		.loc 1 2928 0
 5055 0186 15F4807F 		tst	r5, #256
 5056 018a 0AD0     		beq	.L412
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5057              		.loc 1 2930 0
 5058 018c D4F88430 		ldr	r3, [r4, #132]
 5059 0190 43F00803 		orr	r3, r3, #8
 5060 0194 C4F88430 		str	r3, [r4, #132]
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5061              		.loc 1 2931 0
 5062 0198 2268     		ldr	r2, [r4]
 5063 019a 9369     		ldr	r3, [r2, #24]
 5064 019c 43F48073 		orr	r3, r3, #256
 5065 01a0 9361     		str	r3, [r2, #24]
 5066              	.L412:
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5067              		.loc 1 2935 0
 5068 01a2 15F0200F 		tst	r5, #32
 5069 01a6 0AD0     		beq	.L413
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 5070              		.loc 1 2937 0
 5071 01a8 D4F88430 		ldr	r3, [r4, #132]
 5072 01ac 43F08003 		orr	r3, r3, #128
 5073 01b0 C4F88430 		str	r3, [r4, #132]
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5074              		.loc 1 2938 0
 5075 01b4 2268     		ldr	r2, [r4]
 5076 01b6 9369     		ldr	r3, [r2, #24]
 5077 01b8 43F02003 		orr	r3, r3, #32
 5078 01bc 9361     		str	r3, [r2, #24]
 5079              	.L413:
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5080              		.loc 1 2941 0
 5081 01be D4F88430 		ldr	r3, [r4, #132]
 5082 01c2 002B     		cmp	r3, #0
 5083 01c4 3FF444AF 		beq	.L392
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5084              		.loc 1 2944 0
 5085 01c8 2268     		ldr	r2, [r4]
 5086 01ca 1368     		ldr	r3, [r2]
 5087 01cc 23F00103 		bic	r3, r3, #1
 5088 01d0 1360     		str	r3, [r2]
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5089              		.loc 1 2947 0
 5090 01d2 2268     		ldr	r2, [r4]
 5091 01d4 1169     		ldr	r1, [r2, #16]
ARM GAS  /tmp/ccOUtRG8.s 			page 171


 5092 01d6 1D4B     		ldr	r3, .L422
 5093 01d8 0B40     		ands	r3, r3, r1
 5094 01da 1361     		str	r3, [r2, #16]
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 5095              		.loc 1 2950 0
 5096 01dc 0AF4404A 		and	r10, r10, #49152
 5097              	.LVL356:
 5098 01e0 BAF5404F 		cmp	r10, #49152
 5099 01e4 2BD1     		bne	.L414
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5100              		.loc 1 2953 0
 5101 01e6 2268     		ldr	r2, [r4]
 5102 01e8 9368     		ldr	r3, [r2, #8]
 5103 01ea 23F44043 		bic	r3, r3, #49152
 5104 01ee 9360     		str	r3, [r2, #8]
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5105              		.loc 1 2956 0
 5106 01f0 E36F     		ldr	r3, [r4, #124]
 5107 01f2 5BB1     		cbz	r3, .L415
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5108              		.loc 1 2960 0
 5109 01f4 164A     		ldr	r2, .L422+4
 5110 01f6 1A65     		str	r2, [r3, #80]
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 5111              		.loc 1 2961 0
 5112 01f8 E06F     		ldr	r0, [r4, #124]
 5113 01fa FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5114              	.LVL357:
 5115 01fe 28B1     		cbz	r0, .L415
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 5116              		.loc 1 2963 0
 5117 0200 D4F88430 		ldr	r3, [r4, #132]
 5118 0204 43F04003 		orr	r3, r3, #64
 5119 0208 C4F88430 		str	r3, [r4, #132]
 5120              	.L415:
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5121              		.loc 1 2967 0
 5122 020c A36F     		ldr	r3, [r4, #120]
 5123 020e 002B     		cmp	r3, #0
 5124 0210 3FF41EAF 		beq	.L392
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 5125              		.loc 1 2971 0
 5126 0214 0E4A     		ldr	r2, .L422+4
 5127 0216 1A65     		str	r2, [r3, #80]
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 5128              		.loc 1 2972 0
 5129 0218 A06F     		ldr	r0, [r4, #120]
 5130 021a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5131              	.LVL358:
 5132 021e 0028     		cmp	r0, #0
 5133 0220 3FF416AF 		beq	.L392
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 5134              		.loc 1 2974 0
 5135 0224 D4F88430 		ldr	r3, [r4, #132]
 5136 0228 43F04003 		orr	r3, r3, #64
 5137 022c C4F88430 		str	r3, [r4, #132]
 5138 0230 0EE7     		b	.L392
ARM GAS  /tmp/ccOUtRG8.s 			page 172


 5139              	.LVL359:
 5140              	.L421:
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5141              		.loc 1 2905 0
 5142 0232 2268     		ldr	r2, [r4]
 5143 0234 9369     		ldr	r3, [r2, #24]
 5144              	.LVL360:
 5145 0236 43F40063 		orr	r3, r3, #2048
 5146 023a 9361     		str	r3, [r2, #24]
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 5147              		.loc 1 2907 0
 5148 023c 08E7     		b	.L392
 5149              	.LVL361:
 5150              	.L414:
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5151              		.loc 1 2981 0
 5152 023e 0123     		movs	r3, #1
 5153 0240 84F88130 		strb	r3, [r4, #129]
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5154              		.loc 1 2987 0
 5155 0244 2046     		mov	r0, r4
 5156 0246 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5157              	.LVL362:
 5158 024a 01E7     		b	.L392
 5159              	.L423:
 5160              		.align	2
 5161              	.L422:
 5162 024c 94FCFFFF 		.word	-876
 5163 0250 00000000 		.word	SPI_DMAAbortOnError
 5164              		.cfi_endproc
 5165              	.LFE361:
 5167              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5168              		.align	1
 5169              		.syntax unified
 5170              		.thumb
 5171              		.thumb_func
 5172              		.fpu fpv5-d16
 5174              	SPI_DMAAbortOnError:
 5175              	.LFB379:
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5176              		.loc 1 3349 0
 5177              		.cfi_startproc
 5178              		@ args = 0, pretend = 0, frame = 0
 5179              		@ frame_needed = 0, uses_anonymous_args = 0
 5180              	.LVL363:
 5181 0000 08B5     		push	{r3, lr}
 5182              	.LCFI42:
 5183              		.cfi_def_cfa_offset 8
 5184              		.cfi_offset 3, -8
 5185              		.cfi_offset 14, -4
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 5186              		.loc 1 3350 0
 5187 0002 806B     		ldr	r0, [r0, #56]
 5188              	.LVL364:
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 5189              		.loc 1 3351 0
 5190 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccOUtRG8.s 			page 173


 5191 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5192              		.loc 1 3352 0
 5193 000a A0F86230 		strh	r3, [r0, #98]	@ movhi
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5194              		.loc 1 3355 0
 5195 000e 0123     		movs	r3, #1
 5196 0010 80F88130 		strb	r3, [r0, #129]
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5197              		.loc 1 3360 0
 5198 0014 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5199              	.LVL365:
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5200              		.loc 1 3362 0
 5201 0018 08BD     		pop	{r3, pc}
 5202              		.cfi_endproc
 5203              	.LFE379:
 5205              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 5206              		.align	1
 5207              		.weak	HAL_SPI_AbortCpltCallback
 5208              		.syntax unified
 5209              		.thumb
 5210              		.thumb_func
 5211              		.fpu fpv5-d16
 5213              	HAL_SPI_AbortCpltCallback:
 5214              	.LFB369:
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 5215              		.loc 1 3116 0
 5216              		.cfi_startproc
 5217              		@ args = 0, pretend = 0, frame = 0
 5218              		@ frame_needed = 0, uses_anonymous_args = 0
 5219              		@ link register save eliminated.
 5220              	.LVL366:
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5221              		.loc 1 3123 0
 5222 0000 7047     		bx	lr
 5223              		.cfi_endproc
 5224              	.LFE369:
 5226              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5227              		.align	1
 5228              		.global	HAL_SPI_Abort_IT
 5229              		.syntax unified
 5230              		.thumb
 5231              		.thumb_func
 5232              		.fpu fpv5-d16
 5234              	HAL_SPI_Abort_IT:
 5235              	.LFB357:
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5236              		.loc 1 2587 0
 5237              		.cfi_startproc
 5238              		@ args = 0, pretend = 0, frame = 8
 5239              		@ frame_needed = 0, uses_anonymous_args = 0
 5240              	.LVL367:
 5241 0000 30B5     		push	{r4, r5, lr}
 5242              	.LCFI43:
 5243              		.cfi_def_cfa_offset 12
 5244              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOUtRG8.s 			page 174


 5245              		.cfi_offset 5, -8
 5246              		.cfi_offset 14, -4
 5247 0002 83B0     		sub	sp, sp, #12
 5248              	.LCFI44:
 5249              		.cfi_def_cfa_offset 24
 5250 0004 0446     		mov	r4, r0
 5251              	.LVL368:
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5252              		.loc 1 2593 0
 5253 0006 0723     		movs	r3, #7
 5254 0008 80F88130 		strb	r3, [r0, #129]
 5255              	.LVL369:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5256              		.loc 1 2597 0
 5257 000c 3E4B     		ldr	r3, .L454
 5258 000e 1B68     		ldr	r3, [r3]
 5259 0010 3E4A     		ldr	r2, .L454+4
 5260 0012 A2FB0323 		umull	r2, r3, r2, r3
 5261 0016 5B0A     		lsrs	r3, r3, #9
 5262 0018 6422     		movs	r2, #100
 5263 001a 02FB03F3 		mul	r3, r2, r3
 5264 001e 0193     		str	r3, [sp, #4]
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5265              		.loc 1 2600 0
 5266 0020 0368     		ldr	r3, [r0]
 5267 0022 1A68     		ldr	r2, [r3]
 5268 0024 12F4007F 		tst	r2, #512
 5269 0028 14D0     		beq	.L428
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 5270              		.loc 1 2602 0
 5271 002a 1A68     		ldr	r2, [r3]
 5272 002c 42F48062 		orr	r2, r2, #1024
 5273 0030 1A60     		str	r2, [r3]
 5274              	.L430:
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 5275              		.loc 1 2605 0
 5276 0032 019B     		ldr	r3, [sp, #4]
 5277 0034 013B     		subs	r3, r3, #1
 5278 0036 0193     		str	r3, [sp, #4]
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 5279              		.loc 1 2606 0
 5280 0038 019B     		ldr	r3, [sp, #4]
 5281 003a 2BB1     		cbz	r3, .L446
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 5282              		.loc 1 2612 0
 5283 003c 2368     		ldr	r3, [r4]
 5284 003e 1B68     		ldr	r3, [r3]
 5285 0040 13F4007F 		tst	r3, #512
 5286 0044 F5D1     		bne	.L430
 5287 0046 05E0     		b	.L428
 5288              	.L446:
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 5289              		.loc 1 2608 0
 5290 0048 D4F88430 		ldr	r3, [r4, #132]
 5291 004c 43F04003 		orr	r3, r3, #64
 5292 0050 C4F88430 		str	r3, [r4, #132]
 5293              	.L428:
ARM GAS  /tmp/ccOUtRG8.s 			page 175


2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5294              		.loc 1 2618 0
 5295 0054 A36F     		ldr	r3, [r4, #120]
 5296 0056 63B3     		cbz	r3, .L437
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5297              		.loc 1 2620 0
 5298 0058 2268     		ldr	r2, [r4]
 5299 005a 9268     		ldr	r2, [r2, #8]
 5300 005c 12F4004F 		tst	r2, #32768
 5301 0060 13D1     		bne	.L447
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5302              		.loc 1 2639 0
 5303 0062 0022     		movs	r2, #0
 5304 0064 1A65     		str	r2, [r3, #80]
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5305              		.loc 1 2590 0
 5306 0066 0125     		movs	r5, #1
 5307              	.LVL370:
 5308              	.L431:
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5309              		.loc 1 2643 0
 5310 0068 E36F     		ldr	r3, [r4, #124]
 5311 006a 002B     		cmp	r3, #0
 5312 006c 37D0     		beq	.L440
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5313              		.loc 1 2645 0
 5314 006e 2268     		ldr	r2, [r4]
 5315 0070 9268     		ldr	r2, [r2, #8]
 5316 0072 12F4804F 		tst	r2, #16384
 5317 0076 1ED1     		bne	.L448
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5318              		.loc 1 2664 0
 5319 0078 0022     		movs	r2, #0
 5320 007a 1A65     		str	r2, [r3, #80]
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5321              		.loc 1 2590 0
 5322 007c 0123     		movs	r3, #1
 5323              	.LVL371:
 5324              	.L433:
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5325              		.loc 1 2669 0
 5326 007e 1D42     		tst	r5, r3
 5327 0080 2FD1     		bne	.L449
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
 5328              		.loc 1 2596 0
 5329 0082 0025     		movs	r5, #0
 5330              	.LVL372:
 5331              	.L435:
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5332              		.loc 1 2698 0
 5333 0084 2846     		mov	r0, r5
 5334 0086 03B0     		add	sp, sp, #12
 5335              	.LCFI45:
 5336              		.cfi_remember_state
 5337              		.cfi_def_cfa_offset 12
 5338              		@ sp needed
 5339 0088 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccOUtRG8.s 			page 176


 5340              	.LVL373:
 5341              	.L447:
 5342              	.LCFI46:
 5343              		.cfi_restore_state
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5344              		.loc 1 2623 0
 5345 008a 214A     		ldr	r2, .L454+8
 5346 008c 1A65     		str	r2, [r3, #80]
 5347              	.LVL374:
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 5348              		.loc 1 2628 0
 5349 008e A06F     		ldr	r0, [r4, #120]
 5350              	.LVL375:
 5351 0090 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5352              	.LVL376:
 5353 0094 08B9     		cbnz	r0, .L450
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5354              		.loc 1 2625 0
 5355 0096 0025     		movs	r5, #0
 5356 0098 E6E7     		b	.L431
 5357              	.L450:
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5358              		.loc 1 2630 0
 5359 009a A06F     		ldr	r0, [r4, #120]
 5360 009c FFF7FEFF 		bl	HAL_DMA_GetError
 5361              	.LVL377:
 5362 00a0 8028     		cmp	r0, #128
 5363 00a2 01D0     		beq	.L451
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5364              		.loc 1 2625 0
 5365 00a4 0025     		movs	r5, #0
 5366 00a6 DFE7     		b	.L431
 5367              	.L451:
 5368              	.LVL378:
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 5369              		.loc 1 2633 0
 5370 00a8 A36F     		ldr	r3, [r4, #120]
 5371 00aa 0022     		movs	r2, #0
 5372 00ac 1A65     		str	r2, [r3, #80]
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = NULL;
 5373              		.loc 1 2632 0
 5374 00ae 0125     		movs	r5, #1
 5375 00b0 DAE7     		b	.L431
 5376              	.LVL379:
 5377              	.L437:
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5378              		.loc 1 2590 0
 5379 00b2 0125     		movs	r5, #1
 5380 00b4 D8E7     		b	.L431
 5381              	.LVL380:
 5382              	.L448:
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5383              		.loc 1 2648 0
 5384 00b6 174A     		ldr	r2, .L454+12
 5385 00b8 1A65     		str	r2, [r3, #80]
 5386              	.LVL381:
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccOUtRG8.s 			page 177


 5387              		.loc 1 2653 0
 5388 00ba E06F     		ldr	r0, [r4, #124]
 5389 00bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5390              	.LVL382:
 5391 00c0 08B9     		cbnz	r0, .L452
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5392              		.loc 1 2650 0
 5393 00c2 0023     		movs	r3, #0
 5394 00c4 DBE7     		b	.L433
 5395              	.L452:
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5396              		.loc 1 2655 0
 5397 00c6 E06F     		ldr	r0, [r4, #124]
 5398 00c8 FFF7FEFF 		bl	HAL_DMA_GetError
 5399              	.LVL383:
 5400 00cc 8028     		cmp	r0, #128
 5401 00ce 01D0     		beq	.L453
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5402              		.loc 1 2650 0
 5403 00d0 0023     		movs	r3, #0
 5404 00d2 D4E7     		b	.L433
 5405              	.L453:
 5406              	.LVL384:
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 5407              		.loc 1 2658 0
 5408 00d4 E36F     		ldr	r3, [r4, #124]
 5409 00d6 0022     		movs	r2, #0
 5410 00d8 1A65     		str	r2, [r3, #80]
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = NULL;
 5411              		.loc 1 2657 0
 5412 00da 0123     		movs	r3, #1
 5413 00dc CFE7     		b	.L433
 5414              	.L440:
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5415              		.loc 1 2590 0
 5416 00de 0123     		movs	r3, #1
 5417 00e0 CDE7     		b	.L433
 5418              	.LVL385:
 5419              	.L449:
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5420              		.loc 1 2672 0
 5421 00e2 2046     		mov	r0, r4
 5422 00e4 FFF7FEFF 		bl	SPI_AbortTransfer
 5423              	.LVL386:
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5424              		.loc 1 2675 0
 5425 00e8 D4F88430 		ldr	r3, [r4, #132]
 5426 00ec 402B     		cmp	r3, #64
 5427 00ee 09D0     		beq	.L444
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5428              		.loc 1 2683 0
 5429 00f0 0025     		movs	r5, #0
 5430              	.LVL387:
 5431 00f2 C4F88450 		str	r5, [r4, #132]
 5432              	.L436:
 5433              	.LVL388:
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccOUtRG8.s 			page 178


 5434              		.loc 1 2687 0
 5435 00f6 0123     		movs	r3, #1
 5436 00f8 84F88130 		strb	r3, [r4, #129]
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5437              		.loc 1 2693 0
 5438 00fc 2046     		mov	r0, r4
 5439 00fe FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5440              	.LVL389:
 5441 0102 BFE7     		b	.L435
 5442              	.LVL390:
 5443              	.L444:
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5444              		.loc 1 2678 0
 5445 0104 0125     		movs	r5, #1
 5446              	.LVL391:
 5447 0106 F6E7     		b	.L436
 5448              	.L455:
 5449              		.align	2
 5450              	.L454:
 5451 0108 00000000 		.word	SystemCoreClock
 5452 010c F1197605 		.word	91625969
 5453 0110 00000000 		.word	SPI_DMATxAbortCallback
 5454 0114 00000000 		.word	SPI_DMARxAbortCallback
 5455              		.cfi_endproc
 5456              	.LFE357:
 5458              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5459              		.align	1
 5460              		.syntax unified
 5461              		.thumb
 5462              		.thumb_func
 5463              		.fpu fpv5-d16
 5465              	SPI_DMARxAbortCallback:
 5466              	.LFB381:
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5467              		.loc 1 3410 0
 5468              		.cfi_startproc
 5469              		@ args = 0, pretend = 0, frame = 0
 5470              		@ frame_needed = 0, uses_anonymous_args = 0
 5471              	.LVL392:
 5472 0000 10B5     		push	{r4, lr}
 5473              	.LCFI47:
 5474              		.cfi_def_cfa_offset 8
 5475              		.cfi_offset 4, -8
 5476              		.cfi_offset 14, -4
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5477              		.loc 1 3411 0
 5478 0002 846B     		ldr	r4, [r0, #56]
 5479              	.LVL393:
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5480              		.loc 1 3413 0
 5481 0004 E36F     		ldr	r3, [r4, #124]
 5482 0006 0022     		movs	r2, #0
 5483 0008 1A65     		str	r2, [r3, #80]
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5484              		.loc 1 3416 0
 5485 000a A36F     		ldr	r3, [r4, #120]
 5486 000c 13B1     		cbz	r3, .L457
ARM GAS  /tmp/ccOUtRG8.s 			page 179


3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5487              		.loc 1 3418 0
 5488 000e 1B6D     		ldr	r3, [r3, #80]
 5489 0010 03B1     		cbz	r3, .L457
 5490              	.LVL394:
 5491              	.L456:
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5492              		.loc 1 3436 0
 5493 0012 10BD     		pop	{r4, pc}
 5494              	.LVL395:
 5495              	.L457:
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5496              		.loc 1 3425 0
 5497 0014 2046     		mov	r0, r4
 5498              	.LVL396:
 5499 0016 FFF7FEFF 		bl	SPI_AbortTransfer
 5500              	.LVL397:
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5501              		.loc 1 3428 0
 5502 001a 0123     		movs	r3, #1
 5503 001c 84F88130 		strb	r3, [r4, #129]
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5504              		.loc 1 3434 0
 5505 0020 2046     		mov	r0, r4
 5506 0022 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5507              	.LVL398:
 5508 0026 F4E7     		b	.L456
 5509              		.cfi_endproc
 5510              	.LFE381:
 5512              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5513              		.align	1
 5514              		.syntax unified
 5515              		.thumb
 5516              		.thumb_func
 5517              		.fpu fpv5-d16
 5519              	SPI_DMATxAbortCallback:
 5520              	.LFB380:
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5521              		.loc 1 3373 0
 5522              		.cfi_startproc
 5523              		@ args = 0, pretend = 0, frame = 0
 5524              		@ frame_needed = 0, uses_anonymous_args = 0
 5525              	.LVL399:
 5526 0000 10B5     		push	{r4, lr}
 5527              	.LCFI48:
 5528              		.cfi_def_cfa_offset 8
 5529              		.cfi_offset 4, -8
 5530              		.cfi_offset 14, -4
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5531              		.loc 1 3374 0
 5532 0002 846B     		ldr	r4, [r0, #56]
 5533              	.LVL400:
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5534              		.loc 1 3376 0
 5535 0004 A36F     		ldr	r3, [r4, #120]
 5536 0006 0022     		movs	r2, #0
 5537 0008 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccOUtRG8.s 			page 180


3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5538              		.loc 1 3379 0
 5539 000a E36F     		ldr	r3, [r4, #124]
 5540 000c 13B1     		cbz	r3, .L461
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5541              		.loc 1 3381 0
 5542 000e 1B6D     		ldr	r3, [r3, #80]
 5543 0010 03B1     		cbz	r3, .L461
 5544              	.LVL401:
 5545              	.L460:
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5546              		.loc 1 3399 0
 5547 0012 10BD     		pop	{r4, pc}
 5548              	.LVL402:
 5549              	.L461:
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5550              		.loc 1 3388 0
 5551 0014 2046     		mov	r0, r4
 5552              	.LVL403:
 5553 0016 FFF7FEFF 		bl	SPI_AbortTransfer
 5554              	.LVL404:
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5555              		.loc 1 3391 0
 5556 001a 0123     		movs	r3, #1
 5557 001c 84F88130 		strb	r3, [r4, #129]
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5558              		.loc 1 3397 0
 5559 0020 2046     		mov	r0, r4
 5560 0022 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5561              	.LVL405:
 5562 0026 F4E7     		b	.L460
 5563              		.cfi_endproc
 5564              	.LFE380:
 5566              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5567              		.align	1
 5568              		.global	HAL_SPI_GetState
 5569              		.syntax unified
 5570              		.thumb
 5571              		.thumb_func
 5572              		.fpu fpv5-d16
 5574              	HAL_SPI_GetState:
 5575              	.LFB370:
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI handle state */
 5576              		.loc 1 3151 0
 5577              		.cfi_startproc
 5578              		@ args = 0, pretend = 0, frame = 0
 5579              		@ frame_needed = 0, uses_anonymous_args = 0
 5580              		@ link register save eliminated.
 5581              	.LVL406:
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5582              		.loc 1 3153 0
 5583 0000 90F88100 		ldrb	r0, [r0, #129]	@ zero_extendqisi2
 5584              	.LVL407:
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5585              		.loc 1 3154 0
 5586 0004 7047     		bx	lr
 5587              		.cfi_endproc
ARM GAS  /tmp/ccOUtRG8.s 			page 181


 5588              	.LFE370:
 5590              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5591              		.align	1
 5592              		.global	HAL_SPI_GetError
 5593              		.syntax unified
 5594              		.thumb
 5595              		.thumb_func
 5596              		.fpu fpv5-d16
 5598              	HAL_SPI_GetError:
 5599              	.LFB371:
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5600              		.loc 1 3163 0
 5601              		.cfi_startproc
 5602              		@ args = 0, pretend = 0, frame = 0
 5603              		@ frame_needed = 0, uses_anonymous_args = 0
 5604              		@ link register save eliminated.
 5605              	.LVL408:
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5606              		.loc 1 3165 0
 5607 0000 D0F88400 		ldr	r0, [r0, #132]
 5608              	.LVL409:
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5609              		.loc 1 3166 0
 5610 0004 7047     		bx	lr
 5611              		.cfi_endproc
 5612              	.LFE371:
 5614              		.text
 5615              	.Letext0:
 5616              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5617              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5618              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 5619              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 5620              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 5621              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 5622              		.file 8 "/usr/include/newlib/sys/lock.h"
 5623              		.file 9 "/usr/include/newlib/sys/_types.h"
 5624              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 5625              		.file 11 "/usr/include/newlib/sys/reent.h"
 5626              		.file 12 "/usr/include/newlib/math.h"
 5627              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 5628              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 5629              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 5630              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 5631              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 5632              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccOUtRG8.s 			page 182


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_spi.c
     /tmp/ccOUtRG8.s:17     .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:23     .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccOUtRG8.s:62     .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:68     .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccOUtRG8.s:110    .text.SPI_RxISR_32BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:116    .text.SPI_RxISR_32BIT:0000000000000000 SPI_RxISR_32BIT
     /tmp/ccOUtRG8.s:154    .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:160    .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccOUtRG8.s:198    .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:204    .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccOUtRG8.s:245    .text.SPI_TxISR_32BIT:0000000000000000 $t
     /tmp/ccOUtRG8.s:251    .text.SPI_TxISR_32BIT:0000000000000000 SPI_TxISR_32BIT
     /tmp/ccOUtRG8.s:289    .text.SPI_AbortTransfer:0000000000000000 $t
     /tmp/ccOUtRG8.s:295    .text.SPI_AbortTransfer:0000000000000000 SPI_AbortTransfer
     /tmp/ccOUtRG8.s:364    .text.SPI_AbortTransfer:0000000000000070 $d
     /tmp/ccOUtRG8.s:369    .text.SPI_CloseTransfer:0000000000000000 $t
     /tmp/ccOUtRG8.s:375    .text.SPI_CloseTransfer:0000000000000000 SPI_CloseTransfer
     /tmp/ccOUtRG8.s:493    .text.SPI_CloseTransfer:00000000000000cc $d
     /tmp/ccOUtRG8.s:498    .text.SPI_GetPacketSize:0000000000000000 $t
     /tmp/ccOUtRG8.s:504    .text.SPI_GetPacketSize:0000000000000000 SPI_GetPacketSize
     /tmp/ccOUtRG8.s:532    .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccOUtRG8.s:538    .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 SPI_WaitOnFlagUntilTimeout
     /tmp/ccOUtRG8.s:602    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccOUtRG8.s:609    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccOUtRG8.s:623    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccOUtRG8.s:630    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccOUtRG8.s:864    .text.HAL_SPI_Init:0000000000000144 $d
     /tmp/ccOUtRG8.s:871    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccOUtRG8.s:878    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccOUtRG8.s:892    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccOUtRG8.s:899    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccOUtRG8.s:950    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccOUtRG8.s:957    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccOUtRG8.s:1381   .text.HAL_SPI_Transmit:00000000000002b0 $d
     /tmp/ccOUtRG8.s:1386   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccOUtRG8.s:1393   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccOUtRG8.s:2050   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccOUtRG8.s:2057   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccOUtRG8.s:2479   .text.HAL_SPI_Receive:00000000000002a0 $d
     /tmp/ccOUtRG8.s:2484   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccOUtRG8.s:2491   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccOUtRG8.s:2659   .text.HAL_SPI_Transmit_IT:00000000000000d8 $d
     /tmp/ccOUtRG8.s:2667   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccOUtRG8.s:2674   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccOUtRG8.s:2865   .text.HAL_SPI_TransmitReceive_IT:00000000000000ec $d
     /tmp/ccOUtRG8.s:2876   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccOUtRG8.s:2883   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccOUtRG8.s:3062   .text.HAL_SPI_Receive_IT:00000000000000ec $d
     /tmp/ccOUtRG8.s:3070   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccOUtRG8.s:3077   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccOUtRG8.s:3352   .text.HAL_SPI_Transmit_DMA:00000000000001a4 $d
     /tmp/ccOUtRG8.s:4580   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccOUtRG8.s:4367   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccOUtRG8.s:4733   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccOUtRG8.s:3360   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
ARM GAS  /tmp/ccOUtRG8.s 			page 183


     /tmp/ccOUtRG8.s:3367   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccOUtRG8.s:3760   .text.HAL_SPI_TransmitReceive_DMA:0000000000000254 $d
     /tmp/ccOUtRG8.s:4682   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccOUtRG8.s:4509   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccOUtRG8.s:4631   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccOUtRG8.s:4438   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccOUtRG8.s:3770   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccOUtRG8.s:3777   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccOUtRG8.s:4068   .text.HAL_SPI_Receive_DMA:00000000000001c0 $d
     /tmp/ccOUtRG8.s:4076   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccOUtRG8.s:4083   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccOUtRG8.s:4253   .text.HAL_SPI_Abort:00000000000000e8 $d
     /tmp/ccOUtRG8.s:4259   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccOUtRG8.s:4266   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccOUtRG8.s:4286   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccOUtRG8.s:4293   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccOUtRG8.s:4313   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccOUtRG8.s:4320   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccOUtRG8.s:4340   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4347   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccOUtRG8.s:4361   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4411   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4418   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccOUtRG8.s:4432   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4482   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4489   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccOUtRG8.s:4503   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4553   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4560   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccOUtRG8.s:4574   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4604   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4611   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccOUtRG8.s:4625   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4655   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4662   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccOUtRG8.s:4676   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccOUtRG8.s:4706   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:4713   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccOUtRG8.s:4727   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccOUtRG8.s:4775   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccOUtRG8.s:4782   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccOUtRG8.s:5162   .text.HAL_SPI_IRQHandler:000000000000024c $d
     /tmp/ccOUtRG8.s:5174   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccOUtRG8.s:5168   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccOUtRG8.s:5206   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:5213   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccOUtRG8.s:5227   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccOUtRG8.s:5234   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccOUtRG8.s:5451   .text.HAL_SPI_Abort_IT:0000000000000108 $d
     /tmp/ccOUtRG8.s:5519   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccOUtRG8.s:5465   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccOUtRG8.s:5459   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:5513   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccOUtRG8.s:5567   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccOUtRG8.s:5574   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccOUtRG8.s:5591   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccOUtRG8.s:5598   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
ARM GAS  /tmp/ccOUtRG8.s 			page 184



UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
SystemCoreClock
HAL_DMA_Abort_IT
